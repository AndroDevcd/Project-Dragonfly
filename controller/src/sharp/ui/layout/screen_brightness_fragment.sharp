mod ui.layout;

import (
    ui.res,
    ui.support,
    std.io,
    std.io.fiber,
    std.io.coroutines,
    main,
    common.network
);

class screen_brightness base fragment {

    screen_brightness(container : window, id: var) -> base(container, id) { }

    override def configure() {
        add_view(new image_view(constants.resource.id.ico_thin_line)
            .set_drawable(constants.resource.id.ico_thin_line)
            .set_width(constants.view.MATCH_PARENT)
            .set_height(constants.view.WRAP_CONTENT)
            .to_start_of(constants.resource.id.parent)
            .to_right_of(constants.resource.id.parent)
            .set_margin_top(12)
        );
        add_view(new text_view(constants.resource.id.settings_screen_title)
            .set_width(constants.view.MATCH_PARENT)
            .set_height(constants.view.WRAP_CONTENT)
            .to_start_of(constants.resource.id.parent)
            .set_gravity(constants.view.GRAVITY_CENTER)
            .set_margin_top(2)
        );
        add_view(new text_view(constants.resource.id.ico_setting_item_1_title)
            .set_width(constants.view.MATCH_PARENT)
            .set_height(constants.view.WRAP_CONTENT)
            .to_bottom_of(constants.resource.id.parent)
            .set_gravity(constants.view.GRAVITY_LEFT)
            .set_margin_left(12 + 6)
//            .set_margin_bottom(12)
        );
        add_view(new text_view(constants.resource.id.ico_setting_item_2_title)
            .set_width(constants.view.MATCH_PARENT)
            .set_height(constants.view.WRAP_CONTENT)
            .to_bottom_of(constants.resource.id.parent)
            .to_right_of(constants.resource.id.parent)
            .set_gravity(constants.view.GRAVITY_LEFT)
//            .set_margin_bottom(12)
            .set_margin_right(12)
        );
        add_view(new image_view(constants.resource.id.ico_item_selector)
            .set_drawable(constants.resource.id.ico_item_selector)
            .set_width(constants.view.WRAP_CONTENT)
            .set_height(constants.view.WRAP_CONTENT)
            .to_left_of(constants.resource.id.ico_setting_item_1_title)
            .to_bottom_of(constants.resource.id.ico_setting_item_1_title)
            .set_margin_right(2)
        );
    }

    manager := new scroll_manager();

    override def on_create() {
        base->on_create();
        title := find_view_by_id(constants.resource.id.settings_screen_title) as text_view;
        normal := find_view_by_id(constants.resource.id.ico_setting_item_1_title) as text_view;
        dim := find_view_by_id(constants.resource.id.ico_setting_item_2_title) as text_view;
        selector := find_view_by_id(constants.resource.id.ico_item_selector) as image_view;
        title.text = "Screen Brightness";
        normal.text = "normal";
        dim.text = "dim";

        normal.set_on_click_listener({ v ->
           ui.layout.config#container.current_frag.dim_screen(false);
           ui.layout.config#container.current_frag.navigate(constants.layout.SETTINGS, true);
        });

        dim.set_on_click_listener({ v ->
           ui.layout.config#container.current_frag.dim_screen(true);
           ui.layout.config#container.current_frag.navigate(constants.layout.SETTINGS, true);
        });

        manager.add_view(normal);
        manager.add_view(dim);
        manager.set_cursor(selector);
    }

    override def on_button_pressed(state: button_press_state) {
        manager.handle_button_press(state);
    }

    override def on_destroy() {
       base->on_destroy();
       manager.discard_views();
    }
}
