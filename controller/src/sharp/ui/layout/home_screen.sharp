mod ui.layout;

import (
    ui.res,
    ui.support,
    std.io,
    std.io.coroutines,
    main,
    common.network
);

class home_screen base status_bar_screen {

    home_screen(container : window, id: var) -> base(container, id) { }

    static const SIGNAL_UPDATER_TASK : string = "signal-updater";
    static const CLOCK_TASK : string = "clock-updater";
    static const FLIGHT_DATA_TASK : string = "flight-data-updater";

    speed : text_view;
    speed_unit : text_view;
    altitude_title : text_view;
    altitude_txt : text_view;

    override def configure() {
        base->configure();

        add_view(new text_view(constants.resource.id.altitude_title)
            .set_width(30)
            .set_height(constants.view.WRAP_CONTENT)
            .set_gravity(constants.view.GRAVITY_CENTER)
            .to_start_of(constants.resource.id.battery_status)
            .below(constants.resource.id.battery_status)
            .set_margin_top(20)
        );
        add_view(new text_view(constants.resource.id.altitude_txt)
            .set_width(30)
            .set_height(constants.view.WRAP_CONTENT)
            .set_gravity(constants.view.GRAVITY_CENTER)
            .to_start_of(constants.resource.id.battery_status)
            .below(constants.resource.id.altitude_title)
            .set_margin_top(2)
        );
        add_view(new text_view(constants.resource.id.speed)
            .set_width(55)
            .set_height(constants.view.WRAP_CONTENT)
            .set_gravity(constants.view.GRAVITY_RIGHT)
            .to_start_of(constants.resource.id.parent)
            .below(constants.resource.id.battery_status)
            .set_margin_top(18)
            .set_margin_left(40)
        );
        add_view(new text_view(constants.resource.id.speed_unit)
            .set_width(constants.view.WRAP_CONTENT)
            .set_height(constants.view.WRAP_CONTENT)
            .to_right_of(constants.resource.id.speed)
            .to_bottom_of(constants.resource.id.speed)
            .set_margin_left(2)
        );
    }

    override def on_create() {
        base->on_create();

        speed = find_view_by_id(constants.resource.id.speed) as text_view;
        speed_unit = find_view_by_id(constants.resource.id.speed_unit) as text_view;
        altitude_title = find_view_by_id(constants.resource.id.altitude_title) as text_view;
        altitude_txt = find_view_by_id(constants.resource.id.altitude_txt) as text_view;
        
        altitude_title.text = "ALT";
        altitude_txt.text = "999M";
        speed.text = "9";
        speed_unit.text = "Kph";
        speed.text_size = 3;
    }

    override def on_button_pressed(state: button_press_state) {
        base->on_button_pressed(state);
        println("button state: $state");
    }

    override def on_flight_data_received(altitude: var, speed: var) {
        self->speed.text = "${speed}";
        altitude_txt.text = "${altitude}M";
    }
    
    override def on_destroy() {
       base->on_destroy();
    }
}
