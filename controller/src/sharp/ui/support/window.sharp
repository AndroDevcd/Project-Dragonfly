mod ui.support;

import (
    ui.driver,
    ui.res,
    ui.layout.config,
    std.io.coroutines,
    std.io.fiber,
    std.io,
    main
);

class window {
    fragments := new list<fragment>();
    back_stack := new list<fragment>();
    id : _int8[];
    launcher : var;
    current_frag : fragment;
    device : ssd1306;

    window(name : _int8[]) {
        id = name;
        if(device == null)
           device = new ssd1306();
    }

    public static def start_ui() {
        resources.setup();
        configure_layout();
        start();
    }

    def navigate(screen: var) {
        frag : fragment;
        for(i := 0; i < fragments.size(); i++) {
            if(fragments.at(i).id == screen)
               frag = fragments.at(i);
        }

        if(frag != null) {
            if(frag.state == constants.lifecycle.DESTROYED)
               (frag as lifecycle).on_create();
            current_frag = frag;
        }
    }

    def starter_fragment(frag: var) {
        launcher = frag;
    }

    protected def draw_text(tv: text_view) {
        device.draw_word(tv.x, tv.y, tv.text_size.value as var, tv.width, tv.transform_width().value as var, tv.text.data);
    }

    protected def draw_img(iv: image_view) {
        img := iv.img;
        device.draw_img(iv.x, iv.y, iv.width, iv.height, img!!.width, img!!.height, iv.img!!.bytes);
    }

    def show() {
        navigate(launcher);
        start_updater();
    }

    def add_fragment(frag : fragment) {
        frag.configure();
        fragments.add(frag);
    }

    def dispatch_on_button_pressed(state: button_press_state) {
          if(current_frag != null) {
             current_frag.on_button_pressed(state);
          }
    }

    def start_updater() {
       for(;;) {
          device.clear();

          if(current_frag != null) {
             current_frag.draw();
          }
          
          device.update_display();     
          delay(30);
       }
    }
}
