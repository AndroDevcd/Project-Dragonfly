mod main;

import std.io;
import std.io.task;
import platform;
import common.network;
import common;
import common.gpio;
import ui.support;

started := false;

def main(args: string[])
{
   load_library("bin/dragonfly");
   constants.NETWORK_STATE = constants.SERVER;
   common.gpio#setup();

   setup_conn_tracker();

   window.start_ui();
   thread.sleep(3000);
   network.handshake();
   started = true;

            
   task.builder()
    .long_term()
    .schedule(constants.INITIAL_START_DELAY)
    .recurring(constants.DEVICE_UPDATE_INTERVAL, milliseconds) 
      = { ->
         if(!disconnected) {
            network.change_mode(constants.strings.FLIGHT_MODE_NORM);
         }
         // TODO: add controller state checks here
      };
      
      // TODO: add lcd screen update task here
      
   for(;;) {
      thread.yield();
      thread.sleep(10);
   }
}
