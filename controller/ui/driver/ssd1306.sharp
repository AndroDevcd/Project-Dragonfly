mod ui.driver;

import ui.support;
import common.gpio;

class ssd1306 {
    private const power_pin := 25;

    ssd1306() {
        pin_mode(power_pin, common#constants.OUTPUT);
        write_pin(power_pin, common#constants.HIGH);
        setup();
    }

    def clear() {
        clear_display();
    }

    def dim_display(yes: var) {
        dim(yes);
    }

    def update_display() {
        display();
    }

    def draw_word(x: var, y: var, text_size: var, width: var, transx : var, text: _int8[]) {
        move_cursor(x, y);

        if(x + transx > constants.window.WIDTH) {
           overflow := (x + transx) - constants.window.WIDTH;
           chars_drawn := ((transx - overflow) / constants.standard.text_size_width_multiplier) - 1;
           draw_word(text, chars_drawn ? chars_drawn : 1);
        } else {
           if(width >= 0) {
              if(transx > width) {
                 overflow := (transx - width);
                 
                 return draw_word(text, (transx - overflow) / constants.standard.text_size_width_multiplier);
              }
           }
           
           draw_word(text, sizeof(text));
        }
    }

    def shutdown() {
        write_pin(power_pin, common#constants.LOW);
    }
}
