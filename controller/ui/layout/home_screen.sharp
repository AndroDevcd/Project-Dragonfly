mod ui.layout;

import ui.support;
import std.io;
import std.io.task;

counter := 0;

class home_screen base fragment {

    home_screen(container : window, id: var) -> base(container, id) { }

    def configure() {
        add_view(new text_view(constants.resource.id.time)
            .set_width(constants.view.WRAP_CONTENT)
            .set_height(constants.view.WRAP_CONTENT)
            .set_margin_top(2)
            .set_margin_left(5)
            .set_margin_bottom(5)
        );
        add_view(new text_view(constants.resource.id.mode)
            .set_width(constants.view.WRAP_CONTENT)
            .set_height(constants.view.WRAP_CONTENT)
            .to_bottom_of(constants.resource.id.parent)
            .to_left_of(constants.resource.id.time)
            .set_margin_bottom(5)
        );
    }

    def on_create() {
        base->on_create();

        time := find_view_by_id(constants.resource.id.time) as text_view;
        mode := find_view_by_id(constants.resource.id.mode) as text_view;
        mode.text = "N";
        
        task.builder()
          .recurring(1000, milliseconds)
          .with_args(new object[] { time })
            = { args : object[] ->
             tv := args[1] as text_view;
             tv.text  = ("time running: ${counter++}").get_data();
          };
    }
}
