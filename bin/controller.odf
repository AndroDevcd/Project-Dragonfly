## Object Dump file for bin/controller:

pre codebase size: 107322
post codebase size: 97329
optimized opcodes: 9993
net % gain 9.31123


class: std#__srt_global[0] fields(2) methods(57)
class: std#_object_[1] fields(0) methods(7)
class: std#string_builder[2] fields(7) methods(53)
class: std#string[3] fields(3) methods(67)
class: std.io.task#__srt_global[4] fields(6) methods(18)
class: std.io.task#task[5] fields(0) methods(17)
class: std.io.task#cancellation_exception[6] fields(3) methods(22)
class: std.io.task#job_master[7] fields(5) methods(15)
class: std.io.task#job_builder[8] fields(2) methods(21)
class: std.io.task#job_controller[9] fields(2) methods(8)
enum: std.io.task#job_state[10] fields(6) methods(17)
class: std.io.task#job[11] fields(22) methods(28)
class: std.io#__srt_global[12] fields(1) methods(45)
enum: std.io#thread_priority[13] fields(5) methods(17)
class: std.io#thread_group[14] fields(6) methods(20)
class: std.io#win_fs[15] fields(20) methods(32)
interface: std.io#uncaught_exception_handler[16] fields(0) methods(9)
enum: std.io#thread_result[17] fields(20) methods(20)
class: std.io#file_system[18] fields(18) methods(27)
class: std.io#thread[19] fields(14) methods(44)
class: std.io#unix_fs[20] fields(20) methods(32)
class: std.io#file[21] fields(3) methods(50)
class: std#_enum_[22] fields(2) methods(17)
class: std#tmp[23] fields(0) methods(9)
class: std#ulong[24] fields(1) methods(318)
class: std#long[25] fields(1) methods(318)
class: std#uint[26] fields(1) methods(318)
class: std#int[27] fields(1) methods(318)
class: std#ushort[28] fields(1) methods(318)
class: std#short[29] fields(1) methods(318)
class: std#uchar[30] fields(1) methods(318)
class: std#char[31] fields(1) methods(324)
class: std#byte[32] fields(1) methods(426)
class: std#bool[33] fields(1) methods(320)
class: std#double[34] fields(1) methods(318)
class: platform#__srt_global[35] fields(0) methods(4)
class: platform#build[36] fields(4) methods(10)
class: platform.kernel#__srt_global[37] fields(0) methods(1)
class: platform.kernel#stack_state[38] fields(2) methods(8)
class: platform.kernel#platform[39] fields(4) methods(16)
class: platform.kernel#vm[40] fields(0) methods(29)
class: std.math#__srt_global[41] fields(5) methods(27)
interface: std#unique[42] fields(0) methods(10)
class: std.reflect#__srt_global[43] fields(0) methods(1)
class: std.reflect#data_entity[44] fields(6) methods(8)
enum: std.reflect#data_type[45] fields(19) methods(17)
class: std.reflect#_class_[46] fields(6) methods(9)
class: std.reflect#reflect[47] fields(4) methods(11)
enum: std.reflect#property_type[48] fields(5) methods(17)
class: std.reflect#data_property[49] fields(6) methods(9)
class: std.reflect#field[50] fields(2) methods(8)
class: std.reflect#function[51] fields(6) methods(9)
interface: std#printable[52] fields(0) methods(9)
class: std#time[53] fields(1) methods(21)
enum: std#time_request[54] fields(11) methods(17)
enum: std#time_unit[55] fields(6) methods(17)
class: std#_nil_[56] fields(1) methods(11)
class: std#throwable[57] fields(3) methods(13)
class: std#exception[58] fields(3) methods(16)
class: std#illegal_argument_exception[59] fields(3) methods(19)
class: std#illegal_state_exception[60] fields(3) methods(19)
class: std#out_of_bounds_exception[61] fields(3) methods(19)
class: std#io_exception[62] fields(3) methods(19)
class: std#invalid_operation_exception[63] fields(3) methods(19)
class: std#nullptr_exception[64] fields(3) methods(19)
class: std#runtime_exception[65] fields(3) methods(19)
class: std#stack_overflow_exception[66] fields(3) methods(19)
class: std#thread_stack_exception[67] fields(3) methods(19)
class: std#class_cast_exception[68] fields(3) methods(19)
class: std#out_of_memory_exception[69] fields(3) methods(19)
class: std#not_implemented_error[70] fields(3) methods(22)
class: std#unsatisfied_link_error[71] fields(3) methods(22)
class: std#assertion_error[72] fields(3) methods(22)
class: std#error[73] fields(3) methods(19)
class: common.gpio#__srt_global[74] fields(0) methods(5)
class: common.network.driver#__srt_global[75] fields(0) methods(14)
class: common.network.driver#nrf24[76] fields(4) methods(20)
class: common.network.core#__srt_global[77] fields(0) methods(2)
class: common.network.core#request[78] fields(3) methods(16)
class: common.network.core#request_data[79] fields(3) methods(13)
class: common.network.core#request_data.request_item[80] fields(2) methods(9)
class: common.network.remote#__srt_global[81] fields(0) methods(2)
class: common.network.remote#jam_request_impl[82] fields(4) methods(22)
class: common.network.remote#acknowledge_request_impl[83] fields(4) methods(21)
class: common.network.remote#network_scan_request_impl[84] fields(3) methods(18)
class: common.network.remote#command_request_impl[85] fields(3) methods(19)
class: common.network.remote#signal_strength_request_impl[86] fields(3) methods(18)
class: common.network.remote#handshake_request_impl[87] fields(4) methods(21)
class: common.network.remote#flight_data_request_impl[88] fields(4) methods(22)
class: common.network.remote#flight_mode_change_request_impl[89] fields(4) methods(21)
class: common.network#__srt_global[90] fields(0) methods(1)
class: common.network#network[91] fields(9) methods(19)
class: common.network.data.request#__srt_global[92] fields(0) methods(1)
interface: common.network.data.request#network_scan_request[93] fields(0) methods(9)
interface: common.network.data.request#jam_request[94] fields(0) methods(10)
interface: common.network.data.request#acknowledge_request[95] fields(0) methods(9)
interface: common.network.data.request#flight_mode_change_request[96] fields(0) methods(9)
interface: common.network.data.request#command_request[97] fields(0) methods(10)
interface: common.network.data.request#signal_strength_request[98] fields(0) methods(9)
interface: common.network.data.request#flight_data_request[99] fields(0) methods(10)
interface: common.network.data.request#handshake_request[100] fields(0) methods(9)
class: common.network.data.response#__srt_global[101] fields(0) methods(1)
class: common.network.data.response#flight_data_response[102] fields(3) methods(9)
class: common.network.data.response#command_response[103] fields(2) methods(9)
class: common#__srt_global[104] fields(0) methods(1)
class: common#constants[105] fields(33) methods(9)
class: common#constants.strings[106] fields(18) methods(9)
class: main#__srt_global[107] fields(4) methods(8)
class: ui.res.drawable#__srt_global[108] fields(26) methods(2)
class: ui.res#__srt_global[109] fields(3) methods(1)
class: ui.res#resources[110] fields(2) methods(11)
class: ui.support#__srt_global[111] fields(0) methods(1)
class: ui.support#text_view[112] fields(21) methods(39)
class: ui.support#margin[113] fields(4) methods(8)
class: ui.support#drawable[114] fields(4) methods(9)
class: ui.support#window[115] fields(6) methods(17)
class: ui.support#fragment[116] fields(4) methods(17)
interface: ui.support#lifecycle[117] fields(0) methods(10)
class: ui.support#image_view[118] fields(20) methods(38)
class: ui.support#constants[119] fields(0) methods(8)
class: ui.support#constants.view[120] fields(7) methods(8)
class: ui.support#constants.window[121] fields(3) methods(8)
class: ui.support#constants.lifecycle[122] fields(2) methods(8)
class: ui.support#constants.time[123] fields(2) methods(8)
class: ui.support#constants.layout[124] fields(2) methods(8)
class: ui.support#constants.margins[125] fields(0) methods(8)
class: ui.support#constants.resource[126] fields(0) methods(8)
class: ui.support#constants.resource.id[127] fields(26) methods(8)
class: ui.support#constants.standard[128] fields(2) methods(8)
class: ui.support#view[129] fields(19) methods(31)
class: ui.driver#__srt_global[130] fields(0) methods(8)
class: ui.driver#ssd1306[131] fields(1) methods(14)
class: ui.layout#__srt_global[132] fields(1) methods(6)
class: ui.layout#splash_screen[133] fields(4) methods(22)
class: ui.layout.config#__srt_global[134] fields(1) methods(3)
class: ui.layout#home_screen[135] fields(7) methods(23)
std#loopable<_int8>[136] fields(0) methods(9)
std#loopable<std.io#thread>[137] fields(0) methods(9)
generic: std#integer<_uint64>[138] fields(1) methods(216)
generic: std#integer<_int64>[139] fields(1) methods(216)
generic: std#integer<_uint32>[140] fields(1) methods(216)
generic: std#integer<_int32>[141] fields(1) methods(216)
generic: std#integer<_uint16>[142] fields(1) methods(216)
generic: std#integer<_int16>[143] fields(1) methods(216)
generic: std#integer<_uint8>[144] fields(1) methods(216)
generic: std#integer<_int8>[145] fields(1) methods(216)
generic: std#integer<var>[146] fields(1) methods(216)
generic: std#hashtable<std.io#thread,std.io.task#job_controller>[147] fields(6) methods(15)
generic: std#hashtable<std#int,std.io#thread>[148] fields(6) methods(15)
generic: std#list<std#string>[149] fields(5) methods(35)
std#loopable<std#string>[150] fields(0) methods(9)
generic: std#synced_list<std.io.task#job>[151] fields(5) methods(33)
std#loopable<std.io.task#job>[152] fields(0) methods(9)
generic: std#list<std.io.task#job>[153] fields(5) methods(35)
generic: std#list<std.io#thread>[154] fields(5) methods(35)
generic: std#list<var>[155] fields(5) methods(35)
std#loopable<var>[156] fields(0) methods(9)
generic: std#list<common.network.core#request_data.request_item>[157] fields(5) methods(35)
std#loopable<common.network.core#request_data.request_item>[158] fields(0) methods(9)
generic: std#hashmap<std#int,ui.support#drawable>[159] fields(5) methods(15)
generic: std#list<ui.support#fragment>[160] fields(5) methods(35)
std#loopable<ui.support#fragment>[161] fields(0) methods(9)
generic: std#list<ui.support#view>[162] fields(5) methods(35)
std#loopable<ui.support#view>[163] fields(0) methods(9)
generic: std.io.task#entry<std.io#thread,std.io.task#job_controller>[164] fields(3) methods(10)
generic: std.io#entry<std#int,std.io#thread>[165] fields(3) methods(10)
generic: ui.res#entry<std#int,ui.support#drawable>[166] fields(3) methods(10)


 strings: 

[0]: job#
[1]: nil
[2]: main
[3]: 100
[4]: 200
[5]: cmd
[6]: response
[7]: yes
[8]: mode
[9]: channel
[10]: altitude
[11]: bat_lvl
[12]: speed
[13]: 0
[14]: 1
[15]: 2
[16]: 3
[17]: 4
[18]: 5
[19]: 6
[20]: 7
[21]: signal-updater
[22]: clock-updater
[23]: flight-data-updater
[24]: 
[25]: length cannot be less than zero
[26]: length of: 
[27]:  is greater than the string: 
[28]: null
[29]: invalid precision: 
[30]: endPos: 
[31]:  cannot be less than the startPos: 
[32]: Index out of bounds exception at: 
[33]:  with size of: 
[34]: end_pos: 
[35]:  cannot be less than the start_pos: 
[36]: Long term jobs
[37]: Short term jobs
[38]: cannot set a timeout on a job that's blocking the calling thread
[39]: cannot set a job recurring that's blocking the calling thread
[40]: cannot block calling thread on job that has a timeout
[41]: cannot block calling thread on a recurring job
[42]: recurring jobs cannot be deferred tasks
[43]: task_scheduler
[44]: cannot modify max thread count after task library has started, 
[45]: try calling this before your first task
[46]: cannot modify max thread count after task library has started, try calling this before your first ta
[47]: cannot have less than 2 max threads
[48]: long_term_worker_thread#
[49]: worker_thread#
[50]: cannot set update restart interval on non-recurring job
[51]: file could not be resolved: 
[52]: invalid thread priority 
[53]: file path cannot be null
[54]: file path cannot be empty
[55]: Negative time
[56]: true
[57]: false
[58]: win
[59]: posix
[60]: .dll
[61]: .so
[62]: cannot sleep for negative time: 
[63]: assertion failed!
[64]: device is not setup
[65]: device is shutown
[66]: data
[67]: bin/dragonfly
[68]: cannot align view to left of parent use 'to_start_of(parent)' instead
[69]: cannot align view to top of another view to whom we are not left aligned to
[70]: cannot align view to top of another view with top or bottom alignment
[71]: cannot align view above parent view, use 'to_top_of(parent)' instead
[72]: cannot align view to bottom while also having top alignment
[73]: cannot align view below the parent, use 'to_bottom_of(parent)' instead
[74]: cannot align view to right while also having left alignment
[75]: cannot align view to end of view 
[76]:  while also having left alignment
[77]:  while also having right alignment
[78]: cannot align view to end of parent while also having left alignment
[79]: image has invalid size: 
[80]:  x 
[81]:  img size is: 
[82]: skip count < 0: 
[83]: Project
[84]: Dragonfly
[85]: main-container
[86]: ALT
[87]: 999M
[88]: 9
[89]: Kph
[90]: created
[91]: active
[92]: completed
[93]: cancelled
[94]: min_priority
[95]: norm_priority
[96]: max_priority
[97]: result_ok
[98]: result_ill_thread_start
[99]: result_thread_running
[100]: result_thread_terminated
[101]: result_invalid_stack_size
[102]: result_thread_not_started
[103]: result_ill_thread_join
[104]: result_thread_join_failed
[105]: result_ill_thread_interrupt
[106]: result_thread_interrupt_failed
[107]: result_ill_thread_destroy
[108]: result_thread_create_failed
[109]: result_no_thread_id
[110]: result_thread_destroy_failed
[111]: result_ill_priority_set
[112]: result_ill_thread_suspend
[113]: result_max_spin
[114]: enums
[115]: int8
[116]: int16
[117]: int32
[118]: int64
[119]: uint8
[120]: uint16
[121]: uint32
[122]: uint64
[123]: fnptr
[124]: _var
[125]: _object
[126]: _class
[127]: method
[128]: _nil
[129]: any
[130]: untyped
[131]: undefined
[132]: class_property
[133]: field_property
[134]: function_property
[135]: tm_seconds
[136]: tm_minutes
[137]: tm_hour
[138]: tm_mday
[139]: tm_mon
[140]: tm_year
[141]: tm_wday
[142]: tm_yday
[143]: tm_isdst
[144]: seconds
[145]: milliseconds
[146]: microseconds
[147]: nanoseconds
[148]: illegal char in string: 
[149]: [ 
[150]: , 
[151]:  ]
[152]: Index: 
[153]: , size: 
[154]: key 
[155]:  value 
[156]: =
[157]: ,
[158]: text size too large for view height: 
[159]:  txt size: 
[160]:  calc height: 
[161]: handshaked!
[162]: M
[163]: am
[164]: :

 constants: 

[0]: 2.7182818284590451e+00
[1]: 3.1415926535897931e+00
[2]: 1.0000000000000000e+00
[3]: 0.0000000000000000e+00
[4]: inf
[5]: nan
[6]: nan
[7]: 7.5000000000000000e-01
[8]: 1.0000000000000000e+09
[9]: 2.5000000000000000e-01
[10]: 5.0000000000000000e-01

 methods: 
constructor: std#__srt_global.__srt_global[0] params(0) in file: /usr/include/sharp//object.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: std.io.task#__srt_global.__srt_global[1] params(0) in file: /usr/include/sharp//io//task//task.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: std.io#__srt_global.__srt_global[2] params(0) in file: /usr/include/sharp//io//atomic.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: platform#__srt_global.__srt_global[3] params(0) in file: /usr/include/sharp//platform//build.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: platform.kernel#__srt_global.__srt_global[4] params(0) in file: /usr/include/sharp//platform//kernel//stack_state.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: std.math#__srt_global.__srt_global[5] params(0) in file: /usr/include/sharp//math//math.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: std.reflect#__srt_global.__srt_global[6] params(0) in file: /usr/include/sharp//reflect//data_entity.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: common.gpio#__srt_global.__srt_global[7] params(0) in file: common//gpio//gpio.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: common.network.driver#__srt_global.__srt_global[8] params(0) in file: common//network//driver//dev_interface.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: common.network.core#__srt_global.__srt_global[9] params(0) in file: common//network//core//request.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: common.network.remote#__srt_global.__srt_global[10] params(0) in file: common//network//remote//jam_request_impl.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: common.network#__srt_global.__srt_global[11] params(0) in file: common//network//network.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: common.network.data.request#__srt_global.__srt_global[12] params(0) in file: common//network//data//request//network_scan_request.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: common.network.data.response#__srt_global.__srt_global[13] params(0) in file: common//network//data//response//flight_data_response.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: common#__srt_global.__srt_global[14] params(0) in file: common//constants.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: main#__srt_global.__srt_global[15] params(0) in file: controller//main.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: ui.res.drawable#__srt_global.__srt_global[16] params(0) in file: controller//ui//res//drawable//ico_signal_2.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: ui.res#__srt_global.__srt_global[17] params(0) in file: controller//ui//res//resource.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: ui.support#__srt_global.__srt_global[18] params(0) in file: controller//ui//support//text_view.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: ui.driver#__srt_global.__srt_global[19] params(0) in file: controller//ui//driver//dev_interface.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: ui.layout#__srt_global.__srt_global[20] params(0) in file: controller//ui//layout//splash_screen.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


constructor: ui.layout.config#__srt_global.__srt_global[21] params(0) in file: controller//ui//layout//config//layout_config.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         ret   


std#loopable<_int8>.get_elements[22] params(0) in file: /usr/include/sharp//string_builder.sharp:4:8: note:  
		
		       ^



constructor: std#loopable<_int8>.loopable[23] params(0) in file: /usr/include/sharp//string_builder.sharp:3:10: note:  
		import std.io;
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


std#loopable<std.io#thread>.get_elements[24] params(0) in file: /usr/include/sharp//io//thread_group.sharp:4:8: note:  
			
		       ^



constructor: std#loopable<std.io#thread>.loopable[25] params(0) in file: /usr/include/sharp//io//thread_group.sharp:3:10: note:  
		public class thread_group : loopable<thread> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#integer<_uint64>.integer[26] params(1) in file: /usr/include/sharp//primitives.sharp:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 9 ipushl #1   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         movu64 ebx, ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         ret   


function: std#integer<_uint64>.hash[27] params(0) in file: /usr/include/sharp//primitives.sharp:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 13 new_class @0 // std#__srt_global   
1 [0x1]:          imod adx, #? (112)   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @2426 // <std#long.long>   
11 [0xb]:          popobj2    
12 [0xc]:          returnobj   
13 [0xd]:          ret   


overload function: std#integer<_uint64>.operator!=[28] params(1) in file: /usr/include/sharp//primitives.sharp:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator==[29] params(1) in file: /usr/include/sharp//primitives.sharp:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator!=[30] params(1) in file: /usr/include/sharp//primitives.sharp:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator==[31] params(1) in file: /usr/include/sharp//primitives.sharp:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator!=[32] params(1) in file: /usr/include/sharp//primitives.sharp:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator==[33] params(1) in file: /usr/include/sharp//primitives.sharp:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator!=[34] params(1) in file: /usr/include/sharp//primitives.sharp:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator==[35] params(1) in file: /usr/include/sharp//primitives.sharp:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator!=[36] params(1) in file: /usr/include/sharp//primitives.sharp:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator==[37] params(1) in file: /usr/include/sharp//primitives.sharp:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator!=[38] params(1) in file: /usr/include/sharp//primitives.sharp:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator==[39] params(1) in file: /usr/include/sharp//primitives.sharp:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator!=[40] params(1) in file: /usr/include/sharp//primitives.sharp:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator==[41] params(1) in file: /usr/include/sharp//primitives.sharp:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator!=[42] params(1) in file: /usr/include/sharp//primitives.sharp:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator==[43] params(1) in file: /usr/include/sharp//primitives.sharp:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator!=[44] params(1) in file: /usr/include/sharp//primitives.sharp:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator==[45] params(1) in file: /usr/include/sharp//primitives.sharp:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator!=[46] params(1) in file: /usr/include/sharp//primitives.sharp:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator==[47] params(1) in file: /usr/include/sharp//primitives.sharp:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator==[48] params(1) in file: /usr/include/sharp//primitives.sharp:36:8: note:  
		    def operator==(num : double) := (value==num.value);
		       ^

0 [0x0]: line: 36 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator+[49] params(1) in file: /usr/include/sharp//primitives.sharp:38:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator+[50] params(1) in file: /usr/include/sharp//primitives.sharp:39:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator+[51] params(1) in file: /usr/include/sharp//primitives.sharp:40:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator+[52] params(1) in file: /usr/include/sharp//primitives.sharp:41:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator+[53] params(1) in file: /usr/include/sharp//primitives.sharp:42:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator+[54] params(1) in file: /usr/include/sharp//primitives.sharp:43:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator+[55] params(1) in file: /usr/include/sharp//primitives.sharp:44:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator+[56] params(1) in file: /usr/include/sharp//primitives.sharp:45:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator+[57] params(1) in file: /usr/include/sharp//primitives.sharp:46:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator+[58] params(1) in file: /usr/include/sharp//primitives.sharp:47:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator+[59] params(1) in file: /usr/include/sharp//primitives.sharp:48:8: note:  
		    def operator+(num : double)   := (value+num.value);
		       ^

0 [0x0]: line: 48 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator+[60] params(1) in file: /usr/include/sharp//primitives.sharp:49:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          add ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint64>.operator-[61] params(1) in file: /usr/include/sharp//primitives.sharp:51:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator-[62] params(1) in file: /usr/include/sharp//primitives.sharp:52:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator-[63] params(1) in file: /usr/include/sharp//primitives.sharp:53:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator-[64] params(1) in file: /usr/include/sharp//primitives.sharp:54:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator-[65] params(1) in file: /usr/include/sharp//primitives.sharp:55:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator-[66] params(1) in file: /usr/include/sharp//primitives.sharp:56:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator-[67] params(1) in file: /usr/include/sharp//primitives.sharp:57:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator-[68] params(1) in file: /usr/include/sharp//primitives.sharp:58:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator-[69] params(1) in file: /usr/include/sharp//primitives.sharp:59:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator-[70] params(1) in file: /usr/include/sharp//primitives.sharp:60:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 60 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator-[71] params(1) in file: /usr/include/sharp//primitives.sharp:61:8: note:  
		    def operator-(num : double)   := (value-num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator-[72] params(1) in file: /usr/include/sharp//primitives.sharp:62:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          sub ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint64>.operator*[73] params(1) in file: /usr/include/sharp//primitives.sharp:64:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator*[74] params(1) in file: /usr/include/sharp//primitives.sharp:65:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator*[75] params(1) in file: /usr/include/sharp//primitives.sharp:66:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator*[76] params(1) in file: /usr/include/sharp//primitives.sharp:67:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator*[77] params(1) in file: /usr/include/sharp//primitives.sharp:68:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator*[78] params(1) in file: /usr/include/sharp//primitives.sharp:69:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator*[79] params(1) in file: /usr/include/sharp//primitives.sharp:70:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator*[80] params(1) in file: /usr/include/sharp//primitives.sharp:71:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator*[81] params(1) in file: /usr/include/sharp//primitives.sharp:72:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 72 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator*[82] params(1) in file: /usr/include/sharp//primitives.sharp:73:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator*[83] params(1) in file: /usr/include/sharp//primitives.sharp:74:8: note:  
		    def operator*(num : double)   := (value*num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator*[84] params(1) in file: /usr/include/sharp//primitives.sharp:75:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mul ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint64>.operator/[85] params(1) in file: /usr/include/sharp//primitives.sharp:77:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator/[86] params(1) in file: /usr/include/sharp//primitives.sharp:78:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator/[87] params(1) in file: /usr/include/sharp//primitives.sharp:79:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator/[88] params(1) in file: /usr/include/sharp//primitives.sharp:80:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator/[89] params(1) in file: /usr/include/sharp//primitives.sharp:81:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator/[90] params(1) in file: /usr/include/sharp//primitives.sharp:82:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator/[91] params(1) in file: /usr/include/sharp//primitives.sharp:83:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator/[92] params(1) in file: /usr/include/sharp//primitives.sharp:84:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 84 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator/[93] params(1) in file: /usr/include/sharp//primitives.sharp:85:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator/[94] params(1) in file: /usr/include/sharp//primitives.sharp:86:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator/[95] params(1) in file: /usr/include/sharp//primitives.sharp:87:8: note:  
		    def operator/(num : double)   := (value/num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator/[96] params(1) in file: /usr/include/sharp//primitives.sharp:88:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          div ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint64>.operator%[97] params(1) in file: /usr/include/sharp//primitives.sharp:90:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator%[98] params(1) in file: /usr/include/sharp//primitives.sharp:91:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator%[99] params(1) in file: /usr/include/sharp//primitives.sharp:92:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator%[100] params(1) in file: /usr/include/sharp//primitives.sharp:93:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator%[101] params(1) in file: /usr/include/sharp//primitives.sharp:94:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator%[102] params(1) in file: /usr/include/sharp//primitives.sharp:95:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator%[103] params(1) in file: /usr/include/sharp//primitives.sharp:96:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 96 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator%[104] params(1) in file: /usr/include/sharp//primitives.sharp:97:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator%[105] params(1) in file: /usr/include/sharp//primitives.sharp:98:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator%[106] params(1) in file: /usr/include/sharp//primitives.sharp:99:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint64>.operator%[107] params(1) in file: /usr/include/sharp//primitives.sharp:100:8: note:  
		    def operator%(num : double)   := (value%num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator%[108] params(1) in file: /usr/include/sharp//primitives.sharp:101:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           mod ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint64>.operator<[109] params(1) in file: /usr/include/sharp//primitives.sharp:103:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<[110] params(1) in file: /usr/include/sharp//primitives.sharp:104:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<[111] params(1) in file: /usr/include/sharp//primitives.sharp:105:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<[112] params(1) in file: /usr/include/sharp//primitives.sharp:106:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<[113] params(1) in file: /usr/include/sharp//primitives.sharp:107:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<[114] params(1) in file: /usr/include/sharp//primitives.sharp:108:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 108 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<[115] params(1) in file: /usr/include/sharp//primitives.sharp:109:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<[116] params(1) in file: /usr/include/sharp//primitives.sharp:110:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<[117] params(1) in file: /usr/include/sharp//primitives.sharp:111:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<[118] params(1) in file: /usr/include/sharp//primitives.sharp:112:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<[119] params(1) in file: /usr/include/sharp//primitives.sharp:113:8: note:  
		    def operator<(num : double)   := (value<num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<[120] params(1) in file: /usr/include/sharp//primitives.sharp:114:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           lt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint64>.operator>[121] params(1) in file: /usr/include/sharp//primitives.sharp:116:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>[122] params(1) in file: /usr/include/sharp//primitives.sharp:117:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>[123] params(1) in file: /usr/include/sharp//primitives.sharp:118:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>[124] params(1) in file: /usr/include/sharp//primitives.sharp:119:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>[125] params(1) in file: /usr/include/sharp//primitives.sharp:120:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 120 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>[126] params(1) in file: /usr/include/sharp//primitives.sharp:121:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>[127] params(1) in file: /usr/include/sharp//primitives.sharp:122:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>[128] params(1) in file: /usr/include/sharp//primitives.sharp:123:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>[129] params(1) in file: /usr/include/sharp//primitives.sharp:124:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>[130] params(1) in file: /usr/include/sharp//primitives.sharp:125:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>[131] params(1) in file: /usr/include/sharp//primitives.sharp:126:8: note:  
		    def operator>(num : double)   := (value>num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>[132] params(1) in file: /usr/include/sharp//primitives.sharp:127:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint64>.operator<=[133] params(1) in file: /usr/include/sharp//primitives.sharp:129:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<=[134] params(1) in file: /usr/include/sharp//primitives.sharp:130:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<=[135] params(1) in file: /usr/include/sharp//primitives.sharp:131:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<=[136] params(1) in file: /usr/include/sharp//primitives.sharp:132:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 132 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<=[137] params(1) in file: /usr/include/sharp//primitives.sharp:133:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<=[138] params(1) in file: /usr/include/sharp//primitives.sharp:134:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<=[139] params(1) in file: /usr/include/sharp//primitives.sharp:135:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<=[140] params(1) in file: /usr/include/sharp//primitives.sharp:136:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<=[141] params(1) in file: /usr/include/sharp//primitives.sharp:137:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<=[142] params(1) in file: /usr/include/sharp//primitives.sharp:138:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<=[143] params(1) in file: /usr/include/sharp//primitives.sharp:139:8: note:  
		    def operator<=(num : double)   := (value>=num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<=[144] params(1) in file: /usr/include/sharp//primitives.sharp:140:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint64>.operator**[145] params(1) in file: /usr/include/sharp//primitives.sharp:142:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator**[146] params(1) in file: /usr/include/sharp//primitives.sharp:143:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator**[147] params(1) in file: /usr/include/sharp//primitives.sharp:144:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 144 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator**[148] params(1) in file: /usr/include/sharp//primitives.sharp:145:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator**[149] params(1) in file: /usr/include/sharp//primitives.sharp:146:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator**[150] params(1) in file: /usr/include/sharp//primitives.sharp:147:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator**[151] params(1) in file: /usr/include/sharp//primitives.sharp:148:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator**[152] params(1) in file: /usr/include/sharp//primitives.sharp:149:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator**[153] params(1) in file: /usr/include/sharp//primitives.sharp:150:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator**[154] params(1) in file: /usr/include/sharp//primitives.sharp:151:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator**[155] params(1) in file: /usr/include/sharp//primitives.sharp:152:8: note:  
		    def operator**(num : double)   := (value**num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator**[156] params(1) in file: /usr/include/sharp//primitives.sharp:153:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           exp ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint64>.operator<<[157] params(1) in file: /usr/include/sharp//primitives.sharp:155:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<<[158] params(1) in file: /usr/include/sharp//primitives.sharp:156:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<<[159] params(1) in file: /usr/include/sharp//primitives.sharp:157:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<<[160] params(1) in file: /usr/include/sharp//primitives.sharp:158:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<<[161] params(1) in file: /usr/include/sharp//primitives.sharp:159:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<<[162] params(1) in file: /usr/include/sharp//primitives.sharp:160:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<<[163] params(1) in file: /usr/include/sharp//primitives.sharp:161:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<<[164] params(1) in file: /usr/include/sharp//primitives.sharp:162:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<<[165] params(1) in file: /usr/include/sharp//primitives.sharp:163:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<<[166] params(1) in file: /usr/include/sharp//primitives.sharp:164:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<<[167] params(1) in file: /usr/include/sharp//primitives.sharp:165:8: note:  
		    def operator<<(num : double)   := (value<<num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator<<[168] params(1) in file: /usr/include/sharp//primitives.sharp:166:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shl ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint64>.operator>>[169] params(1) in file: /usr/include/sharp//primitives.sharp:168:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 168 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>>[170] params(1) in file: /usr/include/sharp//primitives.sharp:169:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>>[171] params(1) in file: /usr/include/sharp//primitives.sharp:170:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>>[172] params(1) in file: /usr/include/sharp//primitives.sharp:171:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>>[173] params(1) in file: /usr/include/sharp//primitives.sharp:172:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>>[174] params(1) in file: /usr/include/sharp//primitives.sharp:173:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>>[175] params(1) in file: /usr/include/sharp//primitives.sharp:174:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>>[176] params(1) in file: /usr/include/sharp//primitives.sharp:175:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>>[177] params(1) in file: /usr/include/sharp//primitives.sharp:176:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>>[178] params(1) in file: /usr/include/sharp//primitives.sharp:177:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>>[179] params(1) in file: /usr/include/sharp//primitives.sharp:178:8: note:  
		    def operator>>(num : double)   := (value>>num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator>>[180] params(1) in file: /usr/include/sharp//primitives.sharp:179:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shr ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint64>.operator^[181] params(1) in file: /usr/include/sharp//primitives.sharp:181:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator^[182] params(1) in file: /usr/include/sharp//primitives.sharp:182:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator^[183] params(1) in file: /usr/include/sharp//primitives.sharp:183:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator^[184] params(1) in file: /usr/include/sharp//primitives.sharp:184:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator^[185] params(1) in file: /usr/include/sharp//primitives.sharp:185:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator^[186] params(1) in file: /usr/include/sharp//primitives.sharp:186:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator^[187] params(1) in file: /usr/include/sharp//primitives.sharp:187:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator^[188] params(1) in file: /usr/include/sharp//primitives.sharp:188:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator^[189] params(1) in file: /usr/include/sharp//primitives.sharp:189:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator^[190] params(1) in file: /usr/include/sharp//primitives.sharp:190:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator^[191] params(1) in file: /usr/include/sharp//primitives.sharp:191:8: note:  
		    def operator^(num : double)   := (value^num.value);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator^[192] params(1) in file: /usr/include/sharp//primitives.sharp:192:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 192 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           xor ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint64>.operator&[193] params(1) in file: /usr/include/sharp//primitives.sharp:194:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator&[194] params(1) in file: /usr/include/sharp//primitives.sharp:195:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator&[195] params(1) in file: /usr/include/sharp//primitives.sharp:196:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator&[196] params(1) in file: /usr/include/sharp//primitives.sharp:197:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator&[197] params(1) in file: /usr/include/sharp//primitives.sharp:198:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator&[198] params(1) in file: /usr/include/sharp//primitives.sharp:199:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator&[199] params(1) in file: /usr/include/sharp//primitives.sharp:200:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator&[200] params(1) in file: /usr/include/sharp//primitives.sharp:201:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator&[201] params(1) in file: /usr/include/sharp//primitives.sharp:202:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator&[202] params(1) in file: /usr/include/sharp//primitives.sharp:203:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator&[203] params(1) in file: /usr/include/sharp//primitives.sharp:204:8: note:  
		    def operator&(num : double)   := (value&num.value);
		       ^

0 [0x0]: line: 204 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator&[204] params(1) in file: /usr/include/sharp//primitives.sharp:205:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           uand ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint64>.operator|[205] params(1) in file: /usr/include/sharp//primitives.sharp:207:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 207 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator|[206] params(1) in file: /usr/include/sharp//primitives.sharp:208:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 208 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator|[207] params(1) in file: /usr/include/sharp//primitives.sharp:209:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 209 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator|[208] params(1) in file: /usr/include/sharp//primitives.sharp:210:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator|[209] params(1) in file: /usr/include/sharp//primitives.sharp:211:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 211 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator|[210] params(1) in file: /usr/include/sharp//primitives.sharp:212:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 212 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator|[211] params(1) in file: /usr/include/sharp//primitives.sharp:213:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 213 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator|[212] params(1) in file: /usr/include/sharp//primitives.sharp:214:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 214 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator|[213] params(1) in file: /usr/include/sharp//primitives.sharp:215:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 215 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator|[214] params(1) in file: /usr/include/sharp//primitives.sharp:216:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 216 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator|[215] params(1) in file: /usr/include/sharp//primitives.sharp:217:8: note:  
		    def operator|(num : double)   := (value|num.value);
		       ^

0 [0x0]: line: 217 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint64>.operator|[216] params(1) in file: /usr/include/sharp//primitives.sharp:218:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 218 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint64>.operator!=[217] params(1) in file: /usr/include/sharp//primitives.sharp:220:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 220 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           tne ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint64>.operator==[218] params(1) in file: /usr/include/sharp//primitives.sharp:221:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 221 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           test ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint64>.operator=[219] params(1) in file: /usr/include/sharp//primitives.sharp:222:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 222 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           movu64 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std#integer<_uint64>.to_string[220] params(0) in file: /usr/include/sharp//primitives.sharp:224:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 225 new_class @0 // std#__srt_global   
1 [0x1]:           ret   
2 [0x2]:           dup    
3 [0x3]:           newstr @24 //    
4 [0x4]:           call @1959 // <std#string.string>   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           call @1999 // <std#string.operator+>   
13 [0xd]:           popobj2    
14 [0xe]:           returnobj   
15 [0xf]:           ret   


function: std#integer<_uint64>.parse[221] params(1) in file: /usr/include/sharp//primitives.sharp:228:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 229 movi #0, ebx   
2 [0x2]:           movu64 ebx, ebx   
3 [0x3]:           smovr_2 ebx, fp+1   
4 [0x4]: line: 231 movi #0, ebx   
6 [0x6]:           movr cmt, ebx   
7 [0x7]:           jne 14   
8 [0x8]: line: 232 pushl 0   
9 [0x9]:           call @2252 // <std#__srt_global.strtod>   
10 [0xa]:           loadval ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   
13 [0xd]:           jmp @102   
14 [0xe]: line: 234 istorel 0, fp+2   
16 [0x10]: line: 235 istorel 0, fp+3   
18 [0x12]: line: 236 pushl 0   
19 [0x13]:           call @2000 // <std#string.size>   
20 [0x14]:           ipopl 4   
21 [0x15]: line: 238 pushl 0   
22 [0x16]:           istore 0   
24 [0x18]:           call @1981 // <std#string.at>   
25 [0x19]:           loadval ebx   
26 [0x1a]:           rstore ebx   
27 [0x1b]:           movi #45, ebx   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           test ecx, ebx   
31 [0x1f]:           jne 36   
32 [0x20]: line: 239 istorel 1, fp+3   
34 [0x22]: line: 240 istorel 1, fp+2   
36 [0x24]:           nop   
37 [0x25]: line: 243 ipushl #2   
38 [0x26]:           loadl ebx, fp+4   
39 [0x27]:           loadval ecx   
40 [0x28]:           lt ecx, ebx   
41 [0x29]:           movr ebx, cmt   
42 [0x2a]:           movr cmt, ebx   
43 [0x2b]:           jne 91   
44 [0x2c]: line: 244 pushl 0   
45 [0x2d]:           ipushl #2   
46 [0x2e]:           call @1981 // <std#string.at>   
47 [0x2f]:           call @3128 // <std#char.is_digit>   
48 [0x30]:           loadval ebx   
49 [0x31]:           not ebx, ebx   
50 [0x32]:           movr cmt, ebx   
51 [0x33]:           jne 66   
52 [0x34]: line: 245 new_class @0 // std#__srt_global   
53 [0x35]:           skip @0 // pc = 53   
54 [0x36]:           dup    
55 [0x37]:           new_class @0 // std#__srt_global   
56 [0x38]:           ret   
57 [0x39]:           dup    
58 [0x3a]:           newstr @148 // illegal char in string:    
59 [0x3b]:           call @1959 // <std#string.string>   
60 [0x3c]:           pushl 0   
61 [0x3d]:           ipushl #2   
62 [0x3e]:           call @1981 // <std#string.at>   
63 [0x3f]:           call @1992 // <std#string.operator+>   
64 [0x40]:           call @3549 // <std#illegal_argument_exception.illegal_argument_exception>   
65 [0x41]:           throw    
66 [0x42]:           nop   
67 [0x43]: line: 249 movi #10, ebx   
69 [0x45]:           loadl ecx, fp+1   
70 [0x46]:           mul ecx, ebx -> ebx   
71 [0x47]:           movu64 ebx, ebx   
72 [0x48]:           smovr_2 ebx, fp+1   
73 [0x49]: line: 250 pushl 0   
74 [0x4a]:           loadl ebx, fp+2   
75 [0x4b]:           movr egx, ebx   
76 [0x4c]:           inc ebx   
77 [0x4d]:           smovr_2 ebx, fp+2   
78 [0x4e]:           rstore egx   
79 [0x4f]:           call @1981 // <std#string.at>   
80 [0x50]:           loadval ebx   
81 [0x51]:           rstore ebx   
82 [0x52]:           movi #48, ebx   
84 [0x54]:           loadval ecx   
85 [0x55]:           sub ecx, ebx -> ebx   
86 [0x56]:           loadl ecx, fp+1   
87 [0x57]:           add ecx, ebx -> ebx   
88 [0x58]:           movu64 ebx, ebx   
89 [0x59]:           smovr_2 ebx, fp+1   
90 [0x5a]:           jmp @37   
91 [0x5b]: line: 252 loadl ebx, fp+3   
92 [0x5c]:           movr cmt, ebx   
93 [0x5d]:           jne 98   
94 [0x5e]: line: 253 loadl ebx, fp+1   
95 [0x5f]:           neg ebx, ebx   
96 [0x60]:           movu64 ebx, ebx   
97 [0x61]:           smovr_2 ebx, fp+1   
98 [0x62]:           nop   
99 [0x63]: line: 254 loadl ebx, fp+1   
100 [0x64]:           return_val ebx   
101 [0x65]:           ret   
102 [0x66]:           nop   


function: std#integer<_uint64>.to_ulong[222] params(0) in file: /usr/include/sharp//primitives.sharp:258:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 258 new_class @0 // std#__srt_global   
1 [0x1]:           idiv adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint64>.to_long[223] params(0) in file: /usr/include/sharp//primitives.sharp:259:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 259 new_class @0 // std#__srt_global   
1 [0x1]:           imod adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint64>.to_uint[224] params(0) in file: /usr/include/sharp//primitives.sharp:260:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 260 new_class @0 // std#__srt_global   
1 [0x1]:           pop   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint64>.to_int[225] params(0) in file: /usr/include/sharp//primitives.sharp:261:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 261 new_class @0 // std#__srt_global   
1 [0x1]:           inc adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint64>.to_ushort[226] params(0) in file: /usr/include/sharp//primitives.sharp:262:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 262 new_class @0 // std#__srt_global   
1 [0x1]:           dec adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint64>.to_short[227] params(0) in file: /usr/include/sharp//primitives.sharp:263:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 263 new_class @0 // std#__srt_global   
1 [0x1]:           movr adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint64>.to_uchar[228] params(0) in file: /usr/include/sharp//primitives.sharp:264:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 264 new_class @0 // std#__srt_global   
1 [0x1]:           brh   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint64>.to_char[229] params(0) in file: /usr/include/sharp//primitives.sharp:265:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 265 new_class @0 // std#__srt_global   
1 [0x1]:           ife   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint64>.to_byte[230] params(0) in file: /usr/include/sharp//primitives.sharp:266:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 266 new_class @0 // std#__srt_global   
1 [0x1]:           ifne   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint64>.to_bool[231] params(0) in file: /usr/include/sharp//primitives.sharp:267:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 267 new_class @0 // std#__srt_global   
1 [0x1]:           lt adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint64>.to_double[232] params(0) in file: /usr/include/sharp//primitives.sharp:268:8: note:  
		    def to_double() := new double { value };
		       ^

0 [0x0]: line: 268 new_class @0 // std#__srt_global   
1 [0x1]:           gt adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint64>.get_value[233] params(0) in file: /usr/include/sharp//primitives.sharp:270:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 270 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std#integer<_uint64>.integer[234] params(0) in file: /usr/include/sharp//primitives.sharp:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#integer<_int64>.integer[235] params(1) in file: /usr/include/sharp//primitives.sharp:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 9 ipushl #1   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         mov64 ebx, ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         ret   


function: std#integer<_int64>.hash[236] params(0) in file: /usr/include/sharp//primitives.sharp:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 13 new_class @0 // std#__srt_global   
1 [0x1]:          imod adx, #? (112)   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @2426 // <std#long.long>   
11 [0xb]:          popobj2    
12 [0xc]:          returnobj   
13 [0xd]:          ret   


overload function: std#integer<_int64>.operator!=[237] params(1) in file: /usr/include/sharp//primitives.sharp:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator==[238] params(1) in file: /usr/include/sharp//primitives.sharp:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator!=[239] params(1) in file: /usr/include/sharp//primitives.sharp:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator==[240] params(1) in file: /usr/include/sharp//primitives.sharp:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator!=[241] params(1) in file: /usr/include/sharp//primitives.sharp:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator==[242] params(1) in file: /usr/include/sharp//primitives.sharp:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator!=[243] params(1) in file: /usr/include/sharp//primitives.sharp:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator==[244] params(1) in file: /usr/include/sharp//primitives.sharp:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator!=[245] params(1) in file: /usr/include/sharp//primitives.sharp:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator==[246] params(1) in file: /usr/include/sharp//primitives.sharp:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator!=[247] params(1) in file: /usr/include/sharp//primitives.sharp:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator==[248] params(1) in file: /usr/include/sharp//primitives.sharp:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator!=[249] params(1) in file: /usr/include/sharp//primitives.sharp:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator==[250] params(1) in file: /usr/include/sharp//primitives.sharp:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator!=[251] params(1) in file: /usr/include/sharp//primitives.sharp:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator==[252] params(1) in file: /usr/include/sharp//primitives.sharp:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator!=[253] params(1) in file: /usr/include/sharp//primitives.sharp:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator==[254] params(1) in file: /usr/include/sharp//primitives.sharp:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator!=[255] params(1) in file: /usr/include/sharp//primitives.sharp:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator==[256] params(1) in file: /usr/include/sharp//primitives.sharp:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator==[257] params(1) in file: /usr/include/sharp//primitives.sharp:36:8: note:  
		    def operator==(num : double) := (value==num.value);
		       ^

0 [0x0]: line: 36 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator+[258] params(1) in file: /usr/include/sharp//primitives.sharp:38:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator+[259] params(1) in file: /usr/include/sharp//primitives.sharp:39:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator+[260] params(1) in file: /usr/include/sharp//primitives.sharp:40:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator+[261] params(1) in file: /usr/include/sharp//primitives.sharp:41:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator+[262] params(1) in file: /usr/include/sharp//primitives.sharp:42:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator+[263] params(1) in file: /usr/include/sharp//primitives.sharp:43:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator+[264] params(1) in file: /usr/include/sharp//primitives.sharp:44:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator+[265] params(1) in file: /usr/include/sharp//primitives.sharp:45:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator+[266] params(1) in file: /usr/include/sharp//primitives.sharp:46:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator+[267] params(1) in file: /usr/include/sharp//primitives.sharp:47:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator+[268] params(1) in file: /usr/include/sharp//primitives.sharp:48:8: note:  
		    def operator+(num : double)   := (value+num.value);
		       ^

0 [0x0]: line: 48 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator+[269] params(1) in file: /usr/include/sharp//primitives.sharp:49:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          add ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int64>.operator-[270] params(1) in file: /usr/include/sharp//primitives.sharp:51:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator-[271] params(1) in file: /usr/include/sharp//primitives.sharp:52:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator-[272] params(1) in file: /usr/include/sharp//primitives.sharp:53:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator-[273] params(1) in file: /usr/include/sharp//primitives.sharp:54:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator-[274] params(1) in file: /usr/include/sharp//primitives.sharp:55:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator-[275] params(1) in file: /usr/include/sharp//primitives.sharp:56:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator-[276] params(1) in file: /usr/include/sharp//primitives.sharp:57:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator-[277] params(1) in file: /usr/include/sharp//primitives.sharp:58:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator-[278] params(1) in file: /usr/include/sharp//primitives.sharp:59:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator-[279] params(1) in file: /usr/include/sharp//primitives.sharp:60:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 60 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator-[280] params(1) in file: /usr/include/sharp//primitives.sharp:61:8: note:  
		    def operator-(num : double)   := (value-num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator-[281] params(1) in file: /usr/include/sharp//primitives.sharp:62:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          sub ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int64>.operator*[282] params(1) in file: /usr/include/sharp//primitives.sharp:64:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator*[283] params(1) in file: /usr/include/sharp//primitives.sharp:65:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator*[284] params(1) in file: /usr/include/sharp//primitives.sharp:66:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator*[285] params(1) in file: /usr/include/sharp//primitives.sharp:67:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator*[286] params(1) in file: /usr/include/sharp//primitives.sharp:68:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator*[287] params(1) in file: /usr/include/sharp//primitives.sharp:69:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator*[288] params(1) in file: /usr/include/sharp//primitives.sharp:70:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator*[289] params(1) in file: /usr/include/sharp//primitives.sharp:71:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator*[290] params(1) in file: /usr/include/sharp//primitives.sharp:72:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 72 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator*[291] params(1) in file: /usr/include/sharp//primitives.sharp:73:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator*[292] params(1) in file: /usr/include/sharp//primitives.sharp:74:8: note:  
		    def operator*(num : double)   := (value*num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator*[293] params(1) in file: /usr/include/sharp//primitives.sharp:75:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mul ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int64>.operator/[294] params(1) in file: /usr/include/sharp//primitives.sharp:77:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator/[295] params(1) in file: /usr/include/sharp//primitives.sharp:78:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator/[296] params(1) in file: /usr/include/sharp//primitives.sharp:79:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator/[297] params(1) in file: /usr/include/sharp//primitives.sharp:80:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator/[298] params(1) in file: /usr/include/sharp//primitives.sharp:81:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator/[299] params(1) in file: /usr/include/sharp//primitives.sharp:82:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator/[300] params(1) in file: /usr/include/sharp//primitives.sharp:83:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator/[301] params(1) in file: /usr/include/sharp//primitives.sharp:84:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 84 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator/[302] params(1) in file: /usr/include/sharp//primitives.sharp:85:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator/[303] params(1) in file: /usr/include/sharp//primitives.sharp:86:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator/[304] params(1) in file: /usr/include/sharp//primitives.sharp:87:8: note:  
		    def operator/(num : double)   := (value/num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator/[305] params(1) in file: /usr/include/sharp//primitives.sharp:88:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          div ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int64>.operator%[306] params(1) in file: /usr/include/sharp//primitives.sharp:90:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator%[307] params(1) in file: /usr/include/sharp//primitives.sharp:91:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator%[308] params(1) in file: /usr/include/sharp//primitives.sharp:92:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator%[309] params(1) in file: /usr/include/sharp//primitives.sharp:93:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator%[310] params(1) in file: /usr/include/sharp//primitives.sharp:94:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator%[311] params(1) in file: /usr/include/sharp//primitives.sharp:95:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator%[312] params(1) in file: /usr/include/sharp//primitives.sharp:96:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 96 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator%[313] params(1) in file: /usr/include/sharp//primitives.sharp:97:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator%[314] params(1) in file: /usr/include/sharp//primitives.sharp:98:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator%[315] params(1) in file: /usr/include/sharp//primitives.sharp:99:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int64>.operator%[316] params(1) in file: /usr/include/sharp//primitives.sharp:100:8: note:  
		    def operator%(num : double)   := (value%num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator%[317] params(1) in file: /usr/include/sharp//primitives.sharp:101:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           mod ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int64>.operator<[318] params(1) in file: /usr/include/sharp//primitives.sharp:103:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<[319] params(1) in file: /usr/include/sharp//primitives.sharp:104:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<[320] params(1) in file: /usr/include/sharp//primitives.sharp:105:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<[321] params(1) in file: /usr/include/sharp//primitives.sharp:106:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<[322] params(1) in file: /usr/include/sharp//primitives.sharp:107:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<[323] params(1) in file: /usr/include/sharp//primitives.sharp:108:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 108 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<[324] params(1) in file: /usr/include/sharp//primitives.sharp:109:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<[325] params(1) in file: /usr/include/sharp//primitives.sharp:110:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<[326] params(1) in file: /usr/include/sharp//primitives.sharp:111:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<[327] params(1) in file: /usr/include/sharp//primitives.sharp:112:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<[328] params(1) in file: /usr/include/sharp//primitives.sharp:113:8: note:  
		    def operator<(num : double)   := (value<num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<[329] params(1) in file: /usr/include/sharp//primitives.sharp:114:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           lt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int64>.operator>[330] params(1) in file: /usr/include/sharp//primitives.sharp:116:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>[331] params(1) in file: /usr/include/sharp//primitives.sharp:117:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>[332] params(1) in file: /usr/include/sharp//primitives.sharp:118:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>[333] params(1) in file: /usr/include/sharp//primitives.sharp:119:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>[334] params(1) in file: /usr/include/sharp//primitives.sharp:120:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 120 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>[335] params(1) in file: /usr/include/sharp//primitives.sharp:121:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>[336] params(1) in file: /usr/include/sharp//primitives.sharp:122:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>[337] params(1) in file: /usr/include/sharp//primitives.sharp:123:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>[338] params(1) in file: /usr/include/sharp//primitives.sharp:124:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>[339] params(1) in file: /usr/include/sharp//primitives.sharp:125:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>[340] params(1) in file: /usr/include/sharp//primitives.sharp:126:8: note:  
		    def operator>(num : double)   := (value>num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>[341] params(1) in file: /usr/include/sharp//primitives.sharp:127:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int64>.operator<=[342] params(1) in file: /usr/include/sharp//primitives.sharp:129:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<=[343] params(1) in file: /usr/include/sharp//primitives.sharp:130:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<=[344] params(1) in file: /usr/include/sharp//primitives.sharp:131:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<=[345] params(1) in file: /usr/include/sharp//primitives.sharp:132:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 132 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<=[346] params(1) in file: /usr/include/sharp//primitives.sharp:133:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<=[347] params(1) in file: /usr/include/sharp//primitives.sharp:134:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<=[348] params(1) in file: /usr/include/sharp//primitives.sharp:135:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<=[349] params(1) in file: /usr/include/sharp//primitives.sharp:136:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<=[350] params(1) in file: /usr/include/sharp//primitives.sharp:137:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<=[351] params(1) in file: /usr/include/sharp//primitives.sharp:138:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<=[352] params(1) in file: /usr/include/sharp//primitives.sharp:139:8: note:  
		    def operator<=(num : double)   := (value>=num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<=[353] params(1) in file: /usr/include/sharp//primitives.sharp:140:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int64>.operator**[354] params(1) in file: /usr/include/sharp//primitives.sharp:142:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator**[355] params(1) in file: /usr/include/sharp//primitives.sharp:143:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator**[356] params(1) in file: /usr/include/sharp//primitives.sharp:144:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 144 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator**[357] params(1) in file: /usr/include/sharp//primitives.sharp:145:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator**[358] params(1) in file: /usr/include/sharp//primitives.sharp:146:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator**[359] params(1) in file: /usr/include/sharp//primitives.sharp:147:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator**[360] params(1) in file: /usr/include/sharp//primitives.sharp:148:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator**[361] params(1) in file: /usr/include/sharp//primitives.sharp:149:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator**[362] params(1) in file: /usr/include/sharp//primitives.sharp:150:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator**[363] params(1) in file: /usr/include/sharp//primitives.sharp:151:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator**[364] params(1) in file: /usr/include/sharp//primitives.sharp:152:8: note:  
		    def operator**(num : double)   := (value**num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator**[365] params(1) in file: /usr/include/sharp//primitives.sharp:153:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           exp ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int64>.operator<<[366] params(1) in file: /usr/include/sharp//primitives.sharp:155:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<<[367] params(1) in file: /usr/include/sharp//primitives.sharp:156:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<<[368] params(1) in file: /usr/include/sharp//primitives.sharp:157:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<<[369] params(1) in file: /usr/include/sharp//primitives.sharp:158:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<<[370] params(1) in file: /usr/include/sharp//primitives.sharp:159:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<<[371] params(1) in file: /usr/include/sharp//primitives.sharp:160:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<<[372] params(1) in file: /usr/include/sharp//primitives.sharp:161:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<<[373] params(1) in file: /usr/include/sharp//primitives.sharp:162:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<<[374] params(1) in file: /usr/include/sharp//primitives.sharp:163:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<<[375] params(1) in file: /usr/include/sharp//primitives.sharp:164:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<<[376] params(1) in file: /usr/include/sharp//primitives.sharp:165:8: note:  
		    def operator<<(num : double)   := (value<<num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator<<[377] params(1) in file: /usr/include/sharp//primitives.sharp:166:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shl ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int64>.operator>>[378] params(1) in file: /usr/include/sharp//primitives.sharp:168:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 168 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>>[379] params(1) in file: /usr/include/sharp//primitives.sharp:169:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>>[380] params(1) in file: /usr/include/sharp//primitives.sharp:170:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>>[381] params(1) in file: /usr/include/sharp//primitives.sharp:171:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>>[382] params(1) in file: /usr/include/sharp//primitives.sharp:172:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>>[383] params(1) in file: /usr/include/sharp//primitives.sharp:173:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>>[384] params(1) in file: /usr/include/sharp//primitives.sharp:174:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>>[385] params(1) in file: /usr/include/sharp//primitives.sharp:175:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>>[386] params(1) in file: /usr/include/sharp//primitives.sharp:176:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>>[387] params(1) in file: /usr/include/sharp//primitives.sharp:177:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>>[388] params(1) in file: /usr/include/sharp//primitives.sharp:178:8: note:  
		    def operator>>(num : double)   := (value>>num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator>>[389] params(1) in file: /usr/include/sharp//primitives.sharp:179:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shr ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int64>.operator^[390] params(1) in file: /usr/include/sharp//primitives.sharp:181:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator^[391] params(1) in file: /usr/include/sharp//primitives.sharp:182:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator^[392] params(1) in file: /usr/include/sharp//primitives.sharp:183:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator^[393] params(1) in file: /usr/include/sharp//primitives.sharp:184:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator^[394] params(1) in file: /usr/include/sharp//primitives.sharp:185:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator^[395] params(1) in file: /usr/include/sharp//primitives.sharp:186:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator^[396] params(1) in file: /usr/include/sharp//primitives.sharp:187:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator^[397] params(1) in file: /usr/include/sharp//primitives.sharp:188:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator^[398] params(1) in file: /usr/include/sharp//primitives.sharp:189:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator^[399] params(1) in file: /usr/include/sharp//primitives.sharp:190:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator^[400] params(1) in file: /usr/include/sharp//primitives.sharp:191:8: note:  
		    def operator^(num : double)   := (value^num.value);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator^[401] params(1) in file: /usr/include/sharp//primitives.sharp:192:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 192 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           xor ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int64>.operator&[402] params(1) in file: /usr/include/sharp//primitives.sharp:194:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator&[403] params(1) in file: /usr/include/sharp//primitives.sharp:195:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator&[404] params(1) in file: /usr/include/sharp//primitives.sharp:196:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator&[405] params(1) in file: /usr/include/sharp//primitives.sharp:197:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator&[406] params(1) in file: /usr/include/sharp//primitives.sharp:198:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator&[407] params(1) in file: /usr/include/sharp//primitives.sharp:199:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator&[408] params(1) in file: /usr/include/sharp//primitives.sharp:200:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator&[409] params(1) in file: /usr/include/sharp//primitives.sharp:201:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator&[410] params(1) in file: /usr/include/sharp//primitives.sharp:202:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator&[411] params(1) in file: /usr/include/sharp//primitives.sharp:203:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator&[412] params(1) in file: /usr/include/sharp//primitives.sharp:204:8: note:  
		    def operator&(num : double)   := (value&num.value);
		       ^

0 [0x0]: line: 204 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator&[413] params(1) in file: /usr/include/sharp//primitives.sharp:205:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           uand ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int64>.operator|[414] params(1) in file: /usr/include/sharp//primitives.sharp:207:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 207 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator|[415] params(1) in file: /usr/include/sharp//primitives.sharp:208:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 208 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator|[416] params(1) in file: /usr/include/sharp//primitives.sharp:209:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 209 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator|[417] params(1) in file: /usr/include/sharp//primitives.sharp:210:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator|[418] params(1) in file: /usr/include/sharp//primitives.sharp:211:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 211 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator|[419] params(1) in file: /usr/include/sharp//primitives.sharp:212:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 212 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator|[420] params(1) in file: /usr/include/sharp//primitives.sharp:213:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 213 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator|[421] params(1) in file: /usr/include/sharp//primitives.sharp:214:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 214 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator|[422] params(1) in file: /usr/include/sharp//primitives.sharp:215:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 215 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator|[423] params(1) in file: /usr/include/sharp//primitives.sharp:216:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 216 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator|[424] params(1) in file: /usr/include/sharp//primitives.sharp:217:8: note:  
		    def operator|(num : double)   := (value|num.value);
		       ^

0 [0x0]: line: 217 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int64>.operator|[425] params(1) in file: /usr/include/sharp//primitives.sharp:218:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 218 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int64>.operator!=[426] params(1) in file: /usr/include/sharp//primitives.sharp:220:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 220 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           tne ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int64>.operator==[427] params(1) in file: /usr/include/sharp//primitives.sharp:221:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 221 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           test ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int64>.operator=[428] params(1) in file: /usr/include/sharp//primitives.sharp:222:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 222 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           mov64 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std#integer<_int64>.to_string[429] params(0) in file: /usr/include/sharp//primitives.sharp:224:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 225 new_class @0 // std#__srt_global   
1 [0x1]:           ret   
2 [0x2]:           dup    
3 [0x3]:           newstr @24 //    
4 [0x4]:           call @1959 // <std#string.string>   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           call @1995 // <std#string.operator+>   
13 [0xd]:           popobj2    
14 [0xe]:           returnobj   
15 [0xf]:           ret   


function: std#integer<_int64>.parse[430] params(1) in file: /usr/include/sharp//primitives.sharp:228:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 229 movi #0, ebx   
2 [0x2]:           mov64 ebx, ebx   
3 [0x3]:           smovr_2 ebx, fp+1   
4 [0x4]: line: 231 movi #0, ebx   
6 [0x6]:           movr cmt, ebx   
7 [0x7]:           jne 14   
8 [0x8]: line: 232 pushl 0   
9 [0x9]:           call @2252 // <std#__srt_global.strtod>   
10 [0xa]:           loadval ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   
13 [0xd]:           jmp @102   
14 [0xe]: line: 234 istorel 0, fp+2   
16 [0x10]: line: 235 istorel 0, fp+3   
18 [0x12]: line: 236 pushl 0   
19 [0x13]:           call @2000 // <std#string.size>   
20 [0x14]:           ipopl 4   
21 [0x15]: line: 238 pushl 0   
22 [0x16]:           istore 0   
24 [0x18]:           call @1981 // <std#string.at>   
25 [0x19]:           loadval ebx   
26 [0x1a]:           rstore ebx   
27 [0x1b]:           movi #45, ebx   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           test ecx, ebx   
31 [0x1f]:           jne 36   
32 [0x20]: line: 239 istorel 1, fp+3   
34 [0x22]: line: 240 istorel 1, fp+2   
36 [0x24]:           nop   
37 [0x25]: line: 243 ipushl #2   
38 [0x26]:           loadl ebx, fp+4   
39 [0x27]:           loadval ecx   
40 [0x28]:           lt ecx, ebx   
41 [0x29]:           movr ebx, cmt   
42 [0x2a]:           movr cmt, ebx   
43 [0x2b]:           jne 91   
44 [0x2c]: line: 244 pushl 0   
45 [0x2d]:           ipushl #2   
46 [0x2e]:           call @1981 // <std#string.at>   
47 [0x2f]:           call @3128 // <std#char.is_digit>   
48 [0x30]:           loadval ebx   
49 [0x31]:           not ebx, ebx   
50 [0x32]:           movr cmt, ebx   
51 [0x33]:           jne 66   
52 [0x34]: line: 245 new_class @0 // std#__srt_global   
53 [0x35]:           skip @0 // pc = 53   
54 [0x36]:           dup    
55 [0x37]:           new_class @0 // std#__srt_global   
56 [0x38]:           ret   
57 [0x39]:           dup    
58 [0x3a]:           newstr @148 // illegal char in string:    
59 [0x3b]:           call @1959 // <std#string.string>   
60 [0x3c]:           pushl 0   
61 [0x3d]:           ipushl #2   
62 [0x3e]:           call @1981 // <std#string.at>   
63 [0x3f]:           call @1992 // <std#string.operator+>   
64 [0x40]:           call @3549 // <std#illegal_argument_exception.illegal_argument_exception>   
65 [0x41]:           throw    
66 [0x42]:           nop   
67 [0x43]: line: 249 movi #10, ebx   
69 [0x45]:           loadl ecx, fp+1   
70 [0x46]:           mul ecx, ebx -> ebx   
71 [0x47]:           mov64 ebx, ebx   
72 [0x48]:           smovr_2 ebx, fp+1   
73 [0x49]: line: 250 pushl 0   
74 [0x4a]:           loadl ebx, fp+2   
75 [0x4b]:           movr egx, ebx   
76 [0x4c]:           inc ebx   
77 [0x4d]:           smovr_2 ebx, fp+2   
78 [0x4e]:           rstore egx   
79 [0x4f]:           call @1981 // <std#string.at>   
80 [0x50]:           loadval ebx   
81 [0x51]:           rstore ebx   
82 [0x52]:           movi #48, ebx   
84 [0x54]:           loadval ecx   
85 [0x55]:           sub ecx, ebx -> ebx   
86 [0x56]:           loadl ecx, fp+1   
87 [0x57]:           add ecx, ebx -> ebx   
88 [0x58]:           mov64 ebx, ebx   
89 [0x59]:           smovr_2 ebx, fp+1   
90 [0x5a]:           jmp @37   
91 [0x5b]: line: 252 loadl ebx, fp+3   
92 [0x5c]:           movr cmt, ebx   
93 [0x5d]:           jne 98   
94 [0x5e]: line: 253 loadl ebx, fp+1   
95 [0x5f]:           neg ebx, ebx   
96 [0x60]:           mov64 ebx, ebx   
97 [0x61]:           smovr_2 ebx, fp+1   
98 [0x62]:           nop   
99 [0x63]: line: 254 loadl ebx, fp+1   
100 [0x64]:           return_val ebx   
101 [0x65]:           ret   
102 [0x66]:           nop   


function: std#integer<_int64>.to_ulong[431] params(0) in file: /usr/include/sharp//primitives.sharp:258:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 258 new_class @0 // std#__srt_global   
1 [0x1]:           idiv adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int64>.to_long[432] params(0) in file: /usr/include/sharp//primitives.sharp:259:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 259 new_class @0 // std#__srt_global   
1 [0x1]:           imod adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int64>.to_uint[433] params(0) in file: /usr/include/sharp//primitives.sharp:260:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 260 new_class @0 // std#__srt_global   
1 [0x1]:           pop   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int64>.to_int[434] params(0) in file: /usr/include/sharp//primitives.sharp:261:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 261 new_class @0 // std#__srt_global   
1 [0x1]:           inc adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int64>.to_ushort[435] params(0) in file: /usr/include/sharp//primitives.sharp:262:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 262 new_class @0 // std#__srt_global   
1 [0x1]:           dec adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int64>.to_short[436] params(0) in file: /usr/include/sharp//primitives.sharp:263:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 263 new_class @0 // std#__srt_global   
1 [0x1]:           movr adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int64>.to_uchar[437] params(0) in file: /usr/include/sharp//primitives.sharp:264:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 264 new_class @0 // std#__srt_global   
1 [0x1]:           brh   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int64>.to_char[438] params(0) in file: /usr/include/sharp//primitives.sharp:265:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 265 new_class @0 // std#__srt_global   
1 [0x1]:           ife   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int64>.to_byte[439] params(0) in file: /usr/include/sharp//primitives.sharp:266:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 266 new_class @0 // std#__srt_global   
1 [0x1]:           ifne   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int64>.to_bool[440] params(0) in file: /usr/include/sharp//primitives.sharp:267:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 267 new_class @0 // std#__srt_global   
1 [0x1]:           lt adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int64>.to_double[441] params(0) in file: /usr/include/sharp//primitives.sharp:268:8: note:  
		    def to_double() := new double { value };
		       ^

0 [0x0]: line: 268 new_class @0 // std#__srt_global   
1 [0x1]:           gt adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int64>.get_value[442] params(0) in file: /usr/include/sharp//primitives.sharp:270:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 270 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std#integer<_int64>.integer[443] params(0) in file: /usr/include/sharp//primitives.sharp:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#integer<_uint32>.integer[444] params(1) in file: /usr/include/sharp//primitives.sharp:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 9 ipushl #1   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         movu32 ebx, ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         ret   


function: std#integer<_uint32>.hash[445] params(0) in file: /usr/include/sharp//primitives.sharp:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 13 new_class @0 // std#__srt_global   
1 [0x1]:          imod adx, #? (112)   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @2426 // <std#long.long>   
11 [0xb]:          popobj2    
12 [0xc]:          returnobj   
13 [0xd]:          ret   


overload function: std#integer<_uint32>.operator!=[446] params(1) in file: /usr/include/sharp//primitives.sharp:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator==[447] params(1) in file: /usr/include/sharp//primitives.sharp:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator!=[448] params(1) in file: /usr/include/sharp//primitives.sharp:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator==[449] params(1) in file: /usr/include/sharp//primitives.sharp:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator!=[450] params(1) in file: /usr/include/sharp//primitives.sharp:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator==[451] params(1) in file: /usr/include/sharp//primitives.sharp:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator!=[452] params(1) in file: /usr/include/sharp//primitives.sharp:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator==[453] params(1) in file: /usr/include/sharp//primitives.sharp:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator!=[454] params(1) in file: /usr/include/sharp//primitives.sharp:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator==[455] params(1) in file: /usr/include/sharp//primitives.sharp:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator!=[456] params(1) in file: /usr/include/sharp//primitives.sharp:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator==[457] params(1) in file: /usr/include/sharp//primitives.sharp:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator!=[458] params(1) in file: /usr/include/sharp//primitives.sharp:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator==[459] params(1) in file: /usr/include/sharp//primitives.sharp:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator!=[460] params(1) in file: /usr/include/sharp//primitives.sharp:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator==[461] params(1) in file: /usr/include/sharp//primitives.sharp:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator!=[462] params(1) in file: /usr/include/sharp//primitives.sharp:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator==[463] params(1) in file: /usr/include/sharp//primitives.sharp:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator!=[464] params(1) in file: /usr/include/sharp//primitives.sharp:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator==[465] params(1) in file: /usr/include/sharp//primitives.sharp:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator==[466] params(1) in file: /usr/include/sharp//primitives.sharp:36:8: note:  
		    def operator==(num : double) := (value==num.value);
		       ^

0 [0x0]: line: 36 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator+[467] params(1) in file: /usr/include/sharp//primitives.sharp:38:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator+[468] params(1) in file: /usr/include/sharp//primitives.sharp:39:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator+[469] params(1) in file: /usr/include/sharp//primitives.sharp:40:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator+[470] params(1) in file: /usr/include/sharp//primitives.sharp:41:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator+[471] params(1) in file: /usr/include/sharp//primitives.sharp:42:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator+[472] params(1) in file: /usr/include/sharp//primitives.sharp:43:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator+[473] params(1) in file: /usr/include/sharp//primitives.sharp:44:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator+[474] params(1) in file: /usr/include/sharp//primitives.sharp:45:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator+[475] params(1) in file: /usr/include/sharp//primitives.sharp:46:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator+[476] params(1) in file: /usr/include/sharp//primitives.sharp:47:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator+[477] params(1) in file: /usr/include/sharp//primitives.sharp:48:8: note:  
		    def operator+(num : double)   := (value+num.value);
		       ^

0 [0x0]: line: 48 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator+[478] params(1) in file: /usr/include/sharp//primitives.sharp:49:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          add ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint32>.operator-[479] params(1) in file: /usr/include/sharp//primitives.sharp:51:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator-[480] params(1) in file: /usr/include/sharp//primitives.sharp:52:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator-[481] params(1) in file: /usr/include/sharp//primitives.sharp:53:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator-[482] params(1) in file: /usr/include/sharp//primitives.sharp:54:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator-[483] params(1) in file: /usr/include/sharp//primitives.sharp:55:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator-[484] params(1) in file: /usr/include/sharp//primitives.sharp:56:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator-[485] params(1) in file: /usr/include/sharp//primitives.sharp:57:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator-[486] params(1) in file: /usr/include/sharp//primitives.sharp:58:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator-[487] params(1) in file: /usr/include/sharp//primitives.sharp:59:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator-[488] params(1) in file: /usr/include/sharp//primitives.sharp:60:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 60 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator-[489] params(1) in file: /usr/include/sharp//primitives.sharp:61:8: note:  
		    def operator-(num : double)   := (value-num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator-[490] params(1) in file: /usr/include/sharp//primitives.sharp:62:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          sub ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint32>.operator*[491] params(1) in file: /usr/include/sharp//primitives.sharp:64:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator*[492] params(1) in file: /usr/include/sharp//primitives.sharp:65:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator*[493] params(1) in file: /usr/include/sharp//primitives.sharp:66:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator*[494] params(1) in file: /usr/include/sharp//primitives.sharp:67:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator*[495] params(1) in file: /usr/include/sharp//primitives.sharp:68:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator*[496] params(1) in file: /usr/include/sharp//primitives.sharp:69:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator*[497] params(1) in file: /usr/include/sharp//primitives.sharp:70:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator*[498] params(1) in file: /usr/include/sharp//primitives.sharp:71:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator*[499] params(1) in file: /usr/include/sharp//primitives.sharp:72:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 72 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator*[500] params(1) in file: /usr/include/sharp//primitives.sharp:73:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator*[501] params(1) in file: /usr/include/sharp//primitives.sharp:74:8: note:  
		    def operator*(num : double)   := (value*num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator*[502] params(1) in file: /usr/include/sharp//primitives.sharp:75:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mul ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint32>.operator/[503] params(1) in file: /usr/include/sharp//primitives.sharp:77:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator/[504] params(1) in file: /usr/include/sharp//primitives.sharp:78:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator/[505] params(1) in file: /usr/include/sharp//primitives.sharp:79:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator/[506] params(1) in file: /usr/include/sharp//primitives.sharp:80:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator/[507] params(1) in file: /usr/include/sharp//primitives.sharp:81:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator/[508] params(1) in file: /usr/include/sharp//primitives.sharp:82:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator/[509] params(1) in file: /usr/include/sharp//primitives.sharp:83:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator/[510] params(1) in file: /usr/include/sharp//primitives.sharp:84:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 84 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator/[511] params(1) in file: /usr/include/sharp//primitives.sharp:85:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator/[512] params(1) in file: /usr/include/sharp//primitives.sharp:86:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator/[513] params(1) in file: /usr/include/sharp//primitives.sharp:87:8: note:  
		    def operator/(num : double)   := (value/num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator/[514] params(1) in file: /usr/include/sharp//primitives.sharp:88:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          div ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint32>.operator%[515] params(1) in file: /usr/include/sharp//primitives.sharp:90:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator%[516] params(1) in file: /usr/include/sharp//primitives.sharp:91:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator%[517] params(1) in file: /usr/include/sharp//primitives.sharp:92:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator%[518] params(1) in file: /usr/include/sharp//primitives.sharp:93:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator%[519] params(1) in file: /usr/include/sharp//primitives.sharp:94:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator%[520] params(1) in file: /usr/include/sharp//primitives.sharp:95:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator%[521] params(1) in file: /usr/include/sharp//primitives.sharp:96:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 96 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator%[522] params(1) in file: /usr/include/sharp//primitives.sharp:97:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator%[523] params(1) in file: /usr/include/sharp//primitives.sharp:98:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator%[524] params(1) in file: /usr/include/sharp//primitives.sharp:99:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint32>.operator%[525] params(1) in file: /usr/include/sharp//primitives.sharp:100:8: note:  
		    def operator%(num : double)   := (value%num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator%[526] params(1) in file: /usr/include/sharp//primitives.sharp:101:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           mod ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint32>.operator<[527] params(1) in file: /usr/include/sharp//primitives.sharp:103:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<[528] params(1) in file: /usr/include/sharp//primitives.sharp:104:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<[529] params(1) in file: /usr/include/sharp//primitives.sharp:105:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<[530] params(1) in file: /usr/include/sharp//primitives.sharp:106:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<[531] params(1) in file: /usr/include/sharp//primitives.sharp:107:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<[532] params(1) in file: /usr/include/sharp//primitives.sharp:108:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 108 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<[533] params(1) in file: /usr/include/sharp//primitives.sharp:109:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<[534] params(1) in file: /usr/include/sharp//primitives.sharp:110:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<[535] params(1) in file: /usr/include/sharp//primitives.sharp:111:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<[536] params(1) in file: /usr/include/sharp//primitives.sharp:112:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<[537] params(1) in file: /usr/include/sharp//primitives.sharp:113:8: note:  
		    def operator<(num : double)   := (value<num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<[538] params(1) in file: /usr/include/sharp//primitives.sharp:114:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           lt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint32>.operator>[539] params(1) in file: /usr/include/sharp//primitives.sharp:116:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>[540] params(1) in file: /usr/include/sharp//primitives.sharp:117:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>[541] params(1) in file: /usr/include/sharp//primitives.sharp:118:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>[542] params(1) in file: /usr/include/sharp//primitives.sharp:119:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>[543] params(1) in file: /usr/include/sharp//primitives.sharp:120:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 120 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>[544] params(1) in file: /usr/include/sharp//primitives.sharp:121:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>[545] params(1) in file: /usr/include/sharp//primitives.sharp:122:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>[546] params(1) in file: /usr/include/sharp//primitives.sharp:123:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>[547] params(1) in file: /usr/include/sharp//primitives.sharp:124:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>[548] params(1) in file: /usr/include/sharp//primitives.sharp:125:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>[549] params(1) in file: /usr/include/sharp//primitives.sharp:126:8: note:  
		    def operator>(num : double)   := (value>num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>[550] params(1) in file: /usr/include/sharp//primitives.sharp:127:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint32>.operator<=[551] params(1) in file: /usr/include/sharp//primitives.sharp:129:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<=[552] params(1) in file: /usr/include/sharp//primitives.sharp:130:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<=[553] params(1) in file: /usr/include/sharp//primitives.sharp:131:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<=[554] params(1) in file: /usr/include/sharp//primitives.sharp:132:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 132 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<=[555] params(1) in file: /usr/include/sharp//primitives.sharp:133:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<=[556] params(1) in file: /usr/include/sharp//primitives.sharp:134:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<=[557] params(1) in file: /usr/include/sharp//primitives.sharp:135:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<=[558] params(1) in file: /usr/include/sharp//primitives.sharp:136:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<=[559] params(1) in file: /usr/include/sharp//primitives.sharp:137:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<=[560] params(1) in file: /usr/include/sharp//primitives.sharp:138:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<=[561] params(1) in file: /usr/include/sharp//primitives.sharp:139:8: note:  
		    def operator<=(num : double)   := (value>=num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<=[562] params(1) in file: /usr/include/sharp//primitives.sharp:140:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint32>.operator**[563] params(1) in file: /usr/include/sharp//primitives.sharp:142:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator**[564] params(1) in file: /usr/include/sharp//primitives.sharp:143:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator**[565] params(1) in file: /usr/include/sharp//primitives.sharp:144:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 144 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator**[566] params(1) in file: /usr/include/sharp//primitives.sharp:145:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator**[567] params(1) in file: /usr/include/sharp//primitives.sharp:146:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator**[568] params(1) in file: /usr/include/sharp//primitives.sharp:147:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator**[569] params(1) in file: /usr/include/sharp//primitives.sharp:148:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator**[570] params(1) in file: /usr/include/sharp//primitives.sharp:149:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator**[571] params(1) in file: /usr/include/sharp//primitives.sharp:150:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator**[572] params(1) in file: /usr/include/sharp//primitives.sharp:151:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator**[573] params(1) in file: /usr/include/sharp//primitives.sharp:152:8: note:  
		    def operator**(num : double)   := (value**num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator**[574] params(1) in file: /usr/include/sharp//primitives.sharp:153:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           exp ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint32>.operator<<[575] params(1) in file: /usr/include/sharp//primitives.sharp:155:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<<[576] params(1) in file: /usr/include/sharp//primitives.sharp:156:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<<[577] params(1) in file: /usr/include/sharp//primitives.sharp:157:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<<[578] params(1) in file: /usr/include/sharp//primitives.sharp:158:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<<[579] params(1) in file: /usr/include/sharp//primitives.sharp:159:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<<[580] params(1) in file: /usr/include/sharp//primitives.sharp:160:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<<[581] params(1) in file: /usr/include/sharp//primitives.sharp:161:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<<[582] params(1) in file: /usr/include/sharp//primitives.sharp:162:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<<[583] params(1) in file: /usr/include/sharp//primitives.sharp:163:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<<[584] params(1) in file: /usr/include/sharp//primitives.sharp:164:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<<[585] params(1) in file: /usr/include/sharp//primitives.sharp:165:8: note:  
		    def operator<<(num : double)   := (value<<num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator<<[586] params(1) in file: /usr/include/sharp//primitives.sharp:166:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shl ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint32>.operator>>[587] params(1) in file: /usr/include/sharp//primitives.sharp:168:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 168 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>>[588] params(1) in file: /usr/include/sharp//primitives.sharp:169:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>>[589] params(1) in file: /usr/include/sharp//primitives.sharp:170:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>>[590] params(1) in file: /usr/include/sharp//primitives.sharp:171:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>>[591] params(1) in file: /usr/include/sharp//primitives.sharp:172:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>>[592] params(1) in file: /usr/include/sharp//primitives.sharp:173:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>>[593] params(1) in file: /usr/include/sharp//primitives.sharp:174:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>>[594] params(1) in file: /usr/include/sharp//primitives.sharp:175:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>>[595] params(1) in file: /usr/include/sharp//primitives.sharp:176:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>>[596] params(1) in file: /usr/include/sharp//primitives.sharp:177:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>>[597] params(1) in file: /usr/include/sharp//primitives.sharp:178:8: note:  
		    def operator>>(num : double)   := (value>>num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator>>[598] params(1) in file: /usr/include/sharp//primitives.sharp:179:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shr ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint32>.operator^[599] params(1) in file: /usr/include/sharp//primitives.sharp:181:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator^[600] params(1) in file: /usr/include/sharp//primitives.sharp:182:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator^[601] params(1) in file: /usr/include/sharp//primitives.sharp:183:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator^[602] params(1) in file: /usr/include/sharp//primitives.sharp:184:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator^[603] params(1) in file: /usr/include/sharp//primitives.sharp:185:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator^[604] params(1) in file: /usr/include/sharp//primitives.sharp:186:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator^[605] params(1) in file: /usr/include/sharp//primitives.sharp:187:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator^[606] params(1) in file: /usr/include/sharp//primitives.sharp:188:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator^[607] params(1) in file: /usr/include/sharp//primitives.sharp:189:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator^[608] params(1) in file: /usr/include/sharp//primitives.sharp:190:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator^[609] params(1) in file: /usr/include/sharp//primitives.sharp:191:8: note:  
		    def operator^(num : double)   := (value^num.value);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator^[610] params(1) in file: /usr/include/sharp//primitives.sharp:192:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 192 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           xor ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint32>.operator&[611] params(1) in file: /usr/include/sharp//primitives.sharp:194:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator&[612] params(1) in file: /usr/include/sharp//primitives.sharp:195:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator&[613] params(1) in file: /usr/include/sharp//primitives.sharp:196:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator&[614] params(1) in file: /usr/include/sharp//primitives.sharp:197:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator&[615] params(1) in file: /usr/include/sharp//primitives.sharp:198:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator&[616] params(1) in file: /usr/include/sharp//primitives.sharp:199:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator&[617] params(1) in file: /usr/include/sharp//primitives.sharp:200:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator&[618] params(1) in file: /usr/include/sharp//primitives.sharp:201:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator&[619] params(1) in file: /usr/include/sharp//primitives.sharp:202:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator&[620] params(1) in file: /usr/include/sharp//primitives.sharp:203:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator&[621] params(1) in file: /usr/include/sharp//primitives.sharp:204:8: note:  
		    def operator&(num : double)   := (value&num.value);
		       ^

0 [0x0]: line: 204 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator&[622] params(1) in file: /usr/include/sharp//primitives.sharp:205:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           uand ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint32>.operator|[623] params(1) in file: /usr/include/sharp//primitives.sharp:207:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 207 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator|[624] params(1) in file: /usr/include/sharp//primitives.sharp:208:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 208 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator|[625] params(1) in file: /usr/include/sharp//primitives.sharp:209:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 209 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator|[626] params(1) in file: /usr/include/sharp//primitives.sharp:210:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator|[627] params(1) in file: /usr/include/sharp//primitives.sharp:211:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 211 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator|[628] params(1) in file: /usr/include/sharp//primitives.sharp:212:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 212 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator|[629] params(1) in file: /usr/include/sharp//primitives.sharp:213:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 213 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator|[630] params(1) in file: /usr/include/sharp//primitives.sharp:214:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 214 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator|[631] params(1) in file: /usr/include/sharp//primitives.sharp:215:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 215 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator|[632] params(1) in file: /usr/include/sharp//primitives.sharp:216:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 216 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator|[633] params(1) in file: /usr/include/sharp//primitives.sharp:217:8: note:  
		    def operator|(num : double)   := (value|num.value);
		       ^

0 [0x0]: line: 217 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint32>.operator|[634] params(1) in file: /usr/include/sharp//primitives.sharp:218:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 218 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint32>.operator!=[635] params(1) in file: /usr/include/sharp//primitives.sharp:220:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 220 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           tne ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint32>.operator==[636] params(1) in file: /usr/include/sharp//primitives.sharp:221:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 221 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           test ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint32>.operator=[637] params(1) in file: /usr/include/sharp//primitives.sharp:222:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 222 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           movu32 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std#integer<_uint32>.to_string[638] params(0) in file: /usr/include/sharp//primitives.sharp:224:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 225 new_class @0 // std#__srt_global   
1 [0x1]:           ret   
2 [0x2]:           dup    
3 [0x3]:           newstr @24 //    
4 [0x4]:           call @1959 // <std#string.string>   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           call @1998 // <std#string.operator+>   
13 [0xd]:           popobj2    
14 [0xe]:           returnobj   
15 [0xf]:           ret   


function: std#integer<_uint32>.parse[639] params(1) in file: /usr/include/sharp//primitives.sharp:228:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 229 movi #0, ebx   
2 [0x2]:           movu32 ebx, ebx   
3 [0x3]:           smovr_2 ebx, fp+1   
4 [0x4]: line: 231 movi #0, ebx   
6 [0x6]:           movr cmt, ebx   
7 [0x7]:           jne 14   
8 [0x8]: line: 232 pushl 0   
9 [0x9]:           call @2252 // <std#__srt_global.strtod>   
10 [0xa]:           loadval ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   
13 [0xd]:           jmp @102   
14 [0xe]: line: 234 istorel 0, fp+2   
16 [0x10]: line: 235 istorel 0, fp+3   
18 [0x12]: line: 236 pushl 0   
19 [0x13]:           call @2000 // <std#string.size>   
20 [0x14]:           ipopl 4   
21 [0x15]: line: 238 pushl 0   
22 [0x16]:           istore 0   
24 [0x18]:           call @1981 // <std#string.at>   
25 [0x19]:           loadval ebx   
26 [0x1a]:           rstore ebx   
27 [0x1b]:           movi #45, ebx   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           test ecx, ebx   
31 [0x1f]:           jne 36   
32 [0x20]: line: 239 istorel 1, fp+3   
34 [0x22]: line: 240 istorel 1, fp+2   
36 [0x24]:           nop   
37 [0x25]: line: 243 ipushl #2   
38 [0x26]:           loadl ebx, fp+4   
39 [0x27]:           loadval ecx   
40 [0x28]:           lt ecx, ebx   
41 [0x29]:           movr ebx, cmt   
42 [0x2a]:           movr cmt, ebx   
43 [0x2b]:           jne 91   
44 [0x2c]: line: 244 pushl 0   
45 [0x2d]:           ipushl #2   
46 [0x2e]:           call @1981 // <std#string.at>   
47 [0x2f]:           call @3128 // <std#char.is_digit>   
48 [0x30]:           loadval ebx   
49 [0x31]:           not ebx, ebx   
50 [0x32]:           movr cmt, ebx   
51 [0x33]:           jne 66   
52 [0x34]: line: 245 new_class @0 // std#__srt_global   
53 [0x35]:           skip @0 // pc = 53   
54 [0x36]:           dup    
55 [0x37]:           new_class @0 // std#__srt_global   
56 [0x38]:           ret   
57 [0x39]:           dup    
58 [0x3a]:           newstr @148 // illegal char in string:    
59 [0x3b]:           call @1959 // <std#string.string>   
60 [0x3c]:           pushl 0   
61 [0x3d]:           ipushl #2   
62 [0x3e]:           call @1981 // <std#string.at>   
63 [0x3f]:           call @1992 // <std#string.operator+>   
64 [0x40]:           call @3549 // <std#illegal_argument_exception.illegal_argument_exception>   
65 [0x41]:           throw    
66 [0x42]:           nop   
67 [0x43]: line: 249 movi #10, ebx   
69 [0x45]:           loadl ecx, fp+1   
70 [0x46]:           mul ecx, ebx -> ebx   
71 [0x47]:           movu32 ebx, ebx   
72 [0x48]:           smovr_2 ebx, fp+1   
73 [0x49]: line: 250 pushl 0   
74 [0x4a]:           loadl ebx, fp+2   
75 [0x4b]:           movr egx, ebx   
76 [0x4c]:           inc ebx   
77 [0x4d]:           smovr_2 ebx, fp+2   
78 [0x4e]:           rstore egx   
79 [0x4f]:           call @1981 // <std#string.at>   
80 [0x50]:           loadval ebx   
81 [0x51]:           rstore ebx   
82 [0x52]:           movi #48, ebx   
84 [0x54]:           loadval ecx   
85 [0x55]:           sub ecx, ebx -> ebx   
86 [0x56]:           loadl ecx, fp+1   
87 [0x57]:           add ecx, ebx -> ebx   
88 [0x58]:           movu32 ebx, ebx   
89 [0x59]:           smovr_2 ebx, fp+1   
90 [0x5a]:           jmp @37   
91 [0x5b]: line: 252 loadl ebx, fp+3   
92 [0x5c]:           movr cmt, ebx   
93 [0x5d]:           jne 98   
94 [0x5e]: line: 253 loadl ebx, fp+1   
95 [0x5f]:           neg ebx, ebx   
96 [0x60]:           movu32 ebx, ebx   
97 [0x61]:           smovr_2 ebx, fp+1   
98 [0x62]:           nop   
99 [0x63]: line: 254 loadl ebx, fp+1   
100 [0x64]:           return_val ebx   
101 [0x65]:           ret   
102 [0x66]:           nop   


function: std#integer<_uint32>.to_ulong[640] params(0) in file: /usr/include/sharp//primitives.sharp:258:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 258 new_class @0 // std#__srt_global   
1 [0x1]:           idiv adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint32>.to_long[641] params(0) in file: /usr/include/sharp//primitives.sharp:259:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 259 new_class @0 // std#__srt_global   
1 [0x1]:           imod adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint32>.to_uint[642] params(0) in file: /usr/include/sharp//primitives.sharp:260:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 260 new_class @0 // std#__srt_global   
1 [0x1]:           pop   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint32>.to_int[643] params(0) in file: /usr/include/sharp//primitives.sharp:261:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 261 new_class @0 // std#__srt_global   
1 [0x1]:           inc adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint32>.to_ushort[644] params(0) in file: /usr/include/sharp//primitives.sharp:262:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 262 new_class @0 // std#__srt_global   
1 [0x1]:           dec adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint32>.to_short[645] params(0) in file: /usr/include/sharp//primitives.sharp:263:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 263 new_class @0 // std#__srt_global   
1 [0x1]:           movr adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint32>.to_uchar[646] params(0) in file: /usr/include/sharp//primitives.sharp:264:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 264 new_class @0 // std#__srt_global   
1 [0x1]:           brh   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint32>.to_char[647] params(0) in file: /usr/include/sharp//primitives.sharp:265:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 265 new_class @0 // std#__srt_global   
1 [0x1]:           ife   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint32>.to_byte[648] params(0) in file: /usr/include/sharp//primitives.sharp:266:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 266 new_class @0 // std#__srt_global   
1 [0x1]:           ifne   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint32>.to_bool[649] params(0) in file: /usr/include/sharp//primitives.sharp:267:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 267 new_class @0 // std#__srt_global   
1 [0x1]:           lt adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint32>.to_double[650] params(0) in file: /usr/include/sharp//primitives.sharp:268:8: note:  
		    def to_double() := new double { value };
		       ^

0 [0x0]: line: 268 new_class @0 // std#__srt_global   
1 [0x1]:           gt adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint32>.get_value[651] params(0) in file: /usr/include/sharp//primitives.sharp:270:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 270 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std#integer<_uint32>.integer[652] params(0) in file: /usr/include/sharp//primitives.sharp:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#integer<_int32>.integer[653] params(1) in file: /usr/include/sharp//primitives.sharp:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 9 ipushl #1   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         mov32 ebx, ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         ret   


function: std#integer<_int32>.hash[654] params(0) in file: /usr/include/sharp//primitives.sharp:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 13 new_class @0 // std#__srt_global   
1 [0x1]:          imod adx, #? (112)   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @2426 // <std#long.long>   
11 [0xb]:          popobj2    
12 [0xc]:          returnobj   
13 [0xd]:          ret   


overload function: std#integer<_int32>.operator!=[655] params(1) in file: /usr/include/sharp//primitives.sharp:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator==[656] params(1) in file: /usr/include/sharp//primitives.sharp:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator!=[657] params(1) in file: /usr/include/sharp//primitives.sharp:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator==[658] params(1) in file: /usr/include/sharp//primitives.sharp:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator!=[659] params(1) in file: /usr/include/sharp//primitives.sharp:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator==[660] params(1) in file: /usr/include/sharp//primitives.sharp:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator!=[661] params(1) in file: /usr/include/sharp//primitives.sharp:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator==[662] params(1) in file: /usr/include/sharp//primitives.sharp:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator!=[663] params(1) in file: /usr/include/sharp//primitives.sharp:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator==[664] params(1) in file: /usr/include/sharp//primitives.sharp:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator!=[665] params(1) in file: /usr/include/sharp//primitives.sharp:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator==[666] params(1) in file: /usr/include/sharp//primitives.sharp:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator!=[667] params(1) in file: /usr/include/sharp//primitives.sharp:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator==[668] params(1) in file: /usr/include/sharp//primitives.sharp:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator!=[669] params(1) in file: /usr/include/sharp//primitives.sharp:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator==[670] params(1) in file: /usr/include/sharp//primitives.sharp:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator!=[671] params(1) in file: /usr/include/sharp//primitives.sharp:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator==[672] params(1) in file: /usr/include/sharp//primitives.sharp:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator!=[673] params(1) in file: /usr/include/sharp//primitives.sharp:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator==[674] params(1) in file: /usr/include/sharp//primitives.sharp:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator==[675] params(1) in file: /usr/include/sharp//primitives.sharp:36:8: note:  
		    def operator==(num : double) := (value==num.value);
		       ^

0 [0x0]: line: 36 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator+[676] params(1) in file: /usr/include/sharp//primitives.sharp:38:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator+[677] params(1) in file: /usr/include/sharp//primitives.sharp:39:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator+[678] params(1) in file: /usr/include/sharp//primitives.sharp:40:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator+[679] params(1) in file: /usr/include/sharp//primitives.sharp:41:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator+[680] params(1) in file: /usr/include/sharp//primitives.sharp:42:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator+[681] params(1) in file: /usr/include/sharp//primitives.sharp:43:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator+[682] params(1) in file: /usr/include/sharp//primitives.sharp:44:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator+[683] params(1) in file: /usr/include/sharp//primitives.sharp:45:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator+[684] params(1) in file: /usr/include/sharp//primitives.sharp:46:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator+[685] params(1) in file: /usr/include/sharp//primitives.sharp:47:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator+[686] params(1) in file: /usr/include/sharp//primitives.sharp:48:8: note:  
		    def operator+(num : double)   := (value+num.value);
		       ^

0 [0x0]: line: 48 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator+[687] params(1) in file: /usr/include/sharp//primitives.sharp:49:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          add ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int32>.operator-[688] params(1) in file: /usr/include/sharp//primitives.sharp:51:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator-[689] params(1) in file: /usr/include/sharp//primitives.sharp:52:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator-[690] params(1) in file: /usr/include/sharp//primitives.sharp:53:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator-[691] params(1) in file: /usr/include/sharp//primitives.sharp:54:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator-[692] params(1) in file: /usr/include/sharp//primitives.sharp:55:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator-[693] params(1) in file: /usr/include/sharp//primitives.sharp:56:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator-[694] params(1) in file: /usr/include/sharp//primitives.sharp:57:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator-[695] params(1) in file: /usr/include/sharp//primitives.sharp:58:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator-[696] params(1) in file: /usr/include/sharp//primitives.sharp:59:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator-[697] params(1) in file: /usr/include/sharp//primitives.sharp:60:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 60 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator-[698] params(1) in file: /usr/include/sharp//primitives.sharp:61:8: note:  
		    def operator-(num : double)   := (value-num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator-[699] params(1) in file: /usr/include/sharp//primitives.sharp:62:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          sub ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int32>.operator*[700] params(1) in file: /usr/include/sharp//primitives.sharp:64:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator*[701] params(1) in file: /usr/include/sharp//primitives.sharp:65:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator*[702] params(1) in file: /usr/include/sharp//primitives.sharp:66:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator*[703] params(1) in file: /usr/include/sharp//primitives.sharp:67:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator*[704] params(1) in file: /usr/include/sharp//primitives.sharp:68:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator*[705] params(1) in file: /usr/include/sharp//primitives.sharp:69:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator*[706] params(1) in file: /usr/include/sharp//primitives.sharp:70:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator*[707] params(1) in file: /usr/include/sharp//primitives.sharp:71:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator*[708] params(1) in file: /usr/include/sharp//primitives.sharp:72:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 72 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator*[709] params(1) in file: /usr/include/sharp//primitives.sharp:73:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator*[710] params(1) in file: /usr/include/sharp//primitives.sharp:74:8: note:  
		    def operator*(num : double)   := (value*num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator*[711] params(1) in file: /usr/include/sharp//primitives.sharp:75:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mul ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int32>.operator/[712] params(1) in file: /usr/include/sharp//primitives.sharp:77:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator/[713] params(1) in file: /usr/include/sharp//primitives.sharp:78:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator/[714] params(1) in file: /usr/include/sharp//primitives.sharp:79:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator/[715] params(1) in file: /usr/include/sharp//primitives.sharp:80:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator/[716] params(1) in file: /usr/include/sharp//primitives.sharp:81:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator/[717] params(1) in file: /usr/include/sharp//primitives.sharp:82:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator/[718] params(1) in file: /usr/include/sharp//primitives.sharp:83:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator/[719] params(1) in file: /usr/include/sharp//primitives.sharp:84:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 84 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator/[720] params(1) in file: /usr/include/sharp//primitives.sharp:85:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator/[721] params(1) in file: /usr/include/sharp//primitives.sharp:86:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator/[722] params(1) in file: /usr/include/sharp//primitives.sharp:87:8: note:  
		    def operator/(num : double)   := (value/num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator/[723] params(1) in file: /usr/include/sharp//primitives.sharp:88:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          div ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int32>.operator%[724] params(1) in file: /usr/include/sharp//primitives.sharp:90:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator%[725] params(1) in file: /usr/include/sharp//primitives.sharp:91:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator%[726] params(1) in file: /usr/include/sharp//primitives.sharp:92:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator%[727] params(1) in file: /usr/include/sharp//primitives.sharp:93:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator%[728] params(1) in file: /usr/include/sharp//primitives.sharp:94:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator%[729] params(1) in file: /usr/include/sharp//primitives.sharp:95:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator%[730] params(1) in file: /usr/include/sharp//primitives.sharp:96:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 96 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator%[731] params(1) in file: /usr/include/sharp//primitives.sharp:97:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator%[732] params(1) in file: /usr/include/sharp//primitives.sharp:98:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator%[733] params(1) in file: /usr/include/sharp//primitives.sharp:99:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int32>.operator%[734] params(1) in file: /usr/include/sharp//primitives.sharp:100:8: note:  
		    def operator%(num : double)   := (value%num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator%[735] params(1) in file: /usr/include/sharp//primitives.sharp:101:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           mod ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int32>.operator<[736] params(1) in file: /usr/include/sharp//primitives.sharp:103:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<[737] params(1) in file: /usr/include/sharp//primitives.sharp:104:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<[738] params(1) in file: /usr/include/sharp//primitives.sharp:105:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<[739] params(1) in file: /usr/include/sharp//primitives.sharp:106:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<[740] params(1) in file: /usr/include/sharp//primitives.sharp:107:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<[741] params(1) in file: /usr/include/sharp//primitives.sharp:108:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 108 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<[742] params(1) in file: /usr/include/sharp//primitives.sharp:109:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<[743] params(1) in file: /usr/include/sharp//primitives.sharp:110:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<[744] params(1) in file: /usr/include/sharp//primitives.sharp:111:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<[745] params(1) in file: /usr/include/sharp//primitives.sharp:112:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<[746] params(1) in file: /usr/include/sharp//primitives.sharp:113:8: note:  
		    def operator<(num : double)   := (value<num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<[747] params(1) in file: /usr/include/sharp//primitives.sharp:114:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           lt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int32>.operator>[748] params(1) in file: /usr/include/sharp//primitives.sharp:116:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>[749] params(1) in file: /usr/include/sharp//primitives.sharp:117:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>[750] params(1) in file: /usr/include/sharp//primitives.sharp:118:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>[751] params(1) in file: /usr/include/sharp//primitives.sharp:119:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>[752] params(1) in file: /usr/include/sharp//primitives.sharp:120:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 120 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>[753] params(1) in file: /usr/include/sharp//primitives.sharp:121:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>[754] params(1) in file: /usr/include/sharp//primitives.sharp:122:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>[755] params(1) in file: /usr/include/sharp//primitives.sharp:123:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>[756] params(1) in file: /usr/include/sharp//primitives.sharp:124:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>[757] params(1) in file: /usr/include/sharp//primitives.sharp:125:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>[758] params(1) in file: /usr/include/sharp//primitives.sharp:126:8: note:  
		    def operator>(num : double)   := (value>num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>[759] params(1) in file: /usr/include/sharp//primitives.sharp:127:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int32>.operator<=[760] params(1) in file: /usr/include/sharp//primitives.sharp:129:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<=[761] params(1) in file: /usr/include/sharp//primitives.sharp:130:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<=[762] params(1) in file: /usr/include/sharp//primitives.sharp:131:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<=[763] params(1) in file: /usr/include/sharp//primitives.sharp:132:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 132 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<=[764] params(1) in file: /usr/include/sharp//primitives.sharp:133:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<=[765] params(1) in file: /usr/include/sharp//primitives.sharp:134:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<=[766] params(1) in file: /usr/include/sharp//primitives.sharp:135:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<=[767] params(1) in file: /usr/include/sharp//primitives.sharp:136:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<=[768] params(1) in file: /usr/include/sharp//primitives.sharp:137:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<=[769] params(1) in file: /usr/include/sharp//primitives.sharp:138:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<=[770] params(1) in file: /usr/include/sharp//primitives.sharp:139:8: note:  
		    def operator<=(num : double)   := (value>=num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<=[771] params(1) in file: /usr/include/sharp//primitives.sharp:140:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int32>.operator**[772] params(1) in file: /usr/include/sharp//primitives.sharp:142:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator**[773] params(1) in file: /usr/include/sharp//primitives.sharp:143:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator**[774] params(1) in file: /usr/include/sharp//primitives.sharp:144:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 144 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator**[775] params(1) in file: /usr/include/sharp//primitives.sharp:145:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator**[776] params(1) in file: /usr/include/sharp//primitives.sharp:146:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator**[777] params(1) in file: /usr/include/sharp//primitives.sharp:147:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator**[778] params(1) in file: /usr/include/sharp//primitives.sharp:148:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator**[779] params(1) in file: /usr/include/sharp//primitives.sharp:149:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator**[780] params(1) in file: /usr/include/sharp//primitives.sharp:150:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator**[781] params(1) in file: /usr/include/sharp//primitives.sharp:151:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator**[782] params(1) in file: /usr/include/sharp//primitives.sharp:152:8: note:  
		    def operator**(num : double)   := (value**num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator**[783] params(1) in file: /usr/include/sharp//primitives.sharp:153:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           exp ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int32>.operator<<[784] params(1) in file: /usr/include/sharp//primitives.sharp:155:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<<[785] params(1) in file: /usr/include/sharp//primitives.sharp:156:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<<[786] params(1) in file: /usr/include/sharp//primitives.sharp:157:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<<[787] params(1) in file: /usr/include/sharp//primitives.sharp:158:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<<[788] params(1) in file: /usr/include/sharp//primitives.sharp:159:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<<[789] params(1) in file: /usr/include/sharp//primitives.sharp:160:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<<[790] params(1) in file: /usr/include/sharp//primitives.sharp:161:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<<[791] params(1) in file: /usr/include/sharp//primitives.sharp:162:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<<[792] params(1) in file: /usr/include/sharp//primitives.sharp:163:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<<[793] params(1) in file: /usr/include/sharp//primitives.sharp:164:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<<[794] params(1) in file: /usr/include/sharp//primitives.sharp:165:8: note:  
		    def operator<<(num : double)   := (value<<num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator<<[795] params(1) in file: /usr/include/sharp//primitives.sharp:166:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shl ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int32>.operator>>[796] params(1) in file: /usr/include/sharp//primitives.sharp:168:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 168 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>>[797] params(1) in file: /usr/include/sharp//primitives.sharp:169:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>>[798] params(1) in file: /usr/include/sharp//primitives.sharp:170:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>>[799] params(1) in file: /usr/include/sharp//primitives.sharp:171:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>>[800] params(1) in file: /usr/include/sharp//primitives.sharp:172:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>>[801] params(1) in file: /usr/include/sharp//primitives.sharp:173:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>>[802] params(1) in file: /usr/include/sharp//primitives.sharp:174:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>>[803] params(1) in file: /usr/include/sharp//primitives.sharp:175:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>>[804] params(1) in file: /usr/include/sharp//primitives.sharp:176:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>>[805] params(1) in file: /usr/include/sharp//primitives.sharp:177:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>>[806] params(1) in file: /usr/include/sharp//primitives.sharp:178:8: note:  
		    def operator>>(num : double)   := (value>>num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator>>[807] params(1) in file: /usr/include/sharp//primitives.sharp:179:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shr ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int32>.operator^[808] params(1) in file: /usr/include/sharp//primitives.sharp:181:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator^[809] params(1) in file: /usr/include/sharp//primitives.sharp:182:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator^[810] params(1) in file: /usr/include/sharp//primitives.sharp:183:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator^[811] params(1) in file: /usr/include/sharp//primitives.sharp:184:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator^[812] params(1) in file: /usr/include/sharp//primitives.sharp:185:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator^[813] params(1) in file: /usr/include/sharp//primitives.sharp:186:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator^[814] params(1) in file: /usr/include/sharp//primitives.sharp:187:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator^[815] params(1) in file: /usr/include/sharp//primitives.sharp:188:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator^[816] params(1) in file: /usr/include/sharp//primitives.sharp:189:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator^[817] params(1) in file: /usr/include/sharp//primitives.sharp:190:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator^[818] params(1) in file: /usr/include/sharp//primitives.sharp:191:8: note:  
		    def operator^(num : double)   := (value^num.value);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator^[819] params(1) in file: /usr/include/sharp//primitives.sharp:192:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 192 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           xor ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int32>.operator&[820] params(1) in file: /usr/include/sharp//primitives.sharp:194:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator&[821] params(1) in file: /usr/include/sharp//primitives.sharp:195:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator&[822] params(1) in file: /usr/include/sharp//primitives.sharp:196:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator&[823] params(1) in file: /usr/include/sharp//primitives.sharp:197:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator&[824] params(1) in file: /usr/include/sharp//primitives.sharp:198:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator&[825] params(1) in file: /usr/include/sharp//primitives.sharp:199:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator&[826] params(1) in file: /usr/include/sharp//primitives.sharp:200:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator&[827] params(1) in file: /usr/include/sharp//primitives.sharp:201:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator&[828] params(1) in file: /usr/include/sharp//primitives.sharp:202:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator&[829] params(1) in file: /usr/include/sharp//primitives.sharp:203:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator&[830] params(1) in file: /usr/include/sharp//primitives.sharp:204:8: note:  
		    def operator&(num : double)   := (value&num.value);
		       ^

0 [0x0]: line: 204 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator&[831] params(1) in file: /usr/include/sharp//primitives.sharp:205:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           uand ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int32>.operator|[832] params(1) in file: /usr/include/sharp//primitives.sharp:207:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 207 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator|[833] params(1) in file: /usr/include/sharp//primitives.sharp:208:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 208 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator|[834] params(1) in file: /usr/include/sharp//primitives.sharp:209:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 209 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator|[835] params(1) in file: /usr/include/sharp//primitives.sharp:210:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator|[836] params(1) in file: /usr/include/sharp//primitives.sharp:211:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 211 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator|[837] params(1) in file: /usr/include/sharp//primitives.sharp:212:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 212 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator|[838] params(1) in file: /usr/include/sharp//primitives.sharp:213:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 213 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator|[839] params(1) in file: /usr/include/sharp//primitives.sharp:214:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 214 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator|[840] params(1) in file: /usr/include/sharp//primitives.sharp:215:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 215 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator|[841] params(1) in file: /usr/include/sharp//primitives.sharp:216:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 216 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator|[842] params(1) in file: /usr/include/sharp//primitives.sharp:217:8: note:  
		    def operator|(num : double)   := (value|num.value);
		       ^

0 [0x0]: line: 217 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int32>.operator|[843] params(1) in file: /usr/include/sharp//primitives.sharp:218:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 218 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int32>.operator!=[844] params(1) in file: /usr/include/sharp//primitives.sharp:220:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 220 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           tne ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int32>.operator==[845] params(1) in file: /usr/include/sharp//primitives.sharp:221:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 221 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           test ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int32>.operator=[846] params(1) in file: /usr/include/sharp//primitives.sharp:222:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 222 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           mov32 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std#integer<_int32>.to_string[847] params(0) in file: /usr/include/sharp//primitives.sharp:224:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 225 new_class @0 // std#__srt_global   
1 [0x1]:           ret   
2 [0x2]:           dup    
3 [0x3]:           newstr @24 //    
4 [0x4]:           call @1959 // <std#string.string>   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           call @1994 // <std#string.operator+>   
13 [0xd]:           popobj2    
14 [0xe]:           returnobj   
15 [0xf]:           ret   


function: std#integer<_int32>.parse[848] params(1) in file: /usr/include/sharp//primitives.sharp:228:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 229 movi #0, ebx   
2 [0x2]:           mov32 ebx, ebx   
3 [0x3]:           smovr_2 ebx, fp+1   
4 [0x4]: line: 231 movi #0, ebx   
6 [0x6]:           movr cmt, ebx   
7 [0x7]:           jne 14   
8 [0x8]: line: 232 pushl 0   
9 [0x9]:           call @2252 // <std#__srt_global.strtod>   
10 [0xa]:           loadval ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   
13 [0xd]:           jmp @102   
14 [0xe]: line: 234 istorel 0, fp+2   
16 [0x10]: line: 235 istorel 0, fp+3   
18 [0x12]: line: 236 pushl 0   
19 [0x13]:           call @2000 // <std#string.size>   
20 [0x14]:           ipopl 4   
21 [0x15]: line: 238 pushl 0   
22 [0x16]:           istore 0   
24 [0x18]:           call @1981 // <std#string.at>   
25 [0x19]:           loadval ebx   
26 [0x1a]:           rstore ebx   
27 [0x1b]:           movi #45, ebx   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           test ecx, ebx   
31 [0x1f]:           jne 36   
32 [0x20]: line: 239 istorel 1, fp+3   
34 [0x22]: line: 240 istorel 1, fp+2   
36 [0x24]:           nop   
37 [0x25]: line: 243 ipushl #2   
38 [0x26]:           loadl ebx, fp+4   
39 [0x27]:           loadval ecx   
40 [0x28]:           lt ecx, ebx   
41 [0x29]:           movr ebx, cmt   
42 [0x2a]:           movr cmt, ebx   
43 [0x2b]:           jne 91   
44 [0x2c]: line: 244 pushl 0   
45 [0x2d]:           ipushl #2   
46 [0x2e]:           call @1981 // <std#string.at>   
47 [0x2f]:           call @3128 // <std#char.is_digit>   
48 [0x30]:           loadval ebx   
49 [0x31]:           not ebx, ebx   
50 [0x32]:           movr cmt, ebx   
51 [0x33]:           jne 66   
52 [0x34]: line: 245 new_class @0 // std#__srt_global   
53 [0x35]:           skip @0 // pc = 53   
54 [0x36]:           dup    
55 [0x37]:           new_class @0 // std#__srt_global   
56 [0x38]:           ret   
57 [0x39]:           dup    
58 [0x3a]:           newstr @148 // illegal char in string:    
59 [0x3b]:           call @1959 // <std#string.string>   
60 [0x3c]:           pushl 0   
61 [0x3d]:           ipushl #2   
62 [0x3e]:           call @1981 // <std#string.at>   
63 [0x3f]:           call @1992 // <std#string.operator+>   
64 [0x40]:           call @3549 // <std#illegal_argument_exception.illegal_argument_exception>   
65 [0x41]:           throw    
66 [0x42]:           nop   
67 [0x43]: line: 249 movi #10, ebx   
69 [0x45]:           loadl ecx, fp+1   
70 [0x46]:           mul ecx, ebx -> ebx   
71 [0x47]:           mov32 ebx, ebx   
72 [0x48]:           smovr_2 ebx, fp+1   
73 [0x49]: line: 250 pushl 0   
74 [0x4a]:           loadl ebx, fp+2   
75 [0x4b]:           movr egx, ebx   
76 [0x4c]:           inc ebx   
77 [0x4d]:           smovr_2 ebx, fp+2   
78 [0x4e]:           rstore egx   
79 [0x4f]:           call @1981 // <std#string.at>   
80 [0x50]:           loadval ebx   
81 [0x51]:           rstore ebx   
82 [0x52]:           movi #48, ebx   
84 [0x54]:           loadval ecx   
85 [0x55]:           sub ecx, ebx -> ebx   
86 [0x56]:           loadl ecx, fp+1   
87 [0x57]:           add ecx, ebx -> ebx   
88 [0x58]:           mov32 ebx, ebx   
89 [0x59]:           smovr_2 ebx, fp+1   
90 [0x5a]:           jmp @37   
91 [0x5b]: line: 252 loadl ebx, fp+3   
92 [0x5c]:           movr cmt, ebx   
93 [0x5d]:           jne 98   
94 [0x5e]: line: 253 loadl ebx, fp+1   
95 [0x5f]:           neg ebx, ebx   
96 [0x60]:           mov32 ebx, ebx   
97 [0x61]:           smovr_2 ebx, fp+1   
98 [0x62]:           nop   
99 [0x63]: line: 254 loadl ebx, fp+1   
100 [0x64]:           return_val ebx   
101 [0x65]:           ret   
102 [0x66]:           nop   


function: std#integer<_int32>.to_ulong[849] params(0) in file: /usr/include/sharp//primitives.sharp:258:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 258 new_class @0 // std#__srt_global   
1 [0x1]:           idiv adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int32>.to_long[850] params(0) in file: /usr/include/sharp//primitives.sharp:259:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 259 new_class @0 // std#__srt_global   
1 [0x1]:           imod adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int32>.to_uint[851] params(0) in file: /usr/include/sharp//primitives.sharp:260:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 260 new_class @0 // std#__srt_global   
1 [0x1]:           pop   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int32>.to_int[852] params(0) in file: /usr/include/sharp//primitives.sharp:261:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 261 new_class @0 // std#__srt_global   
1 [0x1]:           inc adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int32>.to_ushort[853] params(0) in file: /usr/include/sharp//primitives.sharp:262:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 262 new_class @0 // std#__srt_global   
1 [0x1]:           dec adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int32>.to_short[854] params(0) in file: /usr/include/sharp//primitives.sharp:263:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 263 new_class @0 // std#__srt_global   
1 [0x1]:           movr adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int32>.to_uchar[855] params(0) in file: /usr/include/sharp//primitives.sharp:264:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 264 new_class @0 // std#__srt_global   
1 [0x1]:           brh   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int32>.to_char[856] params(0) in file: /usr/include/sharp//primitives.sharp:265:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 265 new_class @0 // std#__srt_global   
1 [0x1]:           ife   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int32>.to_byte[857] params(0) in file: /usr/include/sharp//primitives.sharp:266:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 266 new_class @0 // std#__srt_global   
1 [0x1]:           ifne   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int32>.to_bool[858] params(0) in file: /usr/include/sharp//primitives.sharp:267:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 267 new_class @0 // std#__srt_global   
1 [0x1]:           lt adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int32>.to_double[859] params(0) in file: /usr/include/sharp//primitives.sharp:268:8: note:  
		    def to_double() := new double { value };
		       ^

0 [0x0]: line: 268 new_class @0 // std#__srt_global   
1 [0x1]:           gt adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int32>.get_value[860] params(0) in file: /usr/include/sharp//primitives.sharp:270:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 270 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std#integer<_int32>.integer[861] params(0) in file: /usr/include/sharp//primitives.sharp:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#integer<_uint16>.integer[862] params(1) in file: /usr/include/sharp//primitives.sharp:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 9 ipushl #1   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         movu16 ebx, ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         ret   


function: std#integer<_uint16>.hash[863] params(0) in file: /usr/include/sharp//primitives.sharp:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 13 new_class @0 // std#__srt_global   
1 [0x1]:          imod adx, #? (112)   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @2426 // <std#long.long>   
11 [0xb]:          popobj2    
12 [0xc]:          returnobj   
13 [0xd]:          ret   


overload function: std#integer<_uint16>.operator!=[864] params(1) in file: /usr/include/sharp//primitives.sharp:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator==[865] params(1) in file: /usr/include/sharp//primitives.sharp:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator!=[866] params(1) in file: /usr/include/sharp//primitives.sharp:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator==[867] params(1) in file: /usr/include/sharp//primitives.sharp:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator!=[868] params(1) in file: /usr/include/sharp//primitives.sharp:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator==[869] params(1) in file: /usr/include/sharp//primitives.sharp:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator!=[870] params(1) in file: /usr/include/sharp//primitives.sharp:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator==[871] params(1) in file: /usr/include/sharp//primitives.sharp:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator!=[872] params(1) in file: /usr/include/sharp//primitives.sharp:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator==[873] params(1) in file: /usr/include/sharp//primitives.sharp:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator!=[874] params(1) in file: /usr/include/sharp//primitives.sharp:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator==[875] params(1) in file: /usr/include/sharp//primitives.sharp:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator!=[876] params(1) in file: /usr/include/sharp//primitives.sharp:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator==[877] params(1) in file: /usr/include/sharp//primitives.sharp:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator!=[878] params(1) in file: /usr/include/sharp//primitives.sharp:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator==[879] params(1) in file: /usr/include/sharp//primitives.sharp:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator!=[880] params(1) in file: /usr/include/sharp//primitives.sharp:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator==[881] params(1) in file: /usr/include/sharp//primitives.sharp:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator!=[882] params(1) in file: /usr/include/sharp//primitives.sharp:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator==[883] params(1) in file: /usr/include/sharp//primitives.sharp:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator==[884] params(1) in file: /usr/include/sharp//primitives.sharp:36:8: note:  
		    def operator==(num : double) := (value==num.value);
		       ^

0 [0x0]: line: 36 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator+[885] params(1) in file: /usr/include/sharp//primitives.sharp:38:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator+[886] params(1) in file: /usr/include/sharp//primitives.sharp:39:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator+[887] params(1) in file: /usr/include/sharp//primitives.sharp:40:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator+[888] params(1) in file: /usr/include/sharp//primitives.sharp:41:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator+[889] params(1) in file: /usr/include/sharp//primitives.sharp:42:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator+[890] params(1) in file: /usr/include/sharp//primitives.sharp:43:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator+[891] params(1) in file: /usr/include/sharp//primitives.sharp:44:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator+[892] params(1) in file: /usr/include/sharp//primitives.sharp:45:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator+[893] params(1) in file: /usr/include/sharp//primitives.sharp:46:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator+[894] params(1) in file: /usr/include/sharp//primitives.sharp:47:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator+[895] params(1) in file: /usr/include/sharp//primitives.sharp:48:8: note:  
		    def operator+(num : double)   := (value+num.value);
		       ^

0 [0x0]: line: 48 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator+[896] params(1) in file: /usr/include/sharp//primitives.sharp:49:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          add ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint16>.operator-[897] params(1) in file: /usr/include/sharp//primitives.sharp:51:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator-[898] params(1) in file: /usr/include/sharp//primitives.sharp:52:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator-[899] params(1) in file: /usr/include/sharp//primitives.sharp:53:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator-[900] params(1) in file: /usr/include/sharp//primitives.sharp:54:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator-[901] params(1) in file: /usr/include/sharp//primitives.sharp:55:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator-[902] params(1) in file: /usr/include/sharp//primitives.sharp:56:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator-[903] params(1) in file: /usr/include/sharp//primitives.sharp:57:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator-[904] params(1) in file: /usr/include/sharp//primitives.sharp:58:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator-[905] params(1) in file: /usr/include/sharp//primitives.sharp:59:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator-[906] params(1) in file: /usr/include/sharp//primitives.sharp:60:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 60 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator-[907] params(1) in file: /usr/include/sharp//primitives.sharp:61:8: note:  
		    def operator-(num : double)   := (value-num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator-[908] params(1) in file: /usr/include/sharp//primitives.sharp:62:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          sub ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint16>.operator*[909] params(1) in file: /usr/include/sharp//primitives.sharp:64:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator*[910] params(1) in file: /usr/include/sharp//primitives.sharp:65:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator*[911] params(1) in file: /usr/include/sharp//primitives.sharp:66:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator*[912] params(1) in file: /usr/include/sharp//primitives.sharp:67:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator*[913] params(1) in file: /usr/include/sharp//primitives.sharp:68:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator*[914] params(1) in file: /usr/include/sharp//primitives.sharp:69:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator*[915] params(1) in file: /usr/include/sharp//primitives.sharp:70:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator*[916] params(1) in file: /usr/include/sharp//primitives.sharp:71:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator*[917] params(1) in file: /usr/include/sharp//primitives.sharp:72:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 72 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator*[918] params(1) in file: /usr/include/sharp//primitives.sharp:73:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator*[919] params(1) in file: /usr/include/sharp//primitives.sharp:74:8: note:  
		    def operator*(num : double)   := (value*num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator*[920] params(1) in file: /usr/include/sharp//primitives.sharp:75:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mul ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint16>.operator/[921] params(1) in file: /usr/include/sharp//primitives.sharp:77:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator/[922] params(1) in file: /usr/include/sharp//primitives.sharp:78:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator/[923] params(1) in file: /usr/include/sharp//primitives.sharp:79:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator/[924] params(1) in file: /usr/include/sharp//primitives.sharp:80:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator/[925] params(1) in file: /usr/include/sharp//primitives.sharp:81:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator/[926] params(1) in file: /usr/include/sharp//primitives.sharp:82:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator/[927] params(1) in file: /usr/include/sharp//primitives.sharp:83:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator/[928] params(1) in file: /usr/include/sharp//primitives.sharp:84:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 84 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator/[929] params(1) in file: /usr/include/sharp//primitives.sharp:85:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator/[930] params(1) in file: /usr/include/sharp//primitives.sharp:86:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator/[931] params(1) in file: /usr/include/sharp//primitives.sharp:87:8: note:  
		    def operator/(num : double)   := (value/num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator/[932] params(1) in file: /usr/include/sharp//primitives.sharp:88:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          div ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint16>.operator%[933] params(1) in file: /usr/include/sharp//primitives.sharp:90:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator%[934] params(1) in file: /usr/include/sharp//primitives.sharp:91:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator%[935] params(1) in file: /usr/include/sharp//primitives.sharp:92:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator%[936] params(1) in file: /usr/include/sharp//primitives.sharp:93:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator%[937] params(1) in file: /usr/include/sharp//primitives.sharp:94:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator%[938] params(1) in file: /usr/include/sharp//primitives.sharp:95:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator%[939] params(1) in file: /usr/include/sharp//primitives.sharp:96:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 96 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator%[940] params(1) in file: /usr/include/sharp//primitives.sharp:97:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator%[941] params(1) in file: /usr/include/sharp//primitives.sharp:98:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator%[942] params(1) in file: /usr/include/sharp//primitives.sharp:99:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint16>.operator%[943] params(1) in file: /usr/include/sharp//primitives.sharp:100:8: note:  
		    def operator%(num : double)   := (value%num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator%[944] params(1) in file: /usr/include/sharp//primitives.sharp:101:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           mod ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint16>.operator<[945] params(1) in file: /usr/include/sharp//primitives.sharp:103:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<[946] params(1) in file: /usr/include/sharp//primitives.sharp:104:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<[947] params(1) in file: /usr/include/sharp//primitives.sharp:105:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<[948] params(1) in file: /usr/include/sharp//primitives.sharp:106:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<[949] params(1) in file: /usr/include/sharp//primitives.sharp:107:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<[950] params(1) in file: /usr/include/sharp//primitives.sharp:108:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 108 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<[951] params(1) in file: /usr/include/sharp//primitives.sharp:109:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<[952] params(1) in file: /usr/include/sharp//primitives.sharp:110:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<[953] params(1) in file: /usr/include/sharp//primitives.sharp:111:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<[954] params(1) in file: /usr/include/sharp//primitives.sharp:112:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<[955] params(1) in file: /usr/include/sharp//primitives.sharp:113:8: note:  
		    def operator<(num : double)   := (value<num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<[956] params(1) in file: /usr/include/sharp//primitives.sharp:114:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           lt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint16>.operator>[957] params(1) in file: /usr/include/sharp//primitives.sharp:116:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>[958] params(1) in file: /usr/include/sharp//primitives.sharp:117:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>[959] params(1) in file: /usr/include/sharp//primitives.sharp:118:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>[960] params(1) in file: /usr/include/sharp//primitives.sharp:119:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>[961] params(1) in file: /usr/include/sharp//primitives.sharp:120:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 120 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>[962] params(1) in file: /usr/include/sharp//primitives.sharp:121:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>[963] params(1) in file: /usr/include/sharp//primitives.sharp:122:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>[964] params(1) in file: /usr/include/sharp//primitives.sharp:123:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>[965] params(1) in file: /usr/include/sharp//primitives.sharp:124:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>[966] params(1) in file: /usr/include/sharp//primitives.sharp:125:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>[967] params(1) in file: /usr/include/sharp//primitives.sharp:126:8: note:  
		    def operator>(num : double)   := (value>num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>[968] params(1) in file: /usr/include/sharp//primitives.sharp:127:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint16>.operator<=[969] params(1) in file: /usr/include/sharp//primitives.sharp:129:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<=[970] params(1) in file: /usr/include/sharp//primitives.sharp:130:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<=[971] params(1) in file: /usr/include/sharp//primitives.sharp:131:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<=[972] params(1) in file: /usr/include/sharp//primitives.sharp:132:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 132 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<=[973] params(1) in file: /usr/include/sharp//primitives.sharp:133:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<=[974] params(1) in file: /usr/include/sharp//primitives.sharp:134:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<=[975] params(1) in file: /usr/include/sharp//primitives.sharp:135:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<=[976] params(1) in file: /usr/include/sharp//primitives.sharp:136:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<=[977] params(1) in file: /usr/include/sharp//primitives.sharp:137:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<=[978] params(1) in file: /usr/include/sharp//primitives.sharp:138:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<=[979] params(1) in file: /usr/include/sharp//primitives.sharp:139:8: note:  
		    def operator<=(num : double)   := (value>=num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<=[980] params(1) in file: /usr/include/sharp//primitives.sharp:140:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint16>.operator**[981] params(1) in file: /usr/include/sharp//primitives.sharp:142:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator**[982] params(1) in file: /usr/include/sharp//primitives.sharp:143:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator**[983] params(1) in file: /usr/include/sharp//primitives.sharp:144:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 144 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator**[984] params(1) in file: /usr/include/sharp//primitives.sharp:145:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator**[985] params(1) in file: /usr/include/sharp//primitives.sharp:146:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator**[986] params(1) in file: /usr/include/sharp//primitives.sharp:147:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator**[987] params(1) in file: /usr/include/sharp//primitives.sharp:148:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator**[988] params(1) in file: /usr/include/sharp//primitives.sharp:149:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator**[989] params(1) in file: /usr/include/sharp//primitives.sharp:150:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator**[990] params(1) in file: /usr/include/sharp//primitives.sharp:151:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator**[991] params(1) in file: /usr/include/sharp//primitives.sharp:152:8: note:  
		    def operator**(num : double)   := (value**num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator**[992] params(1) in file: /usr/include/sharp//primitives.sharp:153:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           exp ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint16>.operator<<[993] params(1) in file: /usr/include/sharp//primitives.sharp:155:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<<[994] params(1) in file: /usr/include/sharp//primitives.sharp:156:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<<[995] params(1) in file: /usr/include/sharp//primitives.sharp:157:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<<[996] params(1) in file: /usr/include/sharp//primitives.sharp:158:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<<[997] params(1) in file: /usr/include/sharp//primitives.sharp:159:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<<[998] params(1) in file: /usr/include/sharp//primitives.sharp:160:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<<[999] params(1) in file: /usr/include/sharp//primitives.sharp:161:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<<[1000] params(1) in file: /usr/include/sharp//primitives.sharp:162:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<<[1001] params(1) in file: /usr/include/sharp//primitives.sharp:163:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<<[1002] params(1) in file: /usr/include/sharp//primitives.sharp:164:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<<[1003] params(1) in file: /usr/include/sharp//primitives.sharp:165:8: note:  
		    def operator<<(num : double)   := (value<<num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator<<[1004] params(1) in file: /usr/include/sharp//primitives.sharp:166:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shl ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint16>.operator>>[1005] params(1) in file: /usr/include/sharp//primitives.sharp:168:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 168 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>>[1006] params(1) in file: /usr/include/sharp//primitives.sharp:169:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>>[1007] params(1) in file: /usr/include/sharp//primitives.sharp:170:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>>[1008] params(1) in file: /usr/include/sharp//primitives.sharp:171:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>>[1009] params(1) in file: /usr/include/sharp//primitives.sharp:172:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>>[1010] params(1) in file: /usr/include/sharp//primitives.sharp:173:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>>[1011] params(1) in file: /usr/include/sharp//primitives.sharp:174:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>>[1012] params(1) in file: /usr/include/sharp//primitives.sharp:175:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>>[1013] params(1) in file: /usr/include/sharp//primitives.sharp:176:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>>[1014] params(1) in file: /usr/include/sharp//primitives.sharp:177:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>>[1015] params(1) in file: /usr/include/sharp//primitives.sharp:178:8: note:  
		    def operator>>(num : double)   := (value>>num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator>>[1016] params(1) in file: /usr/include/sharp//primitives.sharp:179:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shr ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint16>.operator^[1017] params(1) in file: /usr/include/sharp//primitives.sharp:181:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator^[1018] params(1) in file: /usr/include/sharp//primitives.sharp:182:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator^[1019] params(1) in file: /usr/include/sharp//primitives.sharp:183:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator^[1020] params(1) in file: /usr/include/sharp//primitives.sharp:184:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator^[1021] params(1) in file: /usr/include/sharp//primitives.sharp:185:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator^[1022] params(1) in file: /usr/include/sharp//primitives.sharp:186:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator^[1023] params(1) in file: /usr/include/sharp//primitives.sharp:187:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator^[1024] params(1) in file: /usr/include/sharp//primitives.sharp:188:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator^[1025] params(1) in file: /usr/include/sharp//primitives.sharp:189:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator^[1026] params(1) in file: /usr/include/sharp//primitives.sharp:190:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator^[1027] params(1) in file: /usr/include/sharp//primitives.sharp:191:8: note:  
		    def operator^(num : double)   := (value^num.value);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator^[1028] params(1) in file: /usr/include/sharp//primitives.sharp:192:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 192 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           xor ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint16>.operator&[1029] params(1) in file: /usr/include/sharp//primitives.sharp:194:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator&[1030] params(1) in file: /usr/include/sharp//primitives.sharp:195:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator&[1031] params(1) in file: /usr/include/sharp//primitives.sharp:196:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator&[1032] params(1) in file: /usr/include/sharp//primitives.sharp:197:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator&[1033] params(1) in file: /usr/include/sharp//primitives.sharp:198:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator&[1034] params(1) in file: /usr/include/sharp//primitives.sharp:199:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator&[1035] params(1) in file: /usr/include/sharp//primitives.sharp:200:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator&[1036] params(1) in file: /usr/include/sharp//primitives.sharp:201:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator&[1037] params(1) in file: /usr/include/sharp//primitives.sharp:202:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator&[1038] params(1) in file: /usr/include/sharp//primitives.sharp:203:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator&[1039] params(1) in file: /usr/include/sharp//primitives.sharp:204:8: note:  
		    def operator&(num : double)   := (value&num.value);
		       ^

0 [0x0]: line: 204 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator&[1040] params(1) in file: /usr/include/sharp//primitives.sharp:205:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           uand ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint16>.operator|[1041] params(1) in file: /usr/include/sharp//primitives.sharp:207:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 207 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator|[1042] params(1) in file: /usr/include/sharp//primitives.sharp:208:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 208 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator|[1043] params(1) in file: /usr/include/sharp//primitives.sharp:209:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 209 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator|[1044] params(1) in file: /usr/include/sharp//primitives.sharp:210:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator|[1045] params(1) in file: /usr/include/sharp//primitives.sharp:211:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 211 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator|[1046] params(1) in file: /usr/include/sharp//primitives.sharp:212:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 212 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator|[1047] params(1) in file: /usr/include/sharp//primitives.sharp:213:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 213 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator|[1048] params(1) in file: /usr/include/sharp//primitives.sharp:214:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 214 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator|[1049] params(1) in file: /usr/include/sharp//primitives.sharp:215:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 215 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator|[1050] params(1) in file: /usr/include/sharp//primitives.sharp:216:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 216 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator|[1051] params(1) in file: /usr/include/sharp//primitives.sharp:217:8: note:  
		    def operator|(num : double)   := (value|num.value);
		       ^

0 [0x0]: line: 217 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint16>.operator|[1052] params(1) in file: /usr/include/sharp//primitives.sharp:218:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 218 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint16>.operator!=[1053] params(1) in file: /usr/include/sharp//primitives.sharp:220:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 220 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           tne ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint16>.operator==[1054] params(1) in file: /usr/include/sharp//primitives.sharp:221:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 221 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           test ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint16>.operator=[1055] params(1) in file: /usr/include/sharp//primitives.sharp:222:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 222 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           movu16 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std#integer<_uint16>.to_string[1056] params(0) in file: /usr/include/sharp//primitives.sharp:224:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 225 new_class @0 // std#__srt_global   
1 [0x1]:           ret   
2 [0x2]:           dup    
3 [0x3]:           newstr @24 //    
4 [0x4]:           call @1959 // <std#string.string>   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           call @1997 // <std#string.operator+>   
13 [0xd]:           popobj2    
14 [0xe]:           returnobj   
15 [0xf]:           ret   


function: std#integer<_uint16>.parse[1057] params(1) in file: /usr/include/sharp//primitives.sharp:228:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 229 movi #0, ebx   
2 [0x2]:           movu16 ebx, ebx   
3 [0x3]:           smovr_2 ebx, fp+1   
4 [0x4]: line: 231 movi #0, ebx   
6 [0x6]:           movr cmt, ebx   
7 [0x7]:           jne 14   
8 [0x8]: line: 232 pushl 0   
9 [0x9]:           call @2252 // <std#__srt_global.strtod>   
10 [0xa]:           loadval ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   
13 [0xd]:           jmp @102   
14 [0xe]: line: 234 istorel 0, fp+2   
16 [0x10]: line: 235 istorel 0, fp+3   
18 [0x12]: line: 236 pushl 0   
19 [0x13]:           call @2000 // <std#string.size>   
20 [0x14]:           ipopl 4   
21 [0x15]: line: 238 pushl 0   
22 [0x16]:           istore 0   
24 [0x18]:           call @1981 // <std#string.at>   
25 [0x19]:           loadval ebx   
26 [0x1a]:           rstore ebx   
27 [0x1b]:           movi #45, ebx   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           test ecx, ebx   
31 [0x1f]:           jne 36   
32 [0x20]: line: 239 istorel 1, fp+3   
34 [0x22]: line: 240 istorel 1, fp+2   
36 [0x24]:           nop   
37 [0x25]: line: 243 ipushl #2   
38 [0x26]:           loadl ebx, fp+4   
39 [0x27]:           loadval ecx   
40 [0x28]:           lt ecx, ebx   
41 [0x29]:           movr ebx, cmt   
42 [0x2a]:           movr cmt, ebx   
43 [0x2b]:           jne 91   
44 [0x2c]: line: 244 pushl 0   
45 [0x2d]:           ipushl #2   
46 [0x2e]:           call @1981 // <std#string.at>   
47 [0x2f]:           call @3128 // <std#char.is_digit>   
48 [0x30]:           loadval ebx   
49 [0x31]:           not ebx, ebx   
50 [0x32]:           movr cmt, ebx   
51 [0x33]:           jne 66   
52 [0x34]: line: 245 new_class @0 // std#__srt_global   
53 [0x35]:           skip @0 // pc = 53   
54 [0x36]:           dup    
55 [0x37]:           new_class @0 // std#__srt_global   
56 [0x38]:           ret   
57 [0x39]:           dup    
58 [0x3a]:           newstr @148 // illegal char in string:    
59 [0x3b]:           call @1959 // <std#string.string>   
60 [0x3c]:           pushl 0   
61 [0x3d]:           ipushl #2   
62 [0x3e]:           call @1981 // <std#string.at>   
63 [0x3f]:           call @1992 // <std#string.operator+>   
64 [0x40]:           call @3549 // <std#illegal_argument_exception.illegal_argument_exception>   
65 [0x41]:           throw    
66 [0x42]:           nop   
67 [0x43]: line: 249 movi #10, ebx   
69 [0x45]:           loadl ecx, fp+1   
70 [0x46]:           mul ecx, ebx -> ebx   
71 [0x47]:           movu16 ebx, ebx   
72 [0x48]:           smovr_2 ebx, fp+1   
73 [0x49]: line: 250 pushl 0   
74 [0x4a]:           loadl ebx, fp+2   
75 [0x4b]:           movr egx, ebx   
76 [0x4c]:           inc ebx   
77 [0x4d]:           smovr_2 ebx, fp+2   
78 [0x4e]:           rstore egx   
79 [0x4f]:           call @1981 // <std#string.at>   
80 [0x50]:           loadval ebx   
81 [0x51]:           rstore ebx   
82 [0x52]:           movi #48, ebx   
84 [0x54]:           loadval ecx   
85 [0x55]:           sub ecx, ebx -> ebx   
86 [0x56]:           loadl ecx, fp+1   
87 [0x57]:           add ecx, ebx -> ebx   
88 [0x58]:           movu16 ebx, ebx   
89 [0x59]:           smovr_2 ebx, fp+1   
90 [0x5a]:           jmp @37   
91 [0x5b]: line: 252 loadl ebx, fp+3   
92 [0x5c]:           movr cmt, ebx   
93 [0x5d]:           jne 98   
94 [0x5e]: line: 253 loadl ebx, fp+1   
95 [0x5f]:           neg ebx, ebx   
96 [0x60]:           movu16 ebx, ebx   
97 [0x61]:           smovr_2 ebx, fp+1   
98 [0x62]:           nop   
99 [0x63]: line: 254 loadl ebx, fp+1   
100 [0x64]:           return_val ebx   
101 [0x65]:           ret   
102 [0x66]:           nop   


function: std#integer<_uint16>.to_ulong[1058] params(0) in file: /usr/include/sharp//primitives.sharp:258:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 258 new_class @0 // std#__srt_global   
1 [0x1]:           idiv adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint16>.to_long[1059] params(0) in file: /usr/include/sharp//primitives.sharp:259:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 259 new_class @0 // std#__srt_global   
1 [0x1]:           imod adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint16>.to_uint[1060] params(0) in file: /usr/include/sharp//primitives.sharp:260:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 260 new_class @0 // std#__srt_global   
1 [0x1]:           pop   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint16>.to_int[1061] params(0) in file: /usr/include/sharp//primitives.sharp:261:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 261 new_class @0 // std#__srt_global   
1 [0x1]:           inc adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint16>.to_ushort[1062] params(0) in file: /usr/include/sharp//primitives.sharp:262:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 262 new_class @0 // std#__srt_global   
1 [0x1]:           dec adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint16>.to_short[1063] params(0) in file: /usr/include/sharp//primitives.sharp:263:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 263 new_class @0 // std#__srt_global   
1 [0x1]:           movr adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint16>.to_uchar[1064] params(0) in file: /usr/include/sharp//primitives.sharp:264:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 264 new_class @0 // std#__srt_global   
1 [0x1]:           brh   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint16>.to_char[1065] params(0) in file: /usr/include/sharp//primitives.sharp:265:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 265 new_class @0 // std#__srt_global   
1 [0x1]:           ife   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint16>.to_byte[1066] params(0) in file: /usr/include/sharp//primitives.sharp:266:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 266 new_class @0 // std#__srt_global   
1 [0x1]:           ifne   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint16>.to_bool[1067] params(0) in file: /usr/include/sharp//primitives.sharp:267:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 267 new_class @0 // std#__srt_global   
1 [0x1]:           lt adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint16>.to_double[1068] params(0) in file: /usr/include/sharp//primitives.sharp:268:8: note:  
		    def to_double() := new double { value };
		       ^

0 [0x0]: line: 268 new_class @0 // std#__srt_global   
1 [0x1]:           gt adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint16>.get_value[1069] params(0) in file: /usr/include/sharp//primitives.sharp:270:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 270 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std#integer<_uint16>.integer[1070] params(0) in file: /usr/include/sharp//primitives.sharp:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#integer<_int16>.integer[1071] params(1) in file: /usr/include/sharp//primitives.sharp:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 9 ipushl #1   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         mov16 ebx, ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         ret   


function: std#integer<_int16>.hash[1072] params(0) in file: /usr/include/sharp//primitives.sharp:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 13 new_class @0 // std#__srt_global   
1 [0x1]:          imod adx, #? (112)   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @2426 // <std#long.long>   
11 [0xb]:          popobj2    
12 [0xc]:          returnobj   
13 [0xd]:          ret   


overload function: std#integer<_int16>.operator!=[1073] params(1) in file: /usr/include/sharp//primitives.sharp:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator==[1074] params(1) in file: /usr/include/sharp//primitives.sharp:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator!=[1075] params(1) in file: /usr/include/sharp//primitives.sharp:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator==[1076] params(1) in file: /usr/include/sharp//primitives.sharp:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator!=[1077] params(1) in file: /usr/include/sharp//primitives.sharp:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator==[1078] params(1) in file: /usr/include/sharp//primitives.sharp:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator!=[1079] params(1) in file: /usr/include/sharp//primitives.sharp:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator==[1080] params(1) in file: /usr/include/sharp//primitives.sharp:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator!=[1081] params(1) in file: /usr/include/sharp//primitives.sharp:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator==[1082] params(1) in file: /usr/include/sharp//primitives.sharp:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator!=[1083] params(1) in file: /usr/include/sharp//primitives.sharp:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator==[1084] params(1) in file: /usr/include/sharp//primitives.sharp:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator!=[1085] params(1) in file: /usr/include/sharp//primitives.sharp:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator==[1086] params(1) in file: /usr/include/sharp//primitives.sharp:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator!=[1087] params(1) in file: /usr/include/sharp//primitives.sharp:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator==[1088] params(1) in file: /usr/include/sharp//primitives.sharp:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator!=[1089] params(1) in file: /usr/include/sharp//primitives.sharp:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator==[1090] params(1) in file: /usr/include/sharp//primitives.sharp:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator!=[1091] params(1) in file: /usr/include/sharp//primitives.sharp:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator==[1092] params(1) in file: /usr/include/sharp//primitives.sharp:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator==[1093] params(1) in file: /usr/include/sharp//primitives.sharp:36:8: note:  
		    def operator==(num : double) := (value==num.value);
		       ^

0 [0x0]: line: 36 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator+[1094] params(1) in file: /usr/include/sharp//primitives.sharp:38:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator+[1095] params(1) in file: /usr/include/sharp//primitives.sharp:39:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator+[1096] params(1) in file: /usr/include/sharp//primitives.sharp:40:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator+[1097] params(1) in file: /usr/include/sharp//primitives.sharp:41:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator+[1098] params(1) in file: /usr/include/sharp//primitives.sharp:42:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator+[1099] params(1) in file: /usr/include/sharp//primitives.sharp:43:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator+[1100] params(1) in file: /usr/include/sharp//primitives.sharp:44:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator+[1101] params(1) in file: /usr/include/sharp//primitives.sharp:45:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator+[1102] params(1) in file: /usr/include/sharp//primitives.sharp:46:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator+[1103] params(1) in file: /usr/include/sharp//primitives.sharp:47:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator+[1104] params(1) in file: /usr/include/sharp//primitives.sharp:48:8: note:  
		    def operator+(num : double)   := (value+num.value);
		       ^

0 [0x0]: line: 48 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator+[1105] params(1) in file: /usr/include/sharp//primitives.sharp:49:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          add ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int16>.operator-[1106] params(1) in file: /usr/include/sharp//primitives.sharp:51:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator-[1107] params(1) in file: /usr/include/sharp//primitives.sharp:52:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator-[1108] params(1) in file: /usr/include/sharp//primitives.sharp:53:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator-[1109] params(1) in file: /usr/include/sharp//primitives.sharp:54:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator-[1110] params(1) in file: /usr/include/sharp//primitives.sharp:55:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator-[1111] params(1) in file: /usr/include/sharp//primitives.sharp:56:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator-[1112] params(1) in file: /usr/include/sharp//primitives.sharp:57:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator-[1113] params(1) in file: /usr/include/sharp//primitives.sharp:58:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator-[1114] params(1) in file: /usr/include/sharp//primitives.sharp:59:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator-[1115] params(1) in file: /usr/include/sharp//primitives.sharp:60:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 60 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator-[1116] params(1) in file: /usr/include/sharp//primitives.sharp:61:8: note:  
		    def operator-(num : double)   := (value-num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator-[1117] params(1) in file: /usr/include/sharp//primitives.sharp:62:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          sub ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int16>.operator*[1118] params(1) in file: /usr/include/sharp//primitives.sharp:64:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator*[1119] params(1) in file: /usr/include/sharp//primitives.sharp:65:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator*[1120] params(1) in file: /usr/include/sharp//primitives.sharp:66:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator*[1121] params(1) in file: /usr/include/sharp//primitives.sharp:67:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator*[1122] params(1) in file: /usr/include/sharp//primitives.sharp:68:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator*[1123] params(1) in file: /usr/include/sharp//primitives.sharp:69:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator*[1124] params(1) in file: /usr/include/sharp//primitives.sharp:70:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator*[1125] params(1) in file: /usr/include/sharp//primitives.sharp:71:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator*[1126] params(1) in file: /usr/include/sharp//primitives.sharp:72:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 72 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator*[1127] params(1) in file: /usr/include/sharp//primitives.sharp:73:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator*[1128] params(1) in file: /usr/include/sharp//primitives.sharp:74:8: note:  
		    def operator*(num : double)   := (value*num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator*[1129] params(1) in file: /usr/include/sharp//primitives.sharp:75:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mul ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int16>.operator/[1130] params(1) in file: /usr/include/sharp//primitives.sharp:77:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator/[1131] params(1) in file: /usr/include/sharp//primitives.sharp:78:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator/[1132] params(1) in file: /usr/include/sharp//primitives.sharp:79:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator/[1133] params(1) in file: /usr/include/sharp//primitives.sharp:80:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator/[1134] params(1) in file: /usr/include/sharp//primitives.sharp:81:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator/[1135] params(1) in file: /usr/include/sharp//primitives.sharp:82:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator/[1136] params(1) in file: /usr/include/sharp//primitives.sharp:83:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator/[1137] params(1) in file: /usr/include/sharp//primitives.sharp:84:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 84 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator/[1138] params(1) in file: /usr/include/sharp//primitives.sharp:85:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator/[1139] params(1) in file: /usr/include/sharp//primitives.sharp:86:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator/[1140] params(1) in file: /usr/include/sharp//primitives.sharp:87:8: note:  
		    def operator/(num : double)   := (value/num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator/[1141] params(1) in file: /usr/include/sharp//primitives.sharp:88:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          div ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int16>.operator%[1142] params(1) in file: /usr/include/sharp//primitives.sharp:90:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator%[1143] params(1) in file: /usr/include/sharp//primitives.sharp:91:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator%[1144] params(1) in file: /usr/include/sharp//primitives.sharp:92:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator%[1145] params(1) in file: /usr/include/sharp//primitives.sharp:93:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator%[1146] params(1) in file: /usr/include/sharp//primitives.sharp:94:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator%[1147] params(1) in file: /usr/include/sharp//primitives.sharp:95:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator%[1148] params(1) in file: /usr/include/sharp//primitives.sharp:96:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 96 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator%[1149] params(1) in file: /usr/include/sharp//primitives.sharp:97:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator%[1150] params(1) in file: /usr/include/sharp//primitives.sharp:98:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator%[1151] params(1) in file: /usr/include/sharp//primitives.sharp:99:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int16>.operator%[1152] params(1) in file: /usr/include/sharp//primitives.sharp:100:8: note:  
		    def operator%(num : double)   := (value%num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator%[1153] params(1) in file: /usr/include/sharp//primitives.sharp:101:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           mod ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int16>.operator<[1154] params(1) in file: /usr/include/sharp//primitives.sharp:103:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<[1155] params(1) in file: /usr/include/sharp//primitives.sharp:104:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<[1156] params(1) in file: /usr/include/sharp//primitives.sharp:105:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<[1157] params(1) in file: /usr/include/sharp//primitives.sharp:106:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<[1158] params(1) in file: /usr/include/sharp//primitives.sharp:107:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<[1159] params(1) in file: /usr/include/sharp//primitives.sharp:108:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 108 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<[1160] params(1) in file: /usr/include/sharp//primitives.sharp:109:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<[1161] params(1) in file: /usr/include/sharp//primitives.sharp:110:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<[1162] params(1) in file: /usr/include/sharp//primitives.sharp:111:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<[1163] params(1) in file: /usr/include/sharp//primitives.sharp:112:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<[1164] params(1) in file: /usr/include/sharp//primitives.sharp:113:8: note:  
		    def operator<(num : double)   := (value<num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<[1165] params(1) in file: /usr/include/sharp//primitives.sharp:114:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           lt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int16>.operator>[1166] params(1) in file: /usr/include/sharp//primitives.sharp:116:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>[1167] params(1) in file: /usr/include/sharp//primitives.sharp:117:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>[1168] params(1) in file: /usr/include/sharp//primitives.sharp:118:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>[1169] params(1) in file: /usr/include/sharp//primitives.sharp:119:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>[1170] params(1) in file: /usr/include/sharp//primitives.sharp:120:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 120 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>[1171] params(1) in file: /usr/include/sharp//primitives.sharp:121:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>[1172] params(1) in file: /usr/include/sharp//primitives.sharp:122:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>[1173] params(1) in file: /usr/include/sharp//primitives.sharp:123:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>[1174] params(1) in file: /usr/include/sharp//primitives.sharp:124:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>[1175] params(1) in file: /usr/include/sharp//primitives.sharp:125:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>[1176] params(1) in file: /usr/include/sharp//primitives.sharp:126:8: note:  
		    def operator>(num : double)   := (value>num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>[1177] params(1) in file: /usr/include/sharp//primitives.sharp:127:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int16>.operator<=[1178] params(1) in file: /usr/include/sharp//primitives.sharp:129:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<=[1179] params(1) in file: /usr/include/sharp//primitives.sharp:130:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<=[1180] params(1) in file: /usr/include/sharp//primitives.sharp:131:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<=[1181] params(1) in file: /usr/include/sharp//primitives.sharp:132:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 132 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<=[1182] params(1) in file: /usr/include/sharp//primitives.sharp:133:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<=[1183] params(1) in file: /usr/include/sharp//primitives.sharp:134:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<=[1184] params(1) in file: /usr/include/sharp//primitives.sharp:135:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<=[1185] params(1) in file: /usr/include/sharp//primitives.sharp:136:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<=[1186] params(1) in file: /usr/include/sharp//primitives.sharp:137:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<=[1187] params(1) in file: /usr/include/sharp//primitives.sharp:138:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<=[1188] params(1) in file: /usr/include/sharp//primitives.sharp:139:8: note:  
		    def operator<=(num : double)   := (value>=num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<=[1189] params(1) in file: /usr/include/sharp//primitives.sharp:140:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int16>.operator**[1190] params(1) in file: /usr/include/sharp//primitives.sharp:142:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator**[1191] params(1) in file: /usr/include/sharp//primitives.sharp:143:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator**[1192] params(1) in file: /usr/include/sharp//primitives.sharp:144:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 144 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator**[1193] params(1) in file: /usr/include/sharp//primitives.sharp:145:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator**[1194] params(1) in file: /usr/include/sharp//primitives.sharp:146:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator**[1195] params(1) in file: /usr/include/sharp//primitives.sharp:147:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator**[1196] params(1) in file: /usr/include/sharp//primitives.sharp:148:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator**[1197] params(1) in file: /usr/include/sharp//primitives.sharp:149:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator**[1198] params(1) in file: /usr/include/sharp//primitives.sharp:150:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator**[1199] params(1) in file: /usr/include/sharp//primitives.sharp:151:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator**[1200] params(1) in file: /usr/include/sharp//primitives.sharp:152:8: note:  
		    def operator**(num : double)   := (value**num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator**[1201] params(1) in file: /usr/include/sharp//primitives.sharp:153:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           exp ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int16>.operator<<[1202] params(1) in file: /usr/include/sharp//primitives.sharp:155:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<<[1203] params(1) in file: /usr/include/sharp//primitives.sharp:156:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<<[1204] params(1) in file: /usr/include/sharp//primitives.sharp:157:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<<[1205] params(1) in file: /usr/include/sharp//primitives.sharp:158:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<<[1206] params(1) in file: /usr/include/sharp//primitives.sharp:159:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<<[1207] params(1) in file: /usr/include/sharp//primitives.sharp:160:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<<[1208] params(1) in file: /usr/include/sharp//primitives.sharp:161:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<<[1209] params(1) in file: /usr/include/sharp//primitives.sharp:162:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<<[1210] params(1) in file: /usr/include/sharp//primitives.sharp:163:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<<[1211] params(1) in file: /usr/include/sharp//primitives.sharp:164:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<<[1212] params(1) in file: /usr/include/sharp//primitives.sharp:165:8: note:  
		    def operator<<(num : double)   := (value<<num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator<<[1213] params(1) in file: /usr/include/sharp//primitives.sharp:166:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shl ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int16>.operator>>[1214] params(1) in file: /usr/include/sharp//primitives.sharp:168:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 168 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>>[1215] params(1) in file: /usr/include/sharp//primitives.sharp:169:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>>[1216] params(1) in file: /usr/include/sharp//primitives.sharp:170:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>>[1217] params(1) in file: /usr/include/sharp//primitives.sharp:171:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>>[1218] params(1) in file: /usr/include/sharp//primitives.sharp:172:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>>[1219] params(1) in file: /usr/include/sharp//primitives.sharp:173:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>>[1220] params(1) in file: /usr/include/sharp//primitives.sharp:174:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>>[1221] params(1) in file: /usr/include/sharp//primitives.sharp:175:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>>[1222] params(1) in file: /usr/include/sharp//primitives.sharp:176:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>>[1223] params(1) in file: /usr/include/sharp//primitives.sharp:177:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>>[1224] params(1) in file: /usr/include/sharp//primitives.sharp:178:8: note:  
		    def operator>>(num : double)   := (value>>num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator>>[1225] params(1) in file: /usr/include/sharp//primitives.sharp:179:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shr ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int16>.operator^[1226] params(1) in file: /usr/include/sharp//primitives.sharp:181:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator^[1227] params(1) in file: /usr/include/sharp//primitives.sharp:182:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator^[1228] params(1) in file: /usr/include/sharp//primitives.sharp:183:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator^[1229] params(1) in file: /usr/include/sharp//primitives.sharp:184:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator^[1230] params(1) in file: /usr/include/sharp//primitives.sharp:185:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator^[1231] params(1) in file: /usr/include/sharp//primitives.sharp:186:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator^[1232] params(1) in file: /usr/include/sharp//primitives.sharp:187:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator^[1233] params(1) in file: /usr/include/sharp//primitives.sharp:188:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator^[1234] params(1) in file: /usr/include/sharp//primitives.sharp:189:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator^[1235] params(1) in file: /usr/include/sharp//primitives.sharp:190:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator^[1236] params(1) in file: /usr/include/sharp//primitives.sharp:191:8: note:  
		    def operator^(num : double)   := (value^num.value);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator^[1237] params(1) in file: /usr/include/sharp//primitives.sharp:192:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 192 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           xor ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int16>.operator&[1238] params(1) in file: /usr/include/sharp//primitives.sharp:194:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator&[1239] params(1) in file: /usr/include/sharp//primitives.sharp:195:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator&[1240] params(1) in file: /usr/include/sharp//primitives.sharp:196:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator&[1241] params(1) in file: /usr/include/sharp//primitives.sharp:197:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator&[1242] params(1) in file: /usr/include/sharp//primitives.sharp:198:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator&[1243] params(1) in file: /usr/include/sharp//primitives.sharp:199:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator&[1244] params(1) in file: /usr/include/sharp//primitives.sharp:200:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator&[1245] params(1) in file: /usr/include/sharp//primitives.sharp:201:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator&[1246] params(1) in file: /usr/include/sharp//primitives.sharp:202:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator&[1247] params(1) in file: /usr/include/sharp//primitives.sharp:203:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator&[1248] params(1) in file: /usr/include/sharp//primitives.sharp:204:8: note:  
		    def operator&(num : double)   := (value&num.value);
		       ^

0 [0x0]: line: 204 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator&[1249] params(1) in file: /usr/include/sharp//primitives.sharp:205:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           uand ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int16>.operator|[1250] params(1) in file: /usr/include/sharp//primitives.sharp:207:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 207 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator|[1251] params(1) in file: /usr/include/sharp//primitives.sharp:208:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 208 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator|[1252] params(1) in file: /usr/include/sharp//primitives.sharp:209:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 209 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator|[1253] params(1) in file: /usr/include/sharp//primitives.sharp:210:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator|[1254] params(1) in file: /usr/include/sharp//primitives.sharp:211:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 211 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator|[1255] params(1) in file: /usr/include/sharp//primitives.sharp:212:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 212 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator|[1256] params(1) in file: /usr/include/sharp//primitives.sharp:213:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 213 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator|[1257] params(1) in file: /usr/include/sharp//primitives.sharp:214:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 214 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator|[1258] params(1) in file: /usr/include/sharp//primitives.sharp:215:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 215 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator|[1259] params(1) in file: /usr/include/sharp//primitives.sharp:216:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 216 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator|[1260] params(1) in file: /usr/include/sharp//primitives.sharp:217:8: note:  
		    def operator|(num : double)   := (value|num.value);
		       ^

0 [0x0]: line: 217 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int16>.operator|[1261] params(1) in file: /usr/include/sharp//primitives.sharp:218:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 218 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int16>.operator!=[1262] params(1) in file: /usr/include/sharp//primitives.sharp:220:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 220 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           tne ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int16>.operator==[1263] params(1) in file: /usr/include/sharp//primitives.sharp:221:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 221 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           test ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int16>.operator=[1264] params(1) in file: /usr/include/sharp//primitives.sharp:222:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 222 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           mov16 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std#integer<_int16>.to_string[1265] params(0) in file: /usr/include/sharp//primitives.sharp:224:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 225 new_class @0 // std#__srt_global   
1 [0x1]:           ret   
2 [0x2]:           dup    
3 [0x3]:           newstr @24 //    
4 [0x4]:           call @1959 // <std#string.string>   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           call @1993 // <std#string.operator+>   
13 [0xd]:           popobj2    
14 [0xe]:           returnobj   
15 [0xf]:           ret   


function: std#integer<_int16>.parse[1266] params(1) in file: /usr/include/sharp//primitives.sharp:228:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 229 movi #0, ebx   
2 [0x2]:           mov16 ebx, ebx   
3 [0x3]:           smovr_2 ebx, fp+1   
4 [0x4]: line: 231 movi #0, ebx   
6 [0x6]:           movr cmt, ebx   
7 [0x7]:           jne 14   
8 [0x8]: line: 232 pushl 0   
9 [0x9]:           call @2252 // <std#__srt_global.strtod>   
10 [0xa]:           loadval ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   
13 [0xd]:           jmp @102   
14 [0xe]: line: 234 istorel 0, fp+2   
16 [0x10]: line: 235 istorel 0, fp+3   
18 [0x12]: line: 236 pushl 0   
19 [0x13]:           call @2000 // <std#string.size>   
20 [0x14]:           ipopl 4   
21 [0x15]: line: 238 pushl 0   
22 [0x16]:           istore 0   
24 [0x18]:           call @1981 // <std#string.at>   
25 [0x19]:           loadval ebx   
26 [0x1a]:           rstore ebx   
27 [0x1b]:           movi #45, ebx   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           test ecx, ebx   
31 [0x1f]:           jne 36   
32 [0x20]: line: 239 istorel 1, fp+3   
34 [0x22]: line: 240 istorel 1, fp+2   
36 [0x24]:           nop   
37 [0x25]: line: 243 ipushl #2   
38 [0x26]:           loadl ebx, fp+4   
39 [0x27]:           loadval ecx   
40 [0x28]:           lt ecx, ebx   
41 [0x29]:           movr ebx, cmt   
42 [0x2a]:           movr cmt, ebx   
43 [0x2b]:           jne 91   
44 [0x2c]: line: 244 pushl 0   
45 [0x2d]:           ipushl #2   
46 [0x2e]:           call @1981 // <std#string.at>   
47 [0x2f]:           call @3128 // <std#char.is_digit>   
48 [0x30]:           loadval ebx   
49 [0x31]:           not ebx, ebx   
50 [0x32]:           movr cmt, ebx   
51 [0x33]:           jne 66   
52 [0x34]: line: 245 new_class @0 // std#__srt_global   
53 [0x35]:           skip @0 // pc = 53   
54 [0x36]:           dup    
55 [0x37]:           new_class @0 // std#__srt_global   
56 [0x38]:           ret   
57 [0x39]:           dup    
58 [0x3a]:           newstr @148 // illegal char in string:    
59 [0x3b]:           call @1959 // <std#string.string>   
60 [0x3c]:           pushl 0   
61 [0x3d]:           ipushl #2   
62 [0x3e]:           call @1981 // <std#string.at>   
63 [0x3f]:           call @1992 // <std#string.operator+>   
64 [0x40]:           call @3549 // <std#illegal_argument_exception.illegal_argument_exception>   
65 [0x41]:           throw    
66 [0x42]:           nop   
67 [0x43]: line: 249 movi #10, ebx   
69 [0x45]:           loadl ecx, fp+1   
70 [0x46]:           mul ecx, ebx -> ebx   
71 [0x47]:           mov16 ebx, ebx   
72 [0x48]:           smovr_2 ebx, fp+1   
73 [0x49]: line: 250 pushl 0   
74 [0x4a]:           loadl ebx, fp+2   
75 [0x4b]:           movr egx, ebx   
76 [0x4c]:           inc ebx   
77 [0x4d]:           smovr_2 ebx, fp+2   
78 [0x4e]:           rstore egx   
79 [0x4f]:           call @1981 // <std#string.at>   
80 [0x50]:           loadval ebx   
81 [0x51]:           rstore ebx   
82 [0x52]:           movi #48, ebx   
84 [0x54]:           loadval ecx   
85 [0x55]:           sub ecx, ebx -> ebx   
86 [0x56]:           loadl ecx, fp+1   
87 [0x57]:           add ecx, ebx -> ebx   
88 [0x58]:           mov16 ebx, ebx   
89 [0x59]:           smovr_2 ebx, fp+1   
90 [0x5a]:           jmp @37   
91 [0x5b]: line: 252 loadl ebx, fp+3   
92 [0x5c]:           movr cmt, ebx   
93 [0x5d]:           jne 98   
94 [0x5e]: line: 253 loadl ebx, fp+1   
95 [0x5f]:           neg ebx, ebx   
96 [0x60]:           mov16 ebx, ebx   
97 [0x61]:           smovr_2 ebx, fp+1   
98 [0x62]:           nop   
99 [0x63]: line: 254 loadl ebx, fp+1   
100 [0x64]:           return_val ebx   
101 [0x65]:           ret   
102 [0x66]:           nop   


function: std#integer<_int16>.to_ulong[1267] params(0) in file: /usr/include/sharp//primitives.sharp:258:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 258 new_class @0 // std#__srt_global   
1 [0x1]:           idiv adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int16>.to_long[1268] params(0) in file: /usr/include/sharp//primitives.sharp:259:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 259 new_class @0 // std#__srt_global   
1 [0x1]:           imod adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int16>.to_uint[1269] params(0) in file: /usr/include/sharp//primitives.sharp:260:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 260 new_class @0 // std#__srt_global   
1 [0x1]:           pop   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int16>.to_int[1270] params(0) in file: /usr/include/sharp//primitives.sharp:261:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 261 new_class @0 // std#__srt_global   
1 [0x1]:           inc adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int16>.to_ushort[1271] params(0) in file: /usr/include/sharp//primitives.sharp:262:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 262 new_class @0 // std#__srt_global   
1 [0x1]:           dec adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int16>.to_short[1272] params(0) in file: /usr/include/sharp//primitives.sharp:263:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 263 new_class @0 // std#__srt_global   
1 [0x1]:           movr adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int16>.to_uchar[1273] params(0) in file: /usr/include/sharp//primitives.sharp:264:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 264 new_class @0 // std#__srt_global   
1 [0x1]:           brh   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int16>.to_char[1274] params(0) in file: /usr/include/sharp//primitives.sharp:265:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 265 new_class @0 // std#__srt_global   
1 [0x1]:           ife   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int16>.to_byte[1275] params(0) in file: /usr/include/sharp//primitives.sharp:266:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 266 new_class @0 // std#__srt_global   
1 [0x1]:           ifne   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int16>.to_bool[1276] params(0) in file: /usr/include/sharp//primitives.sharp:267:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 267 new_class @0 // std#__srt_global   
1 [0x1]:           lt adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int16>.to_double[1277] params(0) in file: /usr/include/sharp//primitives.sharp:268:8: note:  
		    def to_double() := new double { value };
		       ^

0 [0x0]: line: 268 new_class @0 // std#__srt_global   
1 [0x1]:           gt adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int16>.get_value[1278] params(0) in file: /usr/include/sharp//primitives.sharp:270:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 270 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std#integer<_int16>.integer[1279] params(0) in file: /usr/include/sharp//primitives.sharp:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#integer<_uint8>.integer[1280] params(1) in file: /usr/include/sharp//primitives.sharp:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 9 ipushl #1   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         movu8 ebx, ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         ret   


function: std#integer<_uint8>.hash[1281] params(0) in file: /usr/include/sharp//primitives.sharp:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 13 new_class @0 // std#__srt_global   
1 [0x1]:          imod adx, #? (112)   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @2426 // <std#long.long>   
11 [0xb]:          popobj2    
12 [0xc]:          returnobj   
13 [0xd]:          ret   


overload function: std#integer<_uint8>.operator!=[1282] params(1) in file: /usr/include/sharp//primitives.sharp:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator==[1283] params(1) in file: /usr/include/sharp//primitives.sharp:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator!=[1284] params(1) in file: /usr/include/sharp//primitives.sharp:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator==[1285] params(1) in file: /usr/include/sharp//primitives.sharp:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator!=[1286] params(1) in file: /usr/include/sharp//primitives.sharp:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator==[1287] params(1) in file: /usr/include/sharp//primitives.sharp:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator!=[1288] params(1) in file: /usr/include/sharp//primitives.sharp:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator==[1289] params(1) in file: /usr/include/sharp//primitives.sharp:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator!=[1290] params(1) in file: /usr/include/sharp//primitives.sharp:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator==[1291] params(1) in file: /usr/include/sharp//primitives.sharp:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator!=[1292] params(1) in file: /usr/include/sharp//primitives.sharp:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator==[1293] params(1) in file: /usr/include/sharp//primitives.sharp:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator!=[1294] params(1) in file: /usr/include/sharp//primitives.sharp:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator==[1295] params(1) in file: /usr/include/sharp//primitives.sharp:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator!=[1296] params(1) in file: /usr/include/sharp//primitives.sharp:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator==[1297] params(1) in file: /usr/include/sharp//primitives.sharp:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator!=[1298] params(1) in file: /usr/include/sharp//primitives.sharp:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator==[1299] params(1) in file: /usr/include/sharp//primitives.sharp:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator!=[1300] params(1) in file: /usr/include/sharp//primitives.sharp:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator==[1301] params(1) in file: /usr/include/sharp//primitives.sharp:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator==[1302] params(1) in file: /usr/include/sharp//primitives.sharp:36:8: note:  
		    def operator==(num : double) := (value==num.value);
		       ^

0 [0x0]: line: 36 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator+[1303] params(1) in file: /usr/include/sharp//primitives.sharp:38:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator+[1304] params(1) in file: /usr/include/sharp//primitives.sharp:39:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator+[1305] params(1) in file: /usr/include/sharp//primitives.sharp:40:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator+[1306] params(1) in file: /usr/include/sharp//primitives.sharp:41:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator+[1307] params(1) in file: /usr/include/sharp//primitives.sharp:42:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator+[1308] params(1) in file: /usr/include/sharp//primitives.sharp:43:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator+[1309] params(1) in file: /usr/include/sharp//primitives.sharp:44:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator+[1310] params(1) in file: /usr/include/sharp//primitives.sharp:45:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator+[1311] params(1) in file: /usr/include/sharp//primitives.sharp:46:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator+[1312] params(1) in file: /usr/include/sharp//primitives.sharp:47:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator+[1313] params(1) in file: /usr/include/sharp//primitives.sharp:48:8: note:  
		    def operator+(num : double)   := (value+num.value);
		       ^

0 [0x0]: line: 48 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator+[1314] params(1) in file: /usr/include/sharp//primitives.sharp:49:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          add ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint8>.operator-[1315] params(1) in file: /usr/include/sharp//primitives.sharp:51:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator-[1316] params(1) in file: /usr/include/sharp//primitives.sharp:52:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator-[1317] params(1) in file: /usr/include/sharp//primitives.sharp:53:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator-[1318] params(1) in file: /usr/include/sharp//primitives.sharp:54:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator-[1319] params(1) in file: /usr/include/sharp//primitives.sharp:55:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator-[1320] params(1) in file: /usr/include/sharp//primitives.sharp:56:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator-[1321] params(1) in file: /usr/include/sharp//primitives.sharp:57:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator-[1322] params(1) in file: /usr/include/sharp//primitives.sharp:58:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator-[1323] params(1) in file: /usr/include/sharp//primitives.sharp:59:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator-[1324] params(1) in file: /usr/include/sharp//primitives.sharp:60:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 60 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator-[1325] params(1) in file: /usr/include/sharp//primitives.sharp:61:8: note:  
		    def operator-(num : double)   := (value-num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator-[1326] params(1) in file: /usr/include/sharp//primitives.sharp:62:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          sub ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint8>.operator*[1327] params(1) in file: /usr/include/sharp//primitives.sharp:64:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator*[1328] params(1) in file: /usr/include/sharp//primitives.sharp:65:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator*[1329] params(1) in file: /usr/include/sharp//primitives.sharp:66:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator*[1330] params(1) in file: /usr/include/sharp//primitives.sharp:67:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator*[1331] params(1) in file: /usr/include/sharp//primitives.sharp:68:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator*[1332] params(1) in file: /usr/include/sharp//primitives.sharp:69:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator*[1333] params(1) in file: /usr/include/sharp//primitives.sharp:70:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator*[1334] params(1) in file: /usr/include/sharp//primitives.sharp:71:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator*[1335] params(1) in file: /usr/include/sharp//primitives.sharp:72:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 72 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator*[1336] params(1) in file: /usr/include/sharp//primitives.sharp:73:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator*[1337] params(1) in file: /usr/include/sharp//primitives.sharp:74:8: note:  
		    def operator*(num : double)   := (value*num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator*[1338] params(1) in file: /usr/include/sharp//primitives.sharp:75:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mul ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint8>.operator/[1339] params(1) in file: /usr/include/sharp//primitives.sharp:77:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator/[1340] params(1) in file: /usr/include/sharp//primitives.sharp:78:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator/[1341] params(1) in file: /usr/include/sharp//primitives.sharp:79:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator/[1342] params(1) in file: /usr/include/sharp//primitives.sharp:80:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator/[1343] params(1) in file: /usr/include/sharp//primitives.sharp:81:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator/[1344] params(1) in file: /usr/include/sharp//primitives.sharp:82:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator/[1345] params(1) in file: /usr/include/sharp//primitives.sharp:83:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator/[1346] params(1) in file: /usr/include/sharp//primitives.sharp:84:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 84 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator/[1347] params(1) in file: /usr/include/sharp//primitives.sharp:85:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator/[1348] params(1) in file: /usr/include/sharp//primitives.sharp:86:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator/[1349] params(1) in file: /usr/include/sharp//primitives.sharp:87:8: note:  
		    def operator/(num : double)   := (value/num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator/[1350] params(1) in file: /usr/include/sharp//primitives.sharp:88:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          div ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_uint8>.operator%[1351] params(1) in file: /usr/include/sharp//primitives.sharp:90:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator%[1352] params(1) in file: /usr/include/sharp//primitives.sharp:91:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator%[1353] params(1) in file: /usr/include/sharp//primitives.sharp:92:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator%[1354] params(1) in file: /usr/include/sharp//primitives.sharp:93:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator%[1355] params(1) in file: /usr/include/sharp//primitives.sharp:94:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator%[1356] params(1) in file: /usr/include/sharp//primitives.sharp:95:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator%[1357] params(1) in file: /usr/include/sharp//primitives.sharp:96:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 96 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator%[1358] params(1) in file: /usr/include/sharp//primitives.sharp:97:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator%[1359] params(1) in file: /usr/include/sharp//primitives.sharp:98:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator%[1360] params(1) in file: /usr/include/sharp//primitives.sharp:99:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_uint8>.operator%[1361] params(1) in file: /usr/include/sharp//primitives.sharp:100:8: note:  
		    def operator%(num : double)   := (value%num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator%[1362] params(1) in file: /usr/include/sharp//primitives.sharp:101:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           mod ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint8>.operator<[1363] params(1) in file: /usr/include/sharp//primitives.sharp:103:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<[1364] params(1) in file: /usr/include/sharp//primitives.sharp:104:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<[1365] params(1) in file: /usr/include/sharp//primitives.sharp:105:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<[1366] params(1) in file: /usr/include/sharp//primitives.sharp:106:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<[1367] params(1) in file: /usr/include/sharp//primitives.sharp:107:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<[1368] params(1) in file: /usr/include/sharp//primitives.sharp:108:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 108 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<[1369] params(1) in file: /usr/include/sharp//primitives.sharp:109:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<[1370] params(1) in file: /usr/include/sharp//primitives.sharp:110:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<[1371] params(1) in file: /usr/include/sharp//primitives.sharp:111:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<[1372] params(1) in file: /usr/include/sharp//primitives.sharp:112:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<[1373] params(1) in file: /usr/include/sharp//primitives.sharp:113:8: note:  
		    def operator<(num : double)   := (value<num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<[1374] params(1) in file: /usr/include/sharp//primitives.sharp:114:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           lt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint8>.operator>[1375] params(1) in file: /usr/include/sharp//primitives.sharp:116:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>[1376] params(1) in file: /usr/include/sharp//primitives.sharp:117:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>[1377] params(1) in file: /usr/include/sharp//primitives.sharp:118:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>[1378] params(1) in file: /usr/include/sharp//primitives.sharp:119:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>[1379] params(1) in file: /usr/include/sharp//primitives.sharp:120:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 120 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>[1380] params(1) in file: /usr/include/sharp//primitives.sharp:121:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>[1381] params(1) in file: /usr/include/sharp//primitives.sharp:122:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>[1382] params(1) in file: /usr/include/sharp//primitives.sharp:123:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>[1383] params(1) in file: /usr/include/sharp//primitives.sharp:124:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>[1384] params(1) in file: /usr/include/sharp//primitives.sharp:125:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>[1385] params(1) in file: /usr/include/sharp//primitives.sharp:126:8: note:  
		    def operator>(num : double)   := (value>num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>[1386] params(1) in file: /usr/include/sharp//primitives.sharp:127:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint8>.operator<=[1387] params(1) in file: /usr/include/sharp//primitives.sharp:129:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<=[1388] params(1) in file: /usr/include/sharp//primitives.sharp:130:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<=[1389] params(1) in file: /usr/include/sharp//primitives.sharp:131:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<=[1390] params(1) in file: /usr/include/sharp//primitives.sharp:132:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 132 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<=[1391] params(1) in file: /usr/include/sharp//primitives.sharp:133:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<=[1392] params(1) in file: /usr/include/sharp//primitives.sharp:134:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<=[1393] params(1) in file: /usr/include/sharp//primitives.sharp:135:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<=[1394] params(1) in file: /usr/include/sharp//primitives.sharp:136:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<=[1395] params(1) in file: /usr/include/sharp//primitives.sharp:137:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<=[1396] params(1) in file: /usr/include/sharp//primitives.sharp:138:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<=[1397] params(1) in file: /usr/include/sharp//primitives.sharp:139:8: note:  
		    def operator<=(num : double)   := (value>=num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<=[1398] params(1) in file: /usr/include/sharp//primitives.sharp:140:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint8>.operator**[1399] params(1) in file: /usr/include/sharp//primitives.sharp:142:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator**[1400] params(1) in file: /usr/include/sharp//primitives.sharp:143:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator**[1401] params(1) in file: /usr/include/sharp//primitives.sharp:144:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 144 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator**[1402] params(1) in file: /usr/include/sharp//primitives.sharp:145:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator**[1403] params(1) in file: /usr/include/sharp//primitives.sharp:146:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator**[1404] params(1) in file: /usr/include/sharp//primitives.sharp:147:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator**[1405] params(1) in file: /usr/include/sharp//primitives.sharp:148:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator**[1406] params(1) in file: /usr/include/sharp//primitives.sharp:149:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator**[1407] params(1) in file: /usr/include/sharp//primitives.sharp:150:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator**[1408] params(1) in file: /usr/include/sharp//primitives.sharp:151:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator**[1409] params(1) in file: /usr/include/sharp//primitives.sharp:152:8: note:  
		    def operator**(num : double)   := (value**num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator**[1410] params(1) in file: /usr/include/sharp//primitives.sharp:153:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           exp ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint8>.operator<<[1411] params(1) in file: /usr/include/sharp//primitives.sharp:155:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<<[1412] params(1) in file: /usr/include/sharp//primitives.sharp:156:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<<[1413] params(1) in file: /usr/include/sharp//primitives.sharp:157:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<<[1414] params(1) in file: /usr/include/sharp//primitives.sharp:158:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<<[1415] params(1) in file: /usr/include/sharp//primitives.sharp:159:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<<[1416] params(1) in file: /usr/include/sharp//primitives.sharp:160:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<<[1417] params(1) in file: /usr/include/sharp//primitives.sharp:161:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<<[1418] params(1) in file: /usr/include/sharp//primitives.sharp:162:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<<[1419] params(1) in file: /usr/include/sharp//primitives.sharp:163:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<<[1420] params(1) in file: /usr/include/sharp//primitives.sharp:164:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<<[1421] params(1) in file: /usr/include/sharp//primitives.sharp:165:8: note:  
		    def operator<<(num : double)   := (value<<num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator<<[1422] params(1) in file: /usr/include/sharp//primitives.sharp:166:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shl ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint8>.operator>>[1423] params(1) in file: /usr/include/sharp//primitives.sharp:168:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 168 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>>[1424] params(1) in file: /usr/include/sharp//primitives.sharp:169:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>>[1425] params(1) in file: /usr/include/sharp//primitives.sharp:170:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>>[1426] params(1) in file: /usr/include/sharp//primitives.sharp:171:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>>[1427] params(1) in file: /usr/include/sharp//primitives.sharp:172:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>>[1428] params(1) in file: /usr/include/sharp//primitives.sharp:173:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>>[1429] params(1) in file: /usr/include/sharp//primitives.sharp:174:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>>[1430] params(1) in file: /usr/include/sharp//primitives.sharp:175:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>>[1431] params(1) in file: /usr/include/sharp//primitives.sharp:176:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>>[1432] params(1) in file: /usr/include/sharp//primitives.sharp:177:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>>[1433] params(1) in file: /usr/include/sharp//primitives.sharp:178:8: note:  
		    def operator>>(num : double)   := (value>>num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator>>[1434] params(1) in file: /usr/include/sharp//primitives.sharp:179:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shr ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint8>.operator^[1435] params(1) in file: /usr/include/sharp//primitives.sharp:181:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator^[1436] params(1) in file: /usr/include/sharp//primitives.sharp:182:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator^[1437] params(1) in file: /usr/include/sharp//primitives.sharp:183:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator^[1438] params(1) in file: /usr/include/sharp//primitives.sharp:184:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator^[1439] params(1) in file: /usr/include/sharp//primitives.sharp:185:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator^[1440] params(1) in file: /usr/include/sharp//primitives.sharp:186:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator^[1441] params(1) in file: /usr/include/sharp//primitives.sharp:187:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator^[1442] params(1) in file: /usr/include/sharp//primitives.sharp:188:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator^[1443] params(1) in file: /usr/include/sharp//primitives.sharp:189:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator^[1444] params(1) in file: /usr/include/sharp//primitives.sharp:190:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator^[1445] params(1) in file: /usr/include/sharp//primitives.sharp:191:8: note:  
		    def operator^(num : double)   := (value^num.value);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator^[1446] params(1) in file: /usr/include/sharp//primitives.sharp:192:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 192 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           xor ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint8>.operator&[1447] params(1) in file: /usr/include/sharp//primitives.sharp:194:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator&[1448] params(1) in file: /usr/include/sharp//primitives.sharp:195:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator&[1449] params(1) in file: /usr/include/sharp//primitives.sharp:196:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator&[1450] params(1) in file: /usr/include/sharp//primitives.sharp:197:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator&[1451] params(1) in file: /usr/include/sharp//primitives.sharp:198:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator&[1452] params(1) in file: /usr/include/sharp//primitives.sharp:199:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator&[1453] params(1) in file: /usr/include/sharp//primitives.sharp:200:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator&[1454] params(1) in file: /usr/include/sharp//primitives.sharp:201:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator&[1455] params(1) in file: /usr/include/sharp//primitives.sharp:202:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator&[1456] params(1) in file: /usr/include/sharp//primitives.sharp:203:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator&[1457] params(1) in file: /usr/include/sharp//primitives.sharp:204:8: note:  
		    def operator&(num : double)   := (value&num.value);
		       ^

0 [0x0]: line: 204 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator&[1458] params(1) in file: /usr/include/sharp//primitives.sharp:205:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           uand ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint8>.operator|[1459] params(1) in file: /usr/include/sharp//primitives.sharp:207:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 207 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator|[1460] params(1) in file: /usr/include/sharp//primitives.sharp:208:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 208 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator|[1461] params(1) in file: /usr/include/sharp//primitives.sharp:209:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 209 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator|[1462] params(1) in file: /usr/include/sharp//primitives.sharp:210:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator|[1463] params(1) in file: /usr/include/sharp//primitives.sharp:211:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 211 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator|[1464] params(1) in file: /usr/include/sharp//primitives.sharp:212:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 212 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator|[1465] params(1) in file: /usr/include/sharp//primitives.sharp:213:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 213 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator|[1466] params(1) in file: /usr/include/sharp//primitives.sharp:214:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 214 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator|[1467] params(1) in file: /usr/include/sharp//primitives.sharp:215:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 215 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator|[1468] params(1) in file: /usr/include/sharp//primitives.sharp:216:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 216 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator|[1469] params(1) in file: /usr/include/sharp//primitives.sharp:217:8: note:  
		    def operator|(num : double)   := (value|num.value);
		       ^

0 [0x0]: line: 217 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_uint8>.operator|[1470] params(1) in file: /usr/include/sharp//primitives.sharp:218:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 218 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_uint8>.operator!=[1471] params(1) in file: /usr/include/sharp//primitives.sharp:220:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 220 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           tne ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint8>.operator==[1472] params(1) in file: /usr/include/sharp//primitives.sharp:221:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 221 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           test ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_uint8>.operator=[1473] params(1) in file: /usr/include/sharp//primitives.sharp:222:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 222 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           movu8 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std#integer<_uint8>.to_string[1474] params(0) in file: /usr/include/sharp//primitives.sharp:224:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 225 new_class @0 // std#__srt_global   
1 [0x1]:           ret   
2 [0x2]:           dup    
3 [0x3]:           newstr @24 //    
4 [0x4]:           call @1959 // <std#string.string>   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           call @1996 // <std#string.operator+>   
13 [0xd]:           popobj2    
14 [0xe]:           returnobj   
15 [0xf]:           ret   


function: std#integer<_uint8>.parse[1475] params(1) in file: /usr/include/sharp//primitives.sharp:228:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 229 movi #0, ebx   
2 [0x2]:           movu8 ebx, ebx   
3 [0x3]:           smovr_2 ebx, fp+1   
4 [0x4]: line: 231 movi #0, ebx   
6 [0x6]:           movr cmt, ebx   
7 [0x7]:           jne 14   
8 [0x8]: line: 232 pushl 0   
9 [0x9]:           call @2252 // <std#__srt_global.strtod>   
10 [0xa]:           loadval ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   
13 [0xd]:           jmp @102   
14 [0xe]: line: 234 istorel 0, fp+2   
16 [0x10]: line: 235 istorel 0, fp+3   
18 [0x12]: line: 236 pushl 0   
19 [0x13]:           call @2000 // <std#string.size>   
20 [0x14]:           ipopl 4   
21 [0x15]: line: 238 pushl 0   
22 [0x16]:           istore 0   
24 [0x18]:           call @1981 // <std#string.at>   
25 [0x19]:           loadval ebx   
26 [0x1a]:           rstore ebx   
27 [0x1b]:           movi #45, ebx   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           test ecx, ebx   
31 [0x1f]:           jne 36   
32 [0x20]: line: 239 istorel 1, fp+3   
34 [0x22]: line: 240 istorel 1, fp+2   
36 [0x24]:           nop   
37 [0x25]: line: 243 ipushl #2   
38 [0x26]:           loadl ebx, fp+4   
39 [0x27]:           loadval ecx   
40 [0x28]:           lt ecx, ebx   
41 [0x29]:           movr ebx, cmt   
42 [0x2a]:           movr cmt, ebx   
43 [0x2b]:           jne 91   
44 [0x2c]: line: 244 pushl 0   
45 [0x2d]:           ipushl #2   
46 [0x2e]:           call @1981 // <std#string.at>   
47 [0x2f]:           call @3128 // <std#char.is_digit>   
48 [0x30]:           loadval ebx   
49 [0x31]:           not ebx, ebx   
50 [0x32]:           movr cmt, ebx   
51 [0x33]:           jne 66   
52 [0x34]: line: 245 new_class @0 // std#__srt_global   
53 [0x35]:           skip @0 // pc = 53   
54 [0x36]:           dup    
55 [0x37]:           new_class @0 // std#__srt_global   
56 [0x38]:           ret   
57 [0x39]:           dup    
58 [0x3a]:           newstr @148 // illegal char in string:    
59 [0x3b]:           call @1959 // <std#string.string>   
60 [0x3c]:           pushl 0   
61 [0x3d]:           ipushl #2   
62 [0x3e]:           call @1981 // <std#string.at>   
63 [0x3f]:           call @1992 // <std#string.operator+>   
64 [0x40]:           call @3549 // <std#illegal_argument_exception.illegal_argument_exception>   
65 [0x41]:           throw    
66 [0x42]:           nop   
67 [0x43]: line: 249 movi #10, ebx   
69 [0x45]:           loadl ecx, fp+1   
70 [0x46]:           mul ecx, ebx -> ebx   
71 [0x47]:           movu8 ebx, ebx   
72 [0x48]:           smovr_2 ebx, fp+1   
73 [0x49]: line: 250 pushl 0   
74 [0x4a]:           loadl ebx, fp+2   
75 [0x4b]:           movr egx, ebx   
76 [0x4c]:           inc ebx   
77 [0x4d]:           smovr_2 ebx, fp+2   
78 [0x4e]:           rstore egx   
79 [0x4f]:           call @1981 // <std#string.at>   
80 [0x50]:           loadval ebx   
81 [0x51]:           rstore ebx   
82 [0x52]:           movi #48, ebx   
84 [0x54]:           loadval ecx   
85 [0x55]:           sub ecx, ebx -> ebx   
86 [0x56]:           loadl ecx, fp+1   
87 [0x57]:           add ecx, ebx -> ebx   
88 [0x58]:           movu8 ebx, ebx   
89 [0x59]:           smovr_2 ebx, fp+1   
90 [0x5a]:           jmp @37   
91 [0x5b]: line: 252 loadl ebx, fp+3   
92 [0x5c]:           movr cmt, ebx   
93 [0x5d]:           jne 98   
94 [0x5e]: line: 253 loadl ebx, fp+1   
95 [0x5f]:           neg ebx, ebx   
96 [0x60]:           movu8 ebx, ebx   
97 [0x61]:           smovr_2 ebx, fp+1   
98 [0x62]:           nop   
99 [0x63]: line: 254 loadl ebx, fp+1   
100 [0x64]:           return_val ebx   
101 [0x65]:           ret   
102 [0x66]:           nop   


function: std#integer<_uint8>.to_ulong[1476] params(0) in file: /usr/include/sharp//primitives.sharp:258:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 258 new_class @0 // std#__srt_global   
1 [0x1]:           idiv adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint8>.to_long[1477] params(0) in file: /usr/include/sharp//primitives.sharp:259:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 259 new_class @0 // std#__srt_global   
1 [0x1]:           imod adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint8>.to_uint[1478] params(0) in file: /usr/include/sharp//primitives.sharp:260:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 260 new_class @0 // std#__srt_global   
1 [0x1]:           pop   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint8>.to_int[1479] params(0) in file: /usr/include/sharp//primitives.sharp:261:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 261 new_class @0 // std#__srt_global   
1 [0x1]:           inc adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint8>.to_ushort[1480] params(0) in file: /usr/include/sharp//primitives.sharp:262:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 262 new_class @0 // std#__srt_global   
1 [0x1]:           dec adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint8>.to_short[1481] params(0) in file: /usr/include/sharp//primitives.sharp:263:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 263 new_class @0 // std#__srt_global   
1 [0x1]:           movr adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint8>.to_uchar[1482] params(0) in file: /usr/include/sharp//primitives.sharp:264:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 264 new_class @0 // std#__srt_global   
1 [0x1]:           brh   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint8>.to_char[1483] params(0) in file: /usr/include/sharp//primitives.sharp:265:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 265 new_class @0 // std#__srt_global   
1 [0x1]:           ife   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint8>.to_byte[1484] params(0) in file: /usr/include/sharp//primitives.sharp:266:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 266 new_class @0 // std#__srt_global   
1 [0x1]:           ifne   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint8>.to_bool[1485] params(0) in file: /usr/include/sharp//primitives.sharp:267:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 267 new_class @0 // std#__srt_global   
1 [0x1]:           lt adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_uint8>.to_double[1486] params(0) in file: /usr/include/sharp//primitives.sharp:268:8: note:  
		    def to_double() := new double { value };
		       ^

0 [0x0]: line: 268 new_class @0 // std#__srt_global   
1 [0x1]:           gt adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_uint8>.get_value[1487] params(0) in file: /usr/include/sharp//primitives.sharp:270:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 270 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std#integer<_uint8>.integer[1488] params(0) in file: /usr/include/sharp//primitives.sharp:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#integer<_int8>.integer[1489] params(1) in file: /usr/include/sharp//primitives.sharp:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 9 ipushl #1   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         mov8 ebx, ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         ret   


function: std#integer<_int8>.hash[1490] params(0) in file: /usr/include/sharp//primitives.sharp:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 13 new_class @0 // std#__srt_global   
1 [0x1]:          imod adx, #? (112)   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @2426 // <std#long.long>   
11 [0xb]:          popobj2    
12 [0xc]:          returnobj   
13 [0xd]:          ret   


overload function: std#integer<_int8>.operator!=[1491] params(1) in file: /usr/include/sharp//primitives.sharp:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator==[1492] params(1) in file: /usr/include/sharp//primitives.sharp:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator!=[1493] params(1) in file: /usr/include/sharp//primitives.sharp:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator==[1494] params(1) in file: /usr/include/sharp//primitives.sharp:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator!=[1495] params(1) in file: /usr/include/sharp//primitives.sharp:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator==[1496] params(1) in file: /usr/include/sharp//primitives.sharp:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator!=[1497] params(1) in file: /usr/include/sharp//primitives.sharp:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator==[1498] params(1) in file: /usr/include/sharp//primitives.sharp:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator!=[1499] params(1) in file: /usr/include/sharp//primitives.sharp:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator==[1500] params(1) in file: /usr/include/sharp//primitives.sharp:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator!=[1501] params(1) in file: /usr/include/sharp//primitives.sharp:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator==[1502] params(1) in file: /usr/include/sharp//primitives.sharp:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator!=[1503] params(1) in file: /usr/include/sharp//primitives.sharp:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator==[1504] params(1) in file: /usr/include/sharp//primitives.sharp:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator!=[1505] params(1) in file: /usr/include/sharp//primitives.sharp:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator==[1506] params(1) in file: /usr/include/sharp//primitives.sharp:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator!=[1507] params(1) in file: /usr/include/sharp//primitives.sharp:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator==[1508] params(1) in file: /usr/include/sharp//primitives.sharp:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator!=[1509] params(1) in file: /usr/include/sharp//primitives.sharp:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator==[1510] params(1) in file: /usr/include/sharp//primitives.sharp:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator==[1511] params(1) in file: /usr/include/sharp//primitives.sharp:36:8: note:  
		    def operator==(num : double) := (value==num.value);
		       ^

0 [0x0]: line: 36 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator+[1512] params(1) in file: /usr/include/sharp//primitives.sharp:38:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator+[1513] params(1) in file: /usr/include/sharp//primitives.sharp:39:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator+[1514] params(1) in file: /usr/include/sharp//primitives.sharp:40:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator+[1515] params(1) in file: /usr/include/sharp//primitives.sharp:41:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator+[1516] params(1) in file: /usr/include/sharp//primitives.sharp:42:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator+[1517] params(1) in file: /usr/include/sharp//primitives.sharp:43:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator+[1518] params(1) in file: /usr/include/sharp//primitives.sharp:44:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator+[1519] params(1) in file: /usr/include/sharp//primitives.sharp:45:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator+[1520] params(1) in file: /usr/include/sharp//primitives.sharp:46:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator+[1521] params(1) in file: /usr/include/sharp//primitives.sharp:47:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator+[1522] params(1) in file: /usr/include/sharp//primitives.sharp:48:8: note:  
		    def operator+(num : double)   := (value+num.value);
		       ^

0 [0x0]: line: 48 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator+[1523] params(1) in file: /usr/include/sharp//primitives.sharp:49:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          add ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int8>.operator-[1524] params(1) in file: /usr/include/sharp//primitives.sharp:51:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator-[1525] params(1) in file: /usr/include/sharp//primitives.sharp:52:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator-[1526] params(1) in file: /usr/include/sharp//primitives.sharp:53:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator-[1527] params(1) in file: /usr/include/sharp//primitives.sharp:54:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator-[1528] params(1) in file: /usr/include/sharp//primitives.sharp:55:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator-[1529] params(1) in file: /usr/include/sharp//primitives.sharp:56:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator-[1530] params(1) in file: /usr/include/sharp//primitives.sharp:57:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator-[1531] params(1) in file: /usr/include/sharp//primitives.sharp:58:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator-[1532] params(1) in file: /usr/include/sharp//primitives.sharp:59:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator-[1533] params(1) in file: /usr/include/sharp//primitives.sharp:60:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 60 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator-[1534] params(1) in file: /usr/include/sharp//primitives.sharp:61:8: note:  
		    def operator-(num : double)   := (value-num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator-[1535] params(1) in file: /usr/include/sharp//primitives.sharp:62:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          sub ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int8>.operator*[1536] params(1) in file: /usr/include/sharp//primitives.sharp:64:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator*[1537] params(1) in file: /usr/include/sharp//primitives.sharp:65:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator*[1538] params(1) in file: /usr/include/sharp//primitives.sharp:66:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator*[1539] params(1) in file: /usr/include/sharp//primitives.sharp:67:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator*[1540] params(1) in file: /usr/include/sharp//primitives.sharp:68:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator*[1541] params(1) in file: /usr/include/sharp//primitives.sharp:69:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator*[1542] params(1) in file: /usr/include/sharp//primitives.sharp:70:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator*[1543] params(1) in file: /usr/include/sharp//primitives.sharp:71:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator*[1544] params(1) in file: /usr/include/sharp//primitives.sharp:72:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 72 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator*[1545] params(1) in file: /usr/include/sharp//primitives.sharp:73:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator*[1546] params(1) in file: /usr/include/sharp//primitives.sharp:74:8: note:  
		    def operator*(num : double)   := (value*num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator*[1547] params(1) in file: /usr/include/sharp//primitives.sharp:75:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mul ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int8>.operator/[1548] params(1) in file: /usr/include/sharp//primitives.sharp:77:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator/[1549] params(1) in file: /usr/include/sharp//primitives.sharp:78:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator/[1550] params(1) in file: /usr/include/sharp//primitives.sharp:79:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator/[1551] params(1) in file: /usr/include/sharp//primitives.sharp:80:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator/[1552] params(1) in file: /usr/include/sharp//primitives.sharp:81:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator/[1553] params(1) in file: /usr/include/sharp//primitives.sharp:82:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator/[1554] params(1) in file: /usr/include/sharp//primitives.sharp:83:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator/[1555] params(1) in file: /usr/include/sharp//primitives.sharp:84:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 84 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator/[1556] params(1) in file: /usr/include/sharp//primitives.sharp:85:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator/[1557] params(1) in file: /usr/include/sharp//primitives.sharp:86:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator/[1558] params(1) in file: /usr/include/sharp//primitives.sharp:87:8: note:  
		    def operator/(num : double)   := (value/num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator/[1559] params(1) in file: /usr/include/sharp//primitives.sharp:88:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          div ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<_int8>.operator%[1560] params(1) in file: /usr/include/sharp//primitives.sharp:90:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator%[1561] params(1) in file: /usr/include/sharp//primitives.sharp:91:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator%[1562] params(1) in file: /usr/include/sharp//primitives.sharp:92:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator%[1563] params(1) in file: /usr/include/sharp//primitives.sharp:93:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator%[1564] params(1) in file: /usr/include/sharp//primitives.sharp:94:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator%[1565] params(1) in file: /usr/include/sharp//primitives.sharp:95:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator%[1566] params(1) in file: /usr/include/sharp//primitives.sharp:96:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 96 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator%[1567] params(1) in file: /usr/include/sharp//primitives.sharp:97:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator%[1568] params(1) in file: /usr/include/sharp//primitives.sharp:98:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator%[1569] params(1) in file: /usr/include/sharp//primitives.sharp:99:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<_int8>.operator%[1570] params(1) in file: /usr/include/sharp//primitives.sharp:100:8: note:  
		    def operator%(num : double)   := (value%num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator%[1571] params(1) in file: /usr/include/sharp//primitives.sharp:101:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           mod ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int8>.operator<[1572] params(1) in file: /usr/include/sharp//primitives.sharp:103:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<[1573] params(1) in file: /usr/include/sharp//primitives.sharp:104:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<[1574] params(1) in file: /usr/include/sharp//primitives.sharp:105:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<[1575] params(1) in file: /usr/include/sharp//primitives.sharp:106:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<[1576] params(1) in file: /usr/include/sharp//primitives.sharp:107:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<[1577] params(1) in file: /usr/include/sharp//primitives.sharp:108:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 108 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<[1578] params(1) in file: /usr/include/sharp//primitives.sharp:109:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<[1579] params(1) in file: /usr/include/sharp//primitives.sharp:110:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<[1580] params(1) in file: /usr/include/sharp//primitives.sharp:111:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<[1581] params(1) in file: /usr/include/sharp//primitives.sharp:112:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<[1582] params(1) in file: /usr/include/sharp//primitives.sharp:113:8: note:  
		    def operator<(num : double)   := (value<num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<[1583] params(1) in file: /usr/include/sharp//primitives.sharp:114:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           lt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int8>.operator>[1584] params(1) in file: /usr/include/sharp//primitives.sharp:116:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>[1585] params(1) in file: /usr/include/sharp//primitives.sharp:117:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>[1586] params(1) in file: /usr/include/sharp//primitives.sharp:118:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>[1587] params(1) in file: /usr/include/sharp//primitives.sharp:119:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>[1588] params(1) in file: /usr/include/sharp//primitives.sharp:120:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 120 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>[1589] params(1) in file: /usr/include/sharp//primitives.sharp:121:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>[1590] params(1) in file: /usr/include/sharp//primitives.sharp:122:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>[1591] params(1) in file: /usr/include/sharp//primitives.sharp:123:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>[1592] params(1) in file: /usr/include/sharp//primitives.sharp:124:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>[1593] params(1) in file: /usr/include/sharp//primitives.sharp:125:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>[1594] params(1) in file: /usr/include/sharp//primitives.sharp:126:8: note:  
		    def operator>(num : double)   := (value>num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>[1595] params(1) in file: /usr/include/sharp//primitives.sharp:127:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int8>.operator<=[1596] params(1) in file: /usr/include/sharp//primitives.sharp:129:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<=[1597] params(1) in file: /usr/include/sharp//primitives.sharp:130:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<=[1598] params(1) in file: /usr/include/sharp//primitives.sharp:131:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<=[1599] params(1) in file: /usr/include/sharp//primitives.sharp:132:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 132 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<=[1600] params(1) in file: /usr/include/sharp//primitives.sharp:133:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<=[1601] params(1) in file: /usr/include/sharp//primitives.sharp:134:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<=[1602] params(1) in file: /usr/include/sharp//primitives.sharp:135:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<=[1603] params(1) in file: /usr/include/sharp//primitives.sharp:136:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<=[1604] params(1) in file: /usr/include/sharp//primitives.sharp:137:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<=[1605] params(1) in file: /usr/include/sharp//primitives.sharp:138:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<=[1606] params(1) in file: /usr/include/sharp//primitives.sharp:139:8: note:  
		    def operator<=(num : double)   := (value>=num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<=[1607] params(1) in file: /usr/include/sharp//primitives.sharp:140:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int8>.operator**[1608] params(1) in file: /usr/include/sharp//primitives.sharp:142:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator**[1609] params(1) in file: /usr/include/sharp//primitives.sharp:143:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator**[1610] params(1) in file: /usr/include/sharp//primitives.sharp:144:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 144 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator**[1611] params(1) in file: /usr/include/sharp//primitives.sharp:145:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator**[1612] params(1) in file: /usr/include/sharp//primitives.sharp:146:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator**[1613] params(1) in file: /usr/include/sharp//primitives.sharp:147:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator**[1614] params(1) in file: /usr/include/sharp//primitives.sharp:148:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator**[1615] params(1) in file: /usr/include/sharp//primitives.sharp:149:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator**[1616] params(1) in file: /usr/include/sharp//primitives.sharp:150:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator**[1617] params(1) in file: /usr/include/sharp//primitives.sharp:151:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator**[1618] params(1) in file: /usr/include/sharp//primitives.sharp:152:8: note:  
		    def operator**(num : double)   := (value**num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator**[1619] params(1) in file: /usr/include/sharp//primitives.sharp:153:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           exp ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int8>.operator<<[1620] params(1) in file: /usr/include/sharp//primitives.sharp:155:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<<[1621] params(1) in file: /usr/include/sharp//primitives.sharp:156:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<<[1622] params(1) in file: /usr/include/sharp//primitives.sharp:157:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<<[1623] params(1) in file: /usr/include/sharp//primitives.sharp:158:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<<[1624] params(1) in file: /usr/include/sharp//primitives.sharp:159:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<<[1625] params(1) in file: /usr/include/sharp//primitives.sharp:160:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<<[1626] params(1) in file: /usr/include/sharp//primitives.sharp:161:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<<[1627] params(1) in file: /usr/include/sharp//primitives.sharp:162:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<<[1628] params(1) in file: /usr/include/sharp//primitives.sharp:163:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<<[1629] params(1) in file: /usr/include/sharp//primitives.sharp:164:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<<[1630] params(1) in file: /usr/include/sharp//primitives.sharp:165:8: note:  
		    def operator<<(num : double)   := (value<<num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator<<[1631] params(1) in file: /usr/include/sharp//primitives.sharp:166:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shl ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int8>.operator>>[1632] params(1) in file: /usr/include/sharp//primitives.sharp:168:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 168 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>>[1633] params(1) in file: /usr/include/sharp//primitives.sharp:169:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>>[1634] params(1) in file: /usr/include/sharp//primitives.sharp:170:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>>[1635] params(1) in file: /usr/include/sharp//primitives.sharp:171:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>>[1636] params(1) in file: /usr/include/sharp//primitives.sharp:172:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>>[1637] params(1) in file: /usr/include/sharp//primitives.sharp:173:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>>[1638] params(1) in file: /usr/include/sharp//primitives.sharp:174:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>>[1639] params(1) in file: /usr/include/sharp//primitives.sharp:175:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>>[1640] params(1) in file: /usr/include/sharp//primitives.sharp:176:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>>[1641] params(1) in file: /usr/include/sharp//primitives.sharp:177:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>>[1642] params(1) in file: /usr/include/sharp//primitives.sharp:178:8: note:  
		    def operator>>(num : double)   := (value>>num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator>>[1643] params(1) in file: /usr/include/sharp//primitives.sharp:179:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shr ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int8>.operator^[1644] params(1) in file: /usr/include/sharp//primitives.sharp:181:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator^[1645] params(1) in file: /usr/include/sharp//primitives.sharp:182:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator^[1646] params(1) in file: /usr/include/sharp//primitives.sharp:183:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator^[1647] params(1) in file: /usr/include/sharp//primitives.sharp:184:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator^[1648] params(1) in file: /usr/include/sharp//primitives.sharp:185:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator^[1649] params(1) in file: /usr/include/sharp//primitives.sharp:186:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator^[1650] params(1) in file: /usr/include/sharp//primitives.sharp:187:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator^[1651] params(1) in file: /usr/include/sharp//primitives.sharp:188:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator^[1652] params(1) in file: /usr/include/sharp//primitives.sharp:189:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator^[1653] params(1) in file: /usr/include/sharp//primitives.sharp:190:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator^[1654] params(1) in file: /usr/include/sharp//primitives.sharp:191:8: note:  
		    def operator^(num : double)   := (value^num.value);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator^[1655] params(1) in file: /usr/include/sharp//primitives.sharp:192:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 192 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           xor ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int8>.operator&[1656] params(1) in file: /usr/include/sharp//primitives.sharp:194:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator&[1657] params(1) in file: /usr/include/sharp//primitives.sharp:195:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator&[1658] params(1) in file: /usr/include/sharp//primitives.sharp:196:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator&[1659] params(1) in file: /usr/include/sharp//primitives.sharp:197:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator&[1660] params(1) in file: /usr/include/sharp//primitives.sharp:198:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator&[1661] params(1) in file: /usr/include/sharp//primitives.sharp:199:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator&[1662] params(1) in file: /usr/include/sharp//primitives.sharp:200:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator&[1663] params(1) in file: /usr/include/sharp//primitives.sharp:201:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator&[1664] params(1) in file: /usr/include/sharp//primitives.sharp:202:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator&[1665] params(1) in file: /usr/include/sharp//primitives.sharp:203:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator&[1666] params(1) in file: /usr/include/sharp//primitives.sharp:204:8: note:  
		    def operator&(num : double)   := (value&num.value);
		       ^

0 [0x0]: line: 204 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator&[1667] params(1) in file: /usr/include/sharp//primitives.sharp:205:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           uand ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int8>.operator|[1668] params(1) in file: /usr/include/sharp//primitives.sharp:207:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 207 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator|[1669] params(1) in file: /usr/include/sharp//primitives.sharp:208:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 208 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator|[1670] params(1) in file: /usr/include/sharp//primitives.sharp:209:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 209 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator|[1671] params(1) in file: /usr/include/sharp//primitives.sharp:210:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator|[1672] params(1) in file: /usr/include/sharp//primitives.sharp:211:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 211 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator|[1673] params(1) in file: /usr/include/sharp//primitives.sharp:212:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 212 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator|[1674] params(1) in file: /usr/include/sharp//primitives.sharp:213:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 213 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator|[1675] params(1) in file: /usr/include/sharp//primitives.sharp:214:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 214 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator|[1676] params(1) in file: /usr/include/sharp//primitives.sharp:215:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 215 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator|[1677] params(1) in file: /usr/include/sharp//primitives.sharp:216:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 216 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator|[1678] params(1) in file: /usr/include/sharp//primitives.sharp:217:8: note:  
		    def operator|(num : double)   := (value|num.value);
		       ^

0 [0x0]: line: 217 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<_int8>.operator|[1679] params(1) in file: /usr/include/sharp//primitives.sharp:218:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 218 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<_int8>.operator!=[1680] params(1) in file: /usr/include/sharp//primitives.sharp:220:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 220 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           tne ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int8>.operator==[1681] params(1) in file: /usr/include/sharp//primitives.sharp:221:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 221 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           test ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<_int8>.operator=[1682] params(1) in file: /usr/include/sharp//primitives.sharp:222:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 222 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           mov8 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std#integer<_int8>.to_string[1683] params(0) in file: /usr/include/sharp//primitives.sharp:224:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 225 new_class @0 // std#__srt_global   
1 [0x1]:           ret   
2 [0x2]:           dup    
3 [0x3]:           newstr @24 //    
4 [0x4]:           call @1959 // <std#string.string>   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           call @1992 // <std#string.operator+>   
13 [0xd]:           popobj2    
14 [0xe]:           returnobj   
15 [0xf]:           ret   


function: std#integer<_int8>.parse[1684] params(1) in file: /usr/include/sharp//primitives.sharp:228:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 229 movi #0, ebx   
2 [0x2]:           mov8 ebx, ebx   
3 [0x3]:           smovr_2 ebx, fp+1   
4 [0x4]: line: 231 movi #0, ebx   
6 [0x6]:           movr cmt, ebx   
7 [0x7]:           jne 14   
8 [0x8]: line: 232 pushl 0   
9 [0x9]:           call @2252 // <std#__srt_global.strtod>   
10 [0xa]:           loadval ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   
13 [0xd]:           jmp @102   
14 [0xe]: line: 234 istorel 0, fp+2   
16 [0x10]: line: 235 istorel 0, fp+3   
18 [0x12]: line: 236 pushl 0   
19 [0x13]:           call @2000 // <std#string.size>   
20 [0x14]:           ipopl 4   
21 [0x15]: line: 238 pushl 0   
22 [0x16]:           istore 0   
24 [0x18]:           call @1981 // <std#string.at>   
25 [0x19]:           loadval ebx   
26 [0x1a]:           rstore ebx   
27 [0x1b]:           movi #45, ebx   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           test ecx, ebx   
31 [0x1f]:           jne 36   
32 [0x20]: line: 239 istorel 1, fp+3   
34 [0x22]: line: 240 istorel 1, fp+2   
36 [0x24]:           nop   
37 [0x25]: line: 243 ipushl #2   
38 [0x26]:           loadl ebx, fp+4   
39 [0x27]:           loadval ecx   
40 [0x28]:           lt ecx, ebx   
41 [0x29]:           movr ebx, cmt   
42 [0x2a]:           movr cmt, ebx   
43 [0x2b]:           jne 91   
44 [0x2c]: line: 244 pushl 0   
45 [0x2d]:           ipushl #2   
46 [0x2e]:           call @1981 // <std#string.at>   
47 [0x2f]:           call @3128 // <std#char.is_digit>   
48 [0x30]:           loadval ebx   
49 [0x31]:           not ebx, ebx   
50 [0x32]:           movr cmt, ebx   
51 [0x33]:           jne 66   
52 [0x34]: line: 245 new_class @0 // std#__srt_global   
53 [0x35]:           skip @0 // pc = 53   
54 [0x36]:           dup    
55 [0x37]:           new_class @0 // std#__srt_global   
56 [0x38]:           ret   
57 [0x39]:           dup    
58 [0x3a]:           newstr @148 // illegal char in string:    
59 [0x3b]:           call @1959 // <std#string.string>   
60 [0x3c]:           pushl 0   
61 [0x3d]:           ipushl #2   
62 [0x3e]:           call @1981 // <std#string.at>   
63 [0x3f]:           call @1992 // <std#string.operator+>   
64 [0x40]:           call @3549 // <std#illegal_argument_exception.illegal_argument_exception>   
65 [0x41]:           throw    
66 [0x42]:           nop   
67 [0x43]: line: 249 movi #10, ebx   
69 [0x45]:           loadl ecx, fp+1   
70 [0x46]:           mul ecx, ebx -> ebx   
71 [0x47]:           mov8 ebx, ebx   
72 [0x48]:           smovr_2 ebx, fp+1   
73 [0x49]: line: 250 pushl 0   
74 [0x4a]:           loadl ebx, fp+2   
75 [0x4b]:           movr egx, ebx   
76 [0x4c]:           inc ebx   
77 [0x4d]:           smovr_2 ebx, fp+2   
78 [0x4e]:           rstore egx   
79 [0x4f]:           call @1981 // <std#string.at>   
80 [0x50]:           loadval ebx   
81 [0x51]:           rstore ebx   
82 [0x52]:           movi #48, ebx   
84 [0x54]:           loadval ecx   
85 [0x55]:           sub ecx, ebx -> ebx   
86 [0x56]:           loadl ecx, fp+1   
87 [0x57]:           add ecx, ebx -> ebx   
88 [0x58]:           mov8 ebx, ebx   
89 [0x59]:           smovr_2 ebx, fp+1   
90 [0x5a]:           jmp @37   
91 [0x5b]: line: 252 loadl ebx, fp+3   
92 [0x5c]:           movr cmt, ebx   
93 [0x5d]:           jne 98   
94 [0x5e]: line: 253 loadl ebx, fp+1   
95 [0x5f]:           neg ebx, ebx   
96 [0x60]:           mov8 ebx, ebx   
97 [0x61]:           smovr_2 ebx, fp+1   
98 [0x62]:           nop   
99 [0x63]: line: 254 loadl ebx, fp+1   
100 [0x64]:           return_val ebx   
101 [0x65]:           ret   
102 [0x66]:           nop   


function: std#integer<_int8>.to_ulong[1685] params(0) in file: /usr/include/sharp//primitives.sharp:258:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 258 new_class @0 // std#__srt_global   
1 [0x1]:           idiv adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int8>.to_long[1686] params(0) in file: /usr/include/sharp//primitives.sharp:259:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 259 new_class @0 // std#__srt_global   
1 [0x1]:           imod adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int8>.to_uint[1687] params(0) in file: /usr/include/sharp//primitives.sharp:260:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 260 new_class @0 // std#__srt_global   
1 [0x1]:           pop   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int8>.to_int[1688] params(0) in file: /usr/include/sharp//primitives.sharp:261:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 261 new_class @0 // std#__srt_global   
1 [0x1]:           inc adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int8>.to_ushort[1689] params(0) in file: /usr/include/sharp//primitives.sharp:262:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 262 new_class @0 // std#__srt_global   
1 [0x1]:           dec adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int8>.to_short[1690] params(0) in file: /usr/include/sharp//primitives.sharp:263:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 263 new_class @0 // std#__srt_global   
1 [0x1]:           movr adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int8>.to_uchar[1691] params(0) in file: /usr/include/sharp//primitives.sharp:264:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 264 new_class @0 // std#__srt_global   
1 [0x1]:           brh   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int8>.to_char[1692] params(0) in file: /usr/include/sharp//primitives.sharp:265:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 265 new_class @0 // std#__srt_global   
1 [0x1]:           ife   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int8>.to_byte[1693] params(0) in file: /usr/include/sharp//primitives.sharp:266:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 266 new_class @0 // std#__srt_global   
1 [0x1]:           ifne   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int8>.to_bool[1694] params(0) in file: /usr/include/sharp//primitives.sharp:267:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 267 new_class @0 // std#__srt_global   
1 [0x1]:           lt adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<_int8>.to_double[1695] params(0) in file: /usr/include/sharp//primitives.sharp:268:8: note:  
		    def to_double() := new double { value };
		       ^

0 [0x0]: line: 268 new_class @0 // std#__srt_global   
1 [0x1]:           gt adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<_int8>.get_value[1696] params(0) in file: /usr/include/sharp//primitives.sharp:270:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 270 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std#integer<_int8>.integer[1697] params(0) in file: /usr/include/sharp//primitives.sharp:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#integer<var>.integer[1698] params(1) in file: /usr/include/sharp//primitives.sharp:8:12: note:  
		    integer(initial_val : var) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 9 ipushl #1   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         movi #0, adx   
8 [0x8]:         rmov adx, ebx   
9 [0x9]:         ret   


function: std#integer<var>.hash[1699] params(0) in file: /usr/include/sharp//primitives.sharp:12:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 13 new_class @0 // std#__srt_global   
1 [0x1]:          imod adx, #? (112)   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @2426 // <std#long.long>   
11 [0xb]:          popobj2    
12 [0xc]:          returnobj   
13 [0xd]:          ret   


overload function: std#integer<var>.operator!=[1700] params(1) in file: /usr/include/sharp//primitives.sharp:16:8: note:  
		    def operator!=(num : ulong) := (value!=num.value);
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<var>.operator==[1701] params(1) in file: /usr/include/sharp//primitives.sharp:17:8: note:  
		    def operator==(num : ulong) := (value==num.value);
		       ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<var>.operator!=[1702] params(1) in file: /usr/include/sharp//primitives.sharp:18:8: note:  
		    def operator!=(num : long) := (value!=num.value);
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<var>.operator==[1703] params(1) in file: /usr/include/sharp//primitives.sharp:19:8: note:  
		    def operator==(num : long) := (value==num.value);
		       ^

0 [0x0]: line: 19 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<var>.operator!=[1704] params(1) in file: /usr/include/sharp//primitives.sharp:20:8: note:  
		    def operator!=(num : uint) := (value!=num.value);
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<var>.operator==[1705] params(1) in file: /usr/include/sharp//primitives.sharp:21:8: note:  
		    def operator==(num : uint) := (value==num.value);
		       ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<var>.operator!=[1706] params(1) in file: /usr/include/sharp//primitives.sharp:22:8: note:  
		    def operator!=(num : int) := (value!=num.value);
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<var>.operator==[1707] params(1) in file: /usr/include/sharp//primitives.sharp:23:8: note:  
		    def operator==(num : int) := (value==num.value);
		       ^

0 [0x0]: line: 23 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<var>.operator!=[1708] params(1) in file: /usr/include/sharp//primitives.sharp:24:8: note:  
		    def operator!=(num : ushort) := (value!=num.value);
		       ^

0 [0x0]: line: 24 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<var>.operator==[1709] params(1) in file: /usr/include/sharp//primitives.sharp:25:8: note:  
		    def operator==(num : ushort) := (value==num.value);
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<var>.operator!=[1710] params(1) in file: /usr/include/sharp//primitives.sharp:26:8: note:  
		    def operator!=(num : short) := (value!=num.value);
		       ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<var>.operator==[1711] params(1) in file: /usr/include/sharp//primitives.sharp:27:8: note:  
		    def operator==(num : short) := (value==num.value);
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<var>.operator!=[1712] params(1) in file: /usr/include/sharp//primitives.sharp:28:8: note:  
		    def operator!=(num : uchar) := (value!=num.value);
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<var>.operator==[1713] params(1) in file: /usr/include/sharp//primitives.sharp:29:8: note:  
		    def operator==(num : uchar) := (value==num.value);
		       ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<var>.operator!=[1714] params(1) in file: /usr/include/sharp//primitives.sharp:30:8: note:  
		    def operator!=(num : char) := (value!=num.value);
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<var>.operator==[1715] params(1) in file: /usr/include/sharp//primitives.sharp:31:8: note:  
		    def operator==(num : char) := (value==num.value);
		       ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<var>.operator!=[1716] params(1) in file: /usr/include/sharp//primitives.sharp:32:8: note:  
		    def operator!=(num : byte) := (value!=num.value);
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<var>.operator==[1717] params(1) in file: /usr/include/sharp//primitives.sharp:33:8: note:  
		    def operator==(num : byte) := (value==num.value);
		       ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<var>.operator!=[1718] params(1) in file: /usr/include/sharp//primitives.sharp:34:8: note:  
		    def operator!=(num : bool) := (value!=num.value);
		       ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<var>.operator==[1719] params(1) in file: /usr/include/sharp//primitives.sharp:35:8: note:  
		    def operator==(num : bool) := (value==num.value);
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<var>.operator==[1720] params(1) in file: /usr/include/sharp//primitives.sharp:36:8: note:  
		    def operator==(num : double) := (value==num.value);
		       ^

0 [0x0]: line: 36 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#integer<var>.operator+[1721] params(1) in file: /usr/include/sharp//primitives.sharp:38:8: note:  
		    def operator+(num : ulong)  := (value+num.value);
		       ^

0 [0x0]: line: 38 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator+[1722] params(1) in file: /usr/include/sharp//primitives.sharp:39:8: note:  
		    def operator+(num : long)   := (value+num.value);
		       ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator+[1723] params(1) in file: /usr/include/sharp//primitives.sharp:40:8: note:  
		    def operator+(num : uint)   := (value+num.value);
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator+[1724] params(1) in file: /usr/include/sharp//primitives.sharp:41:8: note:  
		    def operator+(num : int)    := (value+num.value);
		       ^

0 [0x0]: line: 41 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator+[1725] params(1) in file: /usr/include/sharp//primitives.sharp:42:8: note:  
		    def operator+(num : ushort) := (value+num.value);
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator+[1726] params(1) in file: /usr/include/sharp//primitives.sharp:43:8: note:  
		    def operator+(num : short)  := (value+num.value);
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator+[1727] params(1) in file: /usr/include/sharp//primitives.sharp:44:8: note:  
		    def operator+(num : uchar)  := (value+num.value);
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator+[1728] params(1) in file: /usr/include/sharp//primitives.sharp:45:8: note:  
		    def operator+(num : char)   := (value+num.value);
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator+[1729] params(1) in file: /usr/include/sharp//primitives.sharp:46:8: note:  
		    def operator+(num : byte)   := (value+num.value);
		       ^

0 [0x0]: line: 46 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator+[1730] params(1) in file: /usr/include/sharp//primitives.sharp:47:8: note:  
		    def operator+(num : bool)   := (value+num.value);
		       ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator+[1731] params(1) in file: /usr/include/sharp//primitives.sharp:48:8: note:  
		    def operator+(num : double)   := (value+num.value);
		       ^

0 [0x0]: line: 48 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator+[1732] params(1) in file: /usr/include/sharp//primitives.sharp:49:8: note:  
		    def operator+(num : var)    := (value+num);
		       ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          add ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<var>.operator-[1733] params(1) in file: /usr/include/sharp//primitives.sharp:51:8: note:  
		    def operator-(num : ulong)  := (value-num.value);
		       ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator-[1734] params(1) in file: /usr/include/sharp//primitives.sharp:52:8: note:  
		    def operator-(num : long)   := (value-num.value);
		       ^

0 [0x0]: line: 52 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator-[1735] params(1) in file: /usr/include/sharp//primitives.sharp:53:8: note:  
		    def operator-(num : uint)   := (value-num.value);
		       ^

0 [0x0]: line: 53 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator-[1736] params(1) in file: /usr/include/sharp//primitives.sharp:54:8: note:  
		    def operator-(num : int)    := (value-num.value);
		       ^

0 [0x0]: line: 54 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator-[1737] params(1) in file: /usr/include/sharp//primitives.sharp:55:8: note:  
		    def operator-(num : ushort) := (value-num.value);
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator-[1738] params(1) in file: /usr/include/sharp//primitives.sharp:56:8: note:  
		    def operator-(num : short)  := (value-num.value);
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator-[1739] params(1) in file: /usr/include/sharp//primitives.sharp:57:8: note:  
		    def operator-(num : uchar)  := (value-num.value);
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator-[1740] params(1) in file: /usr/include/sharp//primitives.sharp:58:8: note:  
		    def operator-(num : char)   := (value-num.value);
		       ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator-[1741] params(1) in file: /usr/include/sharp//primitives.sharp:59:8: note:  
		    def operator-(num : byte)   := (value-num.value);
		       ^

0 [0x0]: line: 59 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator-[1742] params(1) in file: /usr/include/sharp//primitives.sharp:60:8: note:  
		    def operator-(num : bool)   := (value-num.value);
		       ^

0 [0x0]: line: 60 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator-[1743] params(1) in file: /usr/include/sharp//primitives.sharp:61:8: note:  
		    def operator-(num : double)   := (value-num.value);
		       ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          sub ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator-[1744] params(1) in file: /usr/include/sharp//primitives.sharp:62:8: note:  
		    def operator-(num : var)    := (value-num);
		       ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          sub ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<var>.operator*[1745] params(1) in file: /usr/include/sharp//primitives.sharp:64:8: note:  
		    def operator*(num : ulong)  := (value*num.value);
		       ^

0 [0x0]: line: 64 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator*[1746] params(1) in file: /usr/include/sharp//primitives.sharp:65:8: note:  
		    def operator*(num : long)   := (value*num.value);
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator*[1747] params(1) in file: /usr/include/sharp//primitives.sharp:66:8: note:  
		    def operator*(num : uint)   := (value*num.value);
		       ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator*[1748] params(1) in file: /usr/include/sharp//primitives.sharp:67:8: note:  
		    def operator*(num : int)    := (value*num.value);
		       ^

0 [0x0]: line: 67 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator*[1749] params(1) in file: /usr/include/sharp//primitives.sharp:68:8: note:  
		    def operator*(num : ushort) := (value*num.value);
		       ^

0 [0x0]: line: 68 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator*[1750] params(1) in file: /usr/include/sharp//primitives.sharp:69:8: note:  
		    def operator*(num : short)  := (value*num.value);
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator*[1751] params(1) in file: /usr/include/sharp//primitives.sharp:70:8: note:  
		    def operator*(num : uchar)  := (value*num.value);
		       ^

0 [0x0]: line: 70 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator*[1752] params(1) in file: /usr/include/sharp//primitives.sharp:71:8: note:  
		    def operator*(num : char)   := (value*num.value);
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator*[1753] params(1) in file: /usr/include/sharp//primitives.sharp:72:8: note:  
		    def operator*(num : byte)   := (value*num.value);
		       ^

0 [0x0]: line: 72 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator*[1754] params(1) in file: /usr/include/sharp//primitives.sharp:73:8: note:  
		    def operator*(num : bool)   := (value*num.value);
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator*[1755] params(1) in file: /usr/include/sharp//primitives.sharp:74:8: note:  
		    def operator*(num : double)   := (value*num.value);
		       ^

0 [0x0]: line: 74 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mul ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator*[1756] params(1) in file: /usr/include/sharp//primitives.sharp:75:8: note:  
		    def operator*(num : var)    := (value*num);
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          mul ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<var>.operator/[1757] params(1) in file: /usr/include/sharp//primitives.sharp:77:8: note:  
		    def operator/(num : ulong)  := (value/num.value);
		       ^

0 [0x0]: line: 77 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator/[1758] params(1) in file: /usr/include/sharp//primitives.sharp:78:8: note:  
		    def operator/(num : long)   := (value/num.value);
		       ^

0 [0x0]: line: 78 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator/[1759] params(1) in file: /usr/include/sharp//primitives.sharp:79:8: note:  
		    def operator/(num : uint)   := (value/num.value);
		       ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator/[1760] params(1) in file: /usr/include/sharp//primitives.sharp:80:8: note:  
		    def operator/(num : int)    := (value/num.value);
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator/[1761] params(1) in file: /usr/include/sharp//primitives.sharp:81:8: note:  
		    def operator/(num : ushort) := (value/num.value);
		       ^

0 [0x0]: line: 81 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator/[1762] params(1) in file: /usr/include/sharp//primitives.sharp:82:8: note:  
		    def operator/(num : short)  := (value/num.value);
		       ^

0 [0x0]: line: 82 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator/[1763] params(1) in file: /usr/include/sharp//primitives.sharp:83:8: note:  
		    def operator/(num : uchar)  := (value/num.value);
		       ^

0 [0x0]: line: 83 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator/[1764] params(1) in file: /usr/include/sharp//primitives.sharp:84:8: note:  
		    def operator/(num : char)   := (value/num.value);
		       ^

0 [0x0]: line: 84 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator/[1765] params(1) in file: /usr/include/sharp//primitives.sharp:85:8: note:  
		    def operator/(num : byte)   := (value/num.value);
		       ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator/[1766] params(1) in file: /usr/include/sharp//primitives.sharp:86:8: note:  
		    def operator/(num : bool)   := (value/num.value);
		       ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator/[1767] params(1) in file: /usr/include/sharp//primitives.sharp:87:8: note:  
		    def operator/(num : double)   := (value/num.value);
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          div ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator/[1768] params(1) in file: /usr/include/sharp//primitives.sharp:88:8: note:  
		    def operator/(num : var)    := (value/num);
		       ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          div ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


overload function: std#integer<var>.operator%[1769] params(1) in file: /usr/include/sharp//primitives.sharp:90:8: note:  
		    def operator%(num : ulong)  := (value%num.value);
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator%[1770] params(1) in file: /usr/include/sharp//primitives.sharp:91:8: note:  
		    def operator%(num : long)   := (value%num.value);
		       ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator%[1771] params(1) in file: /usr/include/sharp//primitives.sharp:92:8: note:  
		    def operator%(num : uint)   := (value%num.value);
		       ^

0 [0x0]: line: 92 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator%[1772] params(1) in file: /usr/include/sharp//primitives.sharp:93:8: note:  
		    def operator%(num : int)    := (value%num.value);
		       ^

0 [0x0]: line: 93 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator%[1773] params(1) in file: /usr/include/sharp//primitives.sharp:94:8: note:  
		    def operator%(num : ushort) := (value%num.value);
		       ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator%[1774] params(1) in file: /usr/include/sharp//primitives.sharp:95:8: note:  
		    def operator%(num : short)  := (value%num.value);
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator%[1775] params(1) in file: /usr/include/sharp//primitives.sharp:96:8: note:  
		    def operator%(num : uchar)  := (value%num.value);
		       ^

0 [0x0]: line: 96 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator%[1776] params(1) in file: /usr/include/sharp//primitives.sharp:97:8: note:  
		    def operator%(num : char)   := (value%num.value);
		       ^

0 [0x0]: line: 97 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator%[1777] params(1) in file: /usr/include/sharp//primitives.sharp:98:8: note:  
		    def operator%(num : byte)   := (value%num.value);
		       ^

0 [0x0]: line: 98 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator%[1778] params(1) in file: /usr/include/sharp//primitives.sharp:99:8: note:  
		    def operator%(num : bool)   := (value%num.value);
		       ^

0 [0x0]: line: 99 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          mod ecx, ebx -> ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


overload function: std#integer<var>.operator%[1779] params(1) in file: /usr/include/sharp//primitives.sharp:100:8: note:  
		    def operator%(num : double)   := (value%num.value);
		       ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator%[1780] params(1) in file: /usr/include/sharp//primitives.sharp:101:8: note:  
		    def operator%(num : var)    := (value%num);
		       ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           mod ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<var>.operator<[1781] params(1) in file: /usr/include/sharp//primitives.sharp:103:8: note:  
		    def operator<(num : ulong)  := (value<num.value);
		       ^

0 [0x0]: line: 103 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<[1782] params(1) in file: /usr/include/sharp//primitives.sharp:104:8: note:  
		    def operator<(num : long)   := (value<num.value);
		       ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<[1783] params(1) in file: /usr/include/sharp//primitives.sharp:105:8: note:  
		    def operator<(num : uint)   := (value<num.value);
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<[1784] params(1) in file: /usr/include/sharp//primitives.sharp:106:8: note:  
		    def operator<(num : int)    := (value<num.value);
		       ^

0 [0x0]: line: 106 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<[1785] params(1) in file: /usr/include/sharp//primitives.sharp:107:8: note:  
		    def operator<(num : ushort) := (value<num.value);
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<[1786] params(1) in file: /usr/include/sharp//primitives.sharp:108:8: note:  
		    def operator<(num : short)  := (value<num.value);
		       ^

0 [0x0]: line: 108 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<[1787] params(1) in file: /usr/include/sharp//primitives.sharp:109:8: note:  
		    def operator<(num : uchar)  := (value<num.value);
		       ^

0 [0x0]: line: 109 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<[1788] params(1) in file: /usr/include/sharp//primitives.sharp:110:8: note:  
		    def operator<(num : char)   := (value<num.value);
		       ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<[1789] params(1) in file: /usr/include/sharp//primitives.sharp:111:8: note:  
		    def operator<(num : byte)   := (value<num.value);
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<[1790] params(1) in file: /usr/include/sharp//primitives.sharp:112:8: note:  
		    def operator<(num : bool)   := (value<num.value);
		       ^

0 [0x0]: line: 112 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<[1791] params(1) in file: /usr/include/sharp//primitives.sharp:113:8: note:  
		    def operator<(num : double)   := (value<num.value);
		       ^

0 [0x0]: line: 113 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<[1792] params(1) in file: /usr/include/sharp//primitives.sharp:114:8: note:  
		    def operator<(num : var)    := (value<num);
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           lt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<var>.operator>[1793] params(1) in file: /usr/include/sharp//primitives.sharp:116:8: note:  
		    def operator>(num : ulong)  := (value>num.value);
		       ^

0 [0x0]: line: 116 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator>[1794] params(1) in file: /usr/include/sharp//primitives.sharp:117:8: note:  
		    def operator>(num : long)   := (value>num.value);
		       ^

0 [0x0]: line: 117 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator>[1795] params(1) in file: /usr/include/sharp//primitives.sharp:118:8: note:  
		    def operator>(num : uint)   := (value>num.value);
		       ^

0 [0x0]: line: 118 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator>[1796] params(1) in file: /usr/include/sharp//primitives.sharp:119:8: note:  
		    def operator>(num : int)    := (value>num.value);
		       ^

0 [0x0]: line: 119 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator>[1797] params(1) in file: /usr/include/sharp//primitives.sharp:120:8: note:  
		    def operator>(num : ushort) := (value>num.value);
		       ^

0 [0x0]: line: 120 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator>[1798] params(1) in file: /usr/include/sharp//primitives.sharp:121:8: note:  
		    def operator>(num : short)  := (value>num.value);
		       ^

0 [0x0]: line: 121 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator>[1799] params(1) in file: /usr/include/sharp//primitives.sharp:122:8: note:  
		    def operator>(num : uchar)  := (value>num.value);
		       ^

0 [0x0]: line: 122 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator>[1800] params(1) in file: /usr/include/sharp//primitives.sharp:123:8: note:  
		    def operator>(num : char)   := (value>num.value);
		       ^

0 [0x0]: line: 123 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator>[1801] params(1) in file: /usr/include/sharp//primitives.sharp:124:8: note:  
		    def operator>(num : byte)   := (value>num.value);
		       ^

0 [0x0]: line: 124 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator>[1802] params(1) in file: /usr/include/sharp//primitives.sharp:125:8: note:  
		    def operator>(num : bool)   := (value>num.value);
		       ^

0 [0x0]: line: 125 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator>[1803] params(1) in file: /usr/include/sharp//primitives.sharp:126:8: note:  
		    def operator>(num : double)   := (value>num.value);
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gt ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator>[1804] params(1) in file: /usr/include/sharp//primitives.sharp:127:8: note:  
		    def operator>(num : var)    := (value>num);
		       ^

0 [0x0]: line: 127 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gt ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<var>.operator<=[1805] params(1) in file: /usr/include/sharp//primitives.sharp:129:8: note:  
		    def operator<=(num : ulong)  := (value>=num.value);
		       ^

0 [0x0]: line: 129 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<=[1806] params(1) in file: /usr/include/sharp//primitives.sharp:130:8: note:  
		    def operator<=(num : long)   := (value>=num.value);
		       ^

0 [0x0]: line: 130 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<=[1807] params(1) in file: /usr/include/sharp//primitives.sharp:131:8: note:  
		    def operator<=(num : uint)   := (value>=num.value);
		       ^

0 [0x0]: line: 131 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<=[1808] params(1) in file: /usr/include/sharp//primitives.sharp:132:8: note:  
		    def operator<=(num : int)    := (value>=num.value);
		       ^

0 [0x0]: line: 132 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<=[1809] params(1) in file: /usr/include/sharp//primitives.sharp:133:8: note:  
		    def operator<=(num : ushort) := (value>=num.value);
		       ^

0 [0x0]: line: 133 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<=[1810] params(1) in file: /usr/include/sharp//primitives.sharp:134:8: note:  
		    def operator<=(num : short)  := (value>=num.value);
		       ^

0 [0x0]: line: 134 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<=[1811] params(1) in file: /usr/include/sharp//primitives.sharp:135:8: note:  
		    def operator<=(num : uchar)  := (value>=num.value);
		       ^

0 [0x0]: line: 135 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<=[1812] params(1) in file: /usr/include/sharp//primitives.sharp:136:8: note:  
		    def operator<=(num : char)   := (value>=num.value);
		       ^

0 [0x0]: line: 136 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<=[1813] params(1) in file: /usr/include/sharp//primitives.sharp:137:8: note:  
		    def operator<=(num : byte)   := (value>=num.value);
		       ^

0 [0x0]: line: 137 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<=[1814] params(1) in file: /usr/include/sharp//primitives.sharp:138:8: note:  
		    def operator<=(num : bool)   := (value>=num.value);
		       ^

0 [0x0]: line: 138 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<=[1815] params(1) in file: /usr/include/sharp//primitives.sharp:139:8: note:  
		    def operator<=(num : double)   := (value>=num.value);
		       ^

0 [0x0]: line: 139 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           gte ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<=[1816] params(1) in file: /usr/include/sharp//primitives.sharp:140:8: note:  
		    def operator<=(num : var)    := (value>=num);
		       ^

0 [0x0]: line: 140 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<var>.operator**[1817] params(1) in file: /usr/include/sharp//primitives.sharp:142:8: note:  
		    def operator**(num : ulong)  := (value**num.value);
		       ^

0 [0x0]: line: 142 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator**[1818] params(1) in file: /usr/include/sharp//primitives.sharp:143:8: note:  
		    def operator**(num : long)   := (value**num.value);
		       ^

0 [0x0]: line: 143 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator**[1819] params(1) in file: /usr/include/sharp//primitives.sharp:144:8: note:  
		    def operator**(num : uint)   := (value**num.value);
		       ^

0 [0x0]: line: 144 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator**[1820] params(1) in file: /usr/include/sharp//primitives.sharp:145:8: note:  
		    def operator**(num : int)    := (value**num.value);
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator**[1821] params(1) in file: /usr/include/sharp//primitives.sharp:146:8: note:  
		    def operator**(num : ushort) := (value**num.value);
		       ^

0 [0x0]: line: 146 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator**[1822] params(1) in file: /usr/include/sharp//primitives.sharp:147:8: note:  
		    def operator**(num : short)  := (value**num.value);
		       ^

0 [0x0]: line: 147 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator**[1823] params(1) in file: /usr/include/sharp//primitives.sharp:148:8: note:  
		    def operator**(num : uchar)  := (value**num.value);
		       ^

0 [0x0]: line: 148 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator**[1824] params(1) in file: /usr/include/sharp//primitives.sharp:149:8: note:  
		    def operator**(num : char)   := (value**num.value);
		       ^

0 [0x0]: line: 149 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator**[1825] params(1) in file: /usr/include/sharp//primitives.sharp:150:8: note:  
		    def operator**(num : byte)   := (value**num.value);
		       ^

0 [0x0]: line: 150 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator**[1826] params(1) in file: /usr/include/sharp//primitives.sharp:151:8: note:  
		    def operator**(num : bool)   := (value**num.value);
		       ^

0 [0x0]: line: 151 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator**[1827] params(1) in file: /usr/include/sharp//primitives.sharp:152:8: note:  
		    def operator**(num : double)   := (value**num.value);
		       ^

0 [0x0]: line: 152 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           exp ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator**[1828] params(1) in file: /usr/include/sharp//primitives.sharp:153:8: note:  
		    def operator**(num : var)    := (value**num);
		       ^

0 [0x0]: line: 153 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           exp ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<var>.operator<<[1829] params(1) in file: /usr/include/sharp//primitives.sharp:155:8: note:  
		    def operator<<(num : ulong)  := (value<<num.value);
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<<[1830] params(1) in file: /usr/include/sharp//primitives.sharp:156:8: note:  
		    def operator<<(num : long)   := (value<<num.value);
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<<[1831] params(1) in file: /usr/include/sharp//primitives.sharp:157:8: note:  
		    def operator<<(num : uint)   := (value<<num.value);
		       ^

0 [0x0]: line: 157 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<<[1832] params(1) in file: /usr/include/sharp//primitives.sharp:158:8: note:  
		    def operator<<(num : int)    := (value<<num.value);
		       ^

0 [0x0]: line: 158 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<<[1833] params(1) in file: /usr/include/sharp//primitives.sharp:159:8: note:  
		    def operator<<(num : ushort) := (value<<num.value);
		       ^

0 [0x0]: line: 159 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<<[1834] params(1) in file: /usr/include/sharp//primitives.sharp:160:8: note:  
		    def operator<<(num : short)  := (value<<num.value);
		       ^

0 [0x0]: line: 160 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<<[1835] params(1) in file: /usr/include/sharp//primitives.sharp:161:8: note:  
		    def operator<<(num : uchar)  := (value<<num.value);
		       ^

0 [0x0]: line: 161 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<<[1836] params(1) in file: /usr/include/sharp//primitives.sharp:162:8: note:  
		    def operator<<(num : char)   := (value<<num.value);
		       ^

0 [0x0]: line: 162 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<<[1837] params(1) in file: /usr/include/sharp//primitives.sharp:163:8: note:  
		    def operator<<(num : byte)   := (value<<num.value);
		       ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<<[1838] params(1) in file: /usr/include/sharp//primitives.sharp:164:8: note:  
		    def operator<<(num : bool)   := (value<<num.value);
		       ^

0 [0x0]: line: 164 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<<[1839] params(1) in file: /usr/include/sharp//primitives.sharp:165:8: note:  
		    def operator<<(num : double)   := (value<<num.value);
		       ^

0 [0x0]: line: 165 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shl ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator<<[1840] params(1) in file: /usr/include/sharp//primitives.sharp:166:8: note:  
		    def operator<<(num : var)    := (value<<num);
		       ^

0 [0x0]: line: 166 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shl ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<var>.operator>>[1841] params(1) in file: /usr/include/sharp//primitives.sharp:168:8: note:  
		    def operator>>(num : ulong)  := (value>>num.value);
		       ^

0 [0x0]: line: 168 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator>>[1842] params(1) in file: /usr/include/sharp//primitives.sharp:169:8: note:  
		    def operator>>(num : long)   := (value>>num.value);
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator>>[1843] params(1) in file: /usr/include/sharp//primitives.sharp:170:8: note:  
		    def operator>>(num : uint)   := (value>>num.value);
		       ^

0 [0x0]: line: 170 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator>>[1844] params(1) in file: /usr/include/sharp//primitives.sharp:171:8: note:  
		    def operator>>(num : int)    := (value>>num.value);
		       ^

0 [0x0]: line: 171 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator>>[1845] params(1) in file: /usr/include/sharp//primitives.sharp:172:8: note:  
		    def operator>>(num : ushort) := (value>>num.value);
		       ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator>>[1846] params(1) in file: /usr/include/sharp//primitives.sharp:173:8: note:  
		    def operator>>(num : short)  := (value>>num.value);
		       ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator>>[1847] params(1) in file: /usr/include/sharp//primitives.sharp:174:8: note:  
		    def operator>>(num : uchar)  := (value>>num.value);
		       ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator>>[1848] params(1) in file: /usr/include/sharp//primitives.sharp:175:8: note:  
		    def operator>>(num : char)   := (value>>num.value);
		       ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator>>[1849] params(1) in file: /usr/include/sharp//primitives.sharp:176:8: note:  
		    def operator>>(num : byte)   := (value>>num.value);
		       ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator>>[1850] params(1) in file: /usr/include/sharp//primitives.sharp:177:8: note:  
		    def operator>>(num : bool)   := (value>>num.value);
		       ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator>>[1851] params(1) in file: /usr/include/sharp//primitives.sharp:178:8: note:  
		    def operator>>(num : double)   := (value>>num.value);
		       ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           shr ecx, ebx -> ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator>>[1852] params(1) in file: /usr/include/sharp//primitives.sharp:179:8: note:  
		    def operator>>(num : var)    := (value>>num);
		       ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           shr ecx, ebx -> ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<var>.operator^[1853] params(1) in file: /usr/include/sharp//primitives.sharp:181:8: note:  
		    def operator^(num : ulong)  := (value^num.value);
		       ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator^[1854] params(1) in file: /usr/include/sharp//primitives.sharp:182:8: note:  
		    def operator^(num : long)   := (value^num.value);
		       ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator^[1855] params(1) in file: /usr/include/sharp//primitives.sharp:183:8: note:  
		    def operator^(num : uint)   := (value^num.value);
		       ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator^[1856] params(1) in file: /usr/include/sharp//primitives.sharp:184:8: note:  
		    def operator^(num : int)    := (value^num.value);
		       ^

0 [0x0]: line: 184 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator^[1857] params(1) in file: /usr/include/sharp//primitives.sharp:185:8: note:  
		    def operator^(num : ushort) := (value^num.value);
		       ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator^[1858] params(1) in file: /usr/include/sharp//primitives.sharp:186:8: note:  
		    def operator^(num : short)  := (value^num.value);
		       ^

0 [0x0]: line: 186 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator^[1859] params(1) in file: /usr/include/sharp//primitives.sharp:187:8: note:  
		    def operator^(num : uchar)  := (value^num.value);
		       ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator^[1860] params(1) in file: /usr/include/sharp//primitives.sharp:188:8: note:  
		    def operator^(num : char)   := (value^num.value);
		       ^

0 [0x0]: line: 188 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator^[1861] params(1) in file: /usr/include/sharp//primitives.sharp:189:8: note:  
		    def operator^(num : byte)   := (value^num.value);
		       ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator^[1862] params(1) in file: /usr/include/sharp//primitives.sharp:190:8: note:  
		    def operator^(num : bool)   := (value^num.value);
		       ^

0 [0x0]: line: 190 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator^[1863] params(1) in file: /usr/include/sharp//primitives.sharp:191:8: note:  
		    def operator^(num : double)   := (value^num.value);
		       ^

0 [0x0]: line: 191 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           xor ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator^[1864] params(1) in file: /usr/include/sharp//primitives.sharp:192:8: note:  
		    def operator^(num : var)    := (value^num);
		       ^

0 [0x0]: line: 192 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           xor ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<var>.operator&[1865] params(1) in file: /usr/include/sharp//primitives.sharp:194:8: note:  
		    def operator&(num : ulong)  := (value&num.value);
		       ^

0 [0x0]: line: 194 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator&[1866] params(1) in file: /usr/include/sharp//primitives.sharp:195:8: note:  
		    def operator&(num : long)   := (value&num.value);
		       ^

0 [0x0]: line: 195 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator&[1867] params(1) in file: /usr/include/sharp//primitives.sharp:196:8: note:  
		    def operator&(num : uint)   := (value&num.value);
		       ^

0 [0x0]: line: 196 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator&[1868] params(1) in file: /usr/include/sharp//primitives.sharp:197:8: note:  
		    def operator&(num : int)    := (value&num.value);
		       ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator&[1869] params(1) in file: /usr/include/sharp//primitives.sharp:198:8: note:  
		    def operator&(num : ushort) := (value&num.value);
		       ^

0 [0x0]: line: 198 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator&[1870] params(1) in file: /usr/include/sharp//primitives.sharp:199:8: note:  
		    def operator&(num : short)  := (value&num.value);
		       ^

0 [0x0]: line: 199 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator&[1871] params(1) in file: /usr/include/sharp//primitives.sharp:200:8: note:  
		    def operator&(num : uchar)  := (value&num.value);
		       ^

0 [0x0]: line: 200 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator&[1872] params(1) in file: /usr/include/sharp//primitives.sharp:201:8: note:  
		    def operator&(num : char)   := (value&num.value);
		       ^

0 [0x0]: line: 201 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator&[1873] params(1) in file: /usr/include/sharp//primitives.sharp:202:8: note:  
		    def operator&(num : byte)   := (value&num.value);
		       ^

0 [0x0]: line: 202 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator&[1874] params(1) in file: /usr/include/sharp//primitives.sharp:203:8: note:  
		    def operator&(num : bool)   := (value&num.value);
		       ^

0 [0x0]: line: 203 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator&[1875] params(1) in file: /usr/include/sharp//primitives.sharp:204:8: note:  
		    def operator&(num : double)   := (value&num.value);
		       ^

0 [0x0]: line: 204 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           uand ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator&[1876] params(1) in file: /usr/include/sharp//primitives.sharp:205:8: note:  
		    def operator&(num : var)    := (value&num);
		       ^

0 [0x0]: line: 205 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           uand ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<var>.operator|[1877] params(1) in file: /usr/include/sharp//primitives.sharp:207:8: note:  
		    def operator|(num : ulong)  := (value|num.value);
		       ^

0 [0x0]: line: 207 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator|[1878] params(1) in file: /usr/include/sharp//primitives.sharp:208:8: note:  
		    def operator|(num : long)   := (value|num.value);
		       ^

0 [0x0]: line: 208 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator|[1879] params(1) in file: /usr/include/sharp//primitives.sharp:209:8: note:  
		    def operator|(num : uint)   := (value|num.value);
		       ^

0 [0x0]: line: 209 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator|[1880] params(1) in file: /usr/include/sharp//primitives.sharp:210:8: note:  
		    def operator|(num : int)    := (value|num.value);
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator|[1881] params(1) in file: /usr/include/sharp//primitives.sharp:211:8: note:  
		    def operator|(num : ushort) := (value|num.value);
		       ^

0 [0x0]: line: 211 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator|[1882] params(1) in file: /usr/include/sharp//primitives.sharp:212:8: note:  
		    def operator|(num : short)  := (value|num.value);
		       ^

0 [0x0]: line: 212 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator|[1883] params(1) in file: /usr/include/sharp//primitives.sharp:213:8: note:  
		    def operator|(num : uchar)  := (value|num.value);
		       ^

0 [0x0]: line: 213 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator|[1884] params(1) in file: /usr/include/sharp//primitives.sharp:214:8: note:  
		    def operator|(num : char)   := (value|num.value);
		       ^

0 [0x0]: line: 214 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator|[1885] params(1) in file: /usr/include/sharp//primitives.sharp:215:8: note:  
		    def operator|(num : byte)   := (value|num.value);
		       ^

0 [0x0]: line: 215 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator|[1886] params(1) in file: /usr/include/sharp//primitives.sharp:216:8: note:  
		    def operator|(num : bool)   := (value|num.value);
		       ^

0 [0x0]: line: 216 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator|[1887] params(1) in file: /usr/include/sharp//primitives.sharp:217:8: note:  
		    def operator|(num : double)   := (value|num.value);
		       ^

0 [0x0]: line: 217 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           return_val ebx   
16 [0x10]:           ret   


overload function: std#integer<var>.operator|[1888] params(1) in file: /usr/include/sharp//primitives.sharp:218:8: note:  
		    def operator|(num : var)    := (value|num);
		       ^

0 [0x0]: line: 218 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           or ecx, ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


overload function: std#integer<var>.operator!=[1889] params(1) in file: /usr/include/sharp//primitives.sharp:220:8: note:  
		    def operator!=(num : var) := value!=num;
		       ^

0 [0x0]: line: 220 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           tne ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<var>.operator==[1890] params(1) in file: /usr/include/sharp//primitives.sharp:221:8: note:  
		    def operator==(num : var) := value==num;
		       ^

0 [0x0]: line: 221 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           loadl ebx, fp+1   
8 [0x8]:           loadval ecx   
9 [0x9]:           test ecx, ebx   
10 [0xa]:           return_val cmt   
11 [0xb]:           ret   


overload function: std#integer<var>.operator=[1891] params(1) in file: /usr/include/sharp//primitives.sharp:222:8: note:  
		    def operator=(num : var) := value=num;
		       ^

0 [0x0]: line: 222 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           movi #0, adx   
7 [0x7]:           rmov adx, ebx   
8 [0x8]:           returnobj   
9 [0x9]:           ret   


function: std#integer<var>.to_string[1892] params(0) in file: /usr/include/sharp//primitives.sharp:224:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 225 new_class @0 // std#__srt_global   
1 [0x1]:           ret   
2 [0x2]:           dup    
3 [0x3]:           newstr @24 //    
4 [0x4]:           call @1959 // <std#string.string>   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           call @1991 // <std#string.operator+>   
13 [0xd]:           popobj2    
14 [0xe]:           returnobj   
15 [0xf]:           ret   


function: std#integer<var>.parse[1893] params(1) in file: /usr/include/sharp//primitives.sharp:228:15: note:  
		    static def parse(s: string) : native_type {
		              ^

0 [0x0]: line: 229 istorel 0, fp+1   
2 [0x2]: line: 231 movi #1, ebx   
4 [0x4]:           movr cmt, ebx   
5 [0x5]:           jne 12   
6 [0x6]: line: 232 pushl 0   
7 [0x7]:           call @2252 // <std#__srt_global.strtod>   
8 [0x8]:           loadval ebx   
9 [0x9]:           return_val ebx   
10 [0xa]:           ret   
11 [0xb]:           jmp @93   
12 [0xc]: line: 234 istorel 0, fp+2   
14 [0xe]: line: 235 istorel 0, fp+3   
16 [0x10]: line: 236 pushl 0   
17 [0x11]:           call @2000 // <std#string.size>   
18 [0x12]:           ipopl 4   
19 [0x13]: line: 238 pushl 0   
20 [0x14]:           istore 0   
22 [0x16]:           call @1981 // <std#string.at>   
23 [0x17]:           loadval ebx   
24 [0x18]:           rstore ebx   
25 [0x19]:           movi #45, ebx   
27 [0x1b]:           loadval ecx   
28 [0x1c]:           test ecx, ebx   
29 [0x1d]:           jne 34   
30 [0x1e]: line: 239 istorel 1, fp+3   
32 [0x20]: line: 240 istorel 1, fp+2   
34 [0x22]:           nop   
35 [0x23]: line: 243 ipushl #2   
36 [0x24]:           loadl ebx, fp+4   
37 [0x25]:           loadval ecx   
38 [0x26]:           lt ecx, ebx   
39 [0x27]:           movr ebx, cmt   
40 [0x28]:           movr cmt, ebx   
41 [0x29]:           jne 83   
42 [0x2a]: line: 244 pushl 0   
43 [0x2b]:           ipushl #2   
44 [0x2c]:           call @1981 // <std#string.at>   
45 [0x2d]:           call @3128 // <std#char.is_digit>   
46 [0x2e]:           loadval ebx   
47 [0x2f]:           not ebx, ebx   
48 [0x30]:           movr cmt, ebx   
49 [0x31]:           jne 64   
50 [0x32]: line: 245 new_class @0 // std#__srt_global   
51 [0x33]:           skip @0 // pc = 51   
52 [0x34]:           dup    
53 [0x35]:           new_class @0 // std#__srt_global   
54 [0x36]:           ret   
55 [0x37]:           dup    
56 [0x38]:           newstr @148 // illegal char in string:    
57 [0x39]:           call @1959 // <std#string.string>   
58 [0x3a]:           pushl 0   
59 [0x3b]:           ipushl #2   
60 [0x3c]:           call @1981 // <std#string.at>   
61 [0x3d]:           call @1992 // <std#string.operator+>   
62 [0x3e]:           call @3549 // <std#illegal_argument_exception.illegal_argument_exception>   
63 [0x3f]:           throw    
64 [0x40]:           nop   
65 [0x41]: line: 249 movi #10, ebx   
67 [0x43]:           mull ebx, fp@1   
68 [0x44]: line: 250 pushl 0   
69 [0x45]:           loadl ebx, fp+2   
70 [0x46]:           movr egx, ebx   
71 [0x47]:           inc ebx   
72 [0x48]:           smovr_2 ebx, fp+2   
73 [0x49]:           rstore egx   
74 [0x4a]:           call @1981 // <std#string.at>   
75 [0x4b]:           loadval ebx   
76 [0x4c]:           rstore ebx   
77 [0x4d]:           movi #48, ebx   
79 [0x4f]:           loadval ecx   
80 [0x50]:           sub ecx, ebx -> ebx   
81 [0x51]:           addl ebx, fp@1   
82 [0x52]:           jmp @35   
83 [0x53]: line: 252 loadl ebx, fp+3   
84 [0x54]:           movr cmt, ebx   
85 [0x55]:           jne 89   
86 [0x56]: line: 253 loadl ebx, fp+1   
87 [0x57]:           neg ebx, ebx   
88 [0x58]:           smovr_2 ebx, fp+1   
89 [0x59]:           nop   
90 [0x5a]: line: 254 loadl ebx, fp+1   
91 [0x5b]:           return_val ebx   
92 [0x5c]:           ret   
93 [0x5d]:           nop   


function: std#integer<var>.to_ulong[1894] params(0) in file: /usr/include/sharp//primitives.sharp:258:8: note:  
		    def to_ulong() := new ulong { value };
		       ^

0 [0x0]: line: 258 new_class @0 // std#__srt_global   
1 [0x1]:           idiv adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<var>.to_long[1895] params(0) in file: /usr/include/sharp//primitives.sharp:259:8: note:  
		    def to_long() := new long { value };
		       ^

0 [0x0]: line: 259 new_class @0 // std#__srt_global   
1 [0x1]:           imod adx, #? (293)   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<var>.to_uint[1896] params(0) in file: /usr/include/sharp//primitives.sharp:260:8: note:  
		    def to_uint() := new uint { value };
		       ^

0 [0x0]: line: 260 new_class @0 // std#__srt_global   
1 [0x1]:           pop   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<var>.to_int[1897] params(0) in file: /usr/include/sharp//primitives.sharp:261:8: note:  
		    def to_int() := new int { value };
		       ^

0 [0x0]: line: 261 new_class @0 // std#__srt_global   
1 [0x1]:           inc adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<var>.to_ushort[1898] params(0) in file: /usr/include/sharp//primitives.sharp:262:8: note:  
		    def to_ushort() := new ushort { value };
		       ^

0 [0x0]: line: 262 new_class @0 // std#__srt_global   
1 [0x1]:           dec adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<var>.to_short[1899] params(0) in file: /usr/include/sharp//primitives.sharp:263:8: note:  
		    def to_short() := new short { value };
		       ^

0 [0x0]: line: 263 new_class @0 // std#__srt_global   
1 [0x1]:           movr adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<var>.to_uchar[1900] params(0) in file: /usr/include/sharp//primitives.sharp:264:8: note:  
		    def to_uchar() := new uchar { value };
		       ^

0 [0x0]: line: 264 new_class @0 // std#__srt_global   
1 [0x1]:           brh   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<var>.to_char[1901] params(0) in file: /usr/include/sharp//primitives.sharp:265:8: note:  
		    def to_char() := new char { value };
		       ^

0 [0x0]: line: 265 new_class @0 // std#__srt_global   
1 [0x1]:           ife   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<var>.to_byte[1902] params(0) in file: /usr/include/sharp//primitives.sharp:266:8: note:  
		    def to_byte() := new byte { value };
		       ^

0 [0x0]: line: 266 new_class @0 // std#__srt_global   
1 [0x1]:           ifne   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<var>.to_bool[1903] params(0) in file: /usr/include/sharp//primitives.sharp:267:8: note:  
		    def to_bool() := new bool { value };
		       ^

0 [0x0]: line: 267 new_class @0 // std#__srt_global   
1 [0x1]:           lt adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           mov8 ebx, ebx   
9 [0x9]:           movsl #0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           chklen adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: std#integer<var>.to_double[1904] params(0) in file: /usr/include/sharp//primitives.sharp:268:8: note:  
		    def to_double() := new double { value };
		       ^

0 [0x0]: line: 268 new_class @0 // std#__srt_global   
1 [0x1]:           gt adx, adx   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           movsl #0   
9 [0x9]:           movn #0   
11 [0xb]:           movi #0, adx   
13 [0xd]:           chklen adx   
14 [0xe]:           rmov adx, ebx   
15 [0xf]:           popobj2    
16 [0x10]:           returnobj   
17 [0x11]:           ret   


function: std#integer<var>.get_value[1905] params(0) in file: /usr/include/sharp//primitives.sharp:270:8: note:  
		    def get_value() := value;
		       ^

0 [0x0]: line: 270 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std#integer<var>.integer[1906] params(0) in file: /usr/include/sharp//primitives.sharp:5:13: note:  
		public class integer<native_type> {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


function: std#_object_.to_string[1907] params(0) in file: /usr/include/sharp//object.sharp:13:15: note:  
		    public def to_string() := new string();
		              ^

0 [0x0]: line: 13 new_class @0 // std#__srt_global   
1 [0x1]:          ret   
2 [0x2]:          dup    
3 [0x3]:          call @2017 // <std#string.string>   
4 [0x4]:          popobj2    
5 [0x5]:          returnobj   
6 [0x6]:          ret   


function: std#_object_.wait[1908] params(0) in file: /usr/include/sharp//object.sharp:15:8: note:  
		    def wait() {
		       ^

0 [0x0]: line: 16 pushl 0   : protected asm start
1 [0x1]:          int 0x3c   
2 [0x2]:          ret   : protected asm end


function: std#_object_.notify[1909] params(0) in file: /usr/include/sharp//object.sharp:22:8: note:  
		    def notify() {
		       ^

0 [0x0]: line: 23 pushl 0   : protected asm start
1 [0x1]:          int 0x3d   
2 [0x2]:          ret   : protected asm end


function: std#_object_.notify[1910] params(1) in file: /usr/include/sharp//object.sharp:29:8: note:  
		    def notify(mills: var) {
		       ^

0 [0x0]: line: 30 pushl 0   : protected asm start
1 [0x1]:          loadl ebx, fp+1   
2 [0x2]:          int 0x3e   
3 [0x3]:          ret   : protected asm end


function: std#_object_.hash[1911] params(0) in file: /usr/include/sharp//object.sharp:37:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 39 new_class @0 // std#__srt_global   
1 [0x1]:          imod adx, #? (112)   
3 [0x3]:          istore 0   
5 [0x5]:          call @2426 // <std#long.long>   
6 [0x6]:          popobj2    
7 [0x7]:          returnobj   
8 [0x8]:          ret   


function: std#_object_.guid[1912] params(0) in file: /usr/include/sharp//object.sharp:42:8: note:  
		    def guid() : long {
		       ^

0 [0x0]: line: 44 new_class @0 // std#__srt_global   
1 [0x1]:          imod adx, #? (112)   
3 [0x3]:          movg @0 // @std#__srt_global   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          movr egx, ebx   
10 [0xa]:          inc ebx   
11 [0xb]:          movi #0, adx   
13 [0xd]:          rmov adx, ebx   
14 [0xe]:          rstore egx   
15 [0xf]:          call @2426 // <std#long.long>   
16 [0x10]:          popobj2    
17 [0x11]:          returnobj   
18 [0x12]:          ret   


constructor: std#_object_._object_[1913] params(0) in file: /usr/include/sharp//object.sharp:11:13: note:  
		stable class _object_ : printable, unique {
		            ^

0 [0x0]:         ret   


function: std#string_builder.set_resize_capacity[1914] params(1) in file: /usr/include/sharp//string_builder.sharp:20:8: note:  
		    def set_resize_capacity(new_capacity: var) {
		       ^

0 [0x0]: line: 21 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #1   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]:          ret   


constructor: std#string_builder.string_builder[1915] params(1) in file: /usr/include/sharp//string_builder.sharp:24:19: note:  
		    string_builder(str : _int8[]) {
		                  ^

0 [0x0]:         movi #128, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #1   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #2   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #3   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]: line: 15 movi #255, ebx   
26 [0x1a]:          newarry ebx: 0   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          popobj   
31 [0x1f]: line: 16 movi #255, ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #2   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]: line: 17 movi #-1, ebx   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #3   
44 [0x2c]:          movi #0, adx   
46 [0x2e]:          rmov adx, ebx   
47 [0x2f]:          pushl 0   
48 [0x30]: line: 25 movl 1   
49 [0x31]:          checknull   
50 [0x32]:          not ebx, ebx   
51 [0x33]:          movr cmt, ebx   
52 [0x34]:          jne 57   
53 [0x35]: line: 26 pushl 0   
54 [0x36]:          pushl 1   
55 [0x37]:          call @1927 // <std#string_builder.append>   
56 [0x38]:          pop   
57 [0x39]:          nop   
58 [0x3a]:          ret   


constructor: std#string_builder.string_builder[1916] params(1) in file: /usr/include/sharp//string_builder.sharp:30:19: note:  
		    string_builder(ch: var) {
		                  ^

0 [0x0]:         movi #128, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #1   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #2   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #3   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]: line: 15 movi #255, ebx   
26 [0x1a]:          newarry ebx: 0   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          popobj   
31 [0x1f]: line: 16 movi #255, ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #2   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]: line: 17 movi #-1, ebx   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #3   
44 [0x2c]:          movi #0, adx   
46 [0x2e]:          rmov adx, ebx   
47 [0x2f]:          pushl 0   
48 [0x30]: line: 31 pushl 0   
49 [0x31]:          ipushl #1   
50 [0x32]:          call @1924 // <std#string_builder.append>   
51 [0x33]:          pop   
52 [0x34]:          ret   


constructor: std#string_builder.string_builder[1917] params(1) in file: /usr/include/sharp//string_builder.sharp:34:19: note:  
		    string_builder(str : char[]) {
		                  ^

0 [0x0]:         movi #128, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #1   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #2   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #3   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]: line: 15 movi #255, ebx   
26 [0x1a]:          newarry ebx: 0   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          popobj   
31 [0x1f]: line: 16 movi #255, ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #2   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]: line: 17 movi #-1, ebx   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #3   
44 [0x2c]:          movi #0, adx   
46 [0x2e]:          rmov adx, ebx   
47 [0x2f]:          pushl 0   
48 [0x30]: line: 35 movl 1   
49 [0x31]:          checknull   
50 [0x32]:          not ebx, ebx   
51 [0x33]:          movr cmt, ebx   
52 [0x34]:          jne 111   
53 [0x35]: line: 36 pushl 0   
54 [0x36]:          movl 1   
55 [0x37]:          sizeof ebx   
56 [0x38]:          rstore ebx   
57 [0x39]:          call @1921 // <std#string_builder.space_available>   
58 [0x3a]:          loadval ebx   
59 [0x3b]:          not ebx, ebx   
60 [0x3c]:          movr cmt, ebx   
61 [0x3d]:          jne 67   
62 [0x3e]: line: 37 pushl 0   
63 [0x3f]:          movl 1   
64 [0x40]:          sizeof ebx   
65 [0x41]:          rstore ebx   
66 [0x42]:          call @1922 // <std#string_builder.expand>   
67 [0x43]:          nop   
68 [0x44]: line: 40 movl 1   
69 [0x45]:          sizeof ebx   
70 [0x46]:          newarry ebx: 8   
71 [0x47]:          movl 0   
72 [0x48]:          movn #0   
74 [0x4a]:          popobj   
75 [0x4b]: line: 41 istorel -1, fp+3   
77 [0x4d]:          pushl 1   
78 [0x4e]:          popl 4   
79 [0x4f]:          iaddl 1, fp@3   
81 [0x51]:          movl 4   
82 [0x52]:          sizeof ecx   
83 [0x53]:          loadl ebx, fp+3   
84 [0x54]:          lt ebx, ecx   
85 [0x55]:          jne 111   
86 [0x56]:          movnd ebx   
87 [0x57]:          pushobj   
88 [0x58]:          popl 2   
89 [0x59]: line: 42 pushl 2   
90 [0x5a]:          call @1696 // <std#integer<_int8>.get_value>   
91 [0x5b]:          movl 0   
92 [0x5c]:          movn #0   
94 [0x5e]:          pushobj   
95 [0x5f]:          movl 0   
96 [0x60]:          movn #3   
98 [0x62]:          movi #0, adx   
100 [0x64]:          iaload ebx, adx   
101 [0x65]:          inc ebx   
102 [0x66]:          movi #0, adx   
104 [0x68]:          rmov adx, ebx   
105 [0x69]:          popobj2    
106 [0x6a]:          movr adx, ebx   
107 [0x6b]:          chklen adx   
108 [0x6c]:          loadval ebx   
109 [0x6d]:          rmov adx, ebx   
110 [0x6e]:          jmp @79   
111 [0x6f]:          nop   
112 [0x70]:          ret   


constructor: std#string_builder.string_builder[1918] params(1) in file: /usr/include/sharp//string_builder.sharp:47:19: note:  
		    string_builder(str: string) {
		                  ^

0 [0x0]:         movi #128, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #1   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #2   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #3   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]: line: 15 movi #255, ebx   
26 [0x1a]:          newarry ebx: 0   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          popobj   
31 [0x1f]: line: 16 movi #255, ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #2   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]: line: 17 movi #-1, ebx   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #3   
44 [0x2c]:          movi #0, adx   
46 [0x2e]:          rmov adx, ebx   
47 [0x2f]:          pushl 0   
48 [0x30]: line: 48 movl 1   
49 [0x31]:          checknull   
50 [0x32]:          not ebx, ebx   
51 [0x33]:          movr cmt, ebx   
52 [0x34]:          jne 58   
53 [0x35]: line: 49 pushl 0   
54 [0x36]:          pushl 1   
55 [0x37]:          call @1985 // <std#string.get_data>   
56 [0x38]:          call @1927 // <std#string_builder.append>   
57 [0x39]:          pop   
58 [0x3a]:          nop   
59 [0x3b]:          ret   


constructor: std#string_builder.string_builder[1919] params(1) in file: /usr/include/sharp//string_builder.sharp:53:19: note:  
		    string_builder(str: string_builder) {
		                  ^

0 [0x0]:         movi #128, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #1   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #2   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #3   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]: line: 15 movi #255, ebx   
26 [0x1a]:          newarry ebx: 0   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          popobj   
31 [0x1f]: line: 16 movi #255, ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #2   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]: line: 17 movi #-1, ebx   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #3   
44 [0x2c]:          movi #0, adx   
46 [0x2e]:          rmov adx, ebx   
47 [0x2f]:          pushl 0   
48 [0x30]: line: 54 movl 1   
49 [0x31]:          checknull   
50 [0x32]:          not ebx, ebx   
51 [0x33]:          movr cmt, ebx   
52 [0x34]:          jne 60   
53 [0x35]: line: 55 pushl 0   
54 [0x36]:          movl 1   
55 [0x37]:          movn #0   
57 [0x39]:          pushobj   
58 [0x3a]:          call @1927 // <std#string_builder.append>   
59 [0x3b]:          pop   
60 [0x3c]:          nop   
61 [0x3d]:          ret   


constructor: std#string_builder.string_builder[1920] params(2) in file: /usr/include/sharp//string_builder.sharp:59:19: note:  
		    string_builder(str : _int8[], offset: var) {
		                  ^

0 [0x0]:         movi #128, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #1   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #2   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #3   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]: line: 15 movi #255, ebx   
26 [0x1a]:          newarry ebx: 0   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          popobj   
31 [0x1f]: line: 16 movi #255, ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #2   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]: line: 17 movi #-1, ebx   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #3   
44 [0x2c]:          movi #0, adx   
46 [0x2e]:          rmov adx, ebx   
47 [0x2f]:          pushl 0   
48 [0x30]: line: 60 movl 1   
49 [0x31]:          checknull   
50 [0x32]:          not ebx, ebx   
51 [0x33]:          movr cmt, ebx   
52 [0x34]:          jne 114   
53 [0x35]: line: 61 pushl 0   
54 [0x36]:          movl 1   
55 [0x37]:          sizeof ebx   
56 [0x38]:          rstore ebx   
57 [0x39]:          loadl ebx, fp+2   
58 [0x3a]:          loadval ecx   
59 [0x3b]:          sub ecx, ebx -> ebx   
60 [0x3c]:          rstore ebx   
61 [0x3d]:          call @1921 // <std#string_builder.space_available>   
62 [0x3e]:          loadval ebx   
63 [0x3f]:          not ebx, ebx   
64 [0x40]:          movr cmt, ebx   
65 [0x41]:          jne 71   
66 [0x42]: line: 62 pushl 0   
67 [0x43]:          movl 1   
68 [0x44]:          sizeof ebx   
69 [0x45]:          rstore ebx   
70 [0x46]:          call @1922 // <std#string_builder.expand>   
71 [0x47]:          nop   
72 [0x48]: line: 65 pushl 1   
73 [0x49]:          movl 0   
74 [0x4a]:          movn #0   
76 [0x4c]:          pushobj   
77 [0x4d]:          movl 0   
78 [0x4e]:          movn #3   
80 [0x50]:          movi #0, adx   
82 [0x52]:          iaload ebx, adx   
83 [0x53]:          inc ebx   
84 [0x54]:          movi #0, adx   
86 [0x56]:          rmov adx, ebx   
87 [0x57]:          rstore ebx   
88 [0x58]:          ipushl #2   
89 [0x59]:          movl 1   
90 [0x5a]:          sizeof ebx   
91 [0x5b]:          rstore ebx   
92 [0x5c]:          call @2099 // <std.io#__srt_global.memcopy>   
93 [0x5d]: line: 66 movl 1   
94 [0x5e]:          sizeof ebx   
95 [0x5f]:          rstore ebx   
96 [0x60]:          loadl ebx, fp+2   
97 [0x61]:          loadval ecx   
98 [0x62]:          sub ecx, ebx -> ebx   
99 [0x63]:          rstore ebx   
100 [0x64]:          movi #1, ebx   
102 [0x66]:          loadval ecx   
103 [0x67]:          sub ecx, ebx -> ebx   
104 [0x68]:          rstore ebx   
105 [0x69]:          movl 0   
106 [0x6a]:          movn #3   
108 [0x6c]:          movi #0, adx   
110 [0x6e]:          iaload ecx, adx   
111 [0x6f]:          loadval ebx   
112 [0x70]:          add ecx, ebx -> ebx   
113 [0x71]:          rmov adx, ebx   
114 [0x72]:          nop   
115 [0x73]:          ret   


function: std#string_builder.space_available[1921] params(1) in file: /usr/include/sharp//string_builder.sharp:70:8: note:  
		    def space_available(space_required : var) : var {
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #3   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #1, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          add ecx, ebx -> ebx   
11 [0xb]:          rstore ebx   
12 [0xc]:          loadl ebx, fp+1   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          rstore ebx   
16 [0x10]:          movl 0   
17 [0x11]:          movn #0   
19 [0x13]:          sizeof ebx   
20 [0x14]:          loadval ecx   
21 [0x15]:          lt ecx, ebx   
22 [0x16]:          return_val cmt   
23 [0x17]:          ret   


function: std#string_builder.expand[1922] params(1) in file: /usr/include/sharp//string_builder.sharp:74:8: note:  
		    def expand(space_required : var) {
		       ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #3   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #1, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          add ecx, ebx -> ebx   
11 [0xb]:          rstore ebx   
12 [0xc]:          loadl ebx, fp+1   
13 [0xd]:          loadval ecx   
14 [0xe]:          add ecx, ebx -> ebx   
15 [0xf]:          rstore ebx   
16 [0x10]:          movl 0   
17 [0x11]:          movn #1   
19 [0x13]:          movi #0, adx   
21 [0x15]:          iaload ebx, adx   
22 [0x16]:          loadval ecx   
23 [0x17]:          add ecx, ebx -> ebx   
24 [0x18]:          smovr_2 ebx, fp+2   
25 [0x19]: line: 76 movl 0   
26 [0x1a]:          movn #0   
28 [0x1c]:          pushobj   
29 [0x1d]:          ipushl #2   
30 [0x1e]:          call @2089 // <std.io#__srt_global.realloc>   
31 [0x1f]:          ret   


function: std#string_builder.replace[1923] params(2) in file: /usr/include/sharp//string_builder.sharp:79:8: note:  
		    def replace(pos : var, ch: _int8) : string_builder {
		       ^

0 [0x0]: line: 80 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          sizeof ebx   
5 [0x5]:          loadval ecx   
6 [0x6]:          gte ecx, ebx   
7 [0x7]:          movr ebx, cmt   
8 [0x8]:          movr cmt, ebx   
9 [0x9]:          jne 14   
10 [0xa]: line: 81 pushl 0   
11 [0xb]:          ipushl #1   
12 [0xc]:          call @1956 // <std#string_builder.bounds_error>   
13 [0xd]:          throw    
14 [0xe]:          nop   
15 [0xf]: line: 84 ipushl #2   
16 [0x10]:          movl 0   
17 [0x11]:          movn #0   
19 [0x13]:          pushobj   
20 [0x14]:          loadl ebx, fp+1   
21 [0x15]:          popobj2    
22 [0x16]:          movr adx, ebx   
23 [0x17]:          chklen adx   
24 [0x18]:          loadval ebx   
25 [0x19]:          rmov adx, ebx   
26 [0x1a]: line: 85 movl 0   
27 [0x1b]:          returnobj   
28 [0x1c]:          ret   


function: std#string_builder.append[1924] params(1) in file: /usr/include/sharp//string_builder.sharp:88:8: note:  
		    def append(ch: var) : string_builder
		       ^

0 [0x0]: line: 90 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          pushnull    
5 [0x5]:          itest ebx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 16   
8 [0x8]: line: 91 movi #255, ebx   
10 [0xa]:          newarry ebx: 8   
11 [0xb]:          movl 0   
12 [0xc]:          movn #0   
14 [0xe]:          popobj   
15 [0xf]:          jmp @41   
16 [0x10]:          movl 0   
17 [0x11]:          movn #3   
19 [0x13]:          movi #0, adx   
21 [0x15]:          iaload ebx, adx   
22 [0x16]:          rstore ebx   
23 [0x17]:          movi #1, ebx   
25 [0x19]:          loadval ecx   
26 [0x1a]:          add ecx, ebx -> ebx   
27 [0x1b]:          rstore ebx   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #0   
31 [0x1f]:          sizeof ebx   
32 [0x20]:          loadval ecx   
33 [0x21]:          gte ecx, ebx   
34 [0x22]:          movr ebx, cmt   
35 [0x23]:          movr cmt, ebx   
36 [0x24]:          jne 41   
37 [0x25]: line: 93 pushl 0   
38 [0x26]:          istore 0   
40 [0x28]:          call @1922 // <std#string_builder.expand>   
41 [0x29]:          nop   
42 [0x2a]: line: 95 ipushl #1   
43 [0x2b]:          movl 0   
44 [0x2c]:          movn #0   
46 [0x2e]:          pushobj   
47 [0x2f]:          movl 0   
48 [0x30]:          movn #0   
50 [0x32]:          sizeof ebx   
51 [0x33]:          rstore ebx   
52 [0x34]:          movi #1, ebx   
54 [0x36]:          loadval ecx   
55 [0x37]:          sub ecx, ebx -> ebx   
56 [0x38]:          popobj2    
57 [0x39]:          movr adx, ebx   
58 [0x3a]:          chklen adx   
59 [0x3b]:          loadval ebx   
60 [0x3c]:          rmov adx, ebx   
61 [0x3d]: line: 96 movl 0   
62 [0x3e]:          returnobj   
63 [0x3f]:          ret   


function: std#string_builder.get_elements[1925] params(0) in file: /usr/include/sharp//string_builder.sharp:99:8: note:  
		    def get_elements() := to_string().get_elements();
		       ^

0 [0x0]: line: 99 pushl 0   
1 [0x1]:          call @1931 // <std#string_builder.to_string>   
2 [0x2]:          call @1986 // <std#string.get_elements>   
3 [0x3]:          popobj2    
4 [0x4]:          returnobj   
5 [0x5]:          ret   


function: std#string_builder.append[1926] params(1) in file: /usr/include/sharp//string_builder.sharp:101:8: note:  
		    def append(c: char) := append(c.get_value());
		       ^

0 [0x0]: line: 101 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           call @1696 // <std#integer<_int8>.get_value>   
3 [0x3]:           call @1924 // <std#string_builder.append>   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   


function: std#string_builder.append[1927] params(1) in file: /usr/include/sharp//string_builder.sharp:103:8: note:  
		    def append(immstr: _int8[]) : string_builder
		       ^

0 [0x0]: line: 105 movl 1   
1 [0x1]:           checknull   
2 [0x2]:           movr cmt, ebx   
3 [0x3]:           jne 7   
4 [0x4]:           movl 0   
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]:           nop   
8 [0x8]: line: 107 movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           pushobj   
12 [0xc]:           pushnull    
13 [0xd]:           itest ebx   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 29   
16 [0x10]: line: 108 movl 1   
17 [0x11]:           sizeof ebx   
18 [0x12]:           rstore ebx   
19 [0x13]:           movi #255, ebx   
21 [0x15]:           loadval ecx   
22 [0x16]:           add ecx, ebx -> ebx   
23 [0x17]:           newarry ebx: 8   
24 [0x18]:           movl 0   
25 [0x19]:           movn #0   
27 [0x1b]:           popobj   
28 [0x1c]:           jmp @43   
29 [0x1d]:           pushl 0   
30 [0x1e]:           movl 1   
31 [0x1f]:           sizeof ebx   
32 [0x20]:           rstore ebx   
33 [0x21]:           call @1921 // <std#string_builder.space_available>   
34 [0x22]:           loadval ebx   
35 [0x23]:           not ebx, ebx   
36 [0x24]:           movr cmt, ebx   
37 [0x25]:           jne 43   
38 [0x26]: line: 110 pushl 0   
39 [0x27]:           movl 1   
40 [0x28]:           sizeof ebx   
41 [0x29]:           rstore ebx   
42 [0x2a]:           call @1922 // <std#string_builder.expand>   
43 [0x2b]:           nop   
44 [0x2c]: line: 112 pushl 1   
45 [0x2d]:           movl 0   
46 [0x2e]:           movn #0   
48 [0x30]:           pushobj   
49 [0x31]:           movl 0   
50 [0x32]:           movn #3   
52 [0x34]:           movi #0, adx   
54 [0x36]:           iaload ebx, adx   
55 [0x37]:           inc ebx   
56 [0x38]:           movi #0, adx   
58 [0x3a]:           rmov adx, ebx   
59 [0x3b]:           rstore ebx   
60 [0x3c]:           istore 0   
62 [0x3e]:           movl 1   
63 [0x3f]:           sizeof ebx   
64 [0x40]:           rstore ebx   
65 [0x41]:           call @2099 // <std.io#__srt_global.memcopy>   
66 [0x42]: line: 113 movl 1   
67 [0x43]:           sizeof ebx   
68 [0x44]:           rstore ebx   
69 [0x45]:           movi #1, ebx   
71 [0x47]:           loadval ecx   
72 [0x48]:           sub ecx, ebx -> ebx   
73 [0x49]:           rstore ebx   
74 [0x4a]:           movl 0   
75 [0x4b]:           movn #3   
77 [0x4d]:           movi #0, adx   
79 [0x4f]:           iaload ecx, adx   
80 [0x50]:           loadval ebx   
81 [0x51]:           add ecx, ebx -> ebx   
82 [0x52]:           rmov adx, ebx   
83 [0x53]: line: 114 movl 0   
84 [0x54]:           returnobj   
85 [0x55]:           ret   


function: std#string_builder.append[1928] params(2) in file: /usr/include/sharp//string_builder.sharp:117:8: note:  
		    def append(immstr: _int8[], len: var) : string_builder
		       ^

0 [0x0]: line: 119 movl 1   
1 [0x1]:           checknull   
2 [0x2]:           movr cmt, ebx   
3 [0x3]:           jne 7   
4 [0x4]:           movl 0   
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]:           nop   
8 [0x8]: line: 120 loadl ecx, fp+2   
9 [0x9]:           movi #0, ebx   
11 [0xb]:           lt ecx, ebx   
12 [0xc]:           movr ebx, cmt   
13 [0xd]:           movr cmt, ebx   
14 [0xe]:           jne 21   
15 [0xf]: line: 121 new_class @0 // std#__srt_global   
16 [0x10]:           newstr @0 // job#   
17 [0x11]:           dup    
18 [0x12]:           newstr @25 // length cannot be less than zero   
19 [0x13]:           call @3590 // <std#error.error>   
20 [0x14]:           throw    
21 [0x15]:           nop   
22 [0x16]: line: 123 ipushl #2   
23 [0x17]:           movl 1   
24 [0x18]:           sizeof ebx   
25 [0x19]:           loadval ecx   
26 [0x1a]:           gt ecx, ebx   
27 [0x1b]:           movr ebx, cmt   
28 [0x1c]:           movr cmt, ebx   
29 [0x1d]:           jne 48   
30 [0x1e]: line: 124 new_class @0 // std#__srt_global   
31 [0x1f]:           newstr @0 // job#   
32 [0x20]:           dup    
33 [0x21]:           new_class @0 // std#__srt_global   
34 [0x22]:           ret   
35 [0x23]:           dup    
36 [0x24]:           newstr @26 // length of:    
37 [0x25]:           call @1959 // <std#string.string>   
38 [0x26]:           ipushl #2   
39 [0x27]:           call @1991 // <std#string.operator+>   
40 [0x28]:           newstr @27 //  is greater than the string:    
41 [0x29]:           call @1971 // <std#string.operator+>   
42 [0x2a]:           movl 1   
43 [0x2b]:           sizeof ebx   
44 [0x2c]:           rstore ebx   
45 [0x2d]:           call @1991 // <std#string.operator+>   
46 [0x2e]:           call @3591 // <std#error.error>   
47 [0x2f]:           throw    
48 [0x30]:           nop   
49 [0x31]: line: 126 movl 0   
50 [0x32]:           movn #0   
52 [0x34]:           pushobj   
53 [0x35]:           pushnull    
54 [0x36]:           itest ebx   
55 [0x37]:           movr cmt, ebx   
56 [0x38]:           jne 68   
57 [0x39]: line: 127 ipushl #2   
58 [0x3a]:           movi #255, ebx   
60 [0x3c]:           loadval ecx   
61 [0x3d]:           add ecx, ebx -> ebx   
62 [0x3e]:           newarry ebx: 8   
63 [0x3f]:           movl 0   
64 [0x40]:           movn #0   
66 [0x42]:           popobj   
67 [0x43]:           jmp @82   
68 [0x44]:           pushl 0   
69 [0x45]:           movl 1   
70 [0x46]:           sizeof ebx   
71 [0x47]:           rstore ebx   
72 [0x48]:           call @1921 // <std#string_builder.space_available>   
73 [0x49]:           loadval ebx   
74 [0x4a]:           not ebx, ebx   
75 [0x4b]:           movr cmt, ebx   
76 [0x4c]:           jne 82   
77 [0x4d]: line: 129 pushl 0   
78 [0x4e]:           movl 1   
79 [0x4f]:           sizeof ebx   
80 [0x50]:           rstore ebx   
81 [0x51]:           call @1922 // <std#string_builder.expand>   
82 [0x52]:           nop   
83 [0x53]: line: 131 pushl 1   
84 [0x54]:           movl 0   
85 [0x55]:           movn #0   
87 [0x57]:           pushobj   
88 [0x58]:           movl 0   
89 [0x59]:           movn #3   
91 [0x5b]:           movi #0, adx   
93 [0x5d]:           iaload ebx, adx   
94 [0x5e]:           inc ebx   
95 [0x5f]:           movi #0, adx   
97 [0x61]:           rmov adx, ebx   
98 [0x62]:           rstore ebx   
99 [0x63]:           istore 0   
101 [0x65]:           ipushl #2   
102 [0x66]:           call @2099 // <std.io#__srt_global.memcopy>   
103 [0x67]: line: 132 movl 1   
104 [0x68]:           sizeof ebx   
105 [0x69]:           rstore ebx   
106 [0x6a]:           loadl ebx, fp+2   
107 [0x6b]:           loadval ecx   
108 [0x6c]:           sub ecx, ebx -> ebx   
109 [0x6d]:           rstore ebx   
110 [0x6e]:           movi #1, ebx   
112 [0x70]:           loadval ecx   
113 [0x71]:           sub ecx, ebx -> ebx   
114 [0x72]:           rstore ebx   
115 [0x73]:           movl 0   
116 [0x74]:           movn #3   
118 [0x76]:           movi #0, adx   
120 [0x78]:           iaload ecx, adx   
121 [0x79]:           loadval ebx   
122 [0x7a]:           add ecx, ebx -> ebx   
123 [0x7b]:           rmov adx, ebx   
124 [0x7c]: line: 133 movl 0   
125 [0x7d]:           returnobj   
126 [0x7e]:           ret   


overload function: std#string_builder.operator+[1929] params(1) in file: /usr/include/sharp//string_builder.sharp:136:8: note:  
		    def operator+(immstr : _int8[]) : string_builder {
		       ^

0 [0x0]: line: 137 new_class @0 // std#__srt_global   
1 [0x1]:           movi #112, adx   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @1915 // <std#string_builder.string_builder>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 138 movl 1   
11 [0xb]:           checknull   
12 [0xc]:           not ebx, ebx   
13 [0xd]:           movr cmt, ebx   
14 [0xe]:           jne 22   
15 [0xf]: line: 139 pushl 2   
16 [0x10]:           pushl 1   
17 [0x11]:           call @1927 // <std#string_builder.append>   
18 [0x12]:           popobj2    
19 [0x13]:           returnobj   
20 [0x14]:           ret   
21 [0x15]:           jmp @28   
22 [0x16]: line: 141 pushl 2   
23 [0x17]:           newstr @28 // null   
24 [0x18]:           call @1927 // <std#string_builder.append>   
25 [0x19]:           popobj2    
26 [0x1a]:           returnobj   
27 [0x1b]:           ret   
28 [0x1c]:           nop   


overload function: std#string_builder.operator+[1930] params(1) in file: /usr/include/sharp//string_builder.sharp:145:8: note:  
		    def operator+(obj : printable) : string_builder {
		       ^

0 [0x0]: line: 146 new_class @0 // std#__srt_global   
1 [0x1]:           movi #112, adx   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @1915 // <std#string_builder.string_builder>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 147 movl 1   
11 [0xb]:           checknull   
12 [0xc]:           not ebx, ebx   
13 [0xd]:           movr cmt, ebx   
14 [0xe]:           jne 25   
15 [0xf]: line: 148 pushl 2   
16 [0x10]:           pushl 1   
17 [0x11]:           invoke_delegate 3523 { static=0, args=0 }   
19 [0x13]:           call @1985 // <std#string.get_data>   
20 [0x14]:           call @1927 // <std#string_builder.append>   
21 [0x15]:           popobj2    
22 [0x16]:           returnobj   
23 [0x17]:           ret   
24 [0x18]:           jmp @31   
25 [0x19]: line: 150 pushl 2   
26 [0x1a]:           newstr @28 // null   
27 [0x1b]:           call @1927 // <std#string_builder.append>   
28 [0x1c]:           popobj2    
29 [0x1d]:           returnobj   
30 [0x1e]:           ret   
31 [0x1f]:           nop   


function: std#string_builder.to_string[1931] params(0) in file: /usr/include/sharp//string_builder.sharp:153:8: note:  
		    def to_string() := new string(data, 0, cursor + 1);
		       ^

0 [0x0]: line: 153 new_class @0 // std#__srt_global   
1 [0x1]:           ret   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           istore 0   
9 [0x9]:           movl 0   
10 [0xa]:           movn #3   
12 [0xc]:           movi #0, adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           rstore ebx   
16 [0x10]:           movi #1, ebx   
18 [0x12]:           loadval ecx   
19 [0x13]:           add ecx, ebx -> ebx   
20 [0x14]:           rstore ebx   
21 [0x15]:           call @1964 // <std#string.string>   
22 [0x16]:           popobj2    
23 [0x17]:           returnobj   
24 [0x18]:           ret   


overload function: std#string_builder.operator==[1932] params(1) in file: /usr/include/sharp//string_builder.sharp:155:8: note:  
		    def operator==(str : _int8[]) : var {
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #3   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #1, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           add ecx, ebx -> ebx   
11 [0xb]:           rstore ebx   
12 [0xc]:           movl 1   
13 [0xd]:           sizeof ebx   
14 [0xe]:           loadval ecx   
15 [0xf]:           tne ecx, ebx   
16 [0x10]:           jne 20   
17 [0x11]: line: 157 istorel 0, fp+0   
19 [0x13]:           ret   
20 [0x14]:           nop   
21 [0x15]: line: 159 istorel 0, fp+2   
23 [0x17]: line: 160 istorel -1, fp+4   
25 [0x19]:           pushl 1   
26 [0x1a]:           popl 5   
27 [0x1b]:           iaddl 1, fp@4   
29 [0x1d]:           movl 5   
30 [0x1e]:           sizeof ecx   
31 [0x1f]:           loadl ebx, fp+4   
32 [0x20]:           lt ebx, ecx   
33 [0x21]:           jne 58   
34 [0x22]:           iaload ecx, ebx   
35 [0x23]:           smovr_2 ecx, fp+3   
36 [0x24]: line: 161 ipushl #3   
37 [0x25]:           movl 0   
38 [0x26]:           movn #0   
40 [0x28]:           pushobj   
41 [0x29]:           loadl ebx, fp+2   
42 [0x2a]:           movr egx, ebx   
43 [0x2b]:           inc ebx   
44 [0x2c]:           smovr_2 ebx, fp+2   
45 [0x2d]:           movr ebx, egx   
46 [0x2e]:           popobj2    
47 [0x2f]:           movr adx, ebx   
48 [0x30]:           chklen adx   
49 [0x31]:           iaload ebx, adx   
50 [0x32]:           loadval ecx   
51 [0x33]:           tne ecx, ebx   
52 [0x34]:           jne 56   
53 [0x35]: line: 162 istorel 0, fp+0   
55 [0x37]:           ret   
56 [0x38]:           nop   
57 [0x39]:           jmp @27   
58 [0x3a]: line: 165 istorel 1, fp+0   
60 [0x3c]:           ret   


overload function: std#string_builder.operator==[1933] params(1) in file: /usr/include/sharp//string_builder.sharp:168:8: note:  
		    def operator==(str : string) : var {
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #3   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #1, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           add ecx, ebx -> ebx   
11 [0xb]:           rstore ebx   
12 [0xc]:           pushl 1   
13 [0xd]:           call @1985 // <std#string.get_data>   
14 [0xe]:           popobj2    
15 [0xf]:           sizeof ebx   
16 [0x10]:           loadval ecx   
17 [0x11]:           tne ecx, ebx   
18 [0x12]:           jne 22   
19 [0x13]: line: 170 istorel 0, fp+0   
21 [0x15]:           ret   
22 [0x16]:           nop   
23 [0x17]: line: 172 istorel 0, fp+2   
25 [0x19]: line: 173 istorel -1, fp+4   
27 [0x1b]:           pushl 1   
28 [0x1c]:           call @1985 // <std#string.get_data>   
29 [0x1d]:           popl 5   
30 [0x1e]:           iaddl 1, fp@4   
32 [0x20]:           movl 5   
33 [0x21]:           sizeof ecx   
34 [0x22]:           loadl ebx, fp+4   
35 [0x23]:           lt ebx, ecx   
36 [0x24]:           jne 61   
37 [0x25]:           iaload ecx, ebx   
38 [0x26]:           smovr_2 ecx, fp+3   
39 [0x27]: line: 174 ipushl #3   
40 [0x28]:           movl 0   
41 [0x29]:           movn #0   
43 [0x2b]:           pushobj   
44 [0x2c]:           loadl ebx, fp+2   
45 [0x2d]:           movr egx, ebx   
46 [0x2e]:           inc ebx   
47 [0x2f]:           smovr_2 ebx, fp+2   
48 [0x30]:           movr ebx, egx   
49 [0x31]:           popobj2    
50 [0x32]:           movr adx, ebx   
51 [0x33]:           chklen adx   
52 [0x34]:           iaload ebx, adx   
53 [0x35]:           loadval ecx   
54 [0x36]:           tne ecx, ebx   
55 [0x37]:           jne 59   
56 [0x38]: line: 175 istorel 0, fp+0   
58 [0x3a]:           ret   
59 [0x3b]:           nop   
60 [0x3c]:           jmp @30   
61 [0x3d]: line: 178 istorel 1, fp+0   
63 [0x3f]:           ret   


overload function: std#string_builder.operator!=[1934] params(1) in file: /usr/include/sharp//string_builder.sharp:182:8: note:  
		    def operator!=(str : _int8[]) := !operator==(str);
		       ^

0 [0x0]: line: 182 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           call @1932 // <std#string_builder.operator==>   
3 [0x3]:           loadval ebx   
4 [0x4]:           not ebx, ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


overload function: std#string_builder.operator!=[1935] params(1) in file: /usr/include/sharp//string_builder.sharp:184:8: note:  
		    def operator!=(str : string) := !operator==(str);
		       ^

0 [0x0]: line: 184 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           call @1933 // <std#string_builder.operator==>   
3 [0x3]:           loadval ebx   
4 [0x4]:           not ebx, ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


overload function: std#string_builder.operator=[1936] params(1) in file: /usr/include/sharp//string_builder.sharp:186:8: note:  
		    def operator=( immstr: _int8[] )
		       ^

0 [0x0]: line: 188 movl 1   
1 [0x1]:           checknull   
2 [0x2]:           movr cmt, ebx   
3 [0x3]:           jne 20   
4 [0x4]: line: 189 movi #255, ebx   
6 [0x6]:           newarry ebx: 0   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           popobj   
11 [0xb]: line: 190 movi #-1, ebx   
13 [0xd]:           movl 0   
14 [0xe]:           movn #3   
16 [0x10]:           movi #0, adx   
18 [0x12]:           rmov adx, ebx   
19 [0x13]:           jmp @54   
20 [0x14]: line: 193 movl 1   
21 [0x15]:           sizeof ebx   
22 [0x16]:           rstore ebx   
23 [0x17]:           movi #255, ebx   
25 [0x19]:           loadval ecx   
26 [0x1a]:           add ecx, ebx -> ebx   
27 [0x1b]:           newarry ebx: 0   
28 [0x1c]:           movl 0   
29 [0x1d]:           movn #0   
31 [0x1f]:           popobj   
32 [0x20]: line: 194 movl 1   
33 [0x21]:           sizeof ebx   
34 [0x22]:           movl 0   
35 [0x23]:           movn #3   
37 [0x25]:           movi #0, adx   
39 [0x27]:           rmov adx, ebx   
40 [0x28]: line: 195 pushl 1   
41 [0x29]:           movl 0   
42 [0x2a]:           movn #0   
44 [0x2c]:           pushobj   
45 [0x2d]:           istore 0   
47 [0x2f]:           movi #0, ebx   
49 [0x31]:           rstore ebx   
50 [0x32]:           movl 1   
51 [0x33]:           sizeof ebx   
52 [0x34]:           rstore ebx   
53 [0x35]:           call @2099 // <std.io#__srt_global.memcopy>   
54 [0x36]:           nop   
55 [0x37]:           ret   


function: std#string_builder.at[1937] params(1) in file: /usr/include/sharp//string_builder.sharp:199:8: note:  
		    def at(pos : var) : _int8 {
		       ^

0 [0x0]: line: 200 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #3   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gt ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           movr cmt, ebx   
11 [0xb]:           jne 16   
12 [0xc]: line: 201 pushl 0   
13 [0xd]:           ipushl #1   
14 [0xe]:           call @1956 // <std#string_builder.bounds_error>   
15 [0xf]:           throw    
16 [0x10]:           nop   
17 [0x11]: line: 202 movl 0   
18 [0x12]:           movn #0   
20 [0x14]:           pushobj   
21 [0x15]:           loadl ebx, fp+1   
22 [0x16]:           popobj2    
23 [0x17]:           movr adx, ebx   
24 [0x18]:           chklen adx   
25 [0x19]:           iaload ebx, adx   
26 [0x1a]:           return_val ebx   
27 [0x1b]:           ret   


overload function: std#string_builder.operator[[1938] params(1) in file: /usr/include/sharp//string_builder.sharp:205:8: note:  
		    def operator[](pos: var) : var {
		       ^

0 [0x0]: line: 206 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @1937 // <std#string_builder.at>   
3 [0x3]:           loadval ebx   
4 [0x4]:           return_val ebx   
5 [0x5]:           ret   


function: std#string_builder.fmt[1939] params(1) in file: /usr/include/sharp//string_builder.sharp:209:15: note:  
		    static def fmt( _fmt: var ) {
		              ^

0 [0x0]: line: 210 ipushl #0   
1 [0x1]:           movg @2 // @std#string_builder   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           mov8 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]: line: 211 ipushl #0   
10 [0xa]:           movi #102, ebx   
12 [0xc]:           loadval ecx   
13 [0xd]:           tne ecx, ebx   
14 [0xe]:           movr ebx, cmt   
15 [0xf]:           skne ebx // pc = 20   
16 [0x10]:           ipushl #0   
17 [0x11]:           movi #70, ebx   
19 [0x13]:           loadval ecx   
20 [0x14]:           tne ecx, ebx   
21 [0x15]:           jne 31   
22 [0x16]:           istore 0   
24 [0x18]:           movg @2 // @std#string_builder   
25 [0x19]:           movn #1   
27 [0x1b]:           loadval ebx   
28 [0x1c]:           movi #0, adx   
30 [0x1e]:           rmov adx, ebx   
31 [0x1f]:           nop   
32 [0x20]:           ret   


function: std#string_builder.set_precision[1940] params(1) in file: /usr/include/sharp//string_builder.sharp:214:15: note:  
		    static def set_precision( prec: var ) {
		              ^

0 [0x0]: line: 215 loadl ecx, fp+0   
1 [0x1]:           movi #0, ebx   
3 [0x3]:           lt ecx, ebx   
4 [0x4]:           movr ebx, cmt   
5 [0x5]:           skpe ebx // pc = 12   
6 [0x6]:           ipushl #0   
7 [0x7]:           movi #16, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 26   
14 [0xe]: line: 216 new_class @0 // std#__srt_global   
15 [0xf]:           skip @0 // pc = 15   
16 [0x10]:           dup    
17 [0x11]:           new_class @0 // std#__srt_global   
18 [0x12]:           ret   
19 [0x13]:           dup    
20 [0x14]:           newstr @29 // invalid precision:    
21 [0x15]:           call @1959 // <std#string.string>   
22 [0x16]:           ipushl #0   
23 [0x17]:           call @1991 // <std#string.operator+>   
24 [0x18]:           call @3549 // <std#illegal_argument_exception.illegal_argument_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 217 ipushl #0   
28 [0x1c]:           movg @2 // @std#string_builder   
29 [0x1d]:           movn #1   
31 [0x1f]:           loadval ebx   
32 [0x20]:           movi #0, adx   
34 [0x22]:           rmov adx, ebx   
35 [0x23]:           ret   


function: std#string_builder.to_array[1941] params(0) in file: /usr/include/sharp//string_builder.sharp:220:8: note:  
		    def to_array() : _int8[]
		       ^

0 [0x0]: line: 222 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushnull    
5 [0x5]:           itest ebx   
6 [0x6]:           skpe ebx // pc = 17   
7 [0x7]:           movl 0   
8 [0x8]:           movn #3   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           rstore ebx   
14 [0xe]:           movi #-1, ebx   
16 [0x10]:           loadval ecx   
17 [0x11]:           test ecx, ebx   
18 [0x12]:           jne 23   
19 [0x13]:           pushnull    
20 [0x14]:           popobj2    
21 [0x15]:           returnobj   
22 [0x16]:           ret   
23 [0x17]:           nop   
24 [0x18]: line: 223 movl 0   
25 [0x19]:           movn #0   
27 [0x1b]:           pushobj   
28 [0x1c]:           istore 0   
30 [0x1e]:           movl 0   
31 [0x1f]:           movn #3   
33 [0x21]:           movi #0, adx   
35 [0x23]:           iaload ebx, adx   
36 [0x24]:           rstore ebx   
37 [0x25]:           movi #1, ebx   
39 [0x27]:           loadval ecx   
40 [0x28]:           add ecx, ebx -> ebx   
41 [0x29]:           rstore ebx   
42 [0x2a]:           call @2109 // <std.io#__srt_global.copy>   
43 [0x2b]:           popobj2    
44 [0x2c]:           returnobj   
45 [0x2d]:           ret   


function: std#string_builder.starts_with[1942] params(1) in file: /usr/include/sharp//string_builder.sharp:227:8: note:  
		    def starts_with(prefix: string) : var {
		       ^

0 [0x0]: line: 228 movl 1   
1 [0x1]:           checknull   
2 [0x2]:           skpe ebx // pc = 22   
3 [0x3]:           movl 1   
4 [0x4]:           pushobj   
5 [0x5]:           call @2000 // <std#string.size>   
6 [0x6]:           loadval ebx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #3   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ebx, adx   
14 [0xe]:           rstore ebx   
15 [0xf]:           movi #1, ebx   
17 [0x11]:           loadval ecx   
18 [0x12]:           add ecx, ebx -> ebx   
19 [0x13]:           loadval ecx   
20 [0x14]:           gt ecx, ebx   
21 [0x15]:           movr ebx, cmt   
22 [0x16]:           movr cmt, ebx   
23 [0x17]:           jne 27   
24 [0x18]: line: 229 istorel 0, fp+0   
26 [0x1a]:           ret   
27 [0x1b]:           nop   
28 [0x1c]: line: 232 istorel 0, fp+2   
30 [0x1e]:           ipushl #2   
31 [0x1f]:           pushl 1   
32 [0x20]:           call @2000 // <std#string.size>   
33 [0x21]:           loadval ebx   
34 [0x22]:           loadval ecx   
35 [0x23]:           lt ecx, ebx   
36 [0x24]:           movr ebx, cmt   
37 [0x25]:           movr cmt, ebx   
38 [0x26]:           jne 68   
39 [0x27]: line: 234 movl 0   
40 [0x28]:           movn #0   
42 [0x2a]:           pushobj   
43 [0x2b]:           loadl ebx, fp+2   
44 [0x2c]:           popobj2    
45 [0x2d]:           movr adx, ebx   
46 [0x2e]:           chklen adx   
47 [0x2f]:           iaload ebx, adx   
48 [0x30]:           rstore ebx   
49 [0x31]:           movl 1   
50 [0x32]:           movn #0   
52 [0x34]:           pushobj   
53 [0x35]:           loadl ebx, fp+2   
54 [0x36]:           popobj2    
55 [0x37]:           movr adx, ebx   
56 [0x38]:           chklen adx   
57 [0x39]:           iaload ebx, adx   
58 [0x3a]:           loadval ecx   
59 [0x3b]:           tne ecx, ebx   
60 [0x3c]:           jne 64   
61 [0x3d]: line: 235 istorel 0, fp+0   
63 [0x3f]:           ret   
64 [0x40]:           nop   
65 [0x41]:           iaddl 1, fp@2   
67 [0x43]:           jmp @30   
68 [0x44]: line: 237 istorel 1, fp+0   
70 [0x46]:           ret   


function: std#string_builder.find[1943] params(1) in file: /usr/include/sharp//string_builder.sharp:240:8: note:  
		    def find(str: string) : var {
		       ^

0 [0x0]: line: 241 pushl 1   
1 [0x1]:           call @2000 // <std#string.size>   
2 [0x2]:           loadval ebx   
3 [0x3]:           rstore ebx   
4 [0x4]:           movl 0   
5 [0x5]:           movn #3   
7 [0x7]:           movi #0, adx   
9 [0x9]:           iaload ebx, adx   
10 [0xa]:           rstore ebx   
11 [0xb]:           movi #1, ebx   
13 [0xd]:           loadval ecx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           loadval ecx   
16 [0x10]:           gt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           movr cmt, ebx   
19 [0x13]:           jne 23   
20 [0x14]: line: 242 istorel 0, fp+0   
22 [0x16]:           ret   
23 [0x17]:           nop   
24 [0x18]: line: 245 istorel 0, fp+2   
26 [0x1a]: line: 246 istorel 0, fp+3   
28 [0x1c]:           ipushl #3   
29 [0x1d]:           movl 0   
30 [0x1e]:           movn #3   
32 [0x20]:           movi #0, adx   
34 [0x22]:           iaload ebx, adx   
35 [0x23]:           rstore ebx   
36 [0x24]:           movi #1, ebx   
38 [0x26]:           loadval ecx   
39 [0x27]:           add ecx, ebx -> ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           lt ecx, ebx   
42 [0x2a]:           movr ebx, cmt   
43 [0x2b]:           movr cmt, ebx   
44 [0x2c]:           jne 112   
45 [0x2d]: line: 247 ipushl #3   
46 [0x2e]:           pushl 1   
47 [0x2f]:           call @2000 // <std#string.size>   
48 [0x30]:           loadval ebx   
49 [0x31]:           loadval ecx   
50 [0x32]:           add ecx, ebx -> ebx   
51 [0x33]:           rstore ebx   
52 [0x34]:           movl 0   
53 [0x35]:           movn #3   
55 [0x37]:           movi #0, adx   
57 [0x39]:           iaload ebx, adx   
58 [0x3a]:           rstore ebx   
59 [0x3b]:           movi #1, ebx   
61 [0x3d]:           loadval ecx   
62 [0x3e]:           add ecx, ebx -> ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           lt ecx, ebx   
65 [0x41]:           movr ebx, cmt   
66 [0x42]:           movr cmt, ebx   
67 [0x43]:           jne 105   
68 [0x44]: line: 248 istorel 0, fp+4   
70 [0x46]:           ipushl #4   
71 [0x47]:           pushl 1   
72 [0x48]:           call @2000 // <std#string.size>   
73 [0x49]:           loadval ebx   
74 [0x4a]:           loadval ecx   
75 [0x4b]:           lt ecx, ebx   
76 [0x4c]:           movr ebx, cmt   
77 [0x4d]:           movr cmt, ebx   
78 [0x4e]:           jne 101   
79 [0x4f]: line: 249 pushl 1   
80 [0x50]:           ipushl #4   
81 [0x51]:           call @1982 // <std#string.operator[>   
82 [0x52]:           loadval ebx   
83 [0x53]:           rstore ebx   
84 [0x54]:           movl 0   
85 [0x55]:           movn #0   
87 [0x57]:           pushobj   
88 [0x58]:           loadl ebx, fp+4   
89 [0x59]:           popobj2    
90 [0x5a]:           movr adx, ebx   
91 [0x5b]:           chklen adx   
92 [0x5c]:           iaload ebx, adx   
93 [0x5d]:           loadval ecx   
94 [0x5e]:           tne ecx, ebx   
95 [0x5f]:           jne 97   
96 [0x60]: line: 250 jmp @101   
97 [0x61]:           nop   
98 [0x62]:           iaddl 1, fp@4   
100 [0x64]:           jmp @70   
101 [0x65]: line: 253 istorel 1, fp+0   
103 [0x67]:           ret   
104 [0x68]:           jmp @108   
105 [0x69]: line: 254 istorel 0, fp+0   
107 [0x6b]:           ret   
108 [0x6c]:           nop   
109 [0x6d]:           iaddl 1, fp@3   
111 [0x6f]:           jmp @28   
112 [0x70]: line: 257 istorel 0, fp+0   
114 [0x72]:           ret   


function: std#string_builder.find[1944] params(1) in file: /usr/include/sharp//string_builder.sharp:260:8: note:  
		    def find(str: string_builder) : var {
		       ^

0 [0x0]: line: 261 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           sizeof ebx   
4 [0x4]:           rstore ebx   
5 [0x5]:           movl 0   
6 [0x6]:           movn #3   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           movi #1, ebx   
14 [0xe]:           loadval ecx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           loadval ecx   
17 [0x11]:           gt ecx, ebx   
18 [0x12]:           movr ebx, cmt   
19 [0x13]:           movr cmt, ebx   
20 [0x14]:           jne 24   
21 [0x15]: line: 262 istorel 0, fp+0   
23 [0x17]:           ret   
24 [0x18]:           nop   
25 [0x19]: line: 265 istorel 0, fp+2   
27 [0x1b]: line: 266 istorel 0, fp+3   
29 [0x1d]:           ipushl #3   
30 [0x1e]:           movl 0   
31 [0x1f]:           movn #3   
33 [0x21]:           movi #0, adx   
35 [0x23]:           iaload ebx, adx   
36 [0x24]:           rstore ebx   
37 [0x25]:           movi #1, ebx   
39 [0x27]:           loadval ecx   
40 [0x28]:           add ecx, ebx -> ebx   
41 [0x29]:           loadval ecx   
42 [0x2a]:           lt ecx, ebx   
43 [0x2b]:           movr ebx, cmt   
44 [0x2c]:           movr cmt, ebx   
45 [0x2d]:           jne 115   
46 [0x2e]: line: 267 ipushl #3   
47 [0x2f]:           movl 1   
48 [0x30]:           movn #0   
50 [0x32]:           sizeof ebx   
51 [0x33]:           loadval ecx   
52 [0x34]:           add ecx, ebx -> ebx   
53 [0x35]:           rstore ebx   
54 [0x36]:           movl 0   
55 [0x37]:           movn #3   
57 [0x39]:           movi #0, adx   
59 [0x3b]:           iaload ebx, adx   
60 [0x3c]:           rstore ebx   
61 [0x3d]:           movi #1, ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           add ecx, ebx -> ebx   
65 [0x41]:           loadval ecx   
66 [0x42]:           lt ecx, ebx   
67 [0x43]:           movr ebx, cmt   
68 [0x44]:           movr cmt, ebx   
69 [0x45]:           jne 108   
70 [0x46]: line: 268 istorel 0, fp+4   
72 [0x48]:           ipushl #4   
73 [0x49]:           movl 1   
74 [0x4a]:           movn #0   
76 [0x4c]:           sizeof ebx   
77 [0x4d]:           loadval ecx   
78 [0x4e]:           lt ecx, ebx   
79 [0x4f]:           movr ebx, cmt   
80 [0x50]:           movr cmt, ebx   
81 [0x51]:           jne 104   
82 [0x52]: line: 269 pushl 1   
83 [0x53]:           ipushl #4   
84 [0x54]:           call @1938 // <std#string_builder.operator[>   
85 [0x55]:           loadval ebx   
86 [0x56]:           rstore ebx   
87 [0x57]:           movl 0   
88 [0x58]:           movn #0   
90 [0x5a]:           pushobj   
91 [0x5b]:           loadl ebx, fp+4   
92 [0x5c]:           popobj2    
93 [0x5d]:           movr adx, ebx   
94 [0x5e]:           chklen adx   
95 [0x5f]:           iaload ebx, adx   
96 [0x60]:           loadval ecx   
97 [0x61]:           tne ecx, ebx   
98 [0x62]:           jne 100   
99 [0x63]: line: 270 jmp @104   
100 [0x64]:           nop   
101 [0x65]:           iaddl 1, fp@4   
103 [0x67]:           jmp @72   
104 [0x68]: line: 273 istorel 1, fp+0   
106 [0x6a]:           ret   
107 [0x6b]:           jmp @111   
108 [0x6c]: line: 274 istorel 0, fp+0   
110 [0x6e]:           ret   
111 [0x6f]:           nop   
112 [0x70]:           iaddl 1, fp@3   
114 [0x72]:           jmp @29   
115 [0x73]: line: 277 istorel 0, fp+0   
117 [0x75]:           ret   


function: std#string_builder.ends_with[1945] params(1) in file: /usr/include/sharp//string_builder.sharp:280:8: note:  
		    def ends_with(postfix: string) : var {
		       ^

0 [0x0]: line: 281 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           sizeof ebx   
4 [0x4]:           rstore ebx   
5 [0x5]:           movl 0   
6 [0x6]:           movn #3   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           rstore ebx   
12 [0xc]:           movi #1, ebx   
14 [0xe]:           loadval ecx   
15 [0xf]:           add ecx, ebx -> ebx   
16 [0x10]:           loadval ecx   
17 [0x11]:           gte ecx, ebx   
18 [0x12]:           movr ebx, cmt   
19 [0x13]:           movr cmt, ebx   
20 [0x14]:           jne 24   
21 [0x15]: line: 282 istorel 0, fp+0   
23 [0x17]:           ret   
24 [0x18]:           nop   
25 [0x19]: line: 284 movl 0   
26 [0x1a]:           movn #3   
28 [0x1c]:           movi #0, adx   
30 [0x1e]:           iaload ebx, adx   
31 [0x1f]:           rstore ebx   
32 [0x20]:           movi #1, ebx   
34 [0x22]:           loadval ecx   
35 [0x23]:           add ecx, ebx -> ebx   
36 [0x24]:           rstore ebx   
37 [0x25]:           movl 1   
38 [0x26]:           movn #0   
40 [0x28]:           sizeof ebx   
41 [0x29]:           loadval ecx   
42 [0x2a]:           sub ecx, ebx -> ebx   
43 [0x2b]:           smovr_2 ebx, fp+2   
44 [0x2c]:           ipushl #2   
45 [0x2d]:           movl 0   
46 [0x2e]:           movn #3   
48 [0x30]:           movi #0, adx   
50 [0x32]:           iaload ebx, adx   
51 [0x33]:           rstore ebx   
52 [0x34]:           movi #1, ebx   
54 [0x36]:           loadval ecx   
55 [0x37]:           add ecx, ebx -> ebx   
56 [0x38]:           loadval ecx   
57 [0x39]:           lt ecx, ebx   
58 [0x3a]:           movr ebx, cmt   
59 [0x3b]:           movr cmt, ebx   
60 [0x3c]:           jne 90   
61 [0x3d]: line: 285 movl 0   
62 [0x3e]:           movn #0   
64 [0x40]:           pushobj   
65 [0x41]:           loadl ebx, fp+2   
66 [0x42]:           popobj2    
67 [0x43]:           movr adx, ebx   
68 [0x44]:           chklen adx   
69 [0x45]:           iaload ebx, adx   
70 [0x46]:           rstore ebx   
71 [0x47]:           movl 1   
72 [0x48]:           movn #0   
74 [0x4a]:           pushobj   
75 [0x4b]:           loadl ebx, fp+2   
76 [0x4c]:           popobj2    
77 [0x4d]:           movr adx, ebx   
78 [0x4e]:           chklen adx   
79 [0x4f]:           iaload ebx, adx   
80 [0x50]:           loadval ecx   
81 [0x51]:           tne ecx, ebx   
82 [0x52]:           jne 86   
83 [0x53]: line: 286 istorel 0, fp+0   
85 [0x55]:           ret   
86 [0x56]:           nop   
87 [0x57]:           iaddl 1, fp@2   
89 [0x59]:           jmp @44   
90 [0x5a]: line: 289 istorel 1, fp+0   
92 [0x5c]:           ret   


overload function: std#string_builder.operator+[1946] params(1) in file: /usr/include/sharp//string_builder.sharp:292:8: note:  
		    def operator+(num : var) : string_builder {
		       ^

0 [0x0]: line: 293 new_class @0 // std#__srt_global   
1 [0x1]:           movi #112, adx   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @1915 // <std#string_builder.string_builder>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 294 pushl 2   
11 [0xb]:           pushl 0   
12 [0xc]:           ipushl #1   
13 [0xd]:           call @1948 // <std#string_builder.parse>   
14 [0xe]:           call @1952 // <std#string_builder.get_data>   
15 [0xf]:           call @1927 // <std#string_builder.append>   
16 [0x10]:           pop   
17 [0x11]: line: 295 movl 2   
18 [0x12]:           returnobj   
19 [0x13]:           ret   


function: std#string_builder.size[1947] params(0) in file: /usr/include/sharp//string_builder.sharp:298:8: note:  
		    def size() : var {
		       ^

0 [0x0]: line: 299 movl 0   
1 [0x1]:           movn #3   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #1, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           add ecx, ebx -> ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


function: std#string_builder.parse[1948] params(1) in file: /usr/include/sharp//string_builder.sharp:302:8: note:  
		    def parse( number : var ) : string_builder
		       ^

0 [0x0]: line: 304 new_class @0 // std#__srt_global   
1 [0x1]:           movi #112, adx   
3 [0x3]:           movg @2 // @std#string_builder   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           rstore ebx   
10 [0xa]:           ipushl #1   
11 [0xb]:           movg @2 // @std#string_builder   
12 [0xc]:           movn #1   
14 [0xe]:           movi #0, adx   
16 [0x10]:           iaload ebx, adx   
17 [0x11]:           rstore ebx   
18 [0x12]:           call @2253 // <std#__srt_global.snprintf>   
19 [0x13]:           call @1915 // <std#string_builder.string_builder>   
20 [0x14]:           popobj2    
21 [0x15]:           returnobj   
22 [0x16]:           ret   


overload function: std#string_builder.operator+=[1949] params(1) in file: /usr/include/sharp//string_builder.sharp:307:8: note:  
		    def operator+=( num: var ) : string_builder
		       ^

0 [0x0]: line: 309 pushl 0   
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #1   
3 [0x3]:           call @1948 // <std#string_builder.parse>   
4 [0x4]:           call @1952 // <std#string_builder.get_data>   
5 [0x5]:           call @1927 // <std#string_builder.append>   
6 [0x6]:           popobj2    
7 [0x7]:           returnobj   
8 [0x8]:           ret   


overload function: std#string_builder.operator+=[1950] params(1) in file: /usr/include/sharp//string_builder.sharp:312:15: note:  
		    public def operator+=( obj: printable ) : string_builder
		              ^

0 [0x0]: line: 314 pushl 1   
1 [0x1]:           invoke_delegate 3523 { static=0, args=0 }   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+2   
5 [0x5]: line: 315 movl 2   
6 [0x6]:           checknull   
7 [0x7]:           not ebx, ebx   
8 [0x8]:           skne ebx // pc = 15   
9 [0x9]:           movl 2   
10 [0xa]:           pushobj   
11 [0xb]:           call @1985 // <std#string.get_data>   
12 [0xc]:           pushnull    
13 [0xd]:           itest ebx   
14 [0xe]:           not ebx, ebx   
15 [0xf]:           movr cmt, ebx   
16 [0x10]:           jne 25   
17 [0x11]: line: 316 pushl 0   
18 [0x12]:           pushl 2   
19 [0x13]:           call @1985 // <std#string.get_data>   
20 [0x14]:           call @1927 // <std#string_builder.append>   
21 [0x15]:           popobj2    
22 [0x16]:           returnobj   
23 [0x17]:           ret   
24 [0x18]:           jmp @31   
25 [0x19]: line: 318 pushl 0   
26 [0x1a]:           newstr @28 // null   
27 [0x1b]:           call @1927 // <std#string_builder.append>   
28 [0x1c]:           popobj2    
29 [0x1d]:           returnobj   
30 [0x1e]:           ret   
31 [0x1f]:           nop   


overload function: std#string_builder.operator+=[1951] params(1) in file: /usr/include/sharp//string_builder.sharp:321:8: note:  
		    def operator+=( str: string ) : string_builder
		       ^

0 [0x0]: line: 323 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           call @1985 // <std#string.get_data>   
3 [0x3]:           call @1927 // <std#string_builder.append>   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   


function: std#string_builder.get_data[1952] params(0) in file: /usr/include/sharp//string_builder.sharp:326:8: note:  
		    def get_data() : _int8[]{
		       ^

0 [0x0]: line: 327 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           returnobj   
4 [0x4]:           ret   


overload function: std#string_builder.operator+=[1953] params(1) in file: /usr/include/sharp//string_builder.sharp:330:8: note:  
		    def operator+=( str: string_builder ) : string_builder
		       ^

0 [0x0]: line: 332 pushl 0   
1 [0x1]:           movl 1   
2 [0x2]:           movn #0   
4 [0x4]:           pushobj   
5 [0x5]:           call @1927 // <std#string_builder.append>   
6 [0x6]:           popobj2    
7 [0x7]:           returnobj   
8 [0x8]:           ret   


overload function: std#string_builder.operator+=[1954] params(1) in file: /usr/include/sharp//string_builder.sharp:335:8: note:  
		    def operator+=( str: _int8[] ) : string_builder
		       ^

0 [0x0]: line: 337 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           call @1927 // <std#string_builder.append>   
3 [0x3]:           popobj2    
4 [0x4]:           returnobj   
5 [0x5]:           ret   


function: std#string_builder.substring[1955] params(2) in file: /usr/include/sharp//string_builder.sharp:340:15: note:  
		    public def substring(startPos: var, endPos: var) : string_builder {
		              ^

0 [0x0]: line: 341 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #3   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movi #1, ebx   
10 [0xa]:           loadval ecx   
11 [0xb]:           add ecx, ebx -> ebx   
12 [0xc]:           loadval ecx   
13 [0xd]:           gte ecx, ebx   
14 [0xe]:           movr ebx, cmt   
15 [0xf]:           skpe ebx // pc = 21   
16 [0x10]:           loadl ecx, fp+1   
17 [0x11]:           movi #0, ebx   
19 [0x13]:           lt ecx, ebx   
20 [0x14]:           movr ebx, cmt   
21 [0x15]:           movr cmt, ebx   
22 [0x16]:           jne 27   
23 [0x17]: line: 342 pushl 0   
24 [0x18]:           ipushl #1   
25 [0x19]:           call @1956 // <std#string_builder.bounds_error>   
26 [0x1a]:           throw    
27 [0x1b]:           nop   
28 [0x1c]: line: 343 ipushl #2   
29 [0x1d]:           loadl ebx, fp+1   
30 [0x1e]:           loadval ecx   
31 [0x1f]:           lt ecx, ebx   
32 [0x20]:           movr ebx, cmt   
33 [0x21]:           movr cmt, ebx   
34 [0x22]:           jne 51   
35 [0x23]: line: 344 new_class @0 // std#__srt_global   
36 [0x24]:           skip @0 // pc = 36   
37 [0x25]:           dup    
38 [0x26]:           new_class @0 // std#__srt_global   
39 [0x27]:           ret   
40 [0x28]:           dup    
41 [0x29]:           newstr @30 // endPos:    
42 [0x2a]:           call @1959 // <std#string.string>   
43 [0x2b]:           ipushl #2   
44 [0x2c]:           call @1991 // <std#string.operator+>   
45 [0x2d]:           newstr @31 //  cannot be less than the startPos:    
46 [0x2e]:           call @1971 // <std#string.operator+>   
47 [0x2f]:           ipushl #1   
48 [0x30]:           call @1991 // <std#string.operator+>   
49 [0x31]:           call @3549 // <std#illegal_argument_exception.illegal_argument_exception>   
50 [0x32]:           throw    
51 [0x33]:           nop   
52 [0x34]: line: 348 new_class @0 // std#__srt_global   
53 [0x35]:           movi #112, adx   
55 [0x37]:           call @1958 // <std#string_builder.string_builder>   
56 [0x38]:           popobj2    
57 [0x39]:           smovr_3 fp+3   
58 [0x3a]: line: 349 movl 0   
59 [0x3b]:           movn #0   
61 [0x3d]:           pushobj   
62 [0x3e]:           ipushl #1   
63 [0x3f]:           ipushl #2   
64 [0x40]:           call @2109 // <std.io#__srt_global.copy>   
65 [0x41]:           movl 3   
66 [0x42]:           movn #0   
68 [0x44]:           popobj   
69 [0x45]: line: 350 movl 3   
70 [0x46]:           returnobj   
71 [0x47]:           ret   


function: std#string_builder.bounds_error[1956] params(1) in file: /usr/include/sharp//string_builder.sharp:353:16: note:  
		    private def bounds_error(pos : var) : bounds_except {
		               ^

0 [0x0]: line: 354 new_class @0 // std#__srt_global   
1 [0x1]:           shl adx, adx -> adx   
2 [0x2]:           dup    
3 [0x3]:           new_class @0 // std#__srt_global   
4 [0x4]:           ret   
5 [0x5]:           dup    
6 [0x6]:           newstr @32 // Index out of bounds exception at:    
7 [0x7]:           call @1959 // <std#string.string>   
8 [0x8]:           ipushl #1   
9 [0x9]:           call @1991 // <std#string.operator+>   
10 [0xa]:           newstr @33 //  with size of:    
11 [0xb]:           call @1971 // <std#string.operator+>   
12 [0xc]:           movl 0   
13 [0xd]:           movn #3   
15 [0xf]:           movi #0, adx   
17 [0x11]:           iaload ebx, adx   
18 [0x12]:           rstore ebx   
19 [0x13]:           movi #1, ebx   
21 [0x15]:           loadval ecx   
22 [0x16]:           add ecx, ebx -> ebx   
23 [0x17]:           rstore ebx   
24 [0x18]:           call @1991 // <std#string.operator+>   
25 [0x19]:           call @3555 // <std#out_of_bounds_exception.out_of_bounds_exception>   
26 [0x1a]:           popobj2    
27 [0x1b]:           returnobj   
28 [0x1c]:           ret   


function: std#string_builder.hash[1957] params(0) in file: /usr/include/sharp//string_builder.sharp:357:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 358 istorel 0, fp+1   
2 [0x2]: line: 359 istorel 1, fp+2   
4 [0x4]: line: 360 istorel -1, fp+4   
6 [0x6]: line: 361 movl 0   
7 [0x7]: line: 362 movn #0   
9 [0x9]:           pushobj   
10 [0xa]:           popl 5   
11 [0xb]:           iaddl 1, fp@4   
13 [0xd]:           movl 5   
14 [0xe]:           sizeof ecx   
15 [0xf]:           loadl ebx, fp+4   
16 [0x10]:           lt ebx, ecx   
17 [0x11]:           jne 55   
18 [0x12]:           iaload ecx, ebx   
19 [0x13]:           smovr_2 ecx, fp+3   
20 [0x14]: line: 363 ipushl #1   
21 [0x15]:           ipushl #3   
22 [0x16]:           movi #97, ebx   
24 [0x18]:           loadval ecx   
25 [0x19]:           sub ecx, ebx -> ebx   
26 [0x1a]:           rstore ebx   
27 [0x1b]:           movi #1, ebx   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           add ecx, ebx -> ebx   
31 [0x1f]:           rstore ebx   
32 [0x20]:           loadl ebx, fp+2   
33 [0x21]:           loadval ecx   
34 [0x22]:           mul ecx, ebx -> ebx   
35 [0x23]:           loadval ecx   
36 [0x24]:           add ecx, ebx -> ebx   
37 [0x25]:           rstore ebx   
38 [0x26]:           movi #1000000009, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           mod ecx, ebx -> ebx   
42 [0x2a]:           smovr_2 ebx, fp+1   
43 [0x2b]: line: 364 ipushl #2   
44 [0x2c]:           movi #31, ebx   
46 [0x2e]:           loadval ecx   
47 [0x2f]:           mul ecx, ebx -> ebx   
48 [0x30]:           rstore ebx   
49 [0x31]:           movi #1000000009, ebx   
51 [0x33]:           loadval ecx   
52 [0x34]:           mod ecx, ebx -> ebx   
53 [0x35]:           smovr_2 ebx, fp+2   
54 [0x36]:           jmp @11   
55 [0x37]: line: 366 new_class @0 // std#__srt_global   
56 [0x38]:           imod adx, #? (112)   
58 [0x3a]:           ipushl #1   
59 [0x3b]:           call @2426 // <std#long.long>   
60 [0x3c]:           popobj2    
61 [0x3d]:           returnobj   
62 [0x3e]:           ret   


constructor: std#string_builder.string_builder[1958] params(0) in file: /usr/include/sharp//string_builder.sharp:5:6: note:  
		class string_builder : loopable<_int8> {
		     ^

0 [0x0]:         movi #128, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #1   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #2   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #3   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]: line: 15 movi #255, ebx   
26 [0x1a]:          newarry ebx: 0   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          popobj   
31 [0x1f]: line: 16 movi #255, ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #2   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]: line: 17 movi #-1, ebx   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #3   
44 [0x2c]:          movi #0, adx   
46 [0x2e]:          rmov adx, ebx   
47 [0x2f]:          ret   


constructor: std#string.string[1959] params(1) in file: /usr/include/sharp//string.sharp:10:11: note:  
		    string(str : _int8[]) {
		          ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 11 movl 1   
2 [0x2]:          checknull   
3 [0x3]:          not ebx, ebx   
4 [0x4]:          movr cmt, ebx   
5 [0x5]:          jne 10   
6 [0x6]: line: 12 pushl 0   
7 [0x7]:          pushl 1   
8 [0x8]:          call @1969 // <std#string.append>   
9 [0x9]:          pop   
10 [0xa]:          nop   
11 [0xb]:          ret   


constructor: std#string.string[1960] params(1) in file: /usr/include/sharp//string.sharp:16:11: note:  
		    string(ch: var) {
		          ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 17 pushl 0   
2 [0x2]:          ipushl #1   
3 [0x3]:          call @1966 // <std#string.append>   
4 [0x4]:          pop   
5 [0x5]:          ret   


constructor: std#string.string[1961] params(1) in file: /usr/include/sharp//string.sharp:20:11: note:  
		    string(str : char[]) {
		          ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 21 movl 1   
2 [0x2]:          checknull   
3 [0x3]:          not ebx, ebx   
4 [0x4]:          movr cmt, ebx   
5 [0x5]:          jne 46   
6 [0x6]: line: 22 movl 1   
7 [0x7]:          sizeof ebx   
8 [0x8]:          newarry ebx: 8   
9 [0x9]:          movl 0   
10 [0xa]:          movn #0   
12 [0xc]:          popobj   
13 [0xd]: line: 23 istorel 0, fp+2   
15 [0xf]: line: 24 istorel -1, fp+4   
17 [0x11]:          pushl 1   
18 [0x12]:          popl 5   
19 [0x13]:          iaddl 1, fp@4   
21 [0x15]:          movl 5   
22 [0x16]:          sizeof ecx   
23 [0x17]:          loadl ebx, fp+4   
24 [0x18]:          lt ebx, ecx   
25 [0x19]:          jne 46   
26 [0x1a]:          movnd ebx   
27 [0x1b]:          pushobj   
28 [0x1c]:          popl 3   
29 [0x1d]: line: 25 pushl 3   
30 [0x1e]:          call @1696 // <std#integer<_int8>.get_value>   
31 [0x1f]:          movl 0   
32 [0x20]:          movn #0   
34 [0x22]:          pushobj   
35 [0x23]:          loadl ebx, fp+2   
36 [0x24]:          movr egx, ebx   
37 [0x25]:          inc ebx   
38 [0x26]:          smovr_2 ebx, fp+2   
39 [0x27]:          movr ebx, egx   
40 [0x28]:          popobj2    
41 [0x29]:          movr adx, ebx   
42 [0x2a]:          chklen adx   
43 [0x2b]:          loadval ebx   
44 [0x2c]:          rmov adx, ebx   
45 [0x2d]:          jmp @19   
46 [0x2e]:          nop   
47 [0x2f]:          ret   


constructor: std#string.string[1962] params(1) in file: /usr/include/sharp//string.sharp:30:11: note:  
		    string(str: string) {
		          ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 31 movl 1   
2 [0x2]:          checknull   
3 [0x3]:          not ebx, ebx   
4 [0x4]:          movr cmt, ebx   
5 [0x5]:          jne 13   
6 [0x6]: line: 32 pushl 0   
7 [0x7]:          movl 1   
8 [0x8]:          movn #0   
10 [0xa]:          pushobj   
11 [0xb]:          call @1969 // <std#string.append>   
12 [0xc]:          pop   
13 [0xd]:          nop   
14 [0xe]:          ret   


constructor: std#string.string[1963] params(2) in file: /usr/include/sharp//string.sharp:36:11: note:  
		    string(str : _int8[], offset: var) {
		          ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 37 movl 1   
2 [0x2]:          checknull   
3 [0x3]:          not ebx, ebx   
4 [0x4]:          movr cmt, ebx   
5 [0x5]:          jne 16   
6 [0x6]: line: 38 pushl 1   
7 [0x7]:          ipushl #2   
8 [0x8]:          movl 1   
9 [0x9]:          sizeof ebx   
10 [0xa]:          rstore ebx   
11 [0xb]:          call @2109 // <std.io#__srt_global.copy>   
12 [0xc]:          movl 0   
13 [0xd]:          movn #0   
15 [0xf]:          popobj   
16 [0x10]:          nop   
17 [0x11]:          ret   


constructor: std#string.string[1964] params(3) in file: /usr/include/sharp//string.sharp:42:11: note:  
		    string(str : _int8[], start: var, end: var) {
		          ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 43 movl 1   
2 [0x2]:          checknull   
3 [0x3]:          not ebx, ebx   
4 [0x4]:          skne ebx // pc = 15   
5 [0x5]:          ipushl #3   
6 [0x6]:          loadl ebx, fp+2   
7 [0x7]:          loadval ecx   
8 [0x8]:          sub ecx, ebx -> ebx   
9 [0x9]:          rstore ebx   
10 [0xa]:          movi #0, ebx   
12 [0xc]:          loadval ecx   
13 [0xd]:          gt ecx, ebx   
14 [0xe]:          movr ebx, cmt   
15 [0xf]:          movr cmt, ebx   
16 [0x10]:          jne 36   
17 [0x11]: line: 44 ipushl #3   
18 [0x12]:          loadl ebx, fp+2   
19 [0x13]:          loadval ecx   
20 [0x14]:          sub ecx, ebx -> ebx   
21 [0x15]:          newarry ebx: 0   
22 [0x16]:          movl 0   
23 [0x17]:          movn #0   
25 [0x19]:          popobj   
26 [0x1a]: line: 45 pushl 1   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          pushobj   
31 [0x1f]:          istore 0   
33 [0x21]:          ipushl #2   
34 [0x22]:          ipushl #3   
35 [0x23]:          call @2099 // <std.io#__srt_global.memcopy>   
36 [0x24]:          nop   
37 [0x25]:          ret   


function: std#string.replace[1965] params(2) in file: /usr/include/sharp//string.sharp:49:8: note:  
		    def replace(pos : var, ch: _int8) : string {
		       ^

0 [0x0]: line: 50 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          sizeof ebx   
5 [0x5]:          loadval ecx   
6 [0x6]:          gte ecx, ebx   
7 [0x7]:          movr ebx, cmt   
8 [0x8]:          movr cmt, ebx   
9 [0x9]:          jne 14   
10 [0xa]: line: 51 pushl 0   
11 [0xb]:          ipushl #1   
12 [0xc]:          call @2015 // <std#string.bounds_error>   
13 [0xd]:          throw    
14 [0xe]:          nop   
15 [0xf]: line: 54 ipushl #2   
16 [0x10]:          movl 0   
17 [0x11]:          movn #0   
19 [0x13]:          pushobj   
20 [0x14]:          loadl ebx, fp+1   
21 [0x15]:          popobj2    
22 [0x16]:          movr adx, ebx   
23 [0x17]:          chklen adx   
24 [0x18]:          loadval ebx   
25 [0x19]:          rmov adx, ebx   
26 [0x1a]: line: 55 movl 0   
27 [0x1b]:          returnobj   
28 [0x1c]:          ret   


function: std#string.append[1966] params(1) in file: /usr/include/sharp//string.sharp:58:8: note:  
		    def append(ch: var) : string
		       ^

0 [0x0]: line: 60 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          pushnull    
5 [0x5]:          itest ebx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 16   
8 [0x8]: line: 61 movi #1, ebx   
10 [0xa]:          newarry ebx: 8   
11 [0xb]:          movl 0   
12 [0xc]:          movn #0   
14 [0xe]:          popobj   
15 [0xf]:          jmp @31   
16 [0x10]: line: 63 movl 0   
17 [0x11]:          movn #0   
19 [0x13]:          pushobj   
20 [0x14]:          movl 0   
21 [0x15]:          movn #0   
23 [0x17]:          sizeof ebx   
24 [0x18]:          rstore ebx   
25 [0x19]:          movi #1, ebx   
27 [0x1b]:          loadval ecx   
28 [0x1c]:          add ecx, ebx -> ebx   
29 [0x1d]:          rstore ebx   
30 [0x1e]:          call @2089 // <std.io#__srt_global.realloc>   
31 [0x1f]:          nop   
32 [0x20]: line: 65 ipushl #1   
33 [0x21]:          movl 0   
34 [0x22]:          movn #0   
36 [0x24]:          pushobj   
37 [0x25]:          movl 0   
38 [0x26]:          movn #0   
40 [0x28]:          sizeof ebx   
41 [0x29]:          rstore ebx   
42 [0x2a]:          movi #1, ebx   
44 [0x2c]:          loadval ecx   
45 [0x2d]:          sub ecx, ebx -> ebx   
46 [0x2e]:          popobj2    
47 [0x2f]:          movr adx, ebx   
48 [0x30]:          chklen adx   
49 [0x31]:          loadval ebx   
50 [0x32]:          rmov adx, ebx   
51 [0x33]: line: 66 movl 0   
52 [0x34]:          returnobj   
53 [0x35]:          ret   


function: std#string.empty[1967] params(0) in file: /usr/include/sharp//string.sharp:69:8: note:  
		    def empty() := sizeof(data)==0;
		       ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          sizeof ebx   
4 [0x4]:          rstore ebx   
5 [0x5]:          movi #0, ebx   
7 [0x7]:          loadval ecx   
8 [0x8]:          test ecx, ebx   
9 [0x9]:          return_val cmt   
10 [0xa]:          ret   


function: std#string.append[1968] params(1) in file: /usr/include/sharp//string.sharp:71:8: note:  
		    def append(c: char) := append(c.get_value());
		       ^

0 [0x0]: line: 71 pushl 0   
1 [0x1]:          pushl 1   
2 [0x2]:          call @1696 // <std#integer<_int8>.get_value>   
3 [0x3]:          call @1966 // <std#string.append>   
4 [0x4]:          popobj2    
5 [0x5]:          returnobj   
6 [0x6]:          ret   


function: std#string.append[1969] params(1) in file: /usr/include/sharp//string.sharp:73:8: note:  
		    def append(immstr: _int8[]) : string
		       ^

0 [0x0]: line: 75 movl 1   
1 [0x1]:          checknull   
2 [0x2]:          movr cmt, ebx   
3 [0x3]:          jne 7   
4 [0x4]:          movl 0   
5 [0x5]:          returnobj   
6 [0x6]:          ret   
7 [0x7]:          nop   
8 [0x8]: line: 77 movl 0   
9 [0x9]:          movn #0   
11 [0xb]:          sizeof ebx   
12 [0xc]:          smovr_2 ebx, fp+2   
13 [0xd]: line: 79 movl 0   
14 [0xe]:          movn #0   
16 [0x10]:          pushobj   
17 [0x11]:          pushnull    
18 [0x12]:          itest ebx   
19 [0x13]:          movr cmt, ebx   
20 [0x14]:          jne 29   
21 [0x15]: line: 80 movl 1   
22 [0x16]:          sizeof ebx   
23 [0x17]:          newarry ebx: 0   
24 [0x18]:          movl 0   
25 [0x19]:          movn #0   
27 [0x1b]:          popobj   
28 [0x1c]:          jmp @44   
29 [0x1d]: line: 82 movl 0   
30 [0x1e]:          movn #0   
32 [0x20]:          pushobj   
33 [0x21]:          movl 0   
34 [0x22]:          movn #0   
36 [0x24]:          sizeof ebx   
37 [0x25]:          rstore ebx   
38 [0x26]:          movl 1   
39 [0x27]:          sizeof ebx   
40 [0x28]:          loadval ecx   
41 [0x29]:          add ecx, ebx -> ebx   
42 [0x2a]:          rstore ebx   
43 [0x2b]:          call @2089 // <std.io#__srt_global.realloc>   
44 [0x2c]:          nop   
45 [0x2d]: line: 84 pushl 1   
46 [0x2e]:          movl 0   
47 [0x2f]:          movn #0   
49 [0x31]:          pushobj   
50 [0x32]:          ipushl #2   
51 [0x33]:          istore 0   
53 [0x35]:          movl 1   
54 [0x36]:          sizeof ebx   
55 [0x37]:          rstore ebx   
56 [0x38]:          call @2099 // <std.io#__srt_global.memcopy>   
57 [0x39]: line: 85 movl 0   
58 [0x3a]:          returnobj   
59 [0x3b]:          ret   


function: std#string.append[1970] params(2) in file: /usr/include/sharp//string.sharp:88:8: note:  
		    def append(immstr: _int8[], len: var) : string
		       ^

0 [0x0]: line: 90 movl 1   
1 [0x1]:          checknull   
2 [0x2]:          movr cmt, ebx   
3 [0x3]:          jne 7   
4 [0x4]:          movl 0   
5 [0x5]:          returnobj   
6 [0x6]:          ret   
7 [0x7]:          nop   
8 [0x8]: line: 91 loadl ecx, fp+2   
9 [0x9]:          movi #0, ebx   
11 [0xb]:          lt ecx, ebx   
12 [0xc]:          movr ebx, cmt   
13 [0xd]:          movr cmt, ebx   
14 [0xe]:          jne 21   
15 [0xf]: line: 92 new_class @0 // std#__srt_global   
16 [0x10]:          newstr @0 // job#   
17 [0x11]:          dup    
18 [0x12]:          newstr @25 // length cannot be less than zero   
19 [0x13]:          call @3590 // <std#error.error>   
20 [0x14]:          throw    
21 [0x15]:          nop   
22 [0x16]: line: 94 ipushl #2   
23 [0x17]:          movl 1   
24 [0x18]:          sizeof ebx   
25 [0x19]:          loadval ecx   
26 [0x1a]:          gt ecx, ebx   
27 [0x1b]:          movr ebx, cmt   
28 [0x1c]:          movr cmt, ebx   
29 [0x1d]:          jne 48   
30 [0x1e]: line: 95 new_class @0 // std#__srt_global   
31 [0x1f]:          newstr @0 // job#   
32 [0x20]:          dup    
33 [0x21]:          new_class @0 // std#__srt_global   
34 [0x22]:          ret   
35 [0x23]:          dup    
36 [0x24]:          newstr @26 // length of:    
37 [0x25]:          call @1959 // <std#string.string>   
38 [0x26]:          ipushl #2   
39 [0x27]:          call @1991 // <std#string.operator+>   
40 [0x28]:          newstr @27 //  is greater than the string:    
41 [0x29]:          call @1971 // <std#string.operator+>   
42 [0x2a]:          movl 1   
43 [0x2b]:          sizeof ebx   
44 [0x2c]:          rstore ebx   
45 [0x2d]:          call @1991 // <std#string.operator+>   
46 [0x2e]:          call @3591 // <std#error.error>   
47 [0x2f]:          throw    
48 [0x30]:          nop   
49 [0x31]: line: 97 movl 0   
50 [0x32]:          movn #0   
52 [0x34]:          sizeof ebx   
53 [0x35]:          smovr_2 ebx, fp+3   
54 [0x36]: line: 99 movl 0   
55 [0x37]:          movn #0   
57 [0x39]:          pushobj   
58 [0x3a]:          pushnull    
59 [0x3b]:          itest ebx   
60 [0x3c]:          movr cmt, ebx   
61 [0x3d]:          jne 69   
62 [0x3e]: line: 100 loadl ebx, fp+2   
63 [0x3f]:           newarry ebx: 8   
64 [0x40]:           movl 0   
65 [0x41]:           movn #0   
67 [0x43]:           popobj   
68 [0x44]:           jmp @83   
69 [0x45]: line: 102 movl 0   
70 [0x46]:           movn #0   
72 [0x48]:           pushobj   
73 [0x49]:           movl 0   
74 [0x4a]:           movn #0   
76 [0x4c]:           sizeof ebx   
77 [0x4d]:           rstore ebx   
78 [0x4e]:           loadl ebx, fp+2   
79 [0x4f]:           loadval ecx   
80 [0x50]:           add ecx, ebx -> ebx   
81 [0x51]:           rstore ebx   
82 [0x52]:           call @2089 // <std.io#__srt_global.realloc>   
83 [0x53]:           nop   
84 [0x54]: line: 104 pushl 1   
85 [0x55]:           movl 0   
86 [0x56]:           movn #0   
88 [0x58]:           pushobj   
89 [0x59]:           ipushl #3   
90 [0x5a]:           istore 0   
92 [0x5c]:           ipushl #2   
93 [0x5d]:           call @2099 // <std.io#__srt_global.memcopy>   
94 [0x5e]: line: 105 movl 0   
95 [0x5f]:           returnobj   
96 [0x60]:           ret   


overload function: std#string.operator+[1971] params(1) in file: /usr/include/sharp//string.sharp:108:8: note:  
		    def operator+(immstr : _int8[]) : string {
		       ^

0 [0x0]: line: 109 new_class @0 // std#__srt_global   
1 [0x1]:           ret   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @1959 // <std#string.string>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 110 movl 1   
11 [0xb]:           checknull   
12 [0xc]:           not ebx, ebx   
13 [0xd]:           movr cmt, ebx   
14 [0xe]:           jne 22   
15 [0xf]: line: 111 pushl 2   
16 [0x10]:           pushl 1   
17 [0x11]:           call @1969 // <std#string.append>   
18 [0x12]:           popobj2    
19 [0x13]:           returnobj   
20 [0x14]:           ret   
21 [0x15]:           jmp @25   
22 [0x16]: line: 113 movl 2   
23 [0x17]:           returnobj   
24 [0x18]:           ret   
25 [0x19]:           nop   


function: std#string.to_lower[1972] params(0) in file: /usr/include/sharp//string.sharp:116:8: note:  
		    def to_lower() : string {
		       ^

0 [0x0]: line: 117 new_class @0 // std#__srt_global   
1 [0x1]:           ret   
2 [0x2]:           dup    
3 [0x3]:           call @2017 // <std#string.string>   
4 [0x4]:           popobj2    
5 [0x5]:           smovr_3 fp+1   
6 [0x6]: line: 118 movl 0   
7 [0x7]:           movn #0   
9 [0x9]:           pushobj   
10 [0xa]:           pushnull    
11 [0xb]:           itest ebx   
12 [0xc]:           not ebx, ebx   
13 [0xd]:           movr cmt, ebx   
14 [0xe]:           jne 88   
15 [0xf]: line: 119 movl 0   
16 [0x10]:           movn #0   
18 [0x12]:           pushobj   
19 [0x13]:           istore 0   
21 [0x15]:           movl 0   
22 [0x16]:           movn #0   
24 [0x18]:           sizeof ebx   
25 [0x19]:           rstore ebx   
26 [0x1a]:           call @2109 // <std.io#__srt_global.copy>   
27 [0x1b]:           movl 1   
28 [0x1c]:           movn #0   
30 [0x1e]:           popobj   
31 [0x1f]: line: 121 istorel 0, fp+2   
33 [0x21]: line: 122 istorel -1, fp+4   
35 [0x23]:           movl 0   
36 [0x24]:           movn #0   
38 [0x26]:           pushobj   
39 [0x27]:           popl 5   
40 [0x28]:           iaddl 1, fp@4   
42 [0x2a]:           movl 5   
43 [0x2b]:           sizeof ecx   
44 [0x2c]:           loadl ebx, fp+4   
45 [0x2d]:           lt ebx, ecx   
46 [0x2e]:           jne 88   
47 [0x2f]:           iaload ecx, ebx   
48 [0x30]:           smovr_2 ecx, fp+3   
49 [0x31]: line: 123 istore 65   
51 [0x33]:           loadl ebx, fp+3   
52 [0x34]:           loadval ecx   
53 [0x35]:           lte ecx, ebx   
54 [0x36]:           movr ebx, cmt   
55 [0x37]:           skne ebx // pc = 62   
56 [0x38]:           ipushl #3   
57 [0x39]:           movi #90, ebx   
59 [0x3b]:           loadval ecx   
60 [0x3c]:           lte ecx, ebx   
61 [0x3d]:           movr ebx, cmt   
62 [0x3e]:           movr cmt, ebx   
63 [0x3f]:           jne 84   
64 [0x40]: line: 124 istore 97   
66 [0x42]:           ipushl #3   
67 [0x43]:           movi #65, ebx   
69 [0x45]:           loadval ecx   
70 [0x46]:           sub ecx, ebx -> ebx   
71 [0x47]:           loadval ecx   
72 [0x48]:           add ecx, ebx -> ebx   
73 [0x49]:           rstore ebx   
74 [0x4a]:           movl 1   
75 [0x4b]:           movn #0   
77 [0x4d]:           pushobj   
78 [0x4e]:           loadl ebx, fp+2   
79 [0x4f]:           popobj2    
80 [0x50]:           movr adx, ebx   
81 [0x51]:           chklen adx   
82 [0x52]:           loadval ebx   
83 [0x53]:           rmov adx, ebx   
84 [0x54]:           nop   
85 [0x55]: line: 125 iaddl 1, fp@2   
87 [0x57]:           jmp @40   
88 [0x58]:           nop   
89 [0x59]: line: 129 movl 1   
90 [0x5a]:           returnobj   
91 [0x5b]:           ret   


overload function: std#string.operator+[1973] params(1) in file: /usr/include/sharp//string.sharp:132:8: note:  
		    def operator+(obj : printable) : string {
		       ^

0 [0x0]: line: 133 new_class @0 // std#__srt_global   
1 [0x1]:           ret   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @1959 // <std#string.string>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 134 movl 1   
11 [0xb]:           checknull   
12 [0xc]:           not ebx, ebx   
13 [0xd]:           movr cmt, ebx   
14 [0xe]:           jne 43   
15 [0xf]: line: 135 pushl 1   
16 [0x10]:           invoke_delegate 3523 { static=0, args=0 }   
18 [0x12]:           popobj2    
19 [0x13]:           smovr_3 fp+3   
20 [0x14]: line: 136 movl 3   
21 [0x15]:           checknull   
22 [0x16]:           not ebx, ebx   
23 [0x17]:           movr cmt, ebx   
24 [0x18]:           jne 35   
25 [0x19]: line: 137 pushl 2   
26 [0x1a]:           movl 3   
27 [0x1b]:           movn #0   
29 [0x1d]:           pushobj   
30 [0x1e]:           call @1969 // <std#string.append>   
31 [0x1f]:           popobj2    
32 [0x20]:           returnobj   
33 [0x21]:           ret   
34 [0x22]:           jmp @41   
35 [0x23]: line: 139 pushl 2   
36 [0x24]:           newstr @28 // null   
37 [0x25]:           call @1969 // <std#string.append>   
38 [0x26]:           popobj2    
39 [0x27]:           returnobj   
40 [0x28]:           ret   
41 [0x29]:           nop   
42 [0x2a]:           jmp @49   
43 [0x2b]: line: 142 pushl 2   
44 [0x2c]:           newstr @28 // null   
45 [0x2d]:           call @1969 // <std#string.append>   
46 [0x2e]:           popobj2    
47 [0x2f]:           returnobj   
48 [0x30]:           ret   
49 [0x31]:           nop   


overload function: std#string.operator+[1974] params(1) in file: /usr/include/sharp//string.sharp:145:7: note:  
		   def operator+(str : string) : string {
		      ^

0 [0x0]: line: 146 new_class @0 // std#__srt_global   
1 [0x1]:           ret   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @1959 // <std#string.string>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 147 movl 1   
11 [0xb]:           checknull   
12 [0xc]:           not ebx, ebx   
13 [0xd]:           movr cmt, ebx   
14 [0xe]:           jne 25   
15 [0xf]: line: 148 pushl 2   
16 [0x10]:           movl 1   
17 [0x11]:           movn #0   
19 [0x13]:           pushobj   
20 [0x14]:           call @1969 // <std#string.append>   
21 [0x15]:           popobj2    
22 [0x16]:           returnobj   
23 [0x17]:           ret   
24 [0x18]:           jmp @31   
25 [0x19]: line: 150 pushl 2   
26 [0x1a]:           newstr @28 // null   
27 [0x1b]:           call @1969 // <std#string.append>   
28 [0x1c]:           popobj2    
29 [0x1d]:           returnobj   
30 [0x1e]:           ret   
31 [0x1f]:           nop   


function: std#string.to_string[1975] params(0) in file: /usr/include/sharp//string.sharp:153:8: note:  
		    def to_string() := new string(data);
		       ^

0 [0x0]: line: 153 new_class @0 // std#__srt_global   
1 [0x1]:           ret   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @1959 // <std#string.string>   
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


overload function: std#string.operator==[1976] params(1) in file: /usr/include/sharp//string.sharp:155:8: note:  
		    def operator==(str : _int8[]) : var {
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           sizeof ebx   
4 [0x4]:           rstore ebx   
5 [0x5]:           movl 1   
6 [0x6]:           sizeof ebx   
7 [0x7]:           loadval ecx   
8 [0x8]:           tne ecx, ebx   
9 [0x9]:           jne 13   
10 [0xa]: line: 157 istorel 0, fp+0   
12 [0xc]:           ret   
13 [0xd]:           nop   
14 [0xe]: line: 159 istorel 0, fp+2   
16 [0x10]: line: 160 istorel -1, fp+4   
18 [0x12]:           pushl 1   
19 [0x13]:           popl 5   
20 [0x14]:           iaddl 1, fp@4   
22 [0x16]:           movl 5   
23 [0x17]:           sizeof ecx   
24 [0x18]:           loadl ebx, fp+4   
25 [0x19]:           lt ebx, ecx   
26 [0x1a]:           jne 51   
27 [0x1b]:           iaload ecx, ebx   
28 [0x1c]:           smovr_2 ecx, fp+3   
29 [0x1d]: line: 161 ipushl #3   
30 [0x1e]:           movl 0   
31 [0x1f]:           movn #0   
33 [0x21]:           pushobj   
34 [0x22]:           loadl ebx, fp+2   
35 [0x23]:           movr egx, ebx   
36 [0x24]:           inc ebx   
37 [0x25]:           smovr_2 ebx, fp+2   
38 [0x26]:           movr ebx, egx   
39 [0x27]:           popobj2    
40 [0x28]:           movr adx, ebx   
41 [0x29]:           chklen adx   
42 [0x2a]:           iaload ebx, adx   
43 [0x2b]:           loadval ecx   
44 [0x2c]:           tne ecx, ebx   
45 [0x2d]:           jne 49   
46 [0x2e]: line: 162 istorel 0, fp+0   
48 [0x30]:           ret   
49 [0x31]:           nop   
50 [0x32]:           jmp @20   
51 [0x33]: line: 165 istorel 1, fp+0   
53 [0x35]:           ret   


overload function: std#string.operator==[1977] params(1) in file: /usr/include/sharp//string.sharp:168:8: note:  
		    def operator==(str : string) : var {
		       ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           sizeof ebx   
4 [0x4]:           rstore ebx   
5 [0x5]:           movl 1   
6 [0x6]:           movn #0   
8 [0x8]:           sizeof ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           tne ecx, ebx   
11 [0xb]:           jne 15   
12 [0xc]: line: 170 istorel 0, fp+0   
14 [0xe]:           ret   
15 [0xf]:           nop   
16 [0x10]: line: 172 istorel 0, fp+2   
18 [0x12]: line: 173 istorel -1, fp+4   
20 [0x14]:           movl 1   
21 [0x15]:           movn #0   
23 [0x17]:           pushobj   
24 [0x18]:           popl 5   
25 [0x19]:           iaddl 1, fp@4   
27 [0x1b]:           movl 5   
28 [0x1c]:           sizeof ecx   
29 [0x1d]:           loadl ebx, fp+4   
30 [0x1e]:           lt ebx, ecx   
31 [0x1f]:           jne 56   
32 [0x20]:           iaload ecx, ebx   
33 [0x21]:           smovr_2 ecx, fp+3   
34 [0x22]: line: 174 ipushl #3   
35 [0x23]:           movl 0   
36 [0x24]:           movn #0   
38 [0x26]:           pushobj   
39 [0x27]:           loadl ebx, fp+2   
40 [0x28]:           movr egx, ebx   
41 [0x29]:           inc ebx   
42 [0x2a]:           smovr_2 ebx, fp+2   
43 [0x2b]:           movr ebx, egx   
44 [0x2c]:           popobj2    
45 [0x2d]:           movr adx, ebx   
46 [0x2e]:           chklen adx   
47 [0x2f]:           iaload ebx, adx   
48 [0x30]:           loadval ecx   
49 [0x31]:           tne ecx, ebx   
50 [0x32]:           jne 54   
51 [0x33]: line: 175 istorel 0, fp+0   
53 [0x35]:           ret   
54 [0x36]:           nop   
55 [0x37]:           jmp @25   
56 [0x38]: line: 178 istorel 1, fp+0   
58 [0x3a]:           ret   


overload function: std#string.operator!=[1978] params(1) in file: /usr/include/sharp//string.sharp:182:8: note:  
		    def operator!=(str : _int8[]) := !operator==(str);
		       ^

0 [0x0]: line: 182 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           call @1976 // <std#string.operator==>   
3 [0x3]:           loadval ebx   
4 [0x4]:           not ebx, ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


overload function: std#string.operator!=[1979] params(1) in file: /usr/include/sharp//string.sharp:183:8: note:  
		    def operator!=(str : string) := !operator==(str);
		       ^

0 [0x0]: line: 183 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           call @1977 // <std#string.operator==>   
3 [0x3]:           loadval ebx   
4 [0x4]:           not ebx, ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


overload function: std#string.operator=[1980] params(1) in file: /usr/include/sharp//string.sharp:185:8: note:  
		    def operator=( immstr: _int8[] )
		       ^

0 [0x0]: line: 187 movl 1   
1 [0x1]:           checknull   
2 [0x2]:           movr cmt, ebx   
3 [0x3]:           jne 9   
4 [0x4]:           movl 0   
5 [0x5]:           movn #0   
7 [0x7]:           del   
8 [0x8]:           jmp @20   
9 [0x9]: line: 189 pushl 1   
10 [0xa]:           istore 0   
12 [0xc]:           movl 1   
13 [0xd]:           sizeof ebx   
14 [0xe]:           rstore ebx   
15 [0xf]:           call @2109 // <std.io#__srt_global.copy>   
16 [0x10]:           movl 0   
17 [0x11]:           movn #0   
19 [0x13]:           popobj   
20 [0x14]:           nop   
21 [0x15]:           ret   


function: std#string.at[1981] params(1) in file: /usr/include/sharp//string.sharp:192:8: note:  
		    def at(pos : var) : _int8 {
		       ^

0 [0x0]: line: 193 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           sizeof ebx   
5 [0x5]:           loadval ecx   
6 [0x6]:           gte ecx, ebx   
7 [0x7]:           movr ebx, cmt   
8 [0x8]:           movr cmt, ebx   
9 [0x9]:           jne 14   
10 [0xa]: line: 194 pushl 0   
11 [0xb]:           ipushl #1   
12 [0xc]:           call @2015 // <std#string.bounds_error>   
13 [0xd]:           throw    
14 [0xe]:           nop   
15 [0xf]: line: 195 movl 0   
16 [0x10]:           movn #0   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+1   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           iaload ebx, adx   
24 [0x18]:           return_val ebx   
25 [0x19]:           ret   


overload function: std#string.operator[[1982] params(1) in file: /usr/include/sharp//string.sharp:198:8: note:  
		    def operator[](pos: var) := at(pos);
		       ^

0 [0x0]: line: 198 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @1981 // <std#string.at>   
3 [0x3]:           loadval ebx   
4 [0x4]:           return_val ebx   
5 [0x5]:           ret   


function: std#string.fmt[1983] params(1) in file: /usr/include/sharp//string.sharp:200:15: note:  
		    static def fmt( _fmt: var ) {
		              ^

0 [0x0]: line: 201 ipushl #0   
1 [0x1]:           movg @3 // @std#string   
2 [0x2]:           movn #0   
4 [0x4]:           loadval ebx   
5 [0x5]:           mov8 ebx, ebx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           rmov adx, ebx   
9 [0x9]:           ret   


function: std#string.set_precision[1984] params(1) in file: /usr/include/sharp//string.sharp:204:15: note:  
		    static def set_precision( prec: var ) {
		              ^

0 [0x0]: line: 205 loadl ecx, fp+0   
1 [0x1]:           movi #0, ebx   
3 [0x3]:           lt ecx, ebx   
4 [0x4]:           movr ebx, cmt   
5 [0x5]:           skpe ebx // pc = 12   
6 [0x6]:           ipushl #0   
7 [0x7]:           movi #16, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 26   
14 [0xe]: line: 206 new_class @0 // std#__srt_global   
15 [0xf]:           skip @0 // pc = 15   
16 [0x10]:           dup    
17 [0x11]:           new_class @0 // std#__srt_global   
18 [0x12]:           ret   
19 [0x13]:           dup    
20 [0x14]:           newstr @29 // invalid precision:    
21 [0x15]:           call @1959 // <std#string.string>   
22 [0x16]:           ipushl #0   
23 [0x17]:           call @1991 // <std#string.operator+>   
24 [0x18]:           call @3549 // <std#illegal_argument_exception.illegal_argument_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 207 ipushl #0   
28 [0x1c]:           movg @3 // @std#string   
29 [0x1d]:           movn #1   
31 [0x1f]:           loadval ebx   
32 [0x20]:           movi #0, adx   
34 [0x22]:           rmov adx, ebx   
35 [0x23]:           ret   


function: std#string.get_data[1985] params(0) in file: /usr/include/sharp//string.sharp:210:8: note:  
		    def get_data() := data;
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           returnobj   
4 [0x4]:           ret   


function: std#string.get_elements[1986] params(0) in file: /usr/include/sharp//string.sharp:212:8: note:  
		    def get_elements() := data;
		       ^

0 [0x0]: line: 212 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           returnobj   
4 [0x4]:           ret   


function: std#string.to_array[1987] params(0) in file: /usr/include/sharp//string.sharp:214:8: note:  
		    def to_array() : _int8[]
		       ^

0 [0x0]: line: 216 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushnull    
5 [0x5]:           itest ebx   
6 [0x6]:           movr cmt, ebx   
7 [0x7]:           jne 12   
8 [0x8]:           pushnull    
9 [0x9]:           popobj2    
10 [0xa]:           returnobj   
11 [0xb]:           ret   
12 [0xc]:           nop   
13 [0xd]: line: 217 movl 0   
14 [0xe]:           movn #0   
16 [0x10]:           pushobj   
17 [0x11]:           istore 0   
19 [0x13]:           movl 0   
20 [0x14]:           movn #0   
22 [0x16]:           sizeof ebx   
23 [0x17]:           rstore ebx   
24 [0x18]:           call @2109 // <std.io#__srt_global.copy>   
25 [0x19]:           popobj2    
26 [0x1a]:           returnobj   
27 [0x1b]:           ret   


function: std#string.starts_with[1988] params(1) in file: /usr/include/sharp//string.sharp:221:8: note:  
		    def starts_with(prefix: string) : var {
		       ^

0 [0x0]: line: 222 movl 1   
1 [0x1]:           checknull   
2 [0x2]:           skpe ebx // pc = 15   
3 [0x3]:           movl 1   
4 [0x4]:           movn #0   
6 [0x6]:           sizeof ebx   
7 [0x7]:           rstore ebx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #0   
11 [0xb]:           sizeof ebx   
12 [0xc]:           loadval ecx   
13 [0xd]:           gt ecx, ebx   
14 [0xe]:           movr ebx, cmt   
15 [0xf]:           movr cmt, ebx   
16 [0x10]:           jne 20   
17 [0x11]: line: 223 istorel 0, fp+0   
19 [0x13]:           ret   
20 [0x14]:           nop   
21 [0x15]: line: 226 istorel 0, fp+2   
23 [0x17]:           ipushl #2   
24 [0x18]:           movl 1   
25 [0x19]:           movn #0   
27 [0x1b]:           sizeof ebx   
28 [0x1c]:           loadval ecx   
29 [0x1d]:           lt ecx, ebx   
30 [0x1e]:           movr ebx, cmt   
31 [0x1f]:           movr cmt, ebx   
32 [0x20]:           jne 62   
33 [0x21]: line: 228 movl 0   
34 [0x22]:           movn #0   
36 [0x24]:           pushobj   
37 [0x25]:           loadl ebx, fp+2   
38 [0x26]:           popobj2    
39 [0x27]:           movr adx, ebx   
40 [0x28]:           chklen adx   
41 [0x29]:           iaload ebx, adx   
42 [0x2a]:           rstore ebx   
43 [0x2b]:           movl 1   
44 [0x2c]:           movn #0   
46 [0x2e]:           pushobj   
47 [0x2f]:           loadl ebx, fp+2   
48 [0x30]:           popobj2    
49 [0x31]:           movr adx, ebx   
50 [0x32]:           chklen adx   
51 [0x33]:           iaload ebx, adx   
52 [0x34]:           loadval ecx   
53 [0x35]:           tne ecx, ebx   
54 [0x36]:           jne 58   
55 [0x37]: line: 229 istorel 0, fp+0   
57 [0x39]:           ret   
58 [0x3a]:           nop   
59 [0x3b]:           iaddl 1, fp@2   
61 [0x3d]:           jmp @23   
62 [0x3e]: line: 231 istorel 1, fp+0   
64 [0x40]:           ret   


function: std#string.find[1989] params(1) in file: /usr/include/sharp//string.sharp:235:8: note:  
		    def find(str: string) : var {
		       ^

0 [0x0]: line: 236 pushl 1   
1 [0x1]:           call @2000 // <std#string.size>   
2 [0x2]:           ipopl 2   
3 [0x3]: line: 237 movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           sizeof ebx   
7 [0x7]:           smovr_2 ebx, fp+3   
8 [0x8]: line: 240 istorel 0, fp+4   
10 [0xa]:           ipushl #4   
11 [0xb]:           ipushl #3   
12 [0xc]:           loadl ebx, fp+2   
13 [0xd]:           loadval ecx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           loadval ecx   
16 [0x10]:           lte ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           movr cmt, ebx   
19 [0x13]:           jne 71   
20 [0x14]: line: 241 istorel 0, fp+5   
22 [0x16]: line: 245 ipushl #5   
23 [0x17]:           loadl ebx, fp+2   
24 [0x18]:           loadval ecx   
25 [0x19]:           lt ecx, ebx   
26 [0x1a]:           movr ebx, cmt   
27 [0x1b]:           movr cmt, ebx   
28 [0x1c]:           jne 59   
29 [0x1d]: line: 246 movl 0   
30 [0x1e]:           movn #0   
32 [0x20]:           pushobj   
33 [0x21]:           ipushl #4   
34 [0x22]:           loadl ebx, fp+5   
35 [0x23]:           loadval ecx   
36 [0x24]:           add ecx, ebx -> ebx   
37 [0x25]:           popobj2    
38 [0x26]:           movr adx, ebx   
39 [0x27]:           chklen adx   
40 [0x28]:           iaload ebx, adx   
41 [0x29]:           rstore ebx   
42 [0x2a]:           movl 1   
43 [0x2b]:           movn #0   
45 [0x2d]:           pushobj   
46 [0x2e]:           loadl ebx, fp+5   
47 [0x2f]:           popobj2    
48 [0x30]:           movr adx, ebx   
49 [0x31]:           chklen adx   
50 [0x32]:           iaload ebx, adx   
51 [0x33]:           loadval ecx   
52 [0x34]:           tne ecx, ebx   
53 [0x35]:           jne 55   
54 [0x36]: line: 248 jmp @59   
55 [0x37]:           nop   
56 [0x38]:           iaddl 1, fp@5   
58 [0x3a]:           jmp @22   
59 [0x3b]: line: 250 ipushl #5   
60 [0x3c]:           loadl ebx, fp+2   
61 [0x3d]:           loadval ecx   
62 [0x3e]:           test ecx, ebx   
63 [0x3f]:           jne 67   
64 [0x40]: line: 251 istorel 1, fp+0   
66 [0x42]:           ret   
67 [0x43]:           nop   
68 [0x44]:           iaddl 1, fp@4   
70 [0x46]:           jmp @10   
71 [0x47]: line: 254 istorel 0, fp+0   
73 [0x49]:           ret   


function: std#string.ends_with[1990] params(1) in file: /usr/include/sharp//string.sharp:257:8: note:  
		    def ends_with(postfix: string) : var {
		       ^

0 [0x0]: line: 258 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           sizeof ebx   
4 [0x4]:           rstore ebx   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           sizeof ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gte ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 17   
14 [0xe]: line: 259 istorel 0, fp+0   
16 [0x10]:           ret   
17 [0x11]:           nop   
18 [0x12]: line: 261 istorel 0, fp+2   
20 [0x14]: line: 262 movl 0   
21 [0x15]:           movn #0   
23 [0x17]:           sizeof ebx   
24 [0x18]:           rstore ebx   
25 [0x19]:           movl 1   
26 [0x1a]:           movn #0   
28 [0x1c]:           sizeof ebx   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           sub ecx, ebx -> ebx   
31 [0x1f]:           smovr_2 ebx, fp+3   
32 [0x20]:           ipushl #3   
33 [0x21]:           movl 0   
34 [0x22]:           movn #0   
36 [0x24]:           sizeof ebx   
37 [0x25]:           loadval ecx   
38 [0x26]:           lt ecx, ebx   
39 [0x27]:           movr ebx, cmt   
40 [0x28]:           movr cmt, ebx   
41 [0x29]:           jne 75   
42 [0x2a]: line: 263 movl 0   
43 [0x2b]:           movn #0   
45 [0x2d]:           pushobj   
46 [0x2e]:           loadl ebx, fp+3   
47 [0x2f]:           popobj2    
48 [0x30]:           movr adx, ebx   
49 [0x31]:           chklen adx   
50 [0x32]:           iaload ebx, adx   
51 [0x33]:           rstore ebx   
52 [0x34]:           movl 1   
53 [0x35]:           movn #0   
55 [0x37]:           pushobj   
56 [0x38]:           loadl ebx, fp+2   
57 [0x39]:           movr egx, ebx   
58 [0x3a]:           inc ebx   
59 [0x3b]:           smovr_2 ebx, fp+2   
60 [0x3c]:           movr ebx, egx   
61 [0x3d]:           popobj2    
62 [0x3e]:           movr adx, ebx   
63 [0x3f]:           chklen adx   
64 [0x40]:           iaload ebx, adx   
65 [0x41]:           loadval ecx   
66 [0x42]:           tne ecx, ebx   
67 [0x43]:           jne 71   
68 [0x44]: line: 264 istorel 0, fp+0   
70 [0x46]:           ret   
71 [0x47]:           nop   
72 [0x48]:           iaddl 1, fp@3   
74 [0x4a]:           jmp @32   
75 [0x4b]: line: 267 istorel 1, fp+0   
77 [0x4d]:           ret   


overload function: std#string.operator+[1991] params(1) in file: /usr/include/sharp//string.sharp:270:8: note:  
		    def operator+(num : var) : string {
		       ^

0 [0x0]: line: 271 new_class @0 // std#__srt_global   
1 [0x1]:           ret   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @1959 // <std#string.string>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 272 pushl 2   
11 [0xb]:           ipushl #1   
12 [0xc]:           call @2001 // <std#string.parse>   
13 [0xd]:           popobj2    
14 [0xe]:           movn #0   
16 [0x10]:           pushobj   
17 [0x11]:           call @1969 // <std#string.append>   
18 [0x12]:           pop   
19 [0x13]: line: 273 movl 2   
20 [0x14]:           returnobj   
21 [0x15]:           ret   


overload function: std#string.operator+[1992] params(1) in file: /usr/include/sharp//string.sharp:276:8: note:  
		    def operator+(num : _int8) : string {
		       ^

0 [0x0]: line: 277 new_class @0 // std#__srt_global   
1 [0x1]:           ret   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @1959 // <std#string.string>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 278 pushl 2   
11 [0xb]:           ipushl #1   
12 [0xc]:           call @1966 // <std#string.append>   
13 [0xd]:           pop   
14 [0xe]: line: 279 movl 2   
15 [0xf]:           returnobj   
16 [0x10]:           ret   


overload function: std#string.operator+[1993] params(1) in file: /usr/include/sharp//string.sharp:282:8: note:  
		    def operator+(num : _int16) : string {
		       ^

0 [0x0]: line: 283 new_class @0 // std#__srt_global   
1 [0x1]:           ret   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @1959 // <std#string.string>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 284 pushl 2   
11 [0xb]:           ipushl #1   
12 [0xc]:           call @2001 // <std#string.parse>   
13 [0xd]:           popobj2    
14 [0xe]:           movn #0   
16 [0x10]:           pushobj   
17 [0x11]:           call @1969 // <std#string.append>   
18 [0x12]:           pop   
19 [0x13]: line: 285 movl 2   
20 [0x14]:           returnobj   
21 [0x15]:           ret   


overload function: std#string.operator+[1994] params(1) in file: /usr/include/sharp//string.sharp:288:8: note:  
		    def operator+(num : _int32) : string {
		       ^

0 [0x0]: line: 289 new_class @0 // std#__srt_global   
1 [0x1]:           ret   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @1959 // <std#string.string>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 290 pushl 2   
11 [0xb]:           ipushl #1   
12 [0xc]:           call @2001 // <std#string.parse>   
13 [0xd]:           popobj2    
14 [0xe]:           movn #0   
16 [0x10]:           pushobj   
17 [0x11]:           call @1969 // <std#string.append>   
18 [0x12]:           pop   
19 [0x13]: line: 291 movl 2   
20 [0x14]:           returnobj   
21 [0x15]:           ret   


overload function: std#string.operator+[1995] params(1) in file: /usr/include/sharp//string.sharp:294:8: note:  
		    def operator+(num : _int64) : string {
		       ^

0 [0x0]: line: 295 new_class @0 // std#__srt_global   
1 [0x1]:           ret   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @1959 // <std#string.string>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 296 pushl 2   
11 [0xb]:           ipushl #1   
12 [0xc]:           call @2001 // <std#string.parse>   
13 [0xd]:           popobj2    
14 [0xe]:           movn #0   
16 [0x10]:           pushobj   
17 [0x11]:           call @1969 // <std#string.append>   
18 [0x12]:           pop   
19 [0x13]: line: 297 movl 2   
20 [0x14]:           returnobj   
21 [0x15]:           ret   


overload function: std#string.operator+[1996] params(1) in file: /usr/include/sharp//string.sharp:300:8: note:  
		    def operator+(num : _uint8) : string {
		       ^

0 [0x0]: line: 301 new_class @0 // std#__srt_global   
1 [0x1]:           ret   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @1959 // <std#string.string>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 302 pushl 2   
11 [0xb]:           ipushl #1   
12 [0xc]:           call @2001 // <std#string.parse>   
13 [0xd]:           popobj2    
14 [0xe]:           movn #0   
16 [0x10]:           pushobj   
17 [0x11]:           call @1969 // <std#string.append>   
18 [0x12]:           pop   
19 [0x13]: line: 303 movl 2   
20 [0x14]:           returnobj   
21 [0x15]:           ret   


overload function: std#string.operator+[1997] params(1) in file: /usr/include/sharp//string.sharp:306:8: note:  
		    def operator+(num : _uint16) : string {
		       ^

0 [0x0]: line: 307 new_class @0 // std#__srt_global   
1 [0x1]:           ret   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @1959 // <std#string.string>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 308 pushl 2   
11 [0xb]:           ipushl #1   
12 [0xc]:           call @2001 // <std#string.parse>   
13 [0xd]:           popobj2    
14 [0xe]:           movn #0   
16 [0x10]:           pushobj   
17 [0x11]:           call @1969 // <std#string.append>   
18 [0x12]:           pop   
19 [0x13]: line: 309 movl 2   
20 [0x14]:           returnobj   
21 [0x15]:           ret   


overload function: std#string.operator+[1998] params(1) in file: /usr/include/sharp//string.sharp:312:8: note:  
		    def operator+(num : _uint32) : string {
		       ^

0 [0x0]: line: 313 new_class @0 // std#__srt_global   
1 [0x1]:           ret   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @1959 // <std#string.string>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 314 pushl 2   
11 [0xb]:           ipushl #1   
12 [0xc]:           call @2001 // <std#string.parse>   
13 [0xd]:           popobj2    
14 [0xe]:           movn #0   
16 [0x10]:           pushobj   
17 [0x11]:           call @1969 // <std#string.append>   
18 [0x12]:           pop   
19 [0x13]: line: 315 movl 2   
20 [0x14]:           returnobj   
21 [0x15]:           ret   


overload function: std#string.operator+[1999] params(1) in file: /usr/include/sharp//string.sharp:318:8: note:  
		    def operator+(num : _uint64) : string {
		       ^

0 [0x0]: line: 319 new_class @0 // std#__srt_global   
1 [0x1]:           ret   
2 [0x2]:           dup    
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @1959 // <std#string.string>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+2   
10 [0xa]: line: 320 pushl 2   
11 [0xb]:           ipushl #1   
12 [0xc]:           call @2001 // <std#string.parse>   
13 [0xd]:           popobj2    
14 [0xe]:           movn #0   
16 [0x10]:           pushobj   
17 [0x11]:           call @1969 // <std#string.append>   
18 [0x12]:           pop   
19 [0x13]: line: 321 movl 2   
20 [0x14]:           returnobj   
21 [0x15]:           ret   


function: std#string.size[2000] params(0) in file: /usr/include/sharp//string.sharp:324:8: note:  
		    def size() := sizeof(data);
		       ^

0 [0x0]: line: 324 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           sizeof ebx   
4 [0x4]:           return_val ebx   
5 [0x5]:           ret   


function: std#string.parse[2001] params(1) in file: /usr/include/sharp//string.sharp:326:15: note:  
		    static def parse( number : var ) := new string(snprintf(currentFormat, number, precision));
		              ^

0 [0x0]: line: 326 new_class @0 // std#__srt_global   
1 [0x1]:           ret   
2 [0x2]:           dup    
3 [0x3]:           movg @3 // @std#string   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           rstore ebx   
10 [0xa]:           ipushl #0   
11 [0xb]:           movg @3 // @std#string   
12 [0xc]:           movn #1   
14 [0xe]:           movi #0, adx   
16 [0x10]:           iaload ebx, adx   
17 [0x11]:           rstore ebx   
18 [0x12]:           call @2253 // <std#__srt_global.snprintf>   
19 [0x13]:           call @1959 // <std#string.string>   
20 [0x14]:           popobj2    
21 [0x15]:           returnobj   
22 [0x16]:           ret   


overload function: std#string.operator+=[2002] params(1) in file: /usr/include/sharp//string.sharp:328:8: note:  
		    def operator+=( num: var ) := append(parse(num).data);
		       ^

0 [0x0]: line: 328 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @2001 // <std#string.parse>   
3 [0x3]:           popobj2    
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @1969 // <std#string.append>   
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


overload function: std#string.operator+=[2003] params(1) in file: /usr/include/sharp//string.sharp:329:8: note:  
		    def operator+=( num: _int8 ) := append(num);
		       ^

0 [0x0]: line: 329 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @1966 // <std#string.append>   
3 [0x3]:           popobj2    
4 [0x4]:           returnobj   
5 [0x5]:           ret   


overload function: std#string.operator+=[2004] params(1) in file: /usr/include/sharp//string.sharp:330:8: note:  
		    def operator+=( num: _uint8 ) := append(num);
		       ^

0 [0x0]: line: 330 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @1966 // <std#string.append>   
3 [0x3]:           popobj2    
4 [0x4]:           returnobj   
5 [0x5]:           ret   


overload function: std#string.operator+=[2005] params(1) in file: /usr/include/sharp//string.sharp:331:8: note:  
		    def operator+=( num: _int16 ) := append(parse(num).data);
		       ^

0 [0x0]: line: 331 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @2001 // <std#string.parse>   
3 [0x3]:           popobj2    
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @1969 // <std#string.append>   
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


overload function: std#string.operator+=[2006] params(1) in file: /usr/include/sharp//string.sharp:332:8: note:  
		    def operator+=( num: _uint16 ) := append(parse(num).data);
		       ^

0 [0x0]: line: 332 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @2001 // <std#string.parse>   
3 [0x3]:           popobj2    
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @1969 // <std#string.append>   
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


overload function: std#string.operator+=[2007] params(1) in file: /usr/include/sharp//string.sharp:333:8: note:  
		    def operator+=( num: _int32 ) := append(parse(num).data);
		       ^

0 [0x0]: line: 333 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @2001 // <std#string.parse>   
3 [0x3]:           popobj2    
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @1969 // <std#string.append>   
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


overload function: std#string.operator+=[2008] params(1) in file: /usr/include/sharp//string.sharp:334:8: note:  
		    def operator+=( num: _uint32 ) := append(parse(num).data);
		       ^

0 [0x0]: line: 334 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @2001 // <std#string.parse>   
3 [0x3]:           popobj2    
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @1969 // <std#string.append>   
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


overload function: std#string.operator+=[2009] params(1) in file: /usr/include/sharp//string.sharp:335:8: note:  
		    def operator+=( num: _int64 ) := append(parse(num).data);
		       ^

0 [0x0]: line: 335 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @2001 // <std#string.parse>   
3 [0x3]:           popobj2    
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @1969 // <std#string.append>   
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


overload function: std#string.operator+=[2010] params(1) in file: /usr/include/sharp//string.sharp:336:8: note:  
		    def operator+=( num: _uint64 ) := append(parse(num).data);
		       ^

0 [0x0]: line: 336 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           call @2001 // <std#string.parse>   
3 [0x3]:           popobj2    
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @1969 // <std#string.append>   
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


overload function: std#string.operator+=[2011] params(1) in file: /usr/include/sharp//string.sharp:338:8: note:  
		    def operator+=( obj: printable ) : string
		       ^

0 [0x0]: line: 340 pushl 1   
1 [0x1]:           invoke_delegate 3523 { static=0, args=0 }   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+2   
5 [0x5]: line: 341 movl 2   
6 [0x6]:           checknull   
7 [0x7]:           not ebx, ebx   
8 [0x8]:           skne ebx // pc = 16   
9 [0x9]:           movl 2   
10 [0xa]:           movn #0   
12 [0xc]:           pushobj   
13 [0xd]:           pushnull    
14 [0xe]:           itest ebx   
15 [0xf]:           not ebx, ebx   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 28   
18 [0x12]: line: 342 pushl 0   
19 [0x13]:           movl 2   
20 [0x14]:           movn #0   
22 [0x16]:           pushobj   
23 [0x17]:           call @1969 // <std#string.append>   
24 [0x18]:           popobj2    
25 [0x19]:           returnobj   
26 [0x1a]:           ret   
27 [0x1b]:           jmp @34   
28 [0x1c]: line: 344 pushl 0   
29 [0x1d]:           newstr @28 // null   
30 [0x1e]:           call @1969 // <std#string.append>   
31 [0x1f]:           popobj2    
32 [0x20]:           returnobj   
33 [0x21]:           ret   
34 [0x22]:           nop   


overload function: std#string.operator+=[2012] params(1) in file: /usr/include/sharp//string.sharp:347:8: note:  
		    def operator+=( str: string ) := append(str.data);
		       ^

0 [0x0]: line: 347 pushl 0   
1 [0x1]:           movl 1   
2 [0x2]:           movn #0   
4 [0x4]:           pushobj   
5 [0x5]:           call @1969 // <std#string.append>   
6 [0x6]:           popobj2    
7 [0x7]:           returnobj   
8 [0x8]:           ret   


overload function: std#string.operator+=[2013] params(1) in file: /usr/include/sharp//string.sharp:349:8: note:  
		    def operator+=( str: _int8[] ) := append(str);
		       ^

0 [0x0]: line: 349 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           call @1969 // <std#string.append>   
3 [0x3]:           popobj2    
4 [0x4]:           returnobj   
5 [0x5]:           ret   


function: std#string.substring[2014] params(2) in file: /usr/include/sharp//string.sharp:351:8: note:  
		    def substring(start_pos: var, end_pos: var) : string {
		       ^

0 [0x0]: line: 352 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           sizeof ebx   
5 [0x5]:           loadval ecx   
6 [0x6]:           gte ecx, ebx   
7 [0x7]:           movr ebx, cmt   
8 [0x8]:           skpe ebx // pc = 14   
9 [0x9]:           loadl ecx, fp+1   
10 [0xa]:           movi #0, ebx   
12 [0xc]:           lt ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 20   
16 [0x10]: line: 353 pushl 0   
17 [0x11]:           ipushl #1   
18 [0x12]:           call @2015 // <std#string.bounds_error>   
19 [0x13]:           throw    
20 [0x14]:           nop   
21 [0x15]: line: 354 ipushl #2   
22 [0x16]:           loadl ebx, fp+1   
23 [0x17]:           loadval ecx   
24 [0x18]:           lt ecx, ebx   
25 [0x19]:           movr ebx, cmt   
26 [0x1a]:           movr cmt, ebx   
27 [0x1b]:           jne 44   
28 [0x1c]: line: 355 new_class @0 // std#__srt_global   
29 [0x1d]:           skip @0 // pc = 29   
30 [0x1e]:           dup    
31 [0x1f]:           new_class @0 // std#__srt_global   
32 [0x20]:           ret   
33 [0x21]:           dup    
34 [0x22]:           newstr @34 // end_pos:    
35 [0x23]:           call @1959 // <std#string.string>   
36 [0x24]:           ipushl #2   
37 [0x25]:           call @1991 // <std#string.operator+>   
38 [0x26]:           newstr @35 //  cannot be less than the start_pos:    
39 [0x27]:           call @1971 // <std#string.operator+>   
40 [0x28]:           ipushl #1   
41 [0x29]:           call @1991 // <std#string.operator+>   
42 [0x2a]:           call @3549 // <std#illegal_argument_exception.illegal_argument_exception>   
43 [0x2b]:           throw    
44 [0x2c]:           nop   
45 [0x2d]: line: 359 new_class @0 // std#__srt_global   
46 [0x2e]:           ret   
47 [0x2f]:           dup    
48 [0x30]:           call @2017 // <std#string.string>   
49 [0x31]:           popobj2    
50 [0x32]:           smovr_3 fp+3   
51 [0x33]: line: 360 movl 0   
52 [0x34]:           movn #0   
54 [0x36]:           pushobj   
55 [0x37]:           ipushl #1   
56 [0x38]:           ipushl #2   
57 [0x39]:           call @2109 // <std.io#__srt_global.copy>   
58 [0x3a]:           movl 3   
59 [0x3b]:           movn #0   
61 [0x3d]:           popobj   
62 [0x3e]: line: 361 movl 3   
63 [0x3f]:           returnobj   
64 [0x40]:           ret   


function: std#string.bounds_error[2015] params(1) in file: /usr/include/sharp//string.sharp:364:16: note:  
		    private def bounds_error(pos : var) : bounds_except {
		               ^

0 [0x0]: line: 365 new_class @0 // std#__srt_global   
1 [0x1]:           shl adx, adx -> adx   
2 [0x2]:           dup    
3 [0x3]:           new_class @0 // std#__srt_global   
4 [0x4]:           ret   
5 [0x5]:           dup    
6 [0x6]:           newstr @32 // Index out of bounds exception at:    
7 [0x7]:           call @1959 // <std#string.string>   
8 [0x8]:           ipushl #1   
9 [0x9]:           call @1991 // <std#string.operator+>   
10 [0xa]:           newstr @33 //  with size of:    
11 [0xb]:           call @1971 // <std#string.operator+>   
12 [0xc]:           movl 0   
13 [0xd]:           movn #0   
15 [0xf]:           sizeof ebx   
16 [0x10]:           rstore ebx   
17 [0x11]:           call @1991 // <std#string.operator+>   
18 [0x12]:           call @3555 // <std#out_of_bounds_exception.out_of_bounds_exception>   
19 [0x13]:           popobj2    
20 [0x14]:           returnobj   
21 [0x15]:           ret   


function: std#string.hash[2016] params(0) in file: /usr/include/sharp//string.sharp:368:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 369 istorel 0, fp+1   
2 [0x2]: line: 370 istorel 1, fp+2   
4 [0x4]: line: 371 istorel -1, fp+4   
6 [0x6]: line: 372 movl 0   
7 [0x7]: line: 373 movn #0   
9 [0x9]:           pushobj   
10 [0xa]:           popl 5   
11 [0xb]:           iaddl 1, fp@4   
13 [0xd]:           movl 5   
14 [0xe]:           sizeof ecx   
15 [0xf]:           loadl ebx, fp+4   
16 [0x10]:           lt ebx, ecx   
17 [0x11]:           jne 55   
18 [0x12]:           iaload ecx, ebx   
19 [0x13]:           smovr_2 ecx, fp+3   
20 [0x14]: line: 374 ipushl #1   
21 [0x15]:           ipushl #3   
22 [0x16]:           movi #97, ebx   
24 [0x18]:           loadval ecx   
25 [0x19]:           sub ecx, ebx -> ebx   
26 [0x1a]:           rstore ebx   
27 [0x1b]:           movi #1, ebx   
29 [0x1d]:           loadval ecx   
30 [0x1e]:           add ecx, ebx -> ebx   
31 [0x1f]:           rstore ebx   
32 [0x20]:           loadl ebx, fp+2   
33 [0x21]:           loadval ecx   
34 [0x22]:           mul ecx, ebx -> ebx   
35 [0x23]:           loadval ecx   
36 [0x24]:           add ecx, ebx -> ebx   
37 [0x25]:           rstore ebx   
38 [0x26]:           movi #1000000009, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           mod ecx, ebx -> ebx   
42 [0x2a]:           smovr_2 ebx, fp+1   
43 [0x2b]: line: 375 ipushl #2   
44 [0x2c]:           movi #31, ebx   
46 [0x2e]:           loadval ecx   
47 [0x2f]:           mul ecx, ebx -> ebx   
48 [0x30]:           rstore ebx   
49 [0x31]:           movi #1000000009, ebx   
51 [0x33]:           loadval ecx   
52 [0x34]:           mod ecx, ebx -> ebx   
53 [0x35]:           smovr_2 ebx, fp+2   
54 [0x36]:           jmp @11   
55 [0x37]: line: 377 new_class @0 // std#__srt_global   
56 [0x38]:           imod adx, #? (112)   
58 [0x3a]:           ipushl #1   
59 [0x3b]:           call @2426 // <std#long.long>   
60 [0x3c]:           popobj2    
61 [0x3d]:           returnobj   
62 [0x3e]:           ret   


constructor: std#string.string[2017] params(0) in file: /usr/include/sharp//string.sharp:5:6: note:  
		class string : loopable<_int8> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


function: std.io.task#__srt_global.finish[2018] params(0) in file: /usr/include/sharp//io//task//task.sharp:5:4: note:  
		def finish() {
		   ^

0 [0x0]: line: 6 new_class @0 // std#__srt_global   
1 [0x1]:         cast adx   
2 [0x2]:         dup    
3 [0x3]:         call @2031 // <std.io.task#cancellation_exception.cancellation_exception>   
4 [0x4]:         throw    
5 [0x5]:         ret   


function: std.io.task#task.with_timeout[2019] params(1) in file: /usr/include/sharp//io//task//task.sharp:10:15: note:  
		    static def with_timeout(mills_time : var) : job_builder {
		              ^

0 [0x0]: line: 11 movg @4 // @std.io.task#__srt_global   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          call @2034 // <std.io.task#job_master.create_job>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+1   
7 [0x7]: line: 12 new_class @0 // std#__srt_global   
8 [0x8]:          mov16 adx, adx   
9 [0x9]:          dup    
10 [0xa]:          pushl 1   
11 [0xb]:          movg @4 // @std.io.task#__srt_global   
12 [0xc]:          movn #0   
14 [0xe]:          pushobj   
15 [0xf]:          call @2041 // <std.io.task#job_builder.job_builder>   
16 [0x10]:          popobj2    
17 [0x11]:          smovr_3 fp+2   
18 [0x12]: line: 13 pushl 2   
19 [0x13]:          ipushl #0   
20 [0x14]:          call @2042 // <std.io.task#job_builder.with_timeout>   
21 [0x15]:          popobj2    
22 [0x16]:          returnobj   
23 [0x17]:          ret   


function: std.io.task#task.schedule[2020] params(1) in file: /usr/include/sharp//io//task//task.sharp:16:15: note:  
		    static def schedule(future : var) : job_builder {
		              ^

0 [0x0]: line: 17 movg @4 // @std.io.task#__srt_global   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          call @2034 // <std.io.task#job_master.create_job>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+1   
7 [0x7]: line: 18 new_class @0 // std#__srt_global   
8 [0x8]:          mov16 adx, adx   
9 [0x9]:          dup    
10 [0xa]:          pushl 1   
11 [0xb]:          movg @4 // @std.io.task#__srt_global   
12 [0xc]:          movn #0   
14 [0xe]:          pushobj   
15 [0xf]:          call @2041 // <std.io.task#job_builder.job_builder>   
16 [0x10]:          popobj2    
17 [0x11]:          smovr_3 fp+2   
18 [0x12]: line: 19 pushl 2   
19 [0x13]:          ipushl #0   
20 [0x14]:          call @2043 // <std.io.task#job_builder.schedule>   
21 [0x15]:          popobj2    
22 [0x16]:          returnobj   
23 [0x17]:          ret   


function: std.io.task#task.with_name[2021] params(1) in file: /usr/include/sharp//io//task//task.sharp:22:15: note:  
		    static def with_name(job_name : string) : job_builder {
		              ^

0 [0x0]: line: 23 movg @4 // @std.io.task#__srt_global   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          pushl 0   
5 [0x5]:          call @2035 // <std.io.task#job_master.create_job>   
6 [0x6]:          popobj2    
7 [0x7]:          smovr_3 fp+1   
8 [0x8]: line: 24 new_class @0 // std#__srt_global   
9 [0x9]:          mov16 adx, adx   
10 [0xa]:          dup    
11 [0xb]:          pushl 1   
12 [0xc]:          movg @4 // @std.io.task#__srt_global   
13 [0xd]:          movn #0   
15 [0xf]:          pushobj   
16 [0x10]:          call @2041 // <std.io.task#job_builder.job_builder>   
17 [0x11]:          popobj2    
18 [0x12]:          smovr_3 fp+2   
19 [0x13]: line: 25 pushl 2   
20 [0x14]:          pushl 0   
21 [0x15]:          call @2045 // <std.io.task#job_builder.with_name>   
22 [0x16]:          popobj2    
23 [0x17]:          returnobj   
24 [0x18]:          ret   


function: std.io.task#task.with_args[2022] params(1) in file: /usr/include/sharp//io//task//task.sharp:28:15: note:  
		    static def with_args(args : object[]) : job_builder {
		              ^

0 [0x0]: line: 29 movg @4 // @std.io.task#__srt_global   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          call @2034 // <std.io.task#job_master.create_job>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+1   
7 [0x7]: line: 30 new_class @0 // std#__srt_global   
8 [0x8]:          mov16 adx, adx   
9 [0x9]:          dup    
10 [0xa]:          pushl 1   
11 [0xb]:          movg @4 // @std.io.task#__srt_global   
12 [0xc]:          movn #0   
14 [0xe]:          pushobj   
15 [0xf]:          call @2041 // <std.io.task#job_builder.job_builder>   
16 [0x10]:          popobj2    
17 [0x11]:          smovr_3 fp+2   
18 [0x12]: line: 31 pushl 2   
19 [0x13]:          pushl 0   
20 [0x14]:          call @2046 // <std.io.task#job_builder.with_args>   
21 [0x15]:          popobj2    
22 [0x16]:          returnobj   
23 [0x17]:          ret   


function: std.io.task#task.recurring[2023] params(2) in file: /usr/include/sharp//io//task//task.sharp:34:5: note:  
			def recurring(tm : var, interval: time_unit) : job_builder {
		    ^

0 [0x0]: line: 35 movg @4 // @std.io.task#__srt_global   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          call @2034 // <std.io.task#job_master.create_job>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+3   
7 [0x7]: line: 36 new_class @0 // std#__srt_global   
8 [0x8]:          mov16 adx, adx   
9 [0x9]:          dup    
10 [0xa]:          pushl 3   
11 [0xb]:          movg @4 // @std.io.task#__srt_global   
12 [0xc]:          movn #0   
14 [0xe]:          pushobj   
15 [0xf]:          call @2041 // <std.io.task#job_builder.job_builder>   
16 [0x10]:          popobj2    
17 [0x11]:          smovr_3 fp+4   
18 [0x12]: line: 37 pushl 4   
19 [0x13]:          ipushl #1   
20 [0x14]:          pushl 2   
21 [0x15]:          call @2044 // <std.io.task#job_builder.recurring>   
22 [0x16]:          popobj2    
23 [0x17]:          returnobj   
24 [0x18]:          ret   


function: std.io.task#task.block[2024] params(0) in file: /usr/include/sharp//io//task//task.sharp:40:12: note:  
			static def block() : job_builder {
		           ^

0 [0x0]: line: 41 movg @4 // @std.io.task#__srt_global   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          call @2034 // <std.io.task#job_master.create_job>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+0   
7 [0x7]: line: 42 new_class @0 // std#__srt_global   
8 [0x8]:          mov16 adx, adx   
9 [0x9]:          dup    
10 [0xa]:          pushl 0   
11 [0xb]:          movg @4 // @std.io.task#__srt_global   
12 [0xc]:          movn #0   
14 [0xe]:          pushobj   
15 [0xf]:          call @2041 // <std.io.task#job_builder.job_builder>   
16 [0x10]:          popobj2    
17 [0x11]:          smovr_3 fp+1   
18 [0x12]: line: 43 pushl 1   
19 [0x13]:          call @2047 // <std.io.task#job_builder.block>   
20 [0x14]:          popobj2    
21 [0x15]:          returnobj   
22 [0x16]:          ret   


function: std.io.task#task.long_term[2025] params(0) in file: /usr/include/sharp//io//task//task.sharp:46:12: note:  
			static def long_term() : job_builder {
		           ^

0 [0x0]: line: 47 movg @4 // @std.io.task#__srt_global   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          call @2034 // <std.io.task#job_master.create_job>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+0   
7 [0x7]: line: 48 new_class @0 // std#__srt_global   
8 [0x8]:          mov16 adx, adx   
9 [0x9]:          dup    
10 [0xa]:          pushl 0   
11 [0xb]:          movg @4 // @std.io.task#__srt_global   
12 [0xc]:          movn #0   
14 [0xe]:          pushobj   
15 [0xf]:          call @2041 // <std.io.task#job_builder.job_builder>   
16 [0x10]:          popobj2    
17 [0x11]:          smovr_3 fp+1   
18 [0x12]: line: 49 pushl 1   
19 [0x13]:          call @2048 // <std.io.task#job_builder.long_term>   
20 [0x14]:          popobj2    
21 [0x15]:          returnobj   
22 [0x16]:          ret   


function: std.io.task#task.builder[2026] params(0) in file: /usr/include/sharp//io//task//task.sharp:52:15: note:  
		    static def builder() : job_builder {
		              ^

0 [0x0]: line: 53 movg @4 // @std.io.task#__srt_global   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          call @2034 // <std.io.task#job_master.create_job>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+0   
7 [0x7]: line: 54 new_class @0 // std#__srt_global   
8 [0x8]:          mov16 adx, adx   
9 [0x9]:          dup    
10 [0xa]:          pushl 0   
11 [0xb]:          movg @4 // @std.io.task#__srt_global   
12 [0xc]:          movn #0   
14 [0xe]:          pushobj   
15 [0xf]:          call @2041 // <std.io.task#job_builder.job_builder>   
16 [0x10]:          popobj2    
17 [0x11]:          smovr_3 fp+1   
18 [0x12]: line: 55 movl 1   
19 [0x13]:          returnobj   
20 [0x14]:          ret   


function: std.io.task#task.cancel_all_jobs_by_name[2027] params(1) in file: /usr/include/sharp//io//task//task.sharp:58:19: note:  
			public static def cancel_all_jobs_by_name(name: string) {
		                  ^

0 [0x0]: line: 59 movg @4 // @std.io.task#__srt_global   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          pushl 0   
5 [0x5]:          call @2039 // <std.io.task#job_master.cancel_jobs_by_name>   
6 [0x6]:          ret   


constructor: std.io.task#task.task[2028] params(0) in file: /usr/include/sharp//io//task//task.sharp:9:6: note:  
		class task {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std.io.task#cancellation_exception.cancellation_exception[2029] params(1) in file: /usr/include/sharp//io//task//cancellation_exception.sharp:4:34: note:  
		    public cancellation_exception(message : _int8[]) -> base(message) {}
		                                 ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3566 // <std#runtime_exception.runtime_exception>   
3 [0x3]:         ret   


constructor: std.io.task#cancellation_exception.cancellation_exception[2030] params(1) in file: /usr/include/sharp//io//task//cancellation_exception.sharp:5:34: note:  
		    public cancellation_exception(message : string) -> base(message) {}
		                                 ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3567 // <std#runtime_exception.runtime_exception>   
3 [0x3]:         ret   


constructor: std.io.task#cancellation_exception.cancellation_exception[2031] params(0) in file: /usr/include/sharp//io//task//cancellation_exception.sharp:3:6: note:  
		class cancellation_exception base runtime_except {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3568 // <std#runtime_exception.runtime_exception>   
2 [0x2]:         ret   


constructor: std.io.task#job_master.job_master[2032] params(0) in file: /usr/include/sharp//io//task//job_master.sharp:7:12: note:  
			job_master() {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 8 new_class @0 // std#__srt_global   
2 [0x2]:         movu64 adx, adx   
3 [0x3]:         dup    
4 [0x4]:         new_class @0 // std#__srt_global   
5 [0x5]:         ret   
6 [0x6]:         dup    
7 [0x7]:         newstr @36 // Long term jobs   
8 [0x8]:         call @1959 // <std#string.string>   
9 [0x9]:         movg @13 // @std.io#thread_priority   
10 [0xa]:         movn #0   
12 [0xc]:         pushobj   
13 [0xd]:         call @2128 // <std.io#thread_group.thread_group>   
14 [0xe]:         movl 0   
15 [0xf]:         movn #2   
17 [0x11]:         popobj   
18 [0x12]: line: 9 new_class @0 // std#__srt_global   
19 [0x13]:         movu64 adx, adx   
20 [0x14]:         dup    
21 [0x15]:         new_class @0 // std#__srt_global   
22 [0x16]:         ret   
23 [0x17]:         dup    
24 [0x18]:         newstr @37 // Short term jobs   
25 [0x19]:         call @1959 // <std#string.string>   
26 [0x1a]:         movg @13 // @std.io#thread_priority   
27 [0x1b]:         movn #2   
29 [0x1d]:         pushobj   
30 [0x1e]:         call @2128 // <std.io#thread_group.thread_group>   
31 [0x1f]:         movl 0   
32 [0x20]:         movn #3   
34 [0x22]:         popobj   
35 [0x23]: line: 10 new_class @0 // std#__srt_global   
36 [0x24]:          ? (151)   
37 [0x25]:          dup    
38 [0x26]:          call @3852 // <std#synced_list<std.io.task#job>.synced_list>   
39 [0x27]:          movl 0   
40 [0x28]:          movn #0   
42 [0x2a]:          popobj   
43 [0x2b]: line: 11 new_class @0 // std#__srt_global   
44 [0x2c]:          ? (147)   
45 [0x2d]:          dup    
46 [0x2e]:          call @3805 // <std#hashtable<std.io#thread,std.io.task#job_controller>.hashtable>   
47 [0x2f]:          movl 0   
48 [0x30]:          movn #1   
50 [0x32]:          popobj   
51 [0x33]:          ret   


overload function: std.io.task#job_master.operator=[2033] params(1) in file: /usr/include/sharp//io//task//job_master.sharp:14:5: note:  
			def operator=(main: ()()) : job {
		    ^

0 [0x0]: line: 15 pushl 0   
1 [0x1]:          call @2034 // <std.io.task#job_master.create_job>   
2 [0x2]:          popobj2    
3 [0x3]:          smovr_3 fp+2   
4 [0x4]: line: 16 pushl 2   
5 [0x5]:          ipushl #1   
6 [0x6]:          call @2073 // <std.io.task#job.operator=>   
7 [0x7]: line: 17 pushl 0   
8 [0x8]:          pushl 2   
9 [0x9]:          call @2036 // <std.io.task#job_master.start_job>   
10 [0xa]: line: 18 movl 2   
11 [0xb]:          returnobj   
12 [0xc]:          ret   


function: std.io.task#job_master.create_job[2034] params(0) in file: /usr/include/sharp//io//task//job_master.sharp:21:15: note:  
			protected def create_job() := new job("job#${job.guid}");
		              ^

0 [0x0]: line: 21 new_class @0 // std#__srt_global   
1 [0x1]:          movu8 adx, adx   
2 [0x2]:          dup    
3 [0x3]:          new_class @0 // std#__srt_global   
4 [0x4]:          ret   
5 [0x5]:          dup    
6 [0x6]:          newstr @0 // job#   
7 [0x7]:          call @1959 // <std#string.string>   
8 [0x8]:          movg @11 // @std.io.task#job   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          iaload ebx, adx   
14 [0xe]:          rstore ebx   
15 [0xf]:          call @1991 // <std#string.operator+>   
16 [0x10]:          call @2065 // <std.io.task#job.job>   
17 [0x11]:          popobj2    
18 [0x12]:          returnobj   
19 [0x13]:          ret   


function: std.io.task#job_master.create_job[2035] params(1) in file: /usr/include/sharp//io//task//job_master.sharp:23:15: note:  
			protected def create_job(name : string) := new job(name);
		              ^

0 [0x0]: line: 23 new_class @0 // std#__srt_global   
1 [0x1]:          movu8 adx, adx   
2 [0x2]:          dup    
3 [0x3]:          pushl 1   
4 [0x4]:          call @2065 // <std.io.task#job.job>   
5 [0x5]:          popobj2    
6 [0x6]:          returnobj   
7 [0x7]:          ret   


function: std.io.task#job_master.start_job[2036] params(1) in file: /usr/include/sharp//io//task//job_master.sharp:25:15: note:  
			protected def start_job(scheduled_job : job) {
		              ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 27 movl 0   
3 [0x3]:          movn #4   
5 [0x5]:          movi #0, adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          not ebx, ebx   
9 [0x9]:          movr cmt, ebx   
10 [0xa]:          jne 20   
11 [0xb]: line: 28 call @2054 // <std.io.task#__srt_global.start_scheduler>   
12 [0xc]: line: 29 movi #1, ebx   
14 [0xe]:          movl 0   
15 [0xf]:          movn #4   
17 [0x11]:          movi #0, adx   
19 [0x13]:          rmov adx, ebx   
20 [0x14]:          nop   
21 [0x15]:          movl 0   
22 [0x16]:          _ulck   
23 [0x17]: line: 33 movl 1   
24 [0x18]:          movn #12   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          iaload ebx, adx   
29 [0x1d]:          movr cmt, ebx   
30 [0x1e]:          jne 48   
31 [0x1f]: line: 34 movl 1   
32 [0x20]:          movn #12   
34 [0x22]:          movi #0, adx   
36 [0x24]:          iaload ebx, adx   
37 [0x25]:          rstore ebx   
38 [0x26]:          call @3530 // <std#time.mills_time>   
39 [0x27]:          loadval ebx   
40 [0x28]:          loadval ecx   
41 [0x29]:          add ecx, ebx -> ebx   
42 [0x2a]:          movl 1   
43 [0x2b]:          movn #12   
45 [0x2d]:          movi #0, adx   
47 [0x2f]:          rmov adx, ebx   
48 [0x30]:          nop   
49 [0x31]: line: 36 movl 1   
50 [0x32]:          movn #16   
52 [0x34]:          movi #0, adx   
54 [0x36]:          iaload ebx, adx   
55 [0x37]:          movr cmt, ebx   
56 [0x38]:          jne 60   
57 [0x39]: line: 37 pushl 1   
58 [0x3a]:          call @2061 // <std.io.task#__srt_global.execute_synchronous>   
59 [0x3b]:          jmp @66   
60 [0x3c]: line: 40 movl 0   
61 [0x3d]:          movn #0   
63 [0x3f]:          pushobj   
64 [0x40]:          pushl 1   
65 [0x41]:          call @3891 // <std#synced_list<std.io.task#job>.add>   
66 [0x42]:          nop   
67 [0x43]:          ret   


function: std.io.task#job_master.get_host_controller[2037] params(1) in file: /usr/include/sharp//io//task//job_master.sharp:44:15: note:  
			protected def get_host_controller(host: thread) := controllers.at(host);
		              ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          pushl 1   
5 [0x5]:          call @3809 // <std#hashtable<std.io#thread,std.io.task#job_controller>.at>   
6 [0x6]:          popobj2    
7 [0x7]:          returnobj   
8 [0x8]:          ret   


function: std.io.task#job_master.cleanup_job[2038] params(1) in file: /usr/include/sharp//io//task//job_master.sharp:46:15: note:  
			protected def cleanup_job(scheduled_job : job) {
		              ^

0 [0x0]: line: 47 movl 1   
1 [0x1]:          movn #7   
3 [0x3]:          del   
4 [0x4]: line: 48 movl 1   
5 [0x5]:          movn #4   
7 [0x7]:          del   
8 [0x8]: line: 49 movl 1   
9 [0x9]:          movn #13   
11 [0xb]:          del   
12 [0xc]: line: 50 movl 1   
13 [0xd]:          movn #6   
15 [0xf]:          del   
16 [0x10]: line: 51 movl 1   
17 [0x11]:          movn #5   
19 [0x13]:          del   
20 [0x14]: line: 53 movl 1   
21 [0x15]: line: 54 _lck    
22 [0x16]: line: 55 movl 1   
23 [0x17]:          movn #20   
25 [0x19]:          pushobj   
26 [0x1a]:          call @3909 // <std#list<std.io#thread>.empty>   
27 [0x1b]:          loadval ebx   
28 [0x1c]:          not ebx, ebx   
29 [0x1d]:          movr cmt, ebx   
30 [0x1e]:          jne 53   
31 [0x1f]: line: 56 istorel -1, fp+3   
33 [0x21]:          movl 1   
34 [0x22]:          movn #20   
36 [0x24]:          pushobj   
37 [0x25]:          invoke_delegate 24 { static=0, args=0 }   
39 [0x27]:          popl 4   
40 [0x28]:          iaddl 1, fp@3   
42 [0x2a]:          movl 4   
43 [0x2b]:          sizeof ecx   
44 [0x2c]:          loadl ebx, fp+3   
45 [0x2d]:          lt ebx, ecx   
46 [0x2e]:          jne 53   
47 [0x2f]:          movnd ebx   
48 [0x30]:          pushobj   
49 [0x31]:          popl 2   
50 [0x32]: line: 57 pushl 2   
51 [0x33]:          call @1909 // <std#_object_.notify>   
52 [0x34]:          jmp @40   
53 [0x35]:          nop   
54 [0x36]: line: 61 movl 1   
55 [0x37]:          movn #20   
57 [0x39]:          pushobj   
58 [0x3a]:          call @3917 // <std#list<std.io#thread>.clear>   
59 [0x3b]:          movl 1   
60 [0x3c]:          _ulck   
61 [0x3d]: line: 64 movl 1   
62 [0x3e]:          _lck    
63 [0x3f]: line: 65 movl 1   
64 [0x40]:          movn #20   
66 [0x42]:          pushobj   
67 [0x43]:          call @3909 // <std#list<std.io#thread>.empty>   
68 [0x44]:          loadval ebx   
69 [0x45]:          not ebx, ebx   
70 [0x46]:          movr cmt, ebx   
71 [0x47]:          jne 75   
72 [0x48]: line: 66 movl 1   
73 [0x49]:          _ulck   
74 [0x4a]:          jmp @20   
75 [0x4b]:          nop   
76 [0x4c]:          movl 1   
77 [0x4d]:          _ulck   
78 [0x4e]: line: 70 movl 1   
79 [0x4f]:          movn #20   
81 [0x51]:          del   
82 [0x52]: line: 71 movl 0   
83 [0x53]:          movn #0   
85 [0x55]:          pushobj   
86 [0x56]:          pushl 1   
87 [0x57]:          istore 4099   
89 [0x59]:          call @3898 // <std#synced_list<std.io.task#job>.remove>   
90 [0x5a]:          ret   


function: std.io.task#job_master.cancel_jobs_by_name[2039] params(1) in file: /usr/include/sharp//io//task//job_master.sharp:74:15: note:  
			protected def cancel_jobs_by_name(name: string) {
		              ^

0 [0x0]: line: 75 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          _lck    
4 [0x4]: line: 76 istorel 0, fp+2   
6 [0x6]:          ipushl #2   
7 [0x7]:          movl 0   
8 [0x8]:          movn #0   
10 [0xa]:          pushobj   
11 [0xb]:          call @3894 // <std#synced_list<std.io.task#job>.size>   
12 [0xc]:          loadval ebx   
13 [0xd]:          loadval ecx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 45   
18 [0x12]: line: 77 movl 0   
19 [0x13]:          movn #0   
21 [0x15]:          pushobj   
22 [0x16]:          ipushl #2   
23 [0x17]:          call @3857 // <std#synced_list<std.io.task#job>.at>   
24 [0x18]:          popobj2    
25 [0x19]:          movn #5   
27 [0x1b]:          pushobj   
28 [0x1c]:          pushl 1   
29 [0x1d]:          call @1977 // <std#string.operator==>   
30 [0x1e]:          loadval ebx   
31 [0x1f]:          movr cmt, ebx   
32 [0x20]:          jne 41   
33 [0x21]: line: 78 movl 0   
34 [0x22]:          movn #0   
36 [0x24]:          pushobj   
37 [0x25]:          ipushl #2   
38 [0x26]:          call @3899 // <std#synced_list<std.io.task#job>.remove_at>   
39 [0x27]: line: 79 istorel 0, fp+2   
41 [0x29]:          nop   
42 [0x2a]:          iaddl 1, fp@2   
44 [0x2c]:          jmp @6   
45 [0x2d]: line: 83 istorel -1, fp+4   
47 [0x2f]:          movl 0   
48 [0x30]:          movn #3   
50 [0x32]:          pushobj   
51 [0x33]:          invoke_delegate 24 { static=0, args=0 }   
53 [0x35]:          popl 5   
54 [0x36]:          iaddl 1, fp@4   
56 [0x38]:          movl 5   
57 [0x39]:          sizeof ecx   
58 [0x3a]:          loadl ebx, fp+4   
59 [0x3b]:          lt ebx, ecx   
60 [0x3c]:          jne 88   
61 [0x3d]:          movnd ebx   
62 [0x3e]:          pushobj   
63 [0x3f]:          popl 3   
64 [0x40]: line: 84 pushl 0   
65 [0x41]:          pushl 3   
66 [0x42]:          call @2037 // <std.io.task#job_master.get_host_controller>   
67 [0x43]:          popobj2    
68 [0x44]:          movn #0   
70 [0x46]:          smovr_3 fp+6   
71 [0x47]: line: 85 movl 6   
72 [0x48]:          checknull   
73 [0x49]:          not ebx, ebx   
74 [0x4a]:          skne ebx // pc = 82   
75 [0x4b]:          movl 6   
76 [0x4c]:          movn #5   
78 [0x4e]:          pushobj   
79 [0x4f]:          pushl 1   
80 [0x50]:          call @1977 // <std#string.operator==>   
81 [0x51]:          loadval ebx   
82 [0x52]:          movr cmt, ebx   
83 [0x53]:          jne 86   
84 [0x54]: line: 86 pushl 6   
85 [0x55]:          call @2067 // <std.io.task#job.cancel>   
86 [0x56]:          nop   
87 [0x57]:          jmp @54   
88 [0x58]: line: 90 istorel -1, fp+8   
90 [0x5a]:          movl 0   
91 [0x5b]:          movn #2   
93 [0x5d]:          pushobj   
94 [0x5e]:          invoke_delegate 24 { static=0, args=0 }   
96 [0x60]:          popl 9   
97 [0x61]:          iaddl 1, fp@8   
99 [0x63]:          movl 9   
100 [0x64]:          sizeof ecx   
101 [0x65]:          loadl ebx, fp+8   
102 [0x66]:          lt ebx, ecx   
103 [0x67]:          jne 142   
104 [0x68]:          movnd ebx   
105 [0x69]:          pushobj   
106 [0x6a]:          popl 7   
107 [0x6b]: line: 91 pushl 7   
108 [0x6c]:          movg @4 // @std.io.task#__srt_global   
109 [0x6d]:          movn #4   
111 [0x6f]:          pushobj   
112 [0x70]:          call @2202 // <std.io#thread.operator==>   
113 [0x71]:          loadval ebx   
114 [0x72]:          movr cmt, ebx   
115 [0x73]:          jne 117   
116 [0x74]:          jmp @97   
117 [0x75]:          nop   
118 [0x76]: line: 93 pushl 0   
119 [0x77]:          pushl 7   
120 [0x78]:          call @2037 // <std.io.task#job_master.get_host_controller>   
121 [0x79]:          popobj2    
122 [0x7a]:          movn #0   
124 [0x7c]:          smovr_3 fp+10   
125 [0x7d]: line: 94 movl 10   
126 [0x7e]:          checknull   
127 [0x7f]:          not ebx, ebx   
128 [0x80]:          skne ebx // pc = 136   
129 [0x81]:          movl 10   
130 [0x82]:          movn #5   
132 [0x84]:          pushobj   
133 [0x85]:          pushl 1   
134 [0x86]:          call @1977 // <std#string.operator==>   
135 [0x87]:          loadval ebx   
136 [0x88]:          movr cmt, ebx   
137 [0x89]:          jne 140   
138 [0x8a]: line: 95 pushl 10   
139 [0x8b]:          call @2067 // <std.io.task#job.cancel>   
140 [0x8c]:          nop   
141 [0x8d]:          jmp @97   
142 [0x8e]:          movl 0   
143 [0x8f]:          movn #0   
145 [0x91]:          _ulck   
146 [0x92]:          ret   


constructor: std.io.task#job_builder.job_builder[2040] params(0) in file: /usr/include/sharp//io//task//job_builder.sharp:6:21: note:  
			private job_builder() {}
		                    ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std.io.task#job_builder.job_builder[2041] params(2) in file: /usr/include/sharp//io//task//job_builder.sharp:8:23: note:  
			protected job_builder(scheduled_job : job, master : job_master) {
		                      ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 9 pushl 1   
2 [0x2]:         movl 0   
3 [0x3]:         movn #1   
5 [0x5]:         popobj   
6 [0x6]: line: 10 pushl 2   
7 [0x7]:          movl 0   
8 [0x8]:          movn #0   
10 [0xa]:          popobj   
11 [0xb]: line: 12 movi #1, ebx   
13 [0xd]:          newobj_arry ebx   
14 [0xe]:          popobj2    
15 [0xf]:          smovr_3 fp+3   
16 [0x10]: line: 13 movl 0   
17 [0x11]:          movn #1   
19 [0x13]:          pushobj   
20 [0x14]:          pushl 3   
21 [0x15]:          movi #0, ebx   
23 [0x17]:          popobj2    
24 [0x18]:          movr adx, ebx   
25 [0x19]:          chklen adx   
26 [0x1a]:          movnd adx   
27 [0x1b]:          popobj   
28 [0x1c]: line: 14 pushl 3   
29 [0x1d]:          movl 0   
30 [0x1e]:          movn #1   
32 [0x20]:          movn #6   
34 [0x22]:          popobj   
35 [0x23]:          ret   


function: std.io.task#job_builder.with_timeout[2042] params(1) in file: /usr/include/sharp//io//task//job_builder.sharp:17:5: note:  
			def with_timeout(mills_time : var) : job_builder {
		    ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movn #16   
5 [0x5]:          movi #0, adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movr cmt, ebx   
9 [0x9]:          jne 16   
10 [0xa]: line: 19 new_class @0 // std#__srt_global   
11 [0xb]:          loadval adx   
12 [0xc]:          dup    
13 [0xd]:          newstr @38 // cannot set a timeout on a job that's blocking the calling thread   
14 [0xe]:          call @3551 // <std#illegal_state_exception.illegal_state_exception>   
15 [0xf]:          throw    
16 [0x10]:          nop   
17 [0x11]: line: 22 ipushl #1   
18 [0x12]:          movl 0   
19 [0x13]:          movn #1   
21 [0x15]:          movn #9   
23 [0x17]:          loadval ebx   
24 [0x18]:          movi #0, adx   
26 [0x1a]:          rmov adx, ebx   
27 [0x1b]: line: 23 istore 1   
29 [0x1d]:          movl 0   
30 [0x1e]:          movn #1   
32 [0x20]:          movn #8   
34 [0x22]:          loadval ebx   
35 [0x23]:          movi #0, adx   
37 [0x25]:          rmov adx, ebx   
38 [0x26]: line: 24 movl 0   
39 [0x27]:          returnobj   
40 [0x28]:          ret   


function: std.io.task#job_builder.schedule[2043] params(1) in file: /usr/include/sharp//io//task//job_builder.sharp:27:5: note:  
			def schedule(future : var) : job_builder {
		    ^

0 [0x0]: line: 28 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #1   
4 [0x4]:          movn #12   
6 [0x6]:          loadval ebx   
7 [0x7]:          movi #0, adx   
9 [0x9]:          rmov adx, ebx   
10 [0xa]: line: 29 movl 0   
11 [0xb]:          returnobj   
12 [0xc]:          ret   


function: std.io.task#job_builder.recurring[2044] params(2) in file: /usr/include/sharp//io//task//job_builder.sharp:32:5: note:  
			def recurring(tm : var, interval: time_unit) : job_builder {
		    ^

0 [0x0]: line: 33 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movn #16   
5 [0x5]:          movi #0, adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movr cmt, ebx   
9 [0x9]:          jne 16   
10 [0xa]: line: 34 new_class @0 // std#__srt_global   
11 [0xb]:          loadval adx   
12 [0xc]:          dup    
13 [0xd]:          newstr @39 // cannot set a job recurring that's blocking the calling thread   
14 [0xe]:          call @3551 // <std#illegal_state_exception.illegal_state_exception>   
15 [0xf]:          throw    
16 [0x10]:          nop   
17 [0x11]: line: 37 istore 1   
19 [0x13]:          movl 0   
20 [0x14]:          movn #1   
22 [0x16]:          movn #14   
24 [0x18]:          loadval ebx   
25 [0x19]:          movi #0, adx   
27 [0x1b]:          rmov adx, ebx   
28 [0x1c]: line: 38 movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          pushobj   
32 [0x20]:          ipushl #1   
33 [0x21]:          pushl 2   
34 [0x22]:          call @2082 // <std.io.task#job.update_interval>   
35 [0x23]: line: 39 movl 0   
36 [0x24]:          returnobj   
37 [0x25]:          ret   


function: std.io.task#job_builder.with_name[2045] params(1) in file: /usr/include/sharp//io//task//job_builder.sharp:42:5: note:  
			def with_name(job_name : string) : job_builder {
		    ^

0 [0x0]: line: 43 pushl 1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #1   
4 [0x4]:          movn #5   
6 [0x6]:          popobj   
7 [0x7]: line: 44 movl 0   
8 [0x8]:          returnobj   
9 [0x9]:          ret   


function: std.io.task#job_builder.with_args[2046] params(1) in file: /usr/include/sharp//io//task//job_builder.sharp:47:5: note:  
			def with_args(args : object[]) : job_builder {
		    ^

0 [0x0]: line: 48 istore 1   
2 [0x2]:          movl 1   
3 [0x3]:          sizeof ebx   
4 [0x4]:          loadval ecx   
5 [0x5]:          add ecx, ebx -> ebx   
6 [0x6]:          newobj_arry ebx   
7 [0x7]:          popobj2    
8 [0x8]:          smovr_3 fp+2   
9 [0x9]: line: 49 movl 0   
10 [0xa]:          movn #1   
12 [0xc]:          pushobj   
13 [0xd]:          pushl 2   
14 [0xe]:          movi #0, ebx   
16 [0x10]:          popobj2    
17 [0x11]:          movr adx, ebx   
18 [0x12]:          chklen adx   
19 [0x13]:          movnd adx   
20 [0x14]:          popobj   
21 [0x15]: line: 51 istorel 0, fp+3   
23 [0x17]: line: 52 istorel -1, fp+5   
25 [0x19]:          pushl 1   
26 [0x1a]:          popl 6   
27 [0x1b]:          iaddl 1, fp@5   
29 [0x1d]:          movl 6   
30 [0x1e]:          sizeof ecx   
31 [0x1f]:          loadl ebx, fp+5   
32 [0x20]:          lt ebx, ecx   
33 [0x21]:          jne 48   
34 [0x22]:          movnd ebx   
35 [0x23]:          pushobj   
36 [0x24]:          popl 4   
37 [0x25]: line: 53 pushl 4   
38 [0x26]:          pushl 2   
39 [0x27]:          loadl ebx, fp+3   
40 [0x28]:          inc ebx   
41 [0x29]:          smovr_2 ebx, fp+3   
42 [0x2a]:          popobj2    
43 [0x2b]:          movr adx, ebx   
44 [0x2c]:          chklen adx   
45 [0x2d]:          movnd adx   
46 [0x2e]:          popobj   
47 [0x2f]:          jmp @27   
48 [0x30]: line: 56 pushl 2   
49 [0x31]:          movl 0   
50 [0x32]:          movn #1   
52 [0x34]:          movn #6   
54 [0x36]:          popobj   
55 [0x37]: line: 57 movl 0   
56 [0x38]:          returnobj   
57 [0x39]:          ret   


function: std.io.task#job_builder.block[2047] params(0) in file: /usr/include/sharp//io//task//job_builder.sharp:60:5: note:  
			def block() : job_builder {
		    ^

0 [0x0]: line: 61 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movn #8   
5 [0x5]:          movi #0, adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movr cmt, ebx   
9 [0x9]:          jne 16   
10 [0xa]: line: 62 new_class @0 // std#__srt_global   
11 [0xb]:          loadval adx   
12 [0xc]:          dup    
13 [0xd]:          newstr @40 // cannot block calling thread on job that has a timeout   
14 [0xe]:          call @3551 // <std#illegal_state_exception.illegal_state_exception>   
15 [0xf]:          throw    
16 [0x10]:          nop   
17 [0x11]: line: 65 movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          movn #14   
22 [0x16]:          movi #0, adx   
24 [0x18]:          iaload ebx, adx   
25 [0x19]:          movr cmt, ebx   
26 [0x1a]:          jne 33   
27 [0x1b]: line: 66 new_class @0 // std#__srt_global   
28 [0x1c]:          loadval adx   
29 [0x1d]:          dup    
30 [0x1e]:          newstr @41 // cannot block calling thread on a recurring job   
31 [0x1f]:          call @3551 // <std#illegal_state_exception.illegal_state_exception>   
32 [0x20]:          throw    
33 [0x21]:          nop   
34 [0x22]: line: 69 istore 1   
36 [0x24]:          movl 0   
37 [0x25]:          movn #1   
39 [0x27]:          movn #16   
41 [0x29]:          loadval ebx   
42 [0x2a]:          movi #0, adx   
44 [0x2c]:          rmov adx, ebx   
45 [0x2d]: line: 70 movl 0   
46 [0x2e]:          returnobj   
47 [0x2f]:          ret   


function: std.io.task#job_builder.long_term[2048] params(0) in file: /usr/include/sharp//io//task//job_builder.sharp:73:5: note:  
			def long_term() : job_builder {
		    ^

0 [0x0]: line: 74 istore 1   
2 [0x2]:          movl 0   
3 [0x3]:          movn #1   
5 [0x5]:          movn #17   
7 [0x7]:          loadval ebx   
8 [0x8]:          movi #0, adx   
10 [0xa]:          rmov adx, ebx   
11 [0xb]: line: 75 movl 0   
12 [0xc]:          returnobj   
13 [0xd]:          ret   


overload function: std.io.task#job_builder.operator=[2049] params(1) in file: /usr/include/sharp//io//task//job_builder.sharp:78:12: note:  
			public def operator=(main: ()()) : job {
		           ^

0 [0x0]: line: 79 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          ipushl #1   
5 [0x5]:          call @2073 // <std.io.task#job.operator=>   
6 [0x6]: line: 80 movl 0   
7 [0x7]:          movn #0   
9 [0x9]:          pushobj   
10 [0xa]:          movl 0   
11 [0xb]:          movn #1   
13 [0xd]:          pushobj   
14 [0xe]:          call @2036 // <std.io.task#job_master.start_job>   
15 [0xf]: line: 81 movl 0   
16 [0x10]:          movn #1   
18 [0x12]:          returnobj   
19 [0x13]:          ret   


overload function: std.io.task#job_builder.operator=[2050] params(1) in file: /usr/include/sharp//io//task//job_builder.sharp:84:12: note:  
			public def operator=(main: (args : object[])()) : job {
		           ^

0 [0x0]: line: 85 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          ipushl #1   
5 [0x5]:          call @2074 // <std.io.task#job.operator=>   
6 [0x6]: line: 86 movl 0   
7 [0x7]:          movn #0   
9 [0x9]:          pushobj   
10 [0xa]:          movl 0   
11 [0xb]:          movn #1   
13 [0xd]:          pushobj   
14 [0xe]:          call @2036 // <std.io.task#job_master.start_job>   
15 [0xf]: line: 87 movl 0   
16 [0x10]:          movn #1   
18 [0x12]:          returnobj   
19 [0x13]:          ret   


overload function: std.io.task#job_builder.operator=[2051] params(1) in file: /usr/include/sharp//io//task//job_builder.sharp:90:18: note:  
		    protected def operator=(main: (deferred : object, args : object[])()) : job {
		                 ^

0 [0x0]: line: 91 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          ipushl #1   
5 [0x5]:          call @2075 // <std.io.task#job.operator=>   
6 [0x6]: line: 92 movl 0   
7 [0x7]:          movn #1   
9 [0x9]:          movn #14   
11 [0xb]:          movi #0, adx   
13 [0xd]:          iaload ebx, adx   
14 [0xe]:          movr cmt, ebx   
15 [0xf]:          jne 22   
16 [0x10]: line: 93 new_class @0 // std#__srt_global   
17 [0x11]:          loadval adx   
18 [0x12]:          dup    
19 [0x13]:          newstr @42 // recurring jobs cannot be deferred tasks   
20 [0x14]:          call @3551 // <std#illegal_state_exception.illegal_state_exception>   
21 [0x15]:          throw    
22 [0x16]:          nop   
23 [0x17]: line: 96 movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          pushobj   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          call @2036 // <std.io.task#job_master.start_job>   
32 [0x20]: line: 97 movl 0   
33 [0x21]:          movn #1   
35 [0x23]:          returnobj   
36 [0x24]:          ret   


overload function: std.io.task#job_builder.operator=[2052] params(1) in file: /usr/include/sharp//io//task//job_builder.sharp:100:18: note:  
		    protected def operator=(main: (deferred : object)()) : job {
		                 ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           movn #1   
3 [0x3]:           pushobj   
4 [0x4]:           ipushl #1   
5 [0x5]:           call @2076 // <std.io.task#job.operator=>   
6 [0x6]: line: 102 movl 0   
7 [0x7]:           movn #1   
9 [0x9]:           movn #14   
11 [0xb]:           movi #0, adx   
13 [0xd]:           iaload ebx, adx   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 22   
16 [0x10]: line: 103 new_class @0 // std#__srt_global   
17 [0x11]:           loadval adx   
18 [0x12]:           dup    
19 [0x13]:           newstr @42 // recurring jobs cannot be deferred tasks   
20 [0x14]:           call @3551 // <std#illegal_state_exception.illegal_state_exception>   
21 [0x15]:           throw    
22 [0x16]:           nop   
23 [0x17]: line: 106 movl 0   
24 [0x18]:           movn #0   
26 [0x1a]:           pushobj   
27 [0x1b]:           movl 0   
28 [0x1c]:           movn #1   
30 [0x1e]:           pushobj   
31 [0x1f]:           call @2036 // <std.io.task#job_master.start_job>   
32 [0x20]: line: 107 movl 0   
33 [0x21]:           movn #1   
35 [0x23]:           returnobj   
36 [0x24]:           ret   


function: std.io.task#job_builder.get_job[2053] params(0) in file: /usr/include/sharp//io//task//job_builder.sharp:110:12: note:  
			public def get_job() := scheduled_job;
		           ^

0 [0x0]: line: 110 movl 0   
1 [0x1]:           movn #1   
3 [0x3]:           returnobj   
4 [0x4]:           ret   


function: std.io.task#__srt_global.start_scheduler[2054] params(0) in file: /usr/include/sharp//io//task//job_scheduler.sharp:12:14: note:  
		protected def start_scheduler() {
		             ^

0 [0x0]: line: 13 movg @4 // @std.io.task#__srt_global   
1 [0x1]:          movn #0   
3 [0x3]:          _lck    
4 [0x4]: line: 14 movg @4 // @std.io.task#__srt_global   
5 [0x5]:          movn #3   
7 [0x7]:          movi #0, adx   
9 [0x9]:          iaload ebx, adx   
10 [0xa]:          rstore ebx   
11 [0xb]:          movi #0, ebx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          jne 17   
16 [0x10]: line: 15 call @2055 // <std.io.task#__srt_global.calculate_max_threads>   
17 [0x11]:          nop   
18 [0x12]: line: 16 new_class @0 // std#__srt_global   
19 [0x13]:          div adx, adx -> adx   
20 [0x14]:          dup    
21 [0x15]:          new_class @0 // std#__srt_global   
22 [0x16]:          ret   
23 [0x17]:          dup    
24 [0x18]:          newstr @43 // task_scheduler   
25 [0x19]:          call @1959 // <std#string.string>   
26 [0x1a]:          istore 2058   
28 [0x1c]:          movg @4 // @std.io.task#__srt_global   
29 [0x1d]:          movn #0   
31 [0x1f]:          movn #2   
33 [0x21]:          pushobj   
34 [0x22]:          call @2172 // <std.io#thread.thread>   
35 [0x23]:          movg @4 // @std.io.task#__srt_global   
36 [0x24]:          movn #4   
38 [0x26]:          popobj   
39 [0x27]: line: 17 movg @4 // @std.io.task#__srt_global   
40 [0x28]:          movn #4   
42 [0x2a]:          pushobj   
43 [0x2b]:          pushnull    
44 [0x2c]:          call @2174 // <std.io#thread.start>   
45 [0x2d]:          pop   
46 [0x2e]:          movg @4 // @std.io.task#__srt_global   
47 [0x2f]:          movn #0   
49 [0x31]:          _ulck   
50 [0x32]:          ret   


function: std.io.task#__srt_global.calculate_max_threads[2055] params(0) in file: /usr/include/sharp//io//task//job_scheduler.sharp:21:12: note:  
		private def calculate_max_threads() {
		           ^

0 [0x0]: line: 22 call @3480 // <platform.kernel#vm.cores>   
1 [0x1]:          ipopl 0   
2 [0x2]: line: 23 movi #2, ebx   
4 [0x4]:          mull ebx, fp@0   
5 [0x5]: line: 24 movi #4, ebx   
7 [0x7]:          subl ebx, fp@0   
8 [0x8]: line: 26 ipushl #0   
9 [0x9]:          movi #2, ebx   
11 [0xb]:          loadval ecx   
12 [0xc]:          gt ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          movr cmt, ebx   
15 [0xf]:          jne 42   
16 [0x10]: line: 27 ipushl #0   
17 [0x11]:          ldc ebx // 0.75   
18 [0x12]:          loadval ecx   
19 [0x13]:          mul ecx, ebx -> ebx   
20 [0x14]:          rstore ebx   
21 [0x15]:          call @3510 // <std.math#__srt_global.round>   
22 [0x16]:          movg @4 // @std.io.task#__srt_global   
23 [0x17]:          movn #1   
25 [0x19]:          loadval ebx   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          rmov adx, ebx   
29 [0x1d]: line: 28 ipushl #0   
30 [0x1e]:          ldc ebx // 0.25   
31 [0x1f]:          loadval ecx   
32 [0x20]:          mul ecx, ebx -> ebx   
33 [0x21]:          rstore ebx   
34 [0x22]:          call @3510 // <std.math#__srt_global.round>   
35 [0x23]:          movg @4 // @std.io.task#__srt_global   
36 [0x24]:          movn #2   
38 [0x26]:          loadval ebx   
39 [0x27]:          movi #0, adx   
41 [0x29]:          rmov adx, ebx   
42 [0x2a]:          nop   
43 [0x2b]: line: 31 movg @4 // @std.io.task#__srt_global   
44 [0x2c]:          movn #1   
46 [0x2e]:          movi #0, adx   
48 [0x30]:          iaload ebx, adx   
49 [0x31]:          rstore ebx   
50 [0x32]:          movi #0, ebx   
52 [0x34]:          loadval ecx   
53 [0x35]:          test ecx, ebx   
54 [0x36]:          jne 64   
55 [0x37]: line: 32 istore 1   
57 [0x39]:          movg @4 // @std.io.task#__srt_global   
58 [0x3a]:          movn #1   
60 [0x3c]:          loadval ebx   
61 [0x3d]:          movi #0, adx   
63 [0x3f]:          rmov adx, ebx   
64 [0x40]:          nop   
65 [0x41]: line: 34 movg @4 // @std.io.task#__srt_global   
66 [0x42]:          movn #2   
68 [0x44]:          movi #0, adx   
70 [0x46]:          iaload ebx, adx   
71 [0x47]:          rstore ebx   
72 [0x48]:          movi #0, ebx   
74 [0x4a]:          loadval ecx   
75 [0x4b]:          test ecx, ebx   
76 [0x4c]:          jne 86   
77 [0x4d]: line: 35 istore 1   
79 [0x4f]:          movg @4 // @std.io.task#__srt_global   
80 [0x50]:          movn #2   
82 [0x52]:          loadval ebx   
83 [0x53]:          movi #0, adx   
85 [0x55]:          rmov adx, ebx   
86 [0x56]:          nop   
87 [0x57]: line: 36 movg @4 // @std.io.task#__srt_global   
88 [0x58]:          movn #1   
90 [0x5a]:          movi #0, adx   
92 [0x5c]:          iaload ebx, adx   
93 [0x5d]:          rstore ebx   
94 [0x5e]:          movg @4 // @std.io.task#__srt_global   
95 [0x5f]:          movn #2   
97 [0x61]:          movi #0, adx   
99 [0x63]:          iaload ebx, adx   
100 [0x64]:          loadval ecx   
101 [0x65]:          add ecx, ebx -> ebx   
102 [0x66]:          rstore ebx   
103 [0x67]:          movg @4 // @std.io.task#__srt_global   
104 [0x68]:          movn #3   
106 [0x6a]:          loadval ebx   
107 [0x6b]:          movi #0, adx   
109 [0x6d]:          rmov adx, ebx   
110 [0x6e]:          ret   


function: std.io.task#__srt_global.set_thread_max[2056] params(1) in file: /usr/include/sharp//io//task//job_scheduler.sharp:39:4: note:  
		def set_thread_max(max: var) {
		   ^

0 [0x0]: line: 40 movg @4 // @std.io.task#__srt_global   
1 [0x1]:          movn #0   
3 [0x3]:          _lck    
4 [0x4]: line: 41 movg @4 // @std.io.task#__srt_global   
5 [0x5]:          movn #4   
7 [0x7]:          pushobj   
8 [0x8]:          pushnull    
9 [0x9]:          itest ebx   
10 [0xa]:          not ebx, ebx   
11 [0xb]:          movr cmt, ebx   
12 [0xc]:          jne 19   
13 [0xd]: line: 42 new_class @0 // std#__srt_global   
14 [0xe]:          skip @0 // pc = 14   
15 [0xf]:          dup    
16 [0x10]:          newstr @46 // cannot modify max thread count after task library has started, try calling this before your first task   
17 [0x11]:          call @3548 // <std#illegal_argument_exception.illegal_argument_exception>   
18 [0x12]:          throw    
19 [0x13]:          nop   
20 [0x14]: line: 46 ipushl #0   
21 [0x15]:          movi #2, ebx   
23 [0x17]:          loadval ecx   
24 [0x18]:          gte ecx, ebx   
25 [0x19]:          movr ebx, cmt   
26 [0x1a]:          movr cmt, ebx   
27 [0x1b]:          jne 116   
28 [0x1c]: line: 47 ipushl #0   
29 [0x1d]:          movi #2, ebx   
31 [0x1f]:          loadval ecx   
32 [0x20]:          gt ecx, ebx   
33 [0x21]:          movr ebx, cmt   
34 [0x22]:          movr cmt, ebx   
35 [0x23]:          jne 62   
36 [0x24]: line: 48 ipushl #0   
37 [0x25]:          ldc ebx // 0.75   
38 [0x26]:          loadval ecx   
39 [0x27]:          mul ecx, ebx -> ebx   
40 [0x28]:          rstore ebx   
41 [0x29]:          call @3510 // <std.math#__srt_global.round>   
42 [0x2a]:          movg @4 // @std.io.task#__srt_global   
43 [0x2b]:          movn #1   
45 [0x2d]:          loadval ebx   
46 [0x2e]:          movi #0, adx   
48 [0x30]:          rmov adx, ebx   
49 [0x31]: line: 49 ipushl #0   
50 [0x32]:          ldc ebx // 0.25   
51 [0x33]:          loadval ecx   
52 [0x34]:          mul ecx, ebx -> ebx   
53 [0x35]:          rstore ebx   
54 [0x36]:          call @3510 // <std.math#__srt_global.round>   
55 [0x37]:          movg @4 // @std.io.task#__srt_global   
56 [0x38]:          movn #2   
58 [0x3a]:          loadval ebx   
59 [0x3b]:          movi #0, adx   
61 [0x3d]:          rmov adx, ebx   
62 [0x3e]:          nop   
63 [0x3f]: line: 52 movg @4 // @std.io.task#__srt_global   
64 [0x40]:          movn #1   
66 [0x42]:          movi #0, adx   
68 [0x44]:          iaload ebx, adx   
69 [0x45]:          rstore ebx   
70 [0x46]:          movi #0, ebx   
72 [0x48]:          loadval ecx   
73 [0x49]:          test ecx, ebx   
74 [0x4a]:          jne 84   
75 [0x4b]: line: 53 istore 1   
77 [0x4d]:          movg @4 // @std.io.task#__srt_global   
78 [0x4e]:          movn #1   
80 [0x50]:          loadval ebx   
81 [0x51]:          movi #0, adx   
83 [0x53]:          rmov adx, ebx   
84 [0x54]:          nop   
85 [0x55]: line: 55 movg @4 // @std.io.task#__srt_global   
86 [0x56]:          movn #2   
88 [0x58]:          movi #0, adx   
90 [0x5a]:          iaload ebx, adx   
91 [0x5b]:          rstore ebx   
92 [0x5c]:          movi #0, ebx   
94 [0x5e]:          loadval ecx   
95 [0x5f]:          test ecx, ebx   
96 [0x60]:          jne 106   
97 [0x61]: line: 56 istore 1   
99 [0x63]:          movg @4 // @std.io.task#__srt_global   
100 [0x64]:          movn #2   
102 [0x66]:          loadval ebx   
103 [0x67]:          movi #0, adx   
105 [0x69]:          rmov adx, ebx   
106 [0x6a]:          nop   
107 [0x6b]: line: 57 ipushl #0   
108 [0x6c]:          movg @4 // @std.io.task#__srt_global   
109 [0x6d]:          movn #3   
111 [0x6f]:          loadval ebx   
112 [0x70]:          movi #0, adx   
114 [0x72]:          rmov adx, ebx   
115 [0x73]:          jmp @122   
116 [0x74]: line: 59 new_class @0 // std#__srt_global   
117 [0x75]:          skip @0 // pc = 117   
118 [0x76]:          dup    
119 [0x77]:          newstr @47 // cannot have less than 2 max threads   
120 [0x78]:          call @3548 // <std#illegal_argument_exception.illegal_argument_exception>   
121 [0x79]:          throw    
122 [0x7a]:          nop   
123 [0x7b]:          movg @4 // @std.io.task#__srt_global   
124 [0x7c]:          movn #0   
126 [0x7e]:          _ulck   
127 [0x7f]:          ret   


function: std.io.task#__srt_global.get_thread_max[2057] params(0) in file: /usr/include/sharp//io//task//job_scheduler.sharp:64:4: note:  
		def get_thread_max() : var {
		   ^

0 [0x0]: line: 65 movg @4 // @std.io.task#__srt_global   
1 [0x1]:          movn #0   
3 [0x3]:          _lck    
4 [0x4]: line: 66 movg @4 // @std.io.task#__srt_global   
5 [0x5]:          movn #3   
7 [0x7]:          movi #0, adx   
9 [0x9]:          iaload ebx, adx   
10 [0xa]:          rstore ebx   
11 [0xb]:          movi #0, ebx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          jne 17   
16 [0x10]: line: 67 call @2055 // <std.io.task#__srt_global.calculate_max_threads>   
17 [0x11]:          nop   
18 [0x12]: line: 68 movg @4 // @std.io.task#__srt_global   
19 [0x13]:          movn #3   
21 [0x15]:          movi #0, adx   
23 [0x17]:          iaload ebx, adx   
24 [0x18]:          return_val ebx   
25 [0x19]:          movg @4 // @std.io.task#__srt_global   
26 [0x1a]:          movn #0   
28 [0x1c]:          _ulck   
29 [0x1d]:          ret   
30 [0x1e]:          movg @4 // @std.io.task#__srt_global   
31 [0x1f]:          movn #0   
33 [0x21]:          _ulck   


function: std.io.task#__srt_global.scheduler_main[2058] params(1) in file: /usr/include/sharp//io//task//job_scheduler.sharp:72:12: note:  
		private def scheduler_main(args : object[]) : var
		           ^

0 [0x0]: line: 74 istorel 36000, fp+1   
2 [0x2]: line: 75 movg @4 // @std.io.task#__srt_global   
3 [0x3]: line: 76 movn #0   
5 [0x5]:          movn #0   
7 [0x7]:          smovr_3 fp+2   
8 [0x8]: line: 77 movi #1, ebx   
10 [0xa]:          movr cmt, ebx   
11 [0xb]:          jne 194   
12 [0xc]: line: 79 call @2186 // <std.io#thread.yield>   
13 [0xd]: line: 80 istorel 0, fp+3   
15 [0xf]:          ipushl #3   
16 [0x10]:          pushl 2   
17 [0x11]:          call @3894 // <std#synced_list<std.io.task#job>.size>   
18 [0x12]:          loadval ebx   
19 [0x13]:          loadval ecx   
20 [0x14]:          lt ecx, ebx   
21 [0x15]:          movr ebx, cmt   
22 [0x16]:          movr cmt, ebx   
23 [0x17]:          jne 173   
24 [0x18]: line: 81 pushl 2   
25 [0x19]:          ipushl #3   
26 [0x1a]:          call @3857 // <std#synced_list<std.io.task#job>.at>   
27 [0x1b]:          popobj2    
28 [0x1c]:          smovr_3 fp+4   
29 [0x1d]: line: 83 movl 4   
30 [0x1e]:          movn #12   
32 [0x20]:          movi #0, adx   
34 [0x22]:          iaload ebx, adx   
35 [0x23]:          rstore ebx   
36 [0x24]:          movi #0, ebx   
38 [0x26]:          loadval ecx   
39 [0x27]:          tne ecx, ebx   
40 [0x28]:          jne 85   
41 [0x29]: line: 84 call @3530 // <std#time.mills_time>   
42 [0x2a]:          loadval ebx   
43 [0x2b]:          rstore ebx   
44 [0x2c]:          movl 4   
45 [0x2d]:          movn #12   
47 [0x2f]:          movi #0, adx   
49 [0x31]:          iaload ebx, adx   
50 [0x32]:          loadval ecx   
51 [0x33]:          gte ecx, ebx   
52 [0x34]:          movr ebx, cmt   
53 [0x35]:          movr cmt, ebx   
54 [0x36]:          jne 83   
55 [0x37]: line: 85 movi #0, ebx   
57 [0x39]:          movl 4   
58 [0x3a]:          movn #12   
60 [0x3c]:          movi #0, adx   
62 [0x3e]:          rmov adx, ebx   
63 [0x3f]: line: 86 pushl 4   
64 [0x40]:          call @2062 // <std.io.task#__srt_global.execute_job>   
65 [0x41]:          ipopl 5   
66 [0x42]: line: 88 loadl ebx, fp+5   
67 [0x43]:          skne ebx // pc = 75   
68 [0x44]:          movl 4   
69 [0x45]:          movn #8   
71 [0x47]:          movi #0, adx   
73 [0x49]:          iaload ebx, adx   
74 [0x4a]:          not ebx, ebx   
75 [0x4b]:          movr cmt, ebx   
76 [0x4c]:          jne 82   
77 [0x4d]: line: 89 pushl 2   
78 [0x4e]:          pushl 4   
79 [0x4f]:          istore 4100   
81 [0x51]:          call @3898 // <std#synced_list<std.io.task#job>.remove>   
82 [0x52]:          nop   
83 [0x53]:          nop   
84 [0x54]:          jmp @169   
85 [0x55]:          movl 4   
86 [0x56]:          movn #8   
88 [0x58]:          movi #0, adx   
90 [0x5a]:          iaload ebx, adx   
91 [0x5b]:          movr cmt, ebx   
92 [0x5c]:          jne 158   
93 [0x5d]: line: 93 movl 4   
94 [0x5e]:          movn #4   
96 [0x60]:          pushobj   
97 [0x61]:          pushnull    
98 [0x62]:          itest ebx   
99 [0x63]:          movr cmt, ebx   
100 [0x64]:          jne 104   
101 [0x65]: line: 94 pushl 4   
102 [0x66]:          call @2062 // <std.io.task#__srt_global.execute_job>   
103 [0x67]:          pop   
104 [0x68]:          nop   
105 [0x69]: line: 97 movl 4   
106 [0x6a]:          movn #18   
108 [0x6c]:          pushobj   
109 [0x6d]:          movg @10 // @std.io.task#job_state   
110 [0x6e]:          movn #1   
112 [0x70]:          pushobj   
113 [0x71]:          call @2300 // <std#_enum_.operator==>   
114 [0x72]:          loadval ebx   
115 [0x73]:          skne ebx // pc = 137   
116 [0x74]:          call @3530 // <std#time.mills_time>   
117 [0x75]:          loadval ebx   
118 [0x76]:          rstore ebx   
119 [0x77]:          movl 4   
120 [0x78]:          movn #10   
122 [0x7a]:          movi #0, adx   
124 [0x7c]:          iaload ebx, adx   
125 [0x7d]:          rstore ebx   
126 [0x7e]:          movl 4   
127 [0x7f]:          movn #9   
129 [0x81]:          movi #0, adx   
131 [0x83]:          iaload ebx, adx   
132 [0x84]:          loadval ecx   
133 [0x85]:          add ecx, ebx -> ebx   
134 [0x86]:          loadval ecx   
135 [0x87]:          gte ecx, ebx   
136 [0x88]:          movr ebx, cmt   
137 [0x89]:          movr cmt, ebx   
138 [0x8a]:          jne 156   
139 [0x8b]: line: 98 movl 4   
140 [0x8c]:          movn #13   
142 [0x8e]:          pushobj   
143 [0x8f]:          pushnull    
144 [0x90]:          itest ebx   
145 [0x91]:          movr cmt, ebx   
146 [0x92]:          jne 148   
147 [0x93]:          jmp @139   
148 [0x94]: line: 99 pushl 4   
149 [0x95]:          call @2067 // <std.io.task#job.cancel>   
150 [0x96]: line: 100 movg @4 // @std.io.task#__srt_global   
151 [0x97]:           movn #0   
153 [0x99]:           pushobj   
154 [0x9a]:           pushl 4   
155 [0x9b]:           call @2038 // <std.io.task#job_master.cleanup_job>   
156 [0x9c]:           nop   
157 [0x9d]:           jmp @169   
158 [0x9e]: line: 103 pushl 4   
159 [0x9f]:           call @2062 // <std.io.task#__srt_global.execute_job>   
160 [0xa0]:           loadval ebx   
161 [0xa1]:           movr cmt, ebx   
162 [0xa2]:           jne 168   
163 [0xa3]: line: 104 pushl 2   
164 [0xa4]:           pushl 4   
165 [0xa5]:           istore 4101   
167 [0xa7]:           call @3898 // <std#synced_list<std.io.task#job>.remove>   
168 [0xa8]:           nop   
169 [0xa9]:           nop   
170 [0xaa]:           iaddl 1, fp@3   
172 [0xac]:           jmp @15   
173 [0xad]: line: 109 loadl ebx, fp+1   
174 [0xae]:           movr egx, ebx   
175 [0xaf]:           dec ebx   
176 [0xb0]:           smovr_2 ebx, fp+1   
177 [0xb1]:           movr ebx, egx   
178 [0xb2]:           rstore ebx   
179 [0xb3]:           movi #0, ebx   
181 [0xb5]:           loadval ecx   
182 [0xb6]:           lte ecx, ebx   
183 [0xb7]:           movr ebx, cmt   
184 [0xb8]:           movr cmt, ebx   
185 [0xb9]:           jne 189   
186 [0xba]: line: 110 istorel 36000, fp+1   
188 [0xbc]: line: 111 call @2060 // <std.io.task#__srt_global.kill_threads>   
189 [0xbd]:           nop   
190 [0xbe]: line: 114 istore 5   
192 [0xc0]:           call @2182 // <std.io#thread.sleep>   
193 [0xc1]:           jmp @8   
194 [0xc2]: line: 116 istorel 0, fp+0   
196 [0xc4]:           ret   


function: std.io.task#__srt_global.get_host[2059] params(1) in file: /usr/include/sharp//io//task//job_scheduler.sharp:119:12: note:  
		private def get_host(long_running : var) : thread {
		           ^

0 [0x0]: line: 120 movl 1   
1 [0x1]:           del   
2 [0x2]: line: 121 loadl ebx, fp+0   
3 [0x3]:           movr cmt, ebx   
4 [0x4]:           jne 12   
5 [0x5]: line: 122 movg @4 // @std.io.task#__srt_global   
6 [0x6]:           movn #0   
8 [0x8]:           movn #2   
10 [0xa]:           smovr_3 fp+1   
11 [0xb]:           jmp @18   
12 [0xc]: line: 124 movg @4 // @std.io.task#__srt_global   
13 [0xd]:           movn #0   
15 [0xf]:           movn #3   
17 [0x11]:           smovr_3 fp+1   
18 [0x12]:           nop   
19 [0x13]: line: 127 pushl 1   
20 [0x14]:           istore 4102   
22 [0x16]:           call @2136 // <std.io#thread_group.find>   
23 [0x17]:           popobj2    
24 [0x18]:           smovr_3 fp+2   
25 [0x19]: line: 135 movl 2   
26 [0x1a]:           checknull   
27 [0x1b]:           movr cmt, ebx   
28 [0x1c]:           jne 166   
29 [0x1d]: line: 136 loadl ebx, fp+0   
30 [0x1e]:           movr cmt, ebx   
31 [0x1f]:           jne 99   
32 [0x20]: line: 137 movg @4 // @std.io.task#__srt_global   
33 [0x21]:           movn #2   
35 [0x23]:           movi #0, adx   
37 [0x25]:           iaload ebx, adx   
38 [0x26]:           rstore ebx   
39 [0x27]:           movi #0, ebx   
41 [0x29]:           loadval ecx   
42 [0x2a]:           gt ecx, ebx   
43 [0x2b]:           movr ebx, cmt   
44 [0x2c]:           movr cmt, ebx   
45 [0x2d]:           jne 97   
46 [0x2e]: line: 138 movg @4 // @std.io.task#__srt_global   
47 [0x2f]:           movn #2   
49 [0x31]:           movi #0, adx   
51 [0x33]:           iaload ebx, adx   
52 [0x34]:           movr egx, ebx   
53 [0x35]:           dec ebx   
54 [0x36]:           movi #0, adx   
56 [0x38]:           rmov adx, ebx   
57 [0x39]: line: 139 new_class @0 // std#__srt_global   
58 [0x3a]:           mov32 adx, adx   
59 [0x3b]:           dup    
60 [0x3c]:           call @2063 // <std.io.task#job_controller.job_controller>   
61 [0x3d]:           popobj2    
62 [0x3e]:           smovr_3 fp+3   
63 [0x3f]: line: 140 new_class @0 // std#__srt_global   
64 [0x40]:           div adx, adx -> adx   
65 [0x41]:           dup    
66 [0x42]:           new_class @0 // std#__srt_global   
67 [0x43]:           ret   
68 [0x44]:           dup    
69 [0x45]:           newstr @48 // long_term_worker_thread#   
70 [0x46]:           call @1959 // <std#string.string>   
71 [0x47]:           pushl 1   
72 [0x48]:           call @2131 // <std.io#thread_group.size>   
73 [0x49]:           loadval ebx   
74 [0x4a]:           rstore ebx   
75 [0x4b]:           movi #1, ebx   
77 [0x4d]:           loadval ecx   
78 [0x4e]:           add ecx, ebx -> ebx   
79 [0x4f]:           rstore ebx   
80 [0x50]:           call @1991 // <std#string.operator+>   
81 [0x51]:           istore 2077   
83 [0x53]:           pushl 1   
84 [0x54]:           call @2172 // <std.io#thread.thread>   
85 [0x55]:           popobj2    
86 [0x56]:           smovr_3 fp+2   
87 [0x57]: line: 141 movg @4 // @std.io.task#__srt_global   
88 [0x58]:           movn #0   
90 [0x5a]:           movn #1   
92 [0x5c]:           pushobj   
93 [0x5d]:           pushl 2   
94 [0x5e]:           pushl 3   
95 [0x5f]:           call @3810 // <std#hashtable<std.io#thread,std.io.task#job_controller>.put>   
96 [0x60]:           pop   
97 [0x61]:           nop   
98 [0x62]:           jmp @165   
99 [0x63]: line: 144 movg @4 // @std.io.task#__srt_global   
100 [0x64]:           movn #1   
102 [0x66]:           movi #0, adx   
104 [0x68]:           iaload ebx, adx   
105 [0x69]:           rstore ebx   
106 [0x6a]:           movi #0, ebx   
108 [0x6c]:           loadval ecx   
109 [0x6d]:           gt ecx, ebx   
110 [0x6e]:           movr ebx, cmt   
111 [0x6f]:           movr cmt, ebx   
112 [0x70]:           jne 164   
113 [0x71]: line: 145 movg @4 // @std.io.task#__srt_global   
114 [0x72]:           movn #1   
116 [0x74]:           movi #0, adx   
118 [0x76]:           iaload ebx, adx   
119 [0x77]:           movr egx, ebx   
120 [0x78]:           dec ebx   
121 [0x79]:           movi #0, adx   
123 [0x7b]:           rmov adx, ebx   
124 [0x7c]: line: 146 new_class @0 // std#__srt_global   
125 [0x7d]:           mov32 adx, adx   
126 [0x7e]:           dup    
127 [0x7f]:           call @2063 // <std.io.task#job_controller.job_controller>   
128 [0x80]:           popobj2    
129 [0x81]:           smovr_3 fp+4   
130 [0x82]: line: 147 new_class @0 // std#__srt_global   
131 [0x83]:           div adx, adx -> adx   
132 [0x84]:           dup    
133 [0x85]:           new_class @0 // std#__srt_global   
134 [0x86]:           ret   
135 [0x87]:           dup    
136 [0x88]:           newstr @49 // worker_thread#   
137 [0x89]:           call @1959 // <std#string.string>   
138 [0x8a]:           pushl 1   
139 [0x8b]:           call @2131 // <std.io#thread_group.size>   
140 [0x8c]:           loadval ebx   
141 [0x8d]:           rstore ebx   
142 [0x8e]:           movi #1, ebx   
144 [0x90]:           loadval ecx   
145 [0x91]:           add ecx, ebx -> ebx   
146 [0x92]:           rstore ebx   
147 [0x93]:           call @1991 // <std#string.operator+>   
148 [0x94]:           istore 2077   
150 [0x96]:           pushl 1   
151 [0x97]:           call @2172 // <std.io#thread.thread>   
152 [0x98]:           popobj2    
153 [0x99]:           smovr_3 fp+2   
154 [0x9a]: line: 148 movg @4 // @std.io.task#__srt_global   
155 [0x9b]:           movn #0   
157 [0x9d]:           movn #1   
159 [0x9f]:           pushobj   
160 [0xa0]:           pushl 2   
161 [0xa1]:           pushl 4   
162 [0xa2]:           call @3810 // <std#hashtable<std.io#thread,std.io.task#job_controller>.put>   
163 [0xa3]:           pop   
164 [0xa4]:           nop   
165 [0xa5]:           nop   
166 [0xa6]:           nop   
167 [0xa7]: line: 153 movl 2   
168 [0xa8]:           returnobj   
169 [0xa9]:           ret   


function: std.io.task#__srt_global.kill_threads[2060] params(0) in file: /usr/include/sharp//io//task//job_scheduler.sharp:157:12: note:  
		private def kill_threads() {
		           ^

0 [0x0]: line: 158 movg @4 // @std.io.task#__srt_global   
1 [0x1]:           movn #0   
3 [0x3]:           movn #2   
5 [0x5]:           smovr_3 fp+0   
6 [0x6]: line: 160 call @3530 // <std#time.mills_time>   
7 [0x7]:           movg @4 // @std.io.task#__srt_global   
8 [0x8]:           movn #5   
10 [0xa]:           loadval ebx   
11 [0xb]:           movi #0, adx   
13 [0xd]:           rmov adx, ebx   
14 [0xe]: line: 161 pushl 0   
15 [0xf]:           istore 4103   
17 [0x11]:           call @2136 // <std.io#thread_group.find>   
18 [0x12]:           popobj2    
19 [0x13]:           smovr_3 fp+1   
20 [0x14]: line: 170 movl 1   
21 [0x15]:           checknull   
22 [0x16]:           not ebx, ebx   
23 [0x17]:           movr cmt, ebx   
24 [0x18]:           jne 28   
25 [0x19]: line: 171 pushl 1   
26 [0x1a]:           call @2180 // <std.io#thread.interrupt>   
27 [0x1b]:           pop   
28 [0x1c]:           nop   
29 [0x1d]: line: 174 movg @4 // @std.io.task#__srt_global   
30 [0x1e]:           movn #0   
32 [0x20]:           movn #3   
34 [0x22]:           smovr_3 fp+0   
35 [0x23]: line: 176 pushl 0   
36 [0x24]:           istore 4104   
38 [0x26]:           call @2136 // <std.io#thread_group.find>   
39 [0x27]:           popobj2    
40 [0x28]:           smovr_3 fp+1   
41 [0x29]: line: 183 movl 1   
42 [0x2a]:           checknull   
43 [0x2b]:           not ebx, ebx   
44 [0x2c]:           movr cmt, ebx   
45 [0x2d]:           jne 49   
46 [0x2e]: line: 184 pushl 1   
47 [0x2f]:           call @2180 // <std.io#thread.interrupt>   
48 [0x30]:           pop   
49 [0x31]:           nop   
50 [0x32]:           ret   


function: std.io.task#__srt_global.execute_synchronous[2061] params(1) in file: /usr/include/sharp//io//task//job_scheduler.sharp:188:14: note:  
		protected def execute_synchronous(scheduled_job : job) {
		             ^

0 [0x0]: line: 189 movl 0   
1 [0x1]:           movn #12   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #0, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           tne ecx, ebx   
11 [0xb]:           jne 35   
12 [0xc]: line: 190 movl 0   
13 [0xd]:           movn #12   
15 [0xf]:           movi #0, adx   
17 [0x11]:           iaload ebx, adx   
18 [0x12]:           rstore ebx   
19 [0x13]:           call @3530 // <std#time.mills_time>   
20 [0x14]:           loadval ebx   
21 [0x15]:           loadval ecx   
22 [0x16]:           sub ecx, ebx -> ebx   
23 [0x17]:           smovr_2 ebx, fp+1   
24 [0x18]: line: 191 ipushl #1   
25 [0x19]:           movi #0, ebx   
27 [0x1b]:           loadval ecx   
28 [0x1c]:           gt ecx, ebx   
29 [0x1d]:           movr ebx, cmt   
30 [0x1e]:           movr cmt, ebx   
31 [0x1f]:           jne 34   
32 [0x20]:           ipushl #1   
33 [0x21]:           call @2182 // <std.io#thread.sleep>   
34 [0x22]:           nop   
35 [0x23]:           nop   
36 [0x24]: line: 193 pushl 0   
37 [0x25]:           call @2078 // <std.io.task#job.execute>   
38 [0x26]:           ret   


function: std.io.task#__srt_global.execute_job[2062] params(1) in file: /usr/include/sharp//io//task//job_scheduler.sharp:196:14: note:  
		protected def execute_job(scheduled_job : job) : var {
		             ^

0 [0x0]: line: 197 movl 0   
1 [0x1]:           movn #17   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           call @2059 // <std.io.task#__srt_global.get_host>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+1   
10 [0xa]: line: 199 movl 1   
11 [0xb]:           checknull   
12 [0xc]:           not ebx, ebx   
13 [0xd]:           movr cmt, ebx   
14 [0xe]:           jne 55   
15 [0xf]: line: 200 pushl 1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #4   
19 [0x13]:           popobj   
20 [0x14]: line: 201 movg @4 // @std.io.task#__srt_global   
21 [0x15]:           movn #0   
23 [0x17]:           pushobj   
24 [0x18]:           pushl 1   
25 [0x19]:           call @2037 // <std.io.task#job_master.get_host_controller>   
26 [0x1a]:           movl 0   
27 [0x1b]:           movn #19   
29 [0x1d]:           popobj   
30 [0x1e]: line: 202 pushl 0   
31 [0x1f]:           call @2066 // <std.io.task#job.execute_async>   
32 [0x20]:           loadval ebx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movi #0, ebx   
36 [0x24]:           loadval ecx   
37 [0x25]:           tne ecx, ebx   
38 [0x26]:           jne 50   
39 [0x27]: line: 203 movl 0   
40 [0x28]:           movn #4   
42 [0x2a]:           del   
43 [0x2b]: line: 204 movl 0   
44 [0x2c]:           movn #19   
46 [0x2e]:           del   
47 [0x2f]: line: 205 istorel 0, fp+0   
49 [0x31]:           ret   
50 [0x32]:           nop   
51 [0x33]: line: 208 istorel 1, fp+0   
53 [0x35]:           ret   
54 [0x36]:           jmp @58   
55 [0x37]: line: 209 istorel 0, fp+0   
57 [0x39]:           ret   
58 [0x3a]:           nop   


constructor: std.io.task#job_controller.job_controller[2063] params(0) in file: /usr/include/sharp//io//task//job_controller.sharp:5:6: note:  
		class job_controller {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std.io.task#job.job[2064] params(0) in file: /usr/include/sharp//io//task//job.sharp:7:13: note:  
			private job() {}
		            ^

0 [0x0]:         movi #0, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #8   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #9   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #10   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]:         movi #0, ebx   
26 [0x1a]:         movl 0   
27 [0x1b]:         movn #11   
29 [0x1d]:         movi #0, adx   
31 [0x1f]:         rmov adx, ebx   
32 [0x20]:         movi #0, ebx   
34 [0x22]:         movl 0   
35 [0x23]:         movn #12   
37 [0x25]:         movi #0, adx   
39 [0x27]:         rmov adx, ebx   
40 [0x28]:         movi #0, ebx   
42 [0x2a]:         movl 0   
43 [0x2b]:         movn #14   
45 [0x2d]:         movi #0, adx   
47 [0x2f]:         rmov adx, ebx   
48 [0x30]:         movi #0, ebx   
50 [0x32]:         movl 0   
51 [0x33]:         movn #15   
53 [0x35]:         movi #0, adx   
55 [0x37]:         rmov adx, ebx   
56 [0x38]:         movi #0, ebx   
58 [0x3a]:         movl 0   
59 [0x3b]:         movn #16   
61 [0x3d]:         movi #0, adx   
63 [0x3f]:         rmov adx, ebx   
64 [0x40]:         movi #0, ebx   
66 [0x42]:         movl 0   
67 [0x43]:         movn #17   
69 [0x45]:         movi #0, adx   
71 [0x47]:         rmov adx, ebx   
72 [0x48]:         movg @10 // @std.io.task#job_state   
73 [0x49]:         movn #0   
75 [0x4b]:         pushobj   
76 [0x4c]:         movl 0   
77 [0x4d]:         movn #18   
79 [0x4f]:         popobj   
80 [0x50]:         new_class @0 // std#__srt_global   
81 [0x51]:         ? (154)   
82 [0x52]:         dup    
83 [0x53]:         call @3906 // <std#list<std.io#thread>.list>   
84 [0x54]:         movl 0   
85 [0x55]:         movn #20   
87 [0x57]:         popobj   
88 [0x58]:         pushl 0   
89 [0x59]:         ret   


constructor: std.io.task#job.job[2065] params(1) in file: /usr/include/sharp//io//task//job.sharp:9:5: note:  
			job(name : string) {
		    ^

0 [0x0]:         movi #0, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #8   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #9   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #10   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]:         movi #0, ebx   
26 [0x1a]:         movl 0   
27 [0x1b]:         movn #11   
29 [0x1d]:         movi #0, adx   
31 [0x1f]:         rmov adx, ebx   
32 [0x20]:         movi #0, ebx   
34 [0x22]:         movl 0   
35 [0x23]:         movn #12   
37 [0x25]:         movi #0, adx   
39 [0x27]:         rmov adx, ebx   
40 [0x28]:         movi #0, ebx   
42 [0x2a]:         movl 0   
43 [0x2b]:         movn #14   
45 [0x2d]:         movi #0, adx   
47 [0x2f]:         rmov adx, ebx   
48 [0x30]:         movi #0, ebx   
50 [0x32]:         movl 0   
51 [0x33]:         movn #15   
53 [0x35]:         movi #0, adx   
55 [0x37]:         rmov adx, ebx   
56 [0x38]:         movi #0, ebx   
58 [0x3a]:         movl 0   
59 [0x3b]:         movn #16   
61 [0x3d]:         movi #0, adx   
63 [0x3f]:         rmov adx, ebx   
64 [0x40]:         movi #0, ebx   
66 [0x42]:         movl 0   
67 [0x43]:         movn #17   
69 [0x45]:         movi #0, adx   
71 [0x47]:         rmov adx, ebx   
72 [0x48]:         movg @10 // @std.io.task#job_state   
73 [0x49]:         movn #0   
75 [0x4b]:         pushobj   
76 [0x4c]:         movl 0   
77 [0x4d]:         movn #18   
79 [0x4f]:         popobj   
80 [0x50]:         new_class @0 // std#__srt_global   
81 [0x51]:         ? (154)   
82 [0x52]:         dup    
83 [0x53]:         call @3906 // <std#list<std.io#thread>.list>   
84 [0x54]:         movl 0   
85 [0x55]:         movn #20   
87 [0x57]:         popobj   
88 [0x58]:         pushl 0   
89 [0x59]: line: 10 pushl 1   
90 [0x5a]:          movl 0   
91 [0x5b]:          movn #5   
93 [0x5d]:          popobj   
94 [0x5e]: line: 11 movg @4 // @std.io.task#__srt_global   
95 [0x5f]:          movn #0   
97 [0x61]:          _lck    
98 [0x62]: line: 12 movg @11 // @std.io.task#job   
99 [0x63]:          movn #0   
101 [0x65]:          movi #0, adx   
103 [0x67]:          iaload ebx, adx   
104 [0x68]:          movr egx, ebx   
105 [0x69]:          inc ebx   
106 [0x6a]:          movi #0, adx   
108 [0x6c]:          rmov adx, ebx   
109 [0x6d]:          rstore egx   
110 [0x6e]:          movl 0   
111 [0x6f]:          movn #15   
113 [0x71]:          loadval ebx   
114 [0x72]:          movi #0, adx   
116 [0x74]:          rmov adx, ebx   
117 [0x75]:          movg @4 // @std.io.task#__srt_global   
118 [0x76]:          movn #0   
120 [0x78]:          _ulck   
121 [0x79]:          ret   


function: std.io.task#job.execute_async[2066] params(0) in file: /usr/include/sharp//io//task//job.sharp:16:15: note:  
			protected def execute_async() : var {
		              ^

0 [0x0]: line: 17 movl 0   
1 [0x1]:          movn #18   
3 [0x3]:          pushobj   
4 [0x4]:          movg @10 // @std.io.task#job_state   
5 [0x5]:          movn #0   
7 [0x7]:          pushobj   
8 [0x8]:          call @2300 // <std#_enum_.operator==>   
9 [0x9]:          loadval ebx   
10 [0xa]:          movr cmt, ebx   
11 [0xb]:          jne 82   
12 [0xc]: line: 18 pushl 0   
13 [0xd]:          movl 0   
14 [0xe]:          movn #19   
16 [0x10]:          movn #0   
18 [0x12]:          popobj   
19 [0x13]: line: 19 call @3530 // <std#time.mills_time>   
20 [0x14]:          movl 0   
21 [0x15]:          movn #19   
23 [0x17]:          movn #1   
25 [0x19]:          loadval ebx   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          rmov adx, ebx   
29 [0x1d]: line: 21 movl 0   
30 [0x1e]:          movn #4   
32 [0x20]:          pushobj   
33 [0x21]:          call @2199 // <std.io#thread.is_active>   
34 [0x22]:          loadval ebx   
35 [0x23]:          not ebx, ebx   
36 [0x24]:          movr cmt, ebx   
37 [0x25]:          jne 72   
38 [0x26]: line: 22 movl 0   
39 [0x27]:          movn #4   
41 [0x29]:          pushobj   
42 [0x2a]:          movi #1, ebx   
44 [0x2c]:          newobj_arry ebx   
45 [0x2d]:          movl 0   
46 [0x2e]:          movn #19   
48 [0x30]:          pushobj   
49 [0x31]:          movsl #-1   
50 [0x32]:          movn #0   
52 [0x34]:          popobj   
53 [0x35]:          call @2174 // <std.io#thread.start>   
54 [0x36]:          movg @17 // @std.io#thread_result   
55 [0x37]:          movn #0   
57 [0x39]:          pushobj   
58 [0x3a]:          call @2298 // <std#_enum_.operator!=>   
59 [0x3b]:          loadval ebx   
60 [0x3c]:          movr cmt, ebx   
61 [0x3d]:          jne 71   
62 [0x3e]: line: 24 movl 0   
63 [0x3f]:          movn #19   
65 [0x41]:          movn #0   
67 [0x43]:          del   
68 [0x44]: line: 25 istorel 2, fp+0   
70 [0x46]:          ret   
71 [0x47]:          nop   
72 [0x48]:          nop   
73 [0x49]: line: 29 movl 0   
74 [0x4a]:          movn #19   
76 [0x4c]:          pushobj   
77 [0x4d]:          call @1909 // <std#_object_.notify>   
78 [0x4e]: line: 30 istorel 0, fp+0   
80 [0x50]:          ret   
81 [0x51]:          jmp @97   
82 [0x52]:          movl 0   
83 [0x53]:          movn #18   
85 [0x55]:          pushobj   
86 [0x56]:          movg @10 // @std.io.task#job_state   
87 [0x57]:          movn #1   
89 [0x59]:          pushobj   
90 [0x5a]:          call @2300 // <std#_enum_.operator==>   
91 [0x5b]:          loadval ebx   
92 [0x5c]:          movr cmt, ebx   
93 [0x5d]:          jne 97   
94 [0x5e]: line: 32 istorel 1, fp+0   
96 [0x60]:          ret   
97 [0x61]:          nop   
98 [0x62]: line: 35 istorel 2, fp+0   
100 [0x64]:          ret   


function: std.io.task#job.cancel[2067] params(0) in file: /usr/include/sharp//io//task//job.sharp:38:12: note:  
			public def cancel() {
		           ^

0 [0x0]: line: 39 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 40 movl 0   
3 [0x3]:          movn #18   
5 [0x5]:          pushobj   
6 [0x6]:          movg @10 // @std.io.task#job_state   
7 [0x7]:          movn #1   
9 [0x9]:          pushobj   
10 [0xa]:          call @2300 // <std#_enum_.operator==>   
11 [0xb]:          loadval ebx   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 50   
14 [0xe]: line: 41 movg @10 // @std.io.task#job_state   
15 [0xf]:          movn #3   
17 [0x11]:          pushobj   
18 [0x12]:          movl 0   
19 [0x13]:          movn #18   
21 [0x15]:          popobj   
22 [0x16]: line: 43 call @2181 // <std.io#thread.current>   
23 [0x17]:          movl 0   
24 [0x18]:          movn #4   
26 [0x1a]:          pushobj   
27 [0x1b]:          itest ebx   
28 [0x1c]:          not ebx, ebx   
29 [0x1d]:          movr cmt, ebx   
30 [0x1e]:          jne 44   
31 [0x1f]: line: 44 movl 0   
32 [0x20]:          movn #4   
34 [0x22]:          pushobj   
35 [0x23]:          call @2180 // <std.io#thread.interrupt>   
36 [0x24]:          pop   
37 [0x25]: line: 45 movg @4 // @std.io.task#__srt_global   
38 [0x26]:          movn #0   
40 [0x28]:          pushobj   
41 [0x29]:          pushl 0   
42 [0x2a]:          call @2038 // <std.io.task#job_master.cleanup_job>   
43 [0x2b]:          jmp @49   
44 [0x2c]: line: 48 new_class @0 // std#__srt_global   
45 [0x2d]:          cast adx   
46 [0x2e]:          dup    
47 [0x2f]:          call @2031 // <std.io.task#cancellation_exception.cancellation_exception>   
48 [0x30]:          throw    
49 [0x31]:          nop   
50 [0x32]:          nop   
51 [0x33]:          movl 0   
52 [0x34]:          _ulck   
53 [0x35]:          ret   


function: std.io.task#job.cancel_future[2068] params(0) in file: /usr/include/sharp//io//task//job.sharp:54:15: note:  
			protected def cancel_future() {
		              ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 56 movl 0   
3 [0x3]:          movn #14   
5 [0x5]:          movi #0, adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          movr cmt, ebx   
9 [0x9]:          jne 32   
10 [0xa]: line: 57 movl 0   
11 [0xb]:          movn #13   
13 [0xd]:          smovr_3 fp+1   
14 [0xe]: line: 58 movl 1   
15 [0xf]:          checknull   
16 [0x10]:          not ebx, ebx   
17 [0x11]:          movr cmt, ebx   
18 [0x12]:          jne 32   
19 [0x13]: line: 59 pushl 1   
20 [0x14]:          call @2067 // <std.io.task#job.cancel>   
21 [0x15]: line: 60 movg @4 // @std.io.task#__srt_global   
22 [0x16]:          movn #0   
24 [0x18]:          pushobj   
25 [0x19]:          pushl 1   
26 [0x1a]:          call @2038 // <std.io.task#job_master.cleanup_job>   
27 [0x1b]: line: 62 movl 1   
28 [0x1c]:          movn #13   
30 [0x1e]:          smovr_3 fp+1   
31 [0x1f]:          jmp @14   
32 [0x20]:          nop   
33 [0x21]:          movl 0   
34 [0x22]:          _ulck   
35 [0x23]:          ret   


function: std.io.task#job.join[2069] params(0) in file: /usr/include/sharp//io//task//job.sharp:68:12: note:  
			public def join() {
		           ^

0 [0x0]: line: 69 movl 0   
1 [0x1]:          movn #16   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          skpe ebx // pc = 28   
7 [0x7]:          movl 0   
8 [0x8]:          movn #18   
10 [0xa]:          pushobj   
11 [0xb]:          movg @10 // @std.io.task#job_state   
12 [0xc]:          movn #3   
14 [0xe]:          pushobj   
15 [0xf]:          call @2300 // <std#_enum_.operator==>   
16 [0x10]:          loadval ebx   
17 [0x11]:          skpe ebx // pc = 28   
18 [0x12]:          movl 0   
19 [0x13]:          movn #18   
21 [0x15]:          pushobj   
22 [0x16]:          movg @10 // @std.io.task#job_state   
23 [0x17]:          movn #2   
25 [0x19]:          pushobj   
26 [0x1a]:          call @2300 // <std#_enum_.operator==>   
27 [0x1b]:          loadval ebx   
28 [0x1c]:          movr cmt, ebx   
29 [0x1d]:          jne 31   
30 [0x1e]: line: 72 ret   
31 [0x1f]:          nop   
32 [0x20]: line: 74 istorel 0, fp+1   
34 [0x22]: line: 75 movl 0   
35 [0x23]:          _lck    
36 [0x24]: line: 76 pushl 0   
37 [0x25]:          call @2079 // <std.io.task#job.is_finished>   
38 [0x26]:          loadval ebx   
39 [0x27]:          not ebx, ebx   
40 [0x28]:          movr cmt, ebx   
41 [0x29]:          jne 50   
42 [0x2a]: line: 77 istorel 1, fp+1   
44 [0x2c]: line: 78 movl 0   
45 [0x2d]:          movn #20   
47 [0x2f]:          pushobj   
48 [0x30]:          call @2181 // <std.io#thread.current>   
49 [0x31]:          call @3920 // <std#list<std.io#thread>.add>   
50 [0x32]:          nop   
51 [0x33]:          movl 0   
52 [0x34]:          _ulck   
53 [0x35]: line: 82 loadl ebx, fp+1   
54 [0x36]:          movr cmt, ebx   
55 [0x37]:          jne 58   
56 [0x38]: line: 83 call @2181 // <std.io#thread.current>   
57 [0x39]:          call @1908 // <std#_object_.wait>   
58 [0x3a]:          nop   
59 [0x3b]:          ret   


function: std.io.task#job.get_state[2070] params(0) in file: /usr/include/sharp//io//task//job.sharp:87:12: note:  
			public def get_state() := state;
		           ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          movn #18   
3 [0x3]:          returnobj   
4 [0x4]:          ret   


function: std.io.task#job.get_name[2071] params(0) in file: /usr/include/sharp//io//task//job.sharp:88:12: note:  
			public def get_name() := name;
		           ^

0 [0x0]: line: 88 movl 0   
1 [0x1]:          movn #5   
3 [0x3]:          returnobj   
4 [0x4]:          ret   


function: std.io.task#job.get_id[2072] params(0) in file: /usr/include/sharp//io//task//job.sharp:89:12: note:  
			public def get_id() := id;
		           ^

0 [0x0]: line: 89 movl 0   
1 [0x1]:          movn #15   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          return_val ebx   
7 [0x7]:          ret   


overload function: std.io.task#job.operator=[2073] params(1) in file: /usr/include/sharp//io//task//job.sharp:91:15: note:  
			protected def operator=(block: ()()) {
		              ^

0 [0x0]: line: 92 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]:          ret   


overload function: std.io.task#job.operator=[2074] params(1) in file: /usr/include/sharp//io//task//job.sharp:95:15: note:  
			protected def operator=(block: (args : object[])()) {
		              ^

0 [0x0]: line: 96 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #1   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]:          ret   


overload function: std.io.task#job.operator=[2075] params(1) in file: /usr/include/sharp//io//task//job.sharp:99:15: note:  
			protected def operator=(block: (deferred : object, args : object[])()) {
		              ^

0 [0x0]: line: 100 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #2   
4 [0x4]:           loadval ebx   
5 [0x5]:           movi #0, adx   
7 [0x7]:           rmov adx, ebx   
8 [0x8]:           ret   


overload function: std.io.task#job.operator=[2076] params(1) in file: /usr/include/sharp//io//task//job.sharp:103:15: note:  
			protected def operator=(block: (deferred : object)()) {
		              ^

0 [0x0]: line: 104 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #3   
4 [0x4]:           loadval ebx   
5 [0x5]:           movi #0, adx   
7 [0x7]:           rmov adx, ebx   
8 [0x8]:           ret   


function: std.io.task#job.job_main[2077] params(1) in file: /usr/include/sharp//io//task//job.sharp:107:22: note:  
			protected static def job_main(args : object[]) : var {
		                     ^

0 [0x0]: line: 108 pushl 0   
1 [0x1]:           movi #0, ebx   
3 [0x3]:           popobj2    
4 [0x4]:           movr adx, ebx   
5 [0x5]:           chklen adx   
6 [0x6]:           movnd adx   
7 [0x7]:           movi #9, cmt   
9 [0x9]:           cast cmt   
10 [0xa]:           smovr_3 fp+1   
11 [0xb]: line: 110 pushl 1   
12 [0xc]: line: 111 call @1908 // <std#_object_.wait>   
13 [0xd]: line: 113 movl 1   
14 [0xe]:           movn #0   
16 [0x10]:           pushobj   
17 [0x11]:           pushnull    
18 [0x12]:           itest ebx   
19 [0x13]:           not ebx, ebx   
20 [0x14]:           movr cmt, ebx   
21 [0x15]:           jne 105   
22 [0x16]: line: 114 movl 1   : try start: try block start
23 [0x17]: line: 115 movn #0   
25 [0x19]:           pushobj   
26 [0x1a]:           call @2078 // <std.io.task#job.execute>   
27 [0x1b]:           jmp @100   : try block end
28 [0x1c]: line: 117 movg @10 // @std.io.task#job_state   : catch(std.io.task#cancellation_exception)
29 [0x1d]:           movn #3   
31 [0x1f]:           pushobj   
32 [0x20]:           movl 1   
33 [0x21]:           movn #0   
35 [0x23]:           movn #18   
37 [0x25]:           popobj   
38 [0x26]: line: 118 movg @4 // @std.io.task#__srt_global   
39 [0x27]:           movn #0   
41 [0x29]:           pushobj   
42 [0x2a]:           movl 1   
43 [0x2b]:           movn #0   
45 [0x2d]:           pushobj   
46 [0x2e]:           call @2038 // <std.io.task#job_master.cleanup_job>   
47 [0x2f]:           jmp @100   
48 [0x30]: line: 120 movg @10 // @std.io.task#job_state   : catch(std#error)
49 [0x31]:           movn #3   
51 [0x33]:           pushobj   
52 [0x34]:           movl 1   
53 [0x35]:           movn #0   
55 [0x37]:           movn #18   
57 [0x39]:           popobj   
58 [0x3a]: line: 121 movg @4 // @std.io.task#__srt_global   
59 [0x3b]:           movn #0   
61 [0x3d]:           pushobj   
62 [0x3e]:           movl 1   
63 [0x3f]:           movn #0   
65 [0x41]:           pushobj   
66 [0x42]:           call @2038 // <std.io.task#job_master.cleanup_job>   
67 [0x43]: line: 122 movl 1   
68 [0x44]:           movn #0   
70 [0x46]:           del   
71 [0x47]: line: 123 pushl 2   
72 [0x48]:           throw    
73 [0x49]:           jmp @100   
74 [0x4a]: line: 125 movg @10 // @std.io.task#job_state   : catch(std#exception)
75 [0x4b]:           movn #3   
77 [0x4d]:           pushobj   
78 [0x4e]:           movl 1   
79 [0x4f]:           movn #0   
81 [0x51]:           movn #18   
83 [0x53]:           popobj   
84 [0x54]: line: 126 movg @4 // @std.io.task#__srt_global   
85 [0x55]:           movn #0   
87 [0x57]:           pushobj   
88 [0x58]:           movl 1   
89 [0x59]:           movn #0   
91 [0x5b]:           pushobj   
92 [0x5c]:           call @2038 // <std.io.task#job_master.cleanup_job>   
93 [0x5d]: line: 127 movl 1   
94 [0x5e]:           movn #0   
96 [0x60]:           del   
97 [0x61]: line: 128 pushl 3   
98 [0x62]:           throw    
99 [0x63]:           jmp @100   
100 [0x64]:           nop   : try end
101 [0x65]: line: 131 movl 1   
102 [0x66]:           movn #0   
104 [0x68]:           del   
105 [0x69]:           nop   
106 [0x6a]:           jmp @11   
107 [0x6b]: line: 135 istorel 0, fp+0   
109 [0x6d]:           ret   


function: std.io.task#job.execute[2078] params(0) in file: /usr/include/sharp//io//task//job.sharp:138:15: note:  
			protected def execute() {
		              ^

0 [0x0]: line: 139 call @3530 // <std#time.mills_time>   
1 [0x1]:           movl 0   
2 [0x2]:           movn #10   
4 [0x4]:           loadval ebx   
5 [0x5]:           movi #0, adx   
7 [0x7]:           rmov adx, ebx   
8 [0x8]: line: 140 movg @10 // @std.io.task#job_state   
9 [0x9]:           movn #1   
11 [0xb]:           pushobj   
12 [0xc]:           movl 0   
13 [0xd]:           movn #18   
15 [0xf]:           popobj   
16 [0x10]: line: 141 movl 0   
17 [0x11]:           movn #14   
19 [0x13]:           movi #0, adx   
21 [0x15]:           iaload ebx, adx   
22 [0x16]:           movr cmt, ebx   
23 [0x17]:           jne 26   
24 [0x18]: line: 142 pushl 0   
25 [0x19]:           call @2083 // <std.io.task#job.reschedule>   
26 [0x1a]:           nop   
27 [0x1b]: line: 144 movl 0   
28 [0x1c]:           movn #0   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           movr cmt, ebx   
34 [0x22]:           jne 45   
35 [0x23]: line: 145 movl 0   
36 [0x24]:           movn #0   
38 [0x26]:           movi #0, adx   
40 [0x28]:           iaload ebx, adx   
41 [0x29]:           rstore ebx   
42 [0x2a]:           loadval ebx   
43 [0x2b]:           calld ebx   
44 [0x2c]:           jmp @114   
45 [0x2d]:           movl 0   
46 [0x2e]:           movn #1   
48 [0x30]:           movi #0, adx   
50 [0x32]:           iaload ebx, adx   
51 [0x33]:           movr cmt, ebx   
52 [0x34]:           jne 67   
53 [0x35]: line: 146 movl 0   
54 [0x36]:           movn #1   
56 [0x38]:           movi #0, adx   
58 [0x3a]:           iaload ebx, adx   
59 [0x3b]:           rstore ebx   
60 [0x3c]:           movl 0   
61 [0x3d]:           movn #6   
63 [0x3f]:           pushobj   
64 [0x40]:           smov ebx, sp+[-1]   
65 [0x41]:           calld ebx   
66 [0x42]:           jmp @114   
67 [0x43]:           movl 0   
68 [0x44]:           movn #2   
70 [0x46]:           movi #0, adx   
72 [0x48]:           iaload ebx, adx   
73 [0x49]:           movr cmt, ebx   
74 [0x4a]:           jne 93   
75 [0x4b]: line: 147 movl 0   
76 [0x4c]:           movn #2   
78 [0x4e]:           movi #0, adx   
80 [0x50]:           iaload ebx, adx   
81 [0x51]:           rstore ebx   
82 [0x52]:           movl 0   
83 [0x53]:           movn #7   
85 [0x55]:           pushobj   
86 [0x56]:           movl 0   
87 [0x57]:           movn #6   
89 [0x59]:           pushobj   
90 [0x5a]:           smov ebx, sp+[-2]   
91 [0x5b]:           calld ebx   
92 [0x5c]:           jmp @114   
93 [0x5d]:           movl 0   
94 [0x5e]:           movn #3   
96 [0x60]:           movi #0, adx   
98 [0x62]:           iaload ebx, adx   
99 [0x63]:           movr cmt, ebx   
100 [0x64]:           jne 114   
101 [0x65]: line: 148 movl 0   
102 [0x66]:           movn #3   
104 [0x68]:           movi #0, adx   
106 [0x6a]:           iaload ebx, adx   
107 [0x6b]:           rstore ebx   
108 [0x6c]:           movl 0   
109 [0x6d]:           movn #7   
111 [0x6f]:           pushobj   
112 [0x70]:           smov ebx, sp+[-1]   
113 [0x71]:           calld ebx   
114 [0x72]:           nop   
115 [0x73]: line: 151 movg @10 // @std.io.task#job_state   
116 [0x74]:           movn #2   
118 [0x76]:           pushobj   
119 [0x77]:           movl 0   
120 [0x78]:           movn #18   
122 [0x7a]:           popobj   
123 [0x7b]: line: 152 movg @4 // @std.io.task#__srt_global   
124 [0x7c]:           movn #0   
126 [0x7e]:           pushobj   
127 [0x7f]:           pushl 0   
128 [0x80]:           call @2038 // <std.io.task#job_master.cleanup_job>   
129 [0x81]:           ret   


function: std.io.task#job.is_finished[2079] params(0) in file: /usr/include/sharp//io//task//job.sharp:155:8: note:  
		    def is_finished() := state == completed || state == cancelled;
		       ^

0 [0x0]: line: 155 movl 0   
1 [0x1]:           movn #18   
3 [0x3]:           pushobj   
4 [0x4]:           movg @10 // @std.io.task#job_state   
5 [0x5]:           movn #2   
7 [0x7]:           pushobj   
8 [0x8]:           call @2300 // <std#_enum_.operator==>   
9 [0x9]:           loadval ebx   
10 [0xa]:           skpe ebx // pc = 21   
11 [0xb]:           movl 0   
12 [0xc]:           movn #18   
14 [0xe]:           pushobj   
15 [0xf]:           movg @10 // @std.io.task#job_state   
16 [0x10]:           movn #3   
18 [0x12]:           pushobj   
19 [0x13]:           call @2300 // <std#_enum_.operator==>   
20 [0x14]:           loadval ebx   
21 [0x15]:           return_val ebx   
22 [0x16]:           ret   


function: std.io.task#job.is_active[2080] params(0) in file: /usr/include/sharp//io//task//job.sharp:156:8: note:  
		    def is_active() := state == active;
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           movn #18   
3 [0x3]:           pushobj   
4 [0x4]:           movg @10 // @std.io.task#job_state   
5 [0x5]:           movn #1   
7 [0x7]:           pushobj   
8 [0x8]:           call @2300 // <std#_enum_.operator==>   
9 [0x9]:           loadval ebx   
10 [0xa]:           return_val ebx   
11 [0xb]:           ret   


function: std.io.task#job.update_timeout[2081] params(1) in file: /usr/include/sharp//io//task//job.sharp:158:15: note:  
		    public def update_timeout(tm: var) {
		              ^

0 [0x0]: line: 159 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #9   
4 [0x4]:           loadval ebx   
5 [0x5]:           movi #0, adx   
7 [0x7]:           rmov adx, ebx   
8 [0x8]:           ret   


function: std.io.task#job.update_interval[2082] params(2) in file: /usr/include/sharp//io//task//job.sharp:162:15: note:  
		    public def update_interval(tm: var, interval: time_unit) {
		              ^

0 [0x0]: line: 163 movl 0   
1 [0x1]:           movn #14   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           not ebx, ebx   
7 [0x7]:           movr cmt, ebx   
8 [0x8]:           jne 15   
9 [0x9]: line: 164 new_class @0 // std#__srt_global   
10 [0xa]:           loadval adx   
11 [0xb]:           dup    
12 [0xc]:           newstr @50 // cannot set update restart interval on non-recurring job   
13 [0xd]:           call @3551 // <std#illegal_state_exception.illegal_state_exception>   
14 [0xe]:           throw    
15 [0xf]:           nop   
16 [0x10]: line: 166 movl 0   
17 [0x11]:           movn #18   
19 [0x13]:           pushobj   
20 [0x14]:           movg @10 // @std.io.task#job_state   
21 [0x15]:           movn #1   
23 [0x17]:           pushobj   
24 [0x18]:           call @2300 // <std#_enum_.operator==>   
25 [0x19]:           loadval ebx   
26 [0x1a]:           movr cmt, ebx   
27 [0x1b]:           jne 34   
28 [0x1c]: line: 167 pushl 0   
29 [0x1d]:           call @2068 // <std.io.task#job.cancel_future>   
30 [0x1e]: line: 168 movl 0   
31 [0x1f]:           movn #13   
33 [0x21]:           del   
34 [0x22]:           nop   
35 [0x23]: line: 171 pushl 2   
36 [0x24]:           movg @55 // @std#time_unit   
37 [0x25]:           movn #3   
39 [0x27]:           pushobj   
40 [0x28]:           call @2300 // <std#_enum_.operator==>   
41 [0x29]:           loadval ebx   
42 [0x2a]:           movr cmt, ebx   
43 [0x2b]:           jne 54   
44 [0x2c]: line: 172 ipushl #1   
45 [0x2d]:           call @3528 // <std#time.nano_to_mills>   
46 [0x2e]:           movl 0   
47 [0x2f]:           movn #11   
49 [0x31]:           loadval ebx   
50 [0x32]:           movi #0, adx   
52 [0x34]:           rmov adx, ebx   
53 [0x35]:           jmp @113   
54 [0x36]:           pushl 2   
55 [0x37]:           movg @55 // @std#time_unit   
56 [0x38]:           movn #2   
58 [0x3a]:           pushobj   
59 [0x3b]:           call @2300 // <std#_enum_.operator==>   
60 [0x3c]:           loadval ebx   
61 [0x3d]:           movr cmt, ebx   
62 [0x3e]:           jne 75   
63 [0x3f]: line: 174 ipushl #1   
64 [0x40]:           movi #1000, ebx   
66 [0x42]:           loadval ecx   
67 [0x43]:           div ecx, ebx -> ebx   
68 [0x44]:           movl 0   
69 [0x45]:           movn #11   
71 [0x47]:           movi #0, adx   
73 [0x49]:           rmov adx, ebx   
74 [0x4a]:           jmp @113   
75 [0x4b]:           pushl 2   
76 [0x4c]:           movg @55 // @std#time_unit   
77 [0x4d]:           movn #1   
79 [0x4f]:           pushobj   
80 [0x50]:           call @2300 // <std#_enum_.operator==>   
81 [0x51]:           loadval ebx   
82 [0x52]:           movr cmt, ebx   
83 [0x53]:           jne 93   
84 [0x54]: line: 176 ipushl #1   
85 [0x55]:           movl 0   
86 [0x56]:           movn #11   
88 [0x58]:           loadval ebx   
89 [0x59]:           movi #0, adx   
91 [0x5b]:           rmov adx, ebx   
92 [0x5c]:           jmp @113   
93 [0x5d]:           pushl 2   
94 [0x5e]:           movg @55 // @std#time_unit   
95 [0x5f]:           movn #0   
97 [0x61]:           pushobj   
98 [0x62]:           call @2300 // <std#_enum_.operator==>   
99 [0x63]:           loadval ebx   
100 [0x64]:           movr cmt, ebx   
101 [0x65]:           jne 113   
102 [0x66]: line: 178 ipushl #1   
103 [0x67]:           movi #1000, ebx   
105 [0x69]:           loadval ecx   
106 [0x6a]:           mul ecx, ebx -> ebx   
107 [0x6b]:           movl 0   
108 [0x6c]:           movn #11   
110 [0x6e]:           movi #0, adx   
112 [0x70]:           rmov adx, ebx   
113 [0x71]:           nop   
114 [0x72]: line: 181 movl 0   
115 [0x73]:           movn #18   
117 [0x75]:           pushobj   
118 [0x76]:           movg @10 // @std.io.task#job_state   
119 [0x77]:           movn #1   
121 [0x79]:           pushobj   
122 [0x7a]:           call @2300 // <std#_enum_.operator==>   
123 [0x7b]:           loadval ebx   
124 [0x7c]:           movr cmt, ebx   
125 [0x7d]:           jne 128   
126 [0x7e]: line: 182 pushl 0   
127 [0x7f]:           call @2083 // <std.io.task#job.reschedule>   
128 [0x80]:           nop   
129 [0x81]:           ret   


function: std.io.task#job.reschedule[2083] params(0) in file: /usr/include/sharp//io//task//job.sharp:185:18: note:  
		    protected def reschedule() {
		                 ^

0 [0x0]: line: 187 movl 0   
1 [0x1]:           movn #10   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #11   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           rstore ebx   
16 [0x10]:           call @3530 // <std#time.mills_time>   
17 [0x11]:           loadval ebx   
18 [0x12]:           loadval ecx   
19 [0x13]:           sub ecx, ebx -> ebx   
20 [0x14]:           smovr_2 ebx, fp+1   
21 [0x15]: line: 188 call @2026 // <std.io.task#task.builder>   
22 [0x16]:           movl 0   
23 [0x17]:           movn #5   
25 [0x19]:           pushobj   
26 [0x1a]:           call @2045 // <std.io.task#job_builder.with_name>   
27 [0x1b]:           movl 0   
28 [0x1c]:           movn #11   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movg @55 // @std#time_unit   
35 [0x23]:           movn #1   
37 [0x25]:           pushobj   
38 [0x26]:           call @2044 // <std.io.task#job_builder.recurring>   
39 [0x27]:           popobj2    
40 [0x28]:           smovr_3 fp+2   
41 [0x29]: line: 192 movl 0   
42 [0x2a]:           movn #6   
44 [0x2c]:           sizeof ebx   
45 [0x2d]:           rstore ebx   
46 [0x2e]:           movi #1, ebx   
48 [0x30]:           loadval ecx   
49 [0x31]:           sub ecx, ebx -> ebx   
50 [0x32]:           newobj_arry ebx   
51 [0x33]:           popobj2    
52 [0x34]:           smovr_3 fp+3   
53 [0x35]: line: 193 istorel 0, fp+4   
55 [0x37]: line: 194 istorel 1, fp+5   
57 [0x39]:           ipushl #5   
58 [0x3a]:           movl 0   
59 [0x3b]:           movn #6   
61 [0x3d]:           sizeof ebx   
62 [0x3e]:           loadval ecx   
63 [0x3f]:           lt ecx, ebx   
64 [0x40]:           movr ebx, cmt   
65 [0x41]:           movr cmt, ebx   
66 [0x42]:           jne 91   
67 [0x43]: line: 195 movl 0   
68 [0x44]:           movn #6   
70 [0x46]:           pushobj   
71 [0x47]:           loadl ebx, fp+5   
72 [0x48]:           popobj2    
73 [0x49]:           movr adx, ebx   
74 [0x4a]:           chklen adx   
75 [0x4b]:           movnd adx   
76 [0x4c]:           pushobj   
77 [0x4d]:           pushl 3   
78 [0x4e]:           loadl ebx, fp+4   
79 [0x4f]:           movr egx, ebx   
80 [0x50]:           inc ebx   
81 [0x51]:           smovr_2 ebx, fp+4   
82 [0x52]:           movr ebx, egx   
83 [0x53]:           popobj2    
84 [0x54]:           movr adx, ebx   
85 [0x55]:           chklen adx   
86 [0x56]:           movnd adx   
87 [0x57]:           popobj   
88 [0x58]:           iaddl 1, fp@5   
90 [0x5a]:           jmp @57   
91 [0x5b]: line: 198 movl 0   
92 [0x5c]:           movn #17   
94 [0x5e]:           movi #0, adx   
96 [0x60]:           iaload ebx, adx   
97 [0x61]:           movr cmt, ebx   
98 [0x62]:           jne 102   
99 [0x63]: line: 199 pushl 2   
100 [0x64]:           call @2048 // <std.io.task#job_builder.long_term>   
101 [0x65]:           pop   
102 [0x66]:           nop   
103 [0x67]: line: 200 pushl 2   
104 [0x68]:           pushl 3   
105 [0x69]:           call @2046 // <std.io.task#job_builder.with_args>   
106 [0x6a]:           pop   
107 [0x6b]: line: 202 movl 0   
108 [0x6c]:           movn #0   
110 [0x6e]:           movi #0, adx   
112 [0x70]:           iaload ebx, adx   
113 [0x71]:           movr cmt, ebx   
114 [0x72]:           jne 132   
115 [0x73]: line: 203 movl 0   
116 [0x74]:           movn #0   
118 [0x76]:           movi #0, adx   
120 [0x78]:           iaload ebx, adx   
121 [0x79]:           rstore ebx   
122 [0x7a]:           movl 2   
123 [0x7b]:           movn #1   
125 [0x7d]:           movn #0   
127 [0x7f]:           loadval ebx   
128 [0x80]:           movi #0, adx   
130 [0x82]:           rmov adx, ebx   
131 [0x83]:           jmp @206   
132 [0x84]:           movl 0   
133 [0x85]:           movn #1   
135 [0x87]:           movi #0, adx   
137 [0x89]:           iaload ebx, adx   
138 [0x8a]:           movr cmt, ebx   
139 [0x8b]:           jne 157   
140 [0x8c]: line: 204 movl 0   
141 [0x8d]:           movn #1   
143 [0x8f]:           movi #0, adx   
145 [0x91]:           iaload ebx, adx   
146 [0x92]:           rstore ebx   
147 [0x93]:           movl 2   
148 [0x94]:           movn #1   
150 [0x96]:           movn #1   
152 [0x98]:           loadval ebx   
153 [0x99]:           movi #0, adx   
155 [0x9b]:           rmov adx, ebx   
156 [0x9c]:           jmp @206   
157 [0x9d]:           movl 0   
158 [0x9e]:           movn #2   
160 [0xa0]:           movi #0, adx   
162 [0xa2]:           iaload ebx, adx   
163 [0xa3]:           movr cmt, ebx   
164 [0xa4]:           jne 182   
165 [0xa5]: line: 205 movl 0   
166 [0xa6]:           movn #2   
168 [0xa8]:           movi #0, adx   
170 [0xaa]:           iaload ebx, adx   
171 [0xab]:           rstore ebx   
172 [0xac]:           movl 2   
173 [0xad]:           movn #1   
175 [0xaf]:           movn #2   
177 [0xb1]:           loadval ebx   
178 [0xb2]:           movi #0, adx   
180 [0xb4]:           rmov adx, ebx   
181 [0xb5]:           jmp @206   
182 [0xb6]:           movl 0   
183 [0xb7]:           movn #3   
185 [0xb9]:           movi #0, adx   
187 [0xbb]:           iaload ebx, adx   
188 [0xbc]:           movr cmt, ebx   
189 [0xbd]:           jne 206   
190 [0xbe]: line: 206 movl 0   
191 [0xbf]:           movn #3   
193 [0xc1]:           movi #0, adx   
195 [0xc3]:           iaload ebx, adx   
196 [0xc4]:           rstore ebx   
197 [0xc5]:           movl 2   
198 [0xc6]:           movn #1   
200 [0xc8]:           movn #3   
202 [0xca]:           loadval ebx   
203 [0xcb]:           movi #0, adx   
205 [0xcd]:           rmov adx, ebx   
206 [0xce]:           nop   
207 [0xcf]: line: 209 ipushl #1   
208 [0xd0]:           movi #0, ebx   
210 [0xd2]:           loadval ecx   
211 [0xd3]:           gt ecx, ebx   
212 [0xd4]:           movr ebx, cmt   
213 [0xd5]:           movr cmt, ebx   
214 [0xd6]:           jne 219   
215 [0xd7]: line: 210 pushl 2   
216 [0xd8]:           ipushl #1   
217 [0xd9]:           call @2043 // <std.io.task#job_builder.schedule>   
218 [0xda]:           pop   
219 [0xdb]:           nop   
220 [0xdc]: line: 211 movl 0   
221 [0xdd]:           movn #8   
223 [0xdf]:           movi #0, adx   
225 [0xe1]:           iaload ebx, adx   
226 [0xe2]:           movr cmt, ebx   
227 [0xe3]:           jne 238   
228 [0xe4]: line: 212 pushl 2   
229 [0xe5]:           movl 0   
230 [0xe6]:           movn #9   
232 [0xe8]:           movi #0, adx   
234 [0xea]:           iaload ebx, adx   
235 [0xeb]:           rstore ebx   
236 [0xec]:           call @2042 // <std.io.task#job_builder.with_timeout>   
237 [0xed]:           pop   
238 [0xee]:           nop   
239 [0xef]: line: 214 movl 2   
240 [0xf0]:           movn #1   
242 [0xf2]:           pushobj   
243 [0xf3]:           movl 0   
244 [0xf4]:           movn #13   
246 [0xf6]:           popobj   
247 [0xf7]: line: 215 movl 2   
248 [0xf8]:           movn #0   
250 [0xfa]:           pushobj   
251 [0xfb]:           movl 2   
252 [0xfc]:           movn #1   
254 [0xfe]:           pushobj   
255 [0xff]:           call @2036 // <std.io.task#job_master.start_job>   
256 [0x100]:           ret   


function: std.io#__srt_global._srt_thread_start[2084] params(0) in file: /usr/include/sharp//io//thread_kernel.sharp:5:4: note:  
		def _srt_thread_start() {
		   ^

0 [0x0]: line: 6 call @3473 // <platform.kernel#vm.current_thread>   
1 [0x1]:         popobj2    
2 [0x2]:         smovr_3 fp+0   
3 [0x3]: line: 7 pushl 0   
4 [0x4]:         call @1909 // <std#_object_.notify>   
5 [0x5]: line: 9 movi #1, ebx   : protected asm start
7 [0x7]:         movi #0, egx   
9 [0x9]:         movi #0, adx   
11 [0xb]:         movl 0   
12 [0xc]:         movn #5   
14 [0xe]:         rmov adx, egx   
15 [0xf]:         movl 0   
16 [0x10]:         movn #8   
18 [0x12]:         rmov adx, ebx   : protected asm end
19 [0x13]: line: 22 istorel 1, fp+1   
21 [0x15]: line: 23 movl 0   : try start: try block start
22 [0x16]: line: 25 movn #11   
24 [0x18]: line: 26 movi #0, adx   
26 [0x1a]:          iaload ebx, adx   
27 [0x1b]:          rstore ebx   
28 [0x1c]:          call @3479 // <platform.kernel#vm.thread_args>   
29 [0x1d]:          smov ebx, sp+[-1]   
30 [0x1e]:          calld ebx   
31 [0x1f]:          ipopl 1   
32 [0x20]:          jmp @53   : try block end
33 [0x21]: line: 28 pushl 0   : catch(std#throwable)
34 [0x22]:          call @2201 // <std.io#thread.get_exception_handler>   
35 [0x23]:          pushnull    
36 [0x24]:          itest ebx   
37 [0x25]:          not ebx, ebx   
38 [0x26]:          movr cmt, ebx   
39 [0x27]:          jne 46   
40 [0x28]: line: 29 pushl 0   
41 [0x29]:          call @2201 // <std.io#thread.get_exception_handler>   
42 [0x2a]:          pushl 2   
43 [0x2b]:          invoke_delegate 2144 { static=0, args=1 }   
45 [0x2d]:          jmp @51   
46 [0x2e]: line: 31 pushl 0   
47 [0x2f]:          ipushl #1   
48 [0x30]:          call @3474 // <platform.kernel#vm.exit_thread>   
49 [0x31]: line: 32 pushl 2   
50 [0x32]:          throw    
51 [0x33]:          nop   
52 [0x34]:          jmp @53   
53 [0x35]:          nop   : try end
54 [0x36]: line: 36 pushl 0   
55 [0x37]:          ipushl #1   
56 [0x38]:          call @3474 // <platform.kernel#vm.exit_thread>   
57 [0x39]:          ret   


function: std.io#thread_result.at[2085] params(1) in file: /usr/include/sharp//io//thread_kernel.sharp:64:15: note:  
		    static def at(index: var) : thread_result {
		              ^

0 [0x0]: line: 65 ipushl #0   
1 [0x1]:          movg @17 // @std.io#thread_result   
2 [0x2]:          movn #16   
4 [0x4]:          pushobj   
5 [0x5]:          call @2303 // <std#_enum_.get_ordinal>   
6 [0x6]:          loadval ebx   
7 [0x7]:          loadval ecx   
8 [0x8]:          test ecx, ebx   
9 [0x9]:          jne 29   
10 [0xa]: line: 66 movg @17 // @std.io#thread_result   
11 [0xb]:          movn #17   
13 [0xd]:          pushobj   
14 [0xe]:          movg @17 // @std.io#thread_result   
15 [0xf]:          movn #17   
17 [0x11]:          sizeof ebx   
18 [0x12]:          rstore ebx   
19 [0x13]:          movi #1, ebx   
21 [0x15]:          loadval ecx   
22 [0x16]:          sub ecx, ebx -> ebx   
23 [0x17]:          popobj2    
24 [0x18]:          movr adx, ebx   
25 [0x19]:          chklen adx   
26 [0x1a]:          movnd adx   
27 [0x1b]:          returnobj   
28 [0x1c]:          ret   
29 [0x1d]:          nop   
30 [0x1e]: line: 68 movg @17 // @std.io#thread_result   
31 [0x1f]:          movn #17   
33 [0x21]:          pushobj   
34 [0x22]:          loadl ebx, fp+0   
35 [0x23]:          popobj2    
36 [0x24]:          movr adx, ebx   
37 [0x25]:          chklen adx   
38 [0x26]:          movnd adx   
39 [0x27]:          returnobj   
40 [0x28]:          ret   


constructor: std.io#thread_result.thread_result[2086] params(0) in file: /usr/include/sharp//io//thread_kernel.sharp:39:7: note:  
		mutate thread_result {
		      ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @2305 // <std#_enum_._enum_>   
2 [0x2]:         ret   


function: std.io#__srt_global.realloc[2087] params(2) in file: /usr/include/sharp//io//memory.sharp:4:4: note:  
		def realloc(data: object[], size: var) {
		   ^

0 [0x0]: line: 5 pushl 0   : protected asm start
1 [0x1]:         ipushl #1   
2 [0x2]:         int 0x23   
3 [0x3]:         ret   : protected asm end


function: std.io#__srt_global.realloc[2088] params(2) in file: /usr/include/sharp//io//memory.sharp:12:4: note:  
		def realloc(data: var[], size: var) {
		   ^

0 [0x0]: line: 13 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#__srt_global.realloc[2089] params(2) in file: /usr/include/sharp//io//memory.sharp:20:4: note:  
		def realloc(data: _int8[], size: var) {
		   ^

0 [0x0]: line: 21 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#__srt_global.realloc[2090] params(2) in file: /usr/include/sharp//io//memory.sharp:28:4: note:  
		def realloc(data: _int16[], size: var) {
		   ^

0 [0x0]: line: 29 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#__srt_global.realloc[2091] params(2) in file: /usr/include/sharp//io//memory.sharp:36:4: note:  
		def realloc(data: _int32[], size: var) {
		   ^

0 [0x0]: line: 37 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#__srt_global.realloc[2092] params(2) in file: /usr/include/sharp//io//memory.sharp:44:4: note:  
		def realloc(data: _int64[], size: var) {
		   ^

0 [0x0]: line: 45 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#__srt_global.realloc[2093] params(2) in file: /usr/include/sharp//io//memory.sharp:52:4: note:  
		def realloc(data: _uint8[], size: var) {
		   ^

0 [0x0]: line: 53 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#__srt_global.realloc[2094] params(2) in file: /usr/include/sharp//io//memory.sharp:60:4: note:  
		def realloc(data: _uint16[], size: var) {
		   ^

0 [0x0]: line: 61 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#__srt_global.realloc[2095] params(2) in file: /usr/include/sharp//io//memory.sharp:68:4: note:  
		def realloc(data: _uint32[], size: var) {
		   ^

0 [0x0]: line: 69 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#__srt_global.realloc[2096] params(2) in file: /usr/include/sharp//io//memory.sharp:76:4: note:  
		def realloc(data: _uint64[], size: var) {
		   ^

0 [0x0]: line: 77 pushl 0   : protected asm start
1 [0x1]:          ipushl #1   
2 [0x2]:          int 0x23   
3 [0x3]:          ret   : protected asm end


function: std.io#__srt_global.memcopy[2097] params(5) in file: /usr/include/sharp//io//memory.sharp:84:4: note:  
		def memcopy(src: object[], dest: object[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 85 pushl 1   : protected asm start
1 [0x1]:          pushl 0   
2 [0x2]:          ipushl #2   
3 [0x3]:          ipushl #3   
4 [0x4]:          ipushl #4   
5 [0x5]:          int 0x21   
6 [0x6]:          ret   : protected asm end


function: std.io#__srt_global.memcopy[2098] params(5) in file: /usr/include/sharp//io//memory.sharp:95:4: note:  
		def memcopy(src: var[], dest: var[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 96 pushl 1   : protected asm start
1 [0x1]:          pushl 0   
2 [0x2]:          ipushl #2   
3 [0x3]:          ipushl #3   
4 [0x4]:          ipushl #4   
5 [0x5]:          int 0x21   
6 [0x6]:          ret   : protected asm end


function: std.io#__srt_global.memcopy[2099] params(5) in file: /usr/include/sharp//io//memory.sharp:106:4: note:  
		def memcopy(src: _int8[], dest: _int8[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 107 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#__srt_global.memcopy[2100] params(5) in file: /usr/include/sharp//io//memory.sharp:117:4: note:  
		def memcopy(src: _int16[], dest: _int16[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 118 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#__srt_global.memcopy[2101] params(5) in file: /usr/include/sharp//io//memory.sharp:128:4: note:  
		def memcopy(src: _int32[], dest: _int32[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 129 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#__srt_global.memcopy[2102] params(5) in file: /usr/include/sharp//io//memory.sharp:139:4: note:  
		def memcopy(src: _int64[], dest: _int64[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 140 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#__srt_global.memcopy[2103] params(5) in file: /usr/include/sharp//io//memory.sharp:150:4: note:  
		def memcopy(src: _uint8[], dest: _uint8[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 151 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#__srt_global.memcopy[2104] params(5) in file: /usr/include/sharp//io//memory.sharp:161:4: note:  
		def memcopy(src: _uint16[], dest: _uint16[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 162 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#__srt_global.memcopy[2105] params(5) in file: /usr/include/sharp//io//memory.sharp:172:4: note:  
		def memcopy(src: _uint32[], dest: _uint32[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 173 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#__srt_global.memcopy[2106] params(5) in file: /usr/include/sharp//io//memory.sharp:183:4: note:  
		def memcopy(src: _uint64[], dest: _uint64[],  destStart: var, srcStart: var, srcEnd: var) {
		   ^

0 [0x0]: line: 184 pushl 1   : protected asm start
1 [0x1]:           pushl 0   
2 [0x2]:           ipushl #2   
3 [0x3]:           ipushl #3   
4 [0x4]:           ipushl #4   
5 [0x5]:           int 0x21   
6 [0x6]:           ret   : protected asm end


function: std.io#__srt_global.copy[2107] params(3) in file: /usr/include/sharp//io//memory.sharp:194:4: note:  
		def copy(src: object[], srcStart: var, srcEnd: var) : object[] {
		   ^

0 [0x0]: line: 195 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 204 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.copy[2108] params(3) in file: /usr/include/sharp//io//memory.sharp:207:4: note:  
		def copy(src: var[], srcStart: var, srcEnd: var) : var[] {
		   ^

0 [0x0]: line: 208 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 217 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.copy[2109] params(3) in file: /usr/include/sharp//io//memory.sharp:220:4: note:  
		def copy(src: _int8[], srcStart: var, srcEnd: var) : _int8[] {
		   ^

0 [0x0]: line: 221 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 230 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.copy[2110] params(3) in file: /usr/include/sharp//io//memory.sharp:233:4: note:  
		def copy(src: _int16[], srcStart: var, srcEnd: var) : _int16[] {
		   ^

0 [0x0]: line: 234 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 243 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.copy[2111] params(3) in file: /usr/include/sharp//io//memory.sharp:246:4: note:  
		def copy(src: _int32[], srcStart: var, srcEnd: var) : _int32[] {
		   ^

0 [0x0]: line: 247 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 256 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.copy[2112] params(3) in file: /usr/include/sharp//io//memory.sharp:259:4: note:  
		def copy(src: _uint8[], srcStart: var, srcEnd: var) : _uint8[] {
		   ^

0 [0x0]: line: 260 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 269 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.copy[2113] params(3) in file: /usr/include/sharp//io//memory.sharp:272:4: note:  
		def copy(src: _uint16[], srcStart: var, srcEnd: var) : _uint16[] {
		   ^

0 [0x0]: line: 273 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 282 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.copy[2114] params(3) in file: /usr/include/sharp//io//memory.sharp:285:4: note:  
		def copy(src: _uint32[], srcStart: var, srcEnd: var) : _uint32[] {
		   ^

0 [0x0]: line: 286 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 295 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.copy[2115] params(3) in file: /usr/include/sharp//io//memory.sharp:298:4: note:  
		def copy(src: _uint64[], srcStart: var, srcEnd: var) : _uint64[] {
		   ^

0 [0x0]: line: 299 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 308 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.copy[2116] params(3) in file: /usr/include/sharp//io//memory.sharp:311:4: note:  
		def copy(src: _int64[], srcStart: var, srcEnd: var) : _int64[] {
		   ^

0 [0x0]: line: 312 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x37   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 321 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.invert[2117] params(3) in file: /usr/include/sharp//io//memory.sharp:325:4: note:  
		def invert(src: object[], start: var, len: var) : object[] {
		   ^

0 [0x0]: line: 326 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 335 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.invert[2118] params(3) in file: /usr/include/sharp//io//memory.sharp:338:4: note:  
		def invert(src: var[], start: var, len: var) : var[] {
		   ^

0 [0x0]: line: 339 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 348 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.invert[2119] params(3) in file: /usr/include/sharp//io//memory.sharp:351:4: note:  
		def invert(src: _int8[], start: var, len: var) : _int8[] {
		   ^

0 [0x0]: line: 352 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 361 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.invert[2120] params(3) in file: /usr/include/sharp//io//memory.sharp:364:4: note:  
		def invert(src: _int16[], start: var, len: var) : _int16[] {
		   ^

0 [0x0]: line: 365 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 374 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.invert[2121] params(3) in file: /usr/include/sharp//io//memory.sharp:377:4: note:  
		def invert(src: _int32[], start: var, len: var) : _int32[] {
		   ^

0 [0x0]: line: 378 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 387 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.invert[2122] params(3) in file: /usr/include/sharp//io//memory.sharp:390:4: note:  
		def invert(src: _int64[], start: var, len: var) : _int64[] {
		   ^

0 [0x0]: line: 391 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 400 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.invert[2123] params(3) in file: /usr/include/sharp//io//memory.sharp:403:4: note:  
		def invert(src: _uint8[], start: var, len: var) : _uint8[] {
		   ^

0 [0x0]: line: 404 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 413 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.invert[2124] params(3) in file: /usr/include/sharp//io//memory.sharp:416:4: note:  
		def invert(src: _uint16[], start: var, len: var) : _uint16[] {
		   ^

0 [0x0]: line: 417 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 426 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.invert[2125] params(3) in file: /usr/include/sharp//io//memory.sharp:429:4: note:  
		def invert(src: _uint32[], start: var, len: var) : _uint32[] {
		   ^

0 [0x0]: line: 430 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 439 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


function: std.io#__srt_global.invert[2126] params(3) in file: /usr/include/sharp//io//memory.sharp:442:4: note:  
		def invert(src: _uint64[], start: var, len: var) : _uint64[] {
		   ^

0 [0x0]: line: 443 pushl 0   : protected asm start
1 [0x1]:           ipushl #1   
2 [0x2]:           ipushl #2   
3 [0x3]:           int 0x22   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   
7 [0x7]: line: 452 pushnull    : protected asm end
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   


constructor: std.io#thread_group.thread_group[2127] params(1) in file: /usr/include/sharp//io//thread_group.sharp:5:21: note:  
			public thread_group(name : string) {
		                    ^

0 [0x0]:         new_class @0 // std#__srt_global   
1 [0x1]:         ? (148)   
2 [0x2]:         dup    
3 [0x3]:         call @3813 // <std#hashtable<std#int,std.io#thread>.hashtable>   
4 [0x4]:         movl 0   
5 [0x5]:         movn #0   
7 [0x7]:         popobj   
8 [0x8]:         new_class @0 // std#__srt_global   
9 [0x9]:         ? (155)   
10 [0xa]:         dup    
11 [0xb]:         call @3936 // <std#list<var>.list>   
12 [0xc]:         movl 0   
13 [0xd]:         movn #1   
15 [0xf]:         popobj   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #4   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]:         pushl 0   
25 [0x19]: line: 6 pushl 1   
26 [0x1a]:         movl 0   
27 [0x1b]:         movn #2   
29 [0x1d]:         popobj   
30 [0x1e]: line: 7 movg @13 // @std.io#thread_priority   
31 [0x1f]:         movn #1   
33 [0x21]:         pushobj   
34 [0x22]:         movl 0   
35 [0x23]:         movn #3   
37 [0x25]:         popobj   
38 [0x26]:         ret   


constructor: std.io#thread_group.thread_group[2128] params(2) in file: /usr/include/sharp//io//thread_group.sharp:10:21: note:  
			public thread_group(name : string, priority : thread_priority) {
		                    ^

0 [0x0]:         new_class @0 // std#__srt_global   
1 [0x1]:         ? (148)   
2 [0x2]:         dup    
3 [0x3]:         call @3813 // <std#hashtable<std#int,std.io#thread>.hashtable>   
4 [0x4]:         movl 0   
5 [0x5]:         movn #0   
7 [0x7]:         popobj   
8 [0x8]:         new_class @0 // std#__srt_global   
9 [0x9]:         ? (155)   
10 [0xa]:         dup    
11 [0xb]:         call @3936 // <std#list<var>.list>   
12 [0xc]:         movl 0   
13 [0xd]:         movn #1   
15 [0xf]:         popobj   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #4   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]:         pushl 0   
25 [0x19]: line: 11 pushl 1   
26 [0x1a]:          movl 0   
27 [0x1b]:          movn #2   
29 [0x1d]:          popobj   
30 [0x1e]: line: 12 pushl 2   
31 [0x1f]:          movl 0   
32 [0x20]:          movn #3   
34 [0x22]:          popobj   
35 [0x23]:          ret   


function: std.io#thread_group.at[2129] params(1) in file: /usr/include/sharp//io//thread_group.sharp:15:5: note:  
			def at(id : var) := handles.at(id);
		    ^

0 [0x0]: line: 15 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          new_class @0 // std#__srt_global   
5 [0x5]:          inc adx   
6 [0x6]:          dup    
7 [0x7]:          ipushl #1   
8 [0x8]:          call @2630 // <std#int.int>   
9 [0x9]:          call @3817 // <std#hashtable<std#int,std.io#thread>.at>   
10 [0xa]:          popobj2    
11 [0xb]:          returnobj   
12 [0xc]:          ret   


function: std.io#thread_group.add[2130] params(1) in file: /usr/include/sharp//io//thread_group.sharp:17:5: note:  
			def add(t : thread) {
		    ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 19 movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          pushobj   
6 [0x6]:          new_class @0 // std#__srt_global   
7 [0x7]:          inc adx   
8 [0x8]:          dup    
9 [0x9]:          pushl 1   
10 [0xa]:          call @2190 // <std.io#thread.get_id>   
11 [0xb]:          call @2630 // <std#int.int>   
12 [0xc]:          pushl 1   
13 [0xd]:          call @3818 // <std#hashtable<std#int,std.io#thread>.put>   
14 [0xe]:          loadval ebx   
15 [0xf]:          movr cmt, ebx   
16 [0x10]:          jne 24   
17 [0x11]: line: 20 movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          pushobj   
21 [0x15]:          pushl 1   
22 [0x16]:          call @2190 // <std.io#thread.get_id>   
23 [0x17]:          call @3950 // <std#list<var>.add>   
24 [0x18]:          nop   
25 [0x19]: line: 22 movl 0   
26 [0x1a]:          movn #4   
28 [0x1c]:          movi #0, adx   
30 [0x1e]:          iaload ebx, adx   
31 [0x1f]:          movr egx, ebx   
32 [0x20]:          dec ebx   
33 [0x21]:          movi #0, adx   
35 [0x23]:          rmov adx, ebx   
36 [0x24]:          movl 0   
37 [0x25]:          _ulck   
38 [0x26]:          ret   


function: std.io#thread_group.size[2131] params(0) in file: /usr/include/sharp//io//thread_group.sharp:26:5: note:  
			def size() := n_threads;
		    ^

0 [0x0]: line: 26 movl 0   
1 [0x1]:          movn #4   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          return_val ebx   
7 [0x7]:          ret   


function: std.io#thread_group.get_name[2132] params(0) in file: /usr/include/sharp//io//thread_group.sharp:27:5: note:  
			def get_name() := name;
		    ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #2   
3 [0x3]:          returnobj   
4 [0x4]:          ret   


function: std.io#thread_group.get_priority[2133] params(0) in file: /usr/include/sharp//io//thread_group.sharp:28:5: note:  
			def get_priority() := default_priority;
		    ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #3   
3 [0x3]:          returnobj   
4 [0x4]:          ret   


function: std.io#thread_group.remove[2134] params(1) in file: /usr/include/sharp//io//thread_group.sharp:29:5: note:  
			def remove(id : var) : var {
		    ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 31 movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          pushobj   
6 [0x6]:          new_class @0 // std#__srt_global   
7 [0x7]:          inc adx   
8 [0x8]:          dup    
9 [0x9]:          ipushl #1   
10 [0xa]:          call @2630 // <std#int.int>   
11 [0xb]:          call @3819 // <std#hashtable<std#int,std.io#thread>.remove>   
12 [0xc]:          loadval ebx   
13 [0xd]:          movr cmt, ebx   
14 [0xe]:          jne 37   
15 [0xf]: line: 32 movl 0   
16 [0x10]:          movn #4   
18 [0x12]:          movi #0, adx   
20 [0x14]:          iaload ebx, adx   
21 [0x15]:          movr egx, ebx   
22 [0x16]:          dec ebx   
23 [0x17]:          movi #0, adx   
25 [0x19]:          rmov adx, ebx   
26 [0x1a]: line: 33 movl 0   
27 [0x1b]:          movn #1   
29 [0x1d]:          pushobj   
30 [0x1e]:          ipushl #1   
31 [0x1f]:          call @3956 // <std#list<var>.remove>   
32 [0x20]: line: 34 istorel 1, fp+0   
34 [0x22]:          movl 0   
35 [0x23]:          _ulck   
36 [0x24]:          ret   
37 [0x25]:          nop   
38 [0x26]: line: 37 istorel 0, fp+0   
40 [0x28]:          movl 0   
41 [0x29]:          _ulck   
42 [0x2a]:          ret   
43 [0x2b]:          movl 0   
44 [0x2c]:          _ulck   


function: std.io#thread_group.get_elements[2135] params(0) in file: /usr/include/sharp//io//thread_group.sharp:41:8: note:  
		    def get_elements() : thread[] {
		       ^

0 [0x0]: line: 42 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          call @3953 // <std#list<var>.size>   
5 [0x5]:          loadval ebx   
6 [0x6]:          new_classarray ebx  // std.io#thread[]   
8 [0x8]:          popobj2    
9 [0x9]:          smovr_3 fp+1   
10 [0xa]: line: 43 istorel 0, fp+2   
12 [0xc]: line: 45 istorel -1, fp+4   
14 [0xe]:          movl 0   
15 [0xf]:          movn #1   
17 [0x11]:          pushobj   
18 [0x12]:          invoke_delegate 3934 { static=0, args=0 }   
20 [0x14]:          popl 5   
21 [0x15]:          iaddl 1, fp@4   
23 [0x17]:          movl 5   
24 [0x18]:          sizeof ecx   
25 [0x19]:          loadl ebx, fp+4   
26 [0x1a]:          lt ebx, ecx   
27 [0x1b]:          jne 52   
28 [0x1c]:          iaload ecx, ebx   
29 [0x1d]:          smovr_2 ecx, fp+3   
30 [0x1e]: line: 46 movl 0   
31 [0x1f]:          movn #0   
33 [0x21]:          pushobj   
34 [0x22]:          new_class @0 // std#__srt_global   
35 [0x23]:          inc adx   
36 [0x24]:          dup    
37 [0x25]:          ipushl #3   
38 [0x26]:          call @2630 // <std#int.int>   
39 [0x27]:          call @3817 // <std#hashtable<std#int,std.io#thread>.at>   
40 [0x28]:          pushl 1   
41 [0x29]:          loadl ebx, fp+2   
42 [0x2a]:          movr egx, ebx   
43 [0x2b]:          inc ebx   
44 [0x2c]:          smovr_2 ebx, fp+2   
45 [0x2d]:          movr ebx, egx   
46 [0x2e]:          popobj2    
47 [0x2f]:          movr adx, ebx   
48 [0x30]:          chklen adx   
49 [0x31]:          movnd adx   
50 [0x32]:          popobj   
51 [0x33]:          jmp @21   
52 [0x34]: line: 49 movl 1   
53 [0x35]:          returnobj   
54 [0x36]:          ret   


function: std.io#thread_group.find[2136] params(1) in file: /usr/include/sharp//io//thread_group.sharp:52:8: note:  
		    def find(find_func: (thread)(var)) : thread {
		       ^

0 [0x0]: line: 53 istorel 0, fp+2   
2 [0x2]:          ipushl #2   
3 [0x3]:          movl 0   
4 [0x4]:          movn #1   
6 [0x6]:          pushobj   
7 [0x7]:          call @3953 // <std#list<var>.size>   
8 [0x8]:          loadval ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          lt ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 49   
14 [0xe]: line: 54 movl 0   
15 [0xf]:          movn #0   
17 [0x11]:          pushobj   
18 [0x12]:          new_class @0 // std#__srt_global   
19 [0x13]:          inc adx   
20 [0x14]:          dup    
21 [0x15]:          movl 0   
22 [0x16]:          movn #1   
24 [0x18]:          pushobj   
25 [0x19]:          ipushl #2   
26 [0x1a]:          call @3943 // <std#list<var>.at>   
27 [0x1b]:          call @2630 // <std#int.int>   
28 [0x1c]:          call @3817 // <std#hashtable<std#int,std.io#thread>.at>   
29 [0x1d]:          popobj2    
30 [0x1e]:          smovr_3 fp+3   
31 [0x1f]: line: 55 movl 3   
32 [0x20]:          checknull   
33 [0x21]:          not ebx, ebx   
34 [0x22]:          skne ebx // pc = 40   
35 [0x23]:          ipushl #1   
36 [0x24]:          pushl 3   
37 [0x25]:          smov ebx, sp+[-1]   
38 [0x26]:          calld ebx   
39 [0x27]:          loadval ebx   
40 [0x28]:          movr cmt, ebx   
41 [0x29]:          jne 45   
42 [0x2a]: line: 56 movl 3   
43 [0x2b]:          returnobj   
44 [0x2c]:          ret   
45 [0x2d]:          nop   
46 [0x2e]:          iaddl 1, fp@2   
48 [0x30]:          jmp @2   
49 [0x31]: line: 60 pushnull    
50 [0x32]:          popobj2    
51 [0x33]:          returnobj   
52 [0x34]:          ret   


function: std.io#thread_group.kill_all[2137] params(0) in file: /usr/include/sharp//io//thread_group.sharp:63:5: note:  
			def kill_all() {
		    ^

0 [0x0]: line: 64 istorel -1, fp+2   
2 [0x2]:          movl 0   
3 [0x3]:          movn #1   
5 [0x5]:          pushobj   
6 [0x6]:          invoke_delegate 3934 { static=0, args=0 }   
8 [0x8]:          popl 3   
9 [0x9]:          iaddl 1, fp@2   
11 [0xb]:          movl 3   
12 [0xc]:          sizeof ecx   
13 [0xd]:          loadl ebx, fp+2   
14 [0xe]:          lt ebx, ecx   
15 [0xf]:          jne 31   
16 [0x10]:          iaload ecx, ebx   
17 [0x11]:          smovr_2 ecx, fp+1   
18 [0x12]: line: 65 movl 0   
19 [0x13]:          movn #0   
21 [0x15]:          pushobj   
22 [0x16]:          new_class @0 // std#__srt_global   
23 [0x17]:          inc adx   
24 [0x18]:          dup    
25 [0x19]:          ipushl #1   
26 [0x1a]:          call @2630 // <std#int.int>   
27 [0x1b]:          call @3817 // <std#hashtable<std#int,std.io#thread>.at>   
28 [0x1c]:          call @2180 // <std.io#thread.interrupt>   
29 [0x1d]:          pop   
30 [0x1e]:          jmp @9   
31 [0x1f]:          ret   


constructor: std.io#thread_group.thread_group[2138] params(0) in file: /usr/include/sharp//io//thread_group.sharp:3:13: note:  
		public class thread_group : loopable<thread> {
		            ^

0 [0x0]:         new_class @0 // std#__srt_global   
1 [0x1]:         ? (148)   
2 [0x2]:         dup    
3 [0x3]:         call @3813 // <std#hashtable<std#int,std.io#thread>.hashtable>   
4 [0x4]:         movl 0   
5 [0x5]:         movn #0   
7 [0x7]:         popobj   
8 [0x8]:         new_class @0 // std#__srt_global   
9 [0x9]:         ? (155)   
10 [0xa]:         dup    
11 [0xb]:         call @3936 // <std#list<var>.list>   
12 [0xc]:         movl 0   
13 [0xd]:         movn #1   
15 [0xf]:         popobj   
16 [0x10]:         movi #0, ebx   
18 [0x12]:         movl 0   
19 [0x13]:         movn #4   
21 [0x15]:         movi #0, adx   
23 [0x17]:         rmov adx, ebx   
24 [0x18]:         ret   


function: std.io#win_fs.path_separator[2139] params(0) in file: /usr/include/sharp//io//win_fs.sharp:15:8: note:  
		    def path_separator() : var {
		       ^

0 [0x0]: line: 16 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          return_val ebx   
7 [0x7]:          ret   


function: std.io#win_fs.normalize[2140] params(1) in file: /usr/include/sharp//io//win_fs.sharp:23:8: note:  
		    def normalize(pathname: string) : string {
		       ^

0 [0x0]: line: 24 pushl 1   
1 [0x1]:          call @2000 // <std#string.size>   
2 [0x2]:          ipopl 2   
3 [0x3]: line: 25 istorel 0, fp+3   
5 [0x5]: line: 26 istorel 0, fp+4   
7 [0x7]:          ipushl #4   
8 [0x8]:          loadl ebx, fp+2   
9 [0x9]:          loadval ecx   
10 [0xa]:          lt ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 258   
14 [0xe]: line: 28 pushl 1   
15 [0xf]:          ipushl #4   
16 [0x10]:          call @1982 // <std#string.operator[>   
17 [0x11]:          loadval ebx   
18 [0x12]:          rstore ebx   
19 [0x13]:          movi #47, ebx   
21 [0x15]:          loadval ecx   
22 [0x16]:          test ecx, ebx   
23 [0x17]:          jne 112   
24 [0x18]: line: 29 ipushl #3   
25 [0x19]:          movi #0, ebx   
27 [0x1b]:          loadval ecx   
28 [0x1c]:          gt ecx, ebx   
29 [0x1d]:          movr ebx, cmt   
30 [0x1e]:          skne ebx // pc = 48   
31 [0x1f]:          movl 0   
32 [0x20]:          movn #1   
34 [0x22]:          pushobj   
35 [0x23]:          ipushl #3   
36 [0x24]:          movi #1, ebx   
38 [0x26]:          loadval ecx   
39 [0x27]:          sub ecx, ebx -> ebx   
40 [0x28]:          popobj2    
41 [0x29]:          movr adx, ebx   
42 [0x2a]:          chklen adx   
43 [0x2b]:          iaload ebx, adx   
44 [0x2c]:          rstore ebx   
45 [0x2d]:          movi #92, ebx   
47 [0x2f]:          loadval ecx   
48 [0x30]:          tne ecx, ebx   
49 [0x31]:          jne 66   
50 [0x32]: line: 30 istore 92   
52 [0x34]:          movl 0   
53 [0x35]:          movn #1   
55 [0x37]:          pushobj   
56 [0x38]:          loadl ebx, fp+3   
57 [0x39]:          movr egx, ebx   
58 [0x3a]:          inc ebx   
59 [0x3b]:          smovr_2 ebx, fp+3   
60 [0x3c]:          movr ebx, egx   
61 [0x3d]:          popobj2    
62 [0x3e]:          movr adx, ebx   
63 [0x3f]:          chklen adx   
64 [0x40]:          loadval ebx   
65 [0x41]:          rmov adx, ebx   
66 [0x42]:          nop   
67 [0x43]: line: 32 ipushl #4   
68 [0x44]:          movi #1, ebx   
70 [0x46]:          loadval ecx   
71 [0x47]:          add ecx, ebx -> ebx   
72 [0x48]:          rstore ebx   
73 [0x49]:          loadl ebx, fp+2   
74 [0x4a]:          loadval ecx   
75 [0x4b]:          lt ecx, ebx   
76 [0x4c]:          movr ebx, cmt   
77 [0x4d]:          skne ebx // pc = 92   
78 [0x4e]:          movl 1   
79 [0x4f]:          pushobj   
80 [0x50]:          ipushl #4   
81 [0x51]:          movi #1, ebx   
83 [0x53]:          loadval ecx   
84 [0x54]:          add ecx, ebx -> ebx   
85 [0x55]:          rstore ebx   
86 [0x56]:          call @1982 // <std#string.operator[>   
87 [0x57]:          loadval ebx   
88 [0x58]:          rstore ebx   
89 [0x59]:          movi #47, ebx   
91 [0x5b]:          loadval ecx   
92 [0x5c]:          test ecx, ebx   
93 [0x5d]:          jne 110   
94 [0x5e]: line: 33 iaddl 1, fp@4   
96 [0x60]: line: 34 pushl 1   
97 [0x61]:          ipushl #4   
98 [0x62]:          call @1982 // <std#string.operator[>   
99 [0x63]:          loadval ebx   
100 [0x64]:          rstore ebx   
101 [0x65]:          movi #47, ebx   
103 [0x67]:          loadval ecx   
104 [0x68]:          test ecx, ebx   
105 [0x69]:          je 94   
106 [0x6a]: line: 36 loadl ebx, fp+4   
107 [0x6b]:          movr egx, ebx   
108 [0x6c]:          dec ebx   
109 [0x6d]:          smovr_2 ebx, fp+4   
110 [0x6e]:          nop   
111 [0x6f]:          jmp @254   
112 [0x70]:          pushl 1   
113 [0x71]:          ipushl #4   
114 [0x72]:          call @1982 // <std#string.operator[>   
115 [0x73]:          loadval ebx   
116 [0x74]:          rstore ebx   
117 [0x75]:          movi #92, ebx   
119 [0x77]:          loadval ecx   
120 [0x78]:          test ecx, ebx   
121 [0x79]:          jne 237   
122 [0x7a]: line: 40 ipushl #4   
123 [0x7b]:          movi #1, ebx   
125 [0x7d]:          loadval ecx   
126 [0x7e]:          add ecx, ebx -> ebx   
127 [0x7f]:          rstore ebx   
128 [0x80]:          loadl ebx, fp+2   
129 [0x81]:          loadval ecx   
130 [0x82]:          lt ecx, ebx   
131 [0x83]:          movr ebx, cmt   
132 [0x84]:          skne ebx // pc = 147   
133 [0x85]:          movl 1   
134 [0x86]:          pushobj   
135 [0x87]:          ipushl #4   
136 [0x88]:          movi #1, ebx   
138 [0x8a]:          loadval ecx   
139 [0x8b]:          add ecx, ebx -> ebx   
140 [0x8c]:          rstore ebx   
141 [0x8d]:          call @1982 // <std#string.operator[>   
142 [0x8e]:          loadval ebx   
143 [0x8f]:          rstore ebx   
144 [0x90]:          movi #92, ebx   
146 [0x92]:          loadval ecx   
147 [0x93]:          test ecx, ebx   
148 [0x94]:          jne 192   
149 [0x95]: line: 41 iaddl 1, fp@4   
151 [0x97]: line: 42 pushl 1   
152 [0x98]:          ipushl #4   
153 [0x99]:          call @1982 // <std#string.operator[>   
154 [0x9a]:          loadval ebx   
155 [0x9b]:          rstore ebx   
156 [0x9c]:          movi #92, ebx   
158 [0x9e]:          loadval ecx   
159 [0x9f]:          test ecx, ebx   
160 [0xa0]:          je 149   
161 [0xa1]: line: 45 ipushl #3   
162 [0xa2]:          movi #0, ebx   
164 [0xa4]:          loadval ecx   
165 [0xa5]:          gt ecx, ebx   
166 [0xa6]:          movr ebx, cmt   
167 [0xa7]:          skne ebx // pc = 185   
168 [0xa8]:          movl 0   
169 [0xa9]:          movn #1   
171 [0xab]:          pushobj   
172 [0xac]:          ipushl #3   
173 [0xad]:          movi #1, ebx   
175 [0xaf]:          loadval ecx   
176 [0xb0]:          sub ecx, ebx -> ebx   
177 [0xb1]:          popobj2    
178 [0xb2]:          movr adx, ebx   
179 [0xb3]:          chklen adx   
180 [0xb4]:          iaload ebx, adx   
181 [0xb5]:          rstore ebx   
182 [0xb6]:          movi #92, ebx   
184 [0xb8]:          loadval ecx   
185 [0xb9]:          tne ecx, ebx   
186 [0xba]:          jne 191   
187 [0xbb]: line: 46 loadl ebx, fp+4   
188 [0xbc]:          movr egx, ebx   
189 [0xbd]:          dec ebx   
190 [0xbe]:          smovr_2 ebx, fp+4   
191 [0xbf]:          nop   
192 [0xc0]:          nop   
193 [0xc1]: line: 49 ipushl #3   
194 [0xc2]:          movi #0, ebx   
196 [0xc4]:          loadval ecx   
197 [0xc5]:          gt ecx, ebx   
198 [0xc6]:          movr ebx, cmt   
199 [0xc7]:          skne ebx // pc = 217   
200 [0xc8]:          movl 0   
201 [0xc9]:          movn #1   
203 [0xcb]:          pushobj   
204 [0xcc]:          ipushl #3   
205 [0xcd]:          movi #1, ebx   
207 [0xcf]:          loadval ecx   
208 [0xd0]:          sub ecx, ebx -> ebx   
209 [0xd1]:          popobj2    
210 [0xd2]:          movr adx, ebx   
211 [0xd3]:          chklen adx   
212 [0xd4]:          iaload ebx, adx   
213 [0xd5]:          rstore ebx   
214 [0xd6]:          movi #92, ebx   
216 [0xd8]:          loadval ecx   
217 [0xd9]:          tne ecx, ebx   
218 [0xda]:          jne 235   
219 [0xdb]: line: 50 istore 92   
221 [0xdd]:          movl 0   
222 [0xde]:          movn #1   
224 [0xe0]:          pushobj   
225 [0xe1]:          loadl ebx, fp+3   
226 [0xe2]:          movr egx, ebx   
227 [0xe3]:          inc ebx   
228 [0xe4]:          smovr_2 ebx, fp+3   
229 [0xe5]:          movr ebx, egx   
230 [0xe6]:          popobj2    
231 [0xe7]:          movr adx, ebx   
232 [0xe8]:          chklen adx   
233 [0xe9]:          loadval ebx   
234 [0xea]:          rmov adx, ebx   
235 [0xeb]:          nop   
236 [0xec]:          jmp @254   
237 [0xed]: line: 53 pushl 1   
238 [0xee]:          ipushl #4   
239 [0xef]:          call @1982 // <std#string.operator[>   
240 [0xf0]:          movl 0   
241 [0xf1]:          movn #1   
243 [0xf3]:          pushobj   
244 [0xf4]:          loadl ebx, fp+3   
245 [0xf5]:          movr egx, ebx   
246 [0xf6]:          inc ebx   
247 [0xf7]:          smovr_2 ebx, fp+3   
248 [0xf8]:          movr ebx, egx   
249 [0xf9]:          popobj2    
250 [0xfa]:          movr adx, ebx   
251 [0xfb]:          chklen adx   
252 [0xfc]:          loadval ebx   
253 [0xfd]:          rmov adx, ebx   
254 [0xfe]:          nop   
255 [0xff]:          iaddl 1, fp@4   
257 [0x101]:          jmp @7   
258 [0x102]: line: 56 new_class @0 // std#__srt_global   
259 [0x103]:          ret   
260 [0x104]:          dup    
261 [0x105]:          movl 0   
262 [0x106]:          movn #1   
264 [0x108]:          pushobj   
265 [0x109]:          istore 0   
267 [0x10b]:          ipushl #3   
268 [0x10c]:          call @1964 // <std#string.string>   
269 [0x10d]:          popobj2    
270 [0x10e]:          returnobj   
271 [0x10f]:          ret   


function: std.io#win_fs.get_attributes[2141] params(1) in file: /usr/include/sharp//io//win_fs.sharp:64:9: note:  
		     def get_attributes(f: file) : var {
		        ^

0 [0x0]: line: 65 movl 1   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          call @1985 // <std#string.get_data>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+2   
7 [0x7]: line: 66 istorel 0, fp+3   
9 [0x9]: line: 72 pushl 2   : protected asm start
10 [0xa]:          int 0x25   
11 [0xb]:          smovr_2 ebx, fp+3   
12 [0xc]: line: 78 loadl ebx, fp+3   : protected asm end
13 [0xd]:          return_val ebx   
14 [0xe]:          ret   


function: std.io#win_fs.check_access[2142] params(2) in file: /usr/include/sharp//io//win_fs.sharp:88:9: note:  
		     def check_access(f: file, access: var) : var {
		        ^

0 [0x0]: line: 89 movl 1   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          call @1985 // <std#string.get_data>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+3   
7 [0x7]: line: 90 istorel 0, fp+4   
9 [0x9]: line: 93 ipushl #2   
10 [0xa]:          ldc ebx // 1   
11 [0xb]:          loadval ecx   
12 [0xc]:          test ecx, ebx   
13 [0xd]:          jne 17   
14 [0xe]: line: 94 istorel -1, fp+0   
16 [0x10]:          ret   
17 [0x11]:          nop   
18 [0x12]: line: 100 pushl 3   : protected asm start
19 [0x13]:           loadl ebx, fp+2   
20 [0x14]:           int 0x24   
21 [0x15]:           smovr_2 ebx, fp+4   
22 [0x16]: line: 107 loadl ebx, fp+4   : protected asm end
23 [0x17]:           return_val ebx   
24 [0x18]:           ret   


constructor: std.io#win_fs.win_fs[2143] params(0) in file: /usr/include/sharp//io//win_fs.sharp:11:16: note:  
		protected class win_fs base file_system {
		               ^

0 [0x0]:         movi #92, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         mov8 ebx, ebx   
6 [0x6]:         movi #0, adx   
8 [0x8]:         rmov adx, ebx   
9 [0x9]:         movi #512, ebx   
11 [0xb]:         newarry ebx: 0   
12 [0xc]:         movl 0   
13 [0xd]:         movn #1   
15 [0xf]:         popobj   
16 [0x10]:         ret   


std.io#uncaught_exception_handler.uncaught_exception[2144] params(1) in file: /usr/include/sharp//io//uncaught_exception_handler.sharp:4:8: note:  
		    def uncaught_exception(err: throwable);
		       ^



constructor: std.io#uncaught_exception_handler.uncaught_exception_handler[2145] params(0) in file: /usr/include/sharp//io//uncaught_exception_handler.sharp:3:10: note:  
		interface uncaught_exception_handler {
		         ^

0 [0x0]:         ret   


std.io#file_system.path_separator[2146] params(0) in file: /usr/include/sharp//io//file_system.sharp:18:8: note:  
		    def path_separator() : var;
		       ^



std.io#file_system.normalize[2147] params(1) in file: /usr/include/sharp//io//file_system.sharp:24:8: note:  
		    def normalize(path: string) : string;
		       ^



function: std.io#file_system.resolve[2148] params(1) in file: /usr/include/sharp//io//file_system.sharp:30:9: note:  
		     def resolve(f: file) : string {
		        ^

0 [0x0]: line: 32 movl 1   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          call @1985 // <std#string.get_data>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+2   
7 [0x7]: line: 38 pushl 2   : protected asm start
8 [0x8]:          int 0x20   
9 [0x9]:          popl 2   : protected asm end
10 [0xa]: line: 44 movl 2   
11 [0xb]:          checknull   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 29   
14 [0xe]: line: 45 new_class @0 // std#__srt_global   
15 [0xf]:          shr adx, adx -> adx   
16 [0x10]:          dup    
17 [0x11]:          new_class @0 // std#__srt_global   
18 [0x12]:          ret   
19 [0x13]:          dup    
20 [0x14]:          newstr @51 // file could not be resolved:    
21 [0x15]:          call @1959 // <std#string.string>   
22 [0x16]:          movl 1   
23 [0x17]:          movn #0   
25 [0x19]:          pushobj   
26 [0x1a]:          call @1974 // <std#string.operator+>   
27 [0x1b]:          call @3558 // <std#io_exception.io_exception>   
28 [0x1c]:          throw    
29 [0x1d]:          nop   
30 [0x1e]: line: 48 new_class @0 // std#__srt_global   
31 [0x1f]:          ret   
32 [0x20]:          dup    
33 [0x21]:          newstr @24 //    
34 [0x22]:          call @1959 // <std#string.string>   
35 [0x23]:          pushl 2   
36 [0x24]:          call @1971 // <std#string.operator+>   
37 [0x25]:          popobj2    
38 [0x26]:          returnobj   
39 [0x27]:          ret   


std.io#file_system.get_attributes[2149] params(1) in file: /usr/include/sharp//io//file_system.sharp:67:9: note:  
		     def get_attributes(f: file) : var;
		        ^



std.io#file_system.check_access[2150] params(2) in file: /usr/include/sharp//io//file_system.sharp:81:9: note:  
		     def check_access(f: file, access: var) : var;
		        ^



function: std.io#file_system.set_permission[2151] params(4) in file: /usr/include/sharp//io//file_system.sharp:88:9: note:  
		     def set_permission(f: file, access: var, enable: var, owneronly: var) : var {
		        ^

0 [0x0]: line: 90 pushl 1   
1 [0x1]:          call @2217 // <std.io#file.get_absolute_path>   
2 [0x2]:          call @1985 // <std#string.get_data>   
3 [0x3]:          popobj2    
4 [0x4]:          smovr_3 fp+5   
5 [0x5]: line: 91 istorel 0, fp+6   
7 [0x7]: line: 93 call @3449 // <platform#build.is_windows>   
8 [0x8]:          loadval ebx   
9 [0x9]:          skne ebx // pc = 13   
10 [0xa]:          ipushl #2   
11 [0xb]:          ldc ebx // 1   
12 [0xc]:          loadval ecx   
13 [0xd]:          test ecx, ebx   
14 [0xe]:          jne 18   
15 [0xf]: line: 94 istorel -1, fp+0   
17 [0x11]:          ret   
18 [0x12]:          nop   
19 [0x13]: line: 100 pushl 5   : protected asm start
20 [0x14]:           loadl ebx, fp+2   
21 [0x15]:           loadl egx, fp+3   
22 [0x16]:           loadl ecx, fp+4   
23 [0x17]:           int 0x2e   
24 [0x18]:           smovr_2 ebx, fp+6   
25 [0x19]: line: 109 loadl ebx, fp+6   : protected asm end
26 [0x1a]:           return_val ebx   
27 [0x1b]:           ret   


function: std.io#file_system.last_modified_time[2152] params(2) in file: /usr/include/sharp//io//file_system.sharp:121:9: note:  
		     def last_modified_time(f: file, stat_id: var) : var {
		        ^

0 [0x0]: line: 123 pushl 1   
1 [0x1]:           call @2217 // <std.io#file.get_absolute_path>   
2 [0x2]:           call @1985 // <std#string.get_data>   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+3   
5 [0x5]: line: 124 istorel 0, fp+4   
7 [0x7]: line: 130 pushl 3   : protected asm start
8 [0x8]:           loadl ebx, fp+2   
9 [0x9]:           int 0x26   
10 [0xa]:           smovr_2 ebx, fp+4   
11 [0xb]: line: 137 loadl ebx, fp+4   : protected asm end
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


function: std.io#file_system.get_length[2153] params(1) in file: /usr/include/sharp//io//file_system.sharp:145:9: note:  
		     def get_length(f: file) : var {
		        ^

0 [0x0]: line: 147 pushl 1   
1 [0x1]:           call @2217 // <std.io#file.get_absolute_path>   
2 [0x2]:           call @1985 // <std#string.get_data>   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+2   
5 [0x5]: line: 148 istorel 0, fp+3   
7 [0x7]: line: 154 pushl 2   : protected asm start
8 [0x8]:           int 0x27   
9 [0x9]:           smovr_2 ebx, fp+3   
10 [0xa]: line: 160 loadl ebx, fp+3   : protected asm end
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


function: std.io#file_system.create_file[2154] params(1) in file: /usr/include/sharp//io//file_system.sharp:170:8: note:  
		    def create_file(pathname: string) {
		       ^

0 [0x0]: line: 172 pushl 1   
1 [0x1]:           call @1985 // <std#string.get_data>   
2 [0x2]:           popobj2    
3 [0x3]:           smovr_3 fp+2   
4 [0x4]: line: 178 pushl 2   : protected asm start
5 [0x5]:           int 0x28   
6 [0x6]:           ret   : protected asm end


function: std.io#file_system.delete_directory[2155] params(1) in file: /usr/include/sharp//io//file_system.sharp:188:16: note:  
		    private def delete_directory(f: file) : var {
		               ^

0 [0x0]: line: 190 pushl 1   
1 [0x1]:           call @2217 // <std.io#file.get_absolute_path>   
2 [0x2]:           call @1985 // <std#string.get_data>   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+2   
5 [0x5]: line: 191 istorel 0, fp+3   
7 [0x7]: line: 197 pushl 2   : protected asm start
8 [0x8]:           int 0x2c   
9 [0x9]:           smovr_2 ebx, fp+3   
10 [0xa]: line: 203 loadl ebx, fp+3   : protected asm end
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


function: std.io#file_system.delete[2156] params(1) in file: /usr/include/sharp//io//file_system.sharp:210:8: note:  
		    def delete(f: file) : var {
		       ^

0 [0x0]: line: 212 pushl 1   
1 [0x1]:           call @2217 // <std.io#file.get_absolute_path>   
2 [0x2]:           call @1985 // <std#string.get_data>   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+2   
5 [0x5]: line: 213 istorel 0, fp+3   
7 [0x7]: line: 215 pushl 1   
8 [0x8]:           call @2221 // <std.io#file.is_directory>   
9 [0x9]:           loadval ebx   
10 [0xa]:           movr cmt, ebx   
11 [0xb]:           jne 18   
12 [0xc]: line: 216 pushl 0   
13 [0xd]:           pushl 1   
14 [0xe]:           call @2155 // <std.io#file_system.delete_directory>   
15 [0xf]:           loadval ebx   
16 [0x10]:           return_val ebx   
17 [0x11]:           ret   
18 [0x12]:           nop   
19 [0x13]: line: 222 pushl 2   : protected asm start
20 [0x14]:           int 0x29   
21 [0x15]:           smovr_2 ebx, fp+3   
22 [0x16]: line: 228 loadl ebx, fp+3   : protected asm end
23 [0x17]:           return_val ebx   
24 [0x18]:           ret   


function: std.io#file_system.list[2157] params(1) in file: /usr/include/sharp//io//file_system.sharp:236:8: note:  
		    def list(f: file) : string[] {
		       ^

0 [0x0]: line: 238 pushl 1   
1 [0x1]:           call @2217 // <std.io#file.get_absolute_path>   
2 [0x2]:           call @1985 // <std#string.get_data>   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+2   
5 [0x5]: line: 239 movl 3   
6 [0x6]:           del   
7 [0x7]: line: 241 pushl 1   
8 [0x8]:           call @2221 // <std.io#file.is_directory>   
9 [0x9]:           loadval ebx   
10 [0xa]:           not ebx, ebx   
11 [0xb]:           movr cmt, ebx   
12 [0xc]:           jne 17   
13 [0xd]: line: 242 pushnull    
14 [0xe]:           popobj2    
15 [0xf]:           returnobj   
16 [0x10]:           ret   
17 [0x11]:           nop   
18 [0x12]: line: 248 pushl 2   : protected asm start
19 [0x13]:           int 0x2a   
20 [0x14]:           popl 3   
21 [0x15]: line: 254 movl 3   : protected asm end
22 [0x16]:           returnobj   
23 [0x17]:           ret   


function: std.io#file_system.create_directory[2158] params(1) in file: /usr/include/sharp//io//file_system.sharp:261:8: note:  
		    def create_directory(f: file) : var {
		       ^

0 [0x0]: line: 263 pushl 1   
1 [0x1]:           call @2216 // <std.io#file.get_path>   
2 [0x2]:           call @1985 // <std#string.get_data>   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+2   
5 [0x5]: line: 264 istorel 0, fp+3   
7 [0x7]: line: 270 pushl 2   : protected asm start
8 [0x8]:           int 0x2b   
9 [0x9]:           smovr_2 ebx, fp+3   
10 [0xa]: line: 276 loadl ebx, fp+3   : protected asm end
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


function: std.io#file_system.rename[2159] params(2) in file: /usr/include/sharp//io//file_system.sharp:284:8: note:  
		    def rename(f1: file, f2: file) : var {
		       ^

0 [0x0]: line: 286 pushl 1   
1 [0x1]:           call @2217 // <std.io#file.get_absolute_path>   
2 [0x2]:           call @1985 // <std#string.get_data>   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+3   
5 [0x5]: line: 287 pushl 2   
6 [0x6]:           call @2216 // <std.io#file.get_path>   
7 [0x7]:           call @1985 // <std#string.get_data>   
8 [0x8]:           popobj2    
9 [0x9]:           smovr_3 fp+4   
10 [0xa]: line: 288 istorel 0, fp+5   
12 [0xc]: line: 294 pushl 4   : protected asm start
13 [0xd]:           pushl 3   
14 [0xe]:           int 0x30   
15 [0xf]:           smovr_2 ebx, fp+5   
16 [0x10]: line: 301 loadl ebx, fp+5   : protected asm end
17 [0x11]:           return_val ebx   
18 [0x12]:           ret   


function: std.io#file_system.read[2160] params(1) in file: /usr/include/sharp//io//file_system.sharp:305:15: note:  
		    static def read(f: file) : string {
		              ^

0 [0x0]: line: 306 pushl 0   
1 [0x1]:           call @2217 // <std.io#file.get_absolute_path>   
2 [0x2]:           call @1985 // <std#string.get_data>   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+1   
5 [0x5]: line: 307 movl 2   
6 [0x6]:           del   
7 [0x7]: line: 308 istorel 0, fp+3   
9 [0x9]: line: 314 pushl 1   : protected asm start
10 [0xa]:           int 0x2f   
11 [0xb]:           popl 2   
12 [0xc]: line: 320 movl 2   : protected asm end
13 [0xd]:           returnobj   
14 [0xe]:           ret   


function: std.io#file_system.write[2161] params(2) in file: /usr/include/sharp//io//file_system.sharp:324:15: note:  
		    static def write(f: file, data: string) : var {
		              ^

0 [0x0]: line: 325 pushl 0   
1 [0x1]:           call @2217 // <std.io#file.get_absolute_path>   
2 [0x2]:           call @1985 // <std#string.get_data>   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+2   
5 [0x5]: line: 326 pushl 1   
6 [0x6]:           call @1985 // <std#string.get_data>   
7 [0x7]:           popobj2    
8 [0x8]:           smovr_3 fp+3   
9 [0x9]: line: 327 istorel 0, fp+4   
11 [0xb]: line: 333 pushl 3   : protected asm start
12 [0xc]:           pushl 2   
13 [0xd]:           int 0x31   
14 [0xe]:           smovr_2 ebx, fp+4   
15 [0xf]: line: 340 loadl ebx, fp+4   : protected asm end
16 [0x10]:           return_val ebx   
17 [0x11]:           ret   


function: std.io#file_system.set_last_modified_time[2162] params(2) in file: /usr/include/sharp//io//file_system.sharp:348:15: note:  
		    public def set_last_modified_time(f: file, time: var) : var {
		              ^

0 [0x0]: line: 350 pushl 1   
1 [0x1]:           call @2217 // <std.io#file.get_absolute_path>   
2 [0x2]:           call @1985 // <std#string.get_data>   
3 [0x3]:           popobj2    
4 [0x4]:           smovr_3 fp+3   
5 [0x5]: line: 351 istorel 0, fp+4   
7 [0x7]: line: 357 pushl 3   : protected asm start
8 [0x8]:           loadl ebx, fp+2   
9 [0x9]:           int 0x2d   
10 [0xa]:           smovr_2 ebx, fp+4   
11 [0xb]: line: 364 loadl ebx, fp+4   : protected asm end
12 [0xc]:           return_val ebx   
13 [0xd]:           ret   


function: std.io#file_system.set_read_only[2163] params(1) in file: /usr/include/sharp//io//file_system.sharp:372:15: note:  
		    public def set_read_only(f: file) : var {
		              ^

0 [0x0]: line: 373 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           istore 2   
4 [0x4]:           movi #0, ebx   
6 [0x6]:           rstore ebx   
7 [0x7]:           istore 1   
9 [0x9]:           call @2151 // <std.io#file_system.set_permission>   
10 [0xa]:           pop   
11 [0xb]: line: 374 pushl 0   
12 [0xc]:           pushl 1   
13 [0xd]:           istore 4   
15 [0xf]:           movi #1, ebx   
17 [0x11]:           rstore ebx   
18 [0x12]:           istore 1   
20 [0x14]:           call @2151 // <std.io#file_system.set_permission>   
21 [0x15]:           loadval ebx   
22 [0x16]:           return_val ebx   
23 [0x17]:           ret   


function: std.io#file_system.get_space_available[2164] params(1) in file: /usr/include/sharp//io//file_system.sharp:382:15: note:  
		    static def get_space_available(request: var) : var {
		              ^

0 [0x0]: line: 384 istorel 0, fp+1   
2 [0x2]: line: 390 loadl ebx, fp+0   : protected asm start
3 [0x3]:           int 0x32   
4 [0x4]:           smovr_2 ebx, fp+1   
5 [0x5]: line: 396 loadl ebx, fp+1   : protected asm end
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


constructor: std.io#file_system.file_system[2165] params(0) in file: /usr/include/sharp//io//file_system.sharp:10:16: note:  
		protected class file_system {
		               ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std.io#thread.thread[2166] params(0) in file: /usr/include/sharp//io//thread.sharp:7:19: note:  
		    private thread() {} // the user must use standardized constructor
		                  ^

0 [0x0]:         new_class @0 // std#__srt_global   
1 [0x1]:         ret   
2 [0x2]:         dup    
3 [0x3]:         newstr @24 //    
4 [0x4]:         call @1959 // <std#string.string>   
5 [0x5]:         movl 0   
6 [0x6]:         movn #6   
8 [0x8]:         popobj   
9 [0x9]:         pushl 0   
10 [0xa]:         ret   


constructor: std.io#thread.thread[2167] params(2) in file: /usr/include/sharp//io//thread.sharp:9:15: note:  
			public thread(name : string, main: (object[])(var)) {
		              ^

0 [0x0]:         new_class @0 // std#__srt_global   
1 [0x1]:         ret   
2 [0x2]:         dup    
3 [0x3]:         newstr @24 //    
4 [0x4]:         call @1959 // <std#string.string>   
5 [0x5]:         movl 0   
6 [0x6]:         movn #6   
8 [0x8]:         popobj   
9 [0x9]:         pushl 0   
10 [0xa]: line: 10 ipushl #2   
11 [0xb]:          movl 0   
12 [0xc]:          movn #11   
14 [0xe]:          loadval ebx   
15 [0xf]:          movi #0, adx   
17 [0x11]:          rmov adx, ebx   
18 [0x12]: line: 11 pushl 1   
19 [0x13]:          movl 0   
20 [0x14]:          movn #6   
22 [0x16]:          popobj   
23 [0x17]: line: 12 movg @14 // @std.io#thread_group   
24 [0x18]:          movn #0   
26 [0x1a]:          pushobj   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #7   
30 [0x1e]:          popobj   
31 [0x1f]: line: 13 movl 0   
32 [0x20]:          movn #7   
34 [0x22]:          pushobj   
35 [0x23]:          call @2133 // <std.io#thread_group.get_priority>   
36 [0x24]:          movl 0   
37 [0x25]:          movn #3   
39 [0x27]:          popobj   
40 [0x28]: line: 14 movi #-1, ebx   
42 [0x2a]:          movl 0   
43 [0x2b]:          movn #1   
45 [0x2d]:          movi #0, adx   
47 [0x2f]:          rmov adx, ebx   
48 [0x30]: line: 15 movg @19 // @std.io#thread   
49 [0x31]:          movn #0   
51 [0x33]:          movi #0, adx   
53 [0x35]:          iaload ebx, adx   
54 [0x36]:          movr egx, ebx   
55 [0x37]:          inc ebx   
56 [0x38]:          movi #0, adx   
58 [0x3a]:          rmov adx, ebx   
59 [0x3b]:          rstore egx   
60 [0x3c]:          movl 0   
61 [0x3d]:          movn #2   
63 [0x3f]:          loadval ebx   
64 [0x40]:          movi #0, adx   
66 [0x42]:          rmov adx, ebx   
67 [0x43]: line: 17 movl 0   
68 [0x44]:          movn #7   
70 [0x46]:          pushobj   
71 [0x47]:          pushl 0   
72 [0x48]:          call @2130 // <std.io#thread_group.add>   
73 [0x49]:          ret   


constructor: std.io#thread.thread[2168] params(3) in file: /usr/include/sharp//io//thread.sharp:20:15: note:  
			public thread(name : string, daemon: var, main: (object[])(var)) {
		              ^

0 [0x0]:         new_class @0 // std#__srt_global   
1 [0x1]:         ret   
2 [0x2]:         dup    
3 [0x3]:         newstr @24 //    
4 [0x4]:         call @1959 // <std#string.string>   
5 [0x5]:         movl 0   
6 [0x6]:         movn #6   
8 [0x8]:         popobj   
9 [0x9]:         pushl 0   
10 [0xa]: line: 21 ipushl #3   
11 [0xb]:          movl 0   
12 [0xc]:          movn #11   
14 [0xe]:          loadval ebx   
15 [0xf]:          movi #0, adx   
17 [0x11]:          rmov adx, ebx   
18 [0x12]: line: 22 pushl 1   
19 [0x13]:          movl 0   
20 [0x14]:          movn #6   
22 [0x16]:          popobj   
23 [0x17]: line: 23 ipushl #2   
24 [0x18]:          movl 0   
25 [0x19]:          movn #4   
27 [0x1b]:          loadval ebx   
28 [0x1c]:          movi #0, adx   
30 [0x1e]:          rmov adx, ebx   
31 [0x1f]: line: 24 movg @14 // @std.io#thread_group   
32 [0x20]:          movn #0   
34 [0x22]:          pushobj   
35 [0x23]:          movl 0   
36 [0x24]:          movn #7   
38 [0x26]:          popobj   
39 [0x27]: line: 25 movl 0   
40 [0x28]:          movn #7   
42 [0x2a]:          pushobj   
43 [0x2b]:          call @2133 // <std.io#thread_group.get_priority>   
44 [0x2c]:          movl 0   
45 [0x2d]:          movn #3   
47 [0x2f]:          popobj   
48 [0x30]: line: 26 movi #-1, ebx   
50 [0x32]:          movl 0   
51 [0x33]:          movn #1   
53 [0x35]:          movi #0, adx   
55 [0x37]:          rmov adx, ebx   
56 [0x38]: line: 27 movg @19 // @std.io#thread   
57 [0x39]:          movn #0   
59 [0x3b]:          movi #0, adx   
61 [0x3d]:          iaload ebx, adx   
62 [0x3e]:          movr egx, ebx   
63 [0x3f]:          inc ebx   
64 [0x40]:          movi #0, adx   
66 [0x42]:          rmov adx, ebx   
67 [0x43]:          rstore egx   
68 [0x44]:          movl 0   
69 [0x45]:          movn #2   
71 [0x47]:          loadval ebx   
72 [0x48]:          movi #0, adx   
74 [0x4a]:          rmov adx, ebx   
75 [0x4b]: line: 29 movl 0   
76 [0x4c]:          movn #7   
78 [0x4e]:          pushobj   
79 [0x4f]:          pushl 0   
80 [0x50]:          call @2130 // <std.io#thread_group.add>   
81 [0x51]:          ret   


constructor: std.io#thread.thread[2169] params(3) in file: /usr/include/sharp//io//thread.sharp:32:18: note:  
		    public thread(name : string, main: (object[])(var), stack_size : var) {
		                 ^

0 [0x0]:         new_class @0 // std#__srt_global   
1 [0x1]:         ret   
2 [0x2]:         dup    
3 [0x3]:         newstr @24 //    
4 [0x4]:         call @1959 // <std#string.string>   
5 [0x5]:         movl 0   
6 [0x6]:         movn #6   
8 [0x8]:         popobj   
9 [0x9]:         pushl 0   
10 [0xa]: line: 33 ipushl #2   
11 [0xb]:          movl 0   
12 [0xc]:          movn #11   
14 [0xe]:          loadval ebx   
15 [0xf]:          movi #0, adx   
17 [0x11]:          rmov adx, ebx   
18 [0x12]: line: 34 pushl 1   
19 [0x13]:          movl 0   
20 [0x14]:          movn #6   
22 [0x16]:          popobj   
23 [0x17]: line: 35 ipushl #3   
24 [0x18]:          movl 0   
25 [0x19]:          movn #10   
27 [0x1b]:          loadval ebx   
28 [0x1c]:          movi #0, adx   
30 [0x1e]:          rmov adx, ebx   
31 [0x1f]: line: 36 movg @14 // @std.io#thread_group   
32 [0x20]:          movn #0   
34 [0x22]:          pushobj   
35 [0x23]:          movl 0   
36 [0x24]:          movn #7   
38 [0x26]:          popobj   
39 [0x27]: line: 37 movl 0   
40 [0x28]:          movn #7   
42 [0x2a]:          pushobj   
43 [0x2b]:          call @2133 // <std.io#thread_group.get_priority>   
44 [0x2c]:          movl 0   
45 [0x2d]:          movn #3   
47 [0x2f]:          popobj   
48 [0x30]: line: 38 movi #-1, ebx   
50 [0x32]:          movl 0   
51 [0x33]:          movn #1   
53 [0x35]:          movi #0, adx   
55 [0x37]:          rmov adx, ebx   
56 [0x38]: line: 39 movg @19 // @std.io#thread   
57 [0x39]:          movn #0   
59 [0x3b]:          movi #0, adx   
61 [0x3d]:          iaload ebx, adx   
62 [0x3e]:          movr egx, ebx   
63 [0x3f]:          inc ebx   
64 [0x40]:          movi #0, adx   
66 [0x42]:          rmov adx, ebx   
67 [0x43]:          rstore egx   
68 [0x44]:          movl 0   
69 [0x45]:          movn #2   
71 [0x47]:          loadval ebx   
72 [0x48]:          movi #0, adx   
74 [0x4a]:          rmov adx, ebx   
75 [0x4b]: line: 41 movl 0   
76 [0x4c]:          movn #7   
78 [0x4e]:          pushobj   
79 [0x4f]:          pushl 0   
80 [0x50]:          call @2130 // <std.io#thread_group.add>   
81 [0x51]:          ret   


constructor: std.io#thread.thread[2170] params(4) in file: /usr/include/sharp//io//thread.sharp:44:18: note:  
		    public thread(name : string, daemon: var, main: (object[])(var), stack_size : var) {
		                 ^

0 [0x0]:         new_class @0 // std#__srt_global   
1 [0x1]:         ret   
2 [0x2]:         dup    
3 [0x3]:         newstr @24 //    
4 [0x4]:         call @1959 // <std#string.string>   
5 [0x5]:         movl 0   
6 [0x6]:         movn #6   
8 [0x8]:         popobj   
9 [0x9]:         pushl 0   
10 [0xa]: line: 45 ipushl #3   
11 [0xb]:          movl 0   
12 [0xc]:          movn #11   
14 [0xe]:          loadval ebx   
15 [0xf]:          movi #0, adx   
17 [0x11]:          rmov adx, ebx   
18 [0x12]: line: 46 pushl 1   
19 [0x13]:          movl 0   
20 [0x14]:          movn #6   
22 [0x16]:          popobj   
23 [0x17]: line: 47 ipushl #4   
24 [0x18]:          movl 0   
25 [0x19]:          movn #10   
27 [0x1b]:          loadval ebx   
28 [0x1c]:          movi #0, adx   
30 [0x1e]:          rmov adx, ebx   
31 [0x1f]: line: 48 ipushl #2   
32 [0x20]:          movl 0   
33 [0x21]:          movn #4   
35 [0x23]:          loadval ebx   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]: line: 49 movg @14 // @std.io#thread_group   
40 [0x28]:          movn #0   
42 [0x2a]:          pushobj   
43 [0x2b]:          movl 0   
44 [0x2c]:          movn #7   
46 [0x2e]:          popobj   
47 [0x2f]: line: 50 movl 0   
48 [0x30]:          movn #7   
50 [0x32]:          pushobj   
51 [0x33]:          call @2133 // <std.io#thread_group.get_priority>   
52 [0x34]:          movl 0   
53 [0x35]:          movn #3   
55 [0x37]:          popobj   
56 [0x38]: line: 51 movi #-1, ebx   
58 [0x3a]:          movl 0   
59 [0x3b]:          movn #1   
61 [0x3d]:          movi #0, adx   
63 [0x3f]:          rmov adx, ebx   
64 [0x40]: line: 52 movg @19 // @std.io#thread   
65 [0x41]:          movn #0   
67 [0x43]:          movi #0, adx   
69 [0x45]:          iaload ebx, adx   
70 [0x46]:          movr egx, ebx   
71 [0x47]:          inc ebx   
72 [0x48]:          movi #0, adx   
74 [0x4a]:          rmov adx, ebx   
75 [0x4b]:          rstore egx   
76 [0x4c]:          movl 0   
77 [0x4d]:          movn #2   
79 [0x4f]:          loadval ebx   
80 [0x50]:          movi #0, adx   
82 [0x52]:          rmov adx, ebx   
83 [0x53]: line: 54 movl 0   
84 [0x54]:          movn #7   
86 [0x56]:          pushobj   
87 [0x57]:          pushl 0   
88 [0x58]:          call @2130 // <std.io#thread_group.add>   
89 [0x59]:          ret   


constructor: std.io#thread.thread[2171] params(4) in file: /usr/include/sharp//io//thread.sharp:57:18: note:  
		    public thread(name : string, main: (object[])(var), stack_size : var, group : thread_group) {
		                 ^

0 [0x0]:         new_class @0 // std#__srt_global   
1 [0x1]:         ret   
2 [0x2]:         dup    
3 [0x3]:         newstr @24 //    
4 [0x4]:         call @1959 // <std#string.string>   
5 [0x5]:         movl 0   
6 [0x6]:         movn #6   
8 [0x8]:         popobj   
9 [0x9]:         pushl 0   
10 [0xa]: line: 58 ipushl #2   
11 [0xb]:          movl 0   
12 [0xc]:          movn #11   
14 [0xe]:          loadval ebx   
15 [0xf]:          movi #0, adx   
17 [0x11]:          rmov adx, ebx   
18 [0x12]: line: 59 pushl 1   
19 [0x13]:          movl 0   
20 [0x14]:          movn #6   
22 [0x16]:          popobj   
23 [0x17]: line: 60 ipushl #3   
24 [0x18]:          movl 0   
25 [0x19]:          movn #10   
27 [0x1b]:          loadval ebx   
28 [0x1c]:          movi #0, adx   
30 [0x1e]:          rmov adx, ebx   
31 [0x1f]: line: 61 pushl 4   
32 [0x20]:          movl 0   
33 [0x21]:          movn #7   
35 [0x23]:          popobj   
36 [0x24]: line: 62 pushl 4   
37 [0x25]:          call @2133 // <std.io#thread_group.get_priority>   
38 [0x26]:          movl 0   
39 [0x27]:          movn #3   
41 [0x29]:          popobj   
42 [0x2a]: line: 63 movi #-1, ebx   
44 [0x2c]:          movl 0   
45 [0x2d]:          movn #1   
47 [0x2f]:          movi #0, adx   
49 [0x31]:          rmov adx, ebx   
50 [0x32]: line: 64 movg @19 // @std.io#thread   
51 [0x33]:          movn #0   
53 [0x35]:          movi #0, adx   
55 [0x37]:          iaload ebx, adx   
56 [0x38]:          movr egx, ebx   
57 [0x39]:          inc ebx   
58 [0x3a]:          movi #0, adx   
60 [0x3c]:          rmov adx, ebx   
61 [0x3d]:          rstore egx   
62 [0x3e]:          movl 0   
63 [0x3f]:          movn #2   
65 [0x41]:          loadval ebx   
66 [0x42]:          movi #0, adx   
68 [0x44]:          rmov adx, ebx   
69 [0x45]: line: 66 movl 0   
70 [0x46]:          movn #7   
72 [0x48]:          pushobj   
73 [0x49]:          pushl 0   
74 [0x4a]:          call @2130 // <std.io#thread_group.add>   
75 [0x4b]:          ret   


constructor: std.io#thread.thread[2172] params(3) in file: /usr/include/sharp//io//thread.sharp:69:18: note:  
		    public thread(name : string, main: (object[])(var), group : thread_group) {
		                 ^

0 [0x0]:         new_class @0 // std#__srt_global   
1 [0x1]:         ret   
2 [0x2]:         dup    
3 [0x3]:         newstr @24 //    
4 [0x4]:         call @1959 // <std#string.string>   
5 [0x5]:         movl 0   
6 [0x6]:         movn #6   
8 [0x8]:         popobj   
9 [0x9]:         pushl 0   
10 [0xa]: line: 70 ipushl #2   
11 [0xb]:          movl 0   
12 [0xc]:          movn #11   
14 [0xe]:          loadval ebx   
15 [0xf]:          movi #0, adx   
17 [0x11]:          rmov adx, ebx   
18 [0x12]: line: 71 pushl 1   
19 [0x13]:          movl 0   
20 [0x14]:          movn #6   
22 [0x16]:          popobj   
23 [0x17]: line: 72 pushl 3   
24 [0x18]:          movl 0   
25 [0x19]:          movn #7   
27 [0x1b]:          popobj   
28 [0x1c]: line: 73 pushl 3   
29 [0x1d]:          call @2133 // <std.io#thread_group.get_priority>   
30 [0x1e]:          movl 0   
31 [0x1f]:          movn #3   
33 [0x21]:          popobj   
34 [0x22]: line: 74 movi #-1, ebx   
36 [0x24]:          movl 0   
37 [0x25]:          movn #1   
39 [0x27]:          movi #0, adx   
41 [0x29]:          rmov adx, ebx   
42 [0x2a]: line: 75 movg @19 // @std.io#thread   
43 [0x2b]:          movn #0   
45 [0x2d]:          movi #0, adx   
47 [0x2f]:          iaload ebx, adx   
48 [0x30]:          movr egx, ebx   
49 [0x31]:          inc ebx   
50 [0x32]:          movi #0, adx   
52 [0x34]:          rmov adx, ebx   
53 [0x35]:          rstore egx   
54 [0x36]:          movl 0   
55 [0x37]:          movn #2   
57 [0x39]:          loadval ebx   
58 [0x3a]:          movi #0, adx   
60 [0x3c]:          rmov adx, ebx   
61 [0x3d]: line: 77 movl 0   
62 [0x3e]:          movn #7   
64 [0x40]:          pushobj   
65 [0x41]:          pushl 0   
66 [0x42]:          call @2130 // <std.io#thread_group.add>   
67 [0x43]:          ret   


constructor: std.io#thread.thread[2173] params(5) in file: /usr/include/sharp//io//thread.sharp:80:18: note:  
		    public thread(name : string, daemon: var, main: (object[])(var), stack_size : var, group : thread_group) {
		                 ^

0 [0x0]:         new_class @0 // std#__srt_global   
1 [0x1]:         ret   
2 [0x2]:         dup    
3 [0x3]:         newstr @24 //    
4 [0x4]:         call @1959 // <std#string.string>   
5 [0x5]:         movl 0   
6 [0x6]:         movn #6   
8 [0x8]:         popobj   
9 [0x9]:         pushl 0   
10 [0xa]: line: 81 ipushl #3   
11 [0xb]:          movl 0   
12 [0xc]:          movn #11   
14 [0xe]:          loadval ebx   
15 [0xf]:          movi #0, adx   
17 [0x11]:          rmov adx, ebx   
18 [0x12]: line: 82 pushl 1   
19 [0x13]:          movl 0   
20 [0x14]:          movn #6   
22 [0x16]:          popobj   
23 [0x17]: line: 83 ipushl #2   
24 [0x18]:          movl 0   
25 [0x19]:          movn #4   
27 [0x1b]:          loadval ebx   
28 [0x1c]:          movi #0, adx   
30 [0x1e]:          rmov adx, ebx   
31 [0x1f]: line: 84 ipushl #4   
32 [0x20]:          movl 0   
33 [0x21]:          movn #10   
35 [0x23]:          loadval ebx   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]: line: 85 pushl 5   
40 [0x28]:          movl 0   
41 [0x29]:          movn #7   
43 [0x2b]:          popobj   
44 [0x2c]: line: 86 pushl 5   
45 [0x2d]:          call @2133 // <std.io#thread_group.get_priority>   
46 [0x2e]:          movl 0   
47 [0x2f]:          movn #3   
49 [0x31]:          popobj   
50 [0x32]: line: 87 movi #-1, ebx   
52 [0x34]:          movl 0   
53 [0x35]:          movn #1   
55 [0x37]:          movi #0, adx   
57 [0x39]:          rmov adx, ebx   
58 [0x3a]: line: 88 movg @19 // @std.io#thread   
59 [0x3b]:          movn #0   
61 [0x3d]:          movi #0, adx   
63 [0x3f]:          iaload ebx, adx   
64 [0x40]:          movr egx, ebx   
65 [0x41]:          inc ebx   
66 [0x42]:          movi #0, adx   
68 [0x44]:          rmov adx, ebx   
69 [0x45]:          rstore egx   
70 [0x46]:          movl 0   
71 [0x47]:          movn #2   
73 [0x49]:          loadval ebx   
74 [0x4a]:          movi #0, adx   
76 [0x4c]:          rmov adx, ebx   
77 [0x4d]: line: 90 movl 0   
78 [0x4e]:          movn #7   
80 [0x50]:          pushobj   
81 [0x51]:          pushl 0   
82 [0x52]:          call @2130 // <std.io#thread_group.add>   
83 [0x53]:          ret   


function: std.io#thread.start[2174] params(1) in file: /usr/include/sharp//io//thread.sharp:93:15: note:  
		    public def start(args : object[]) : thread_result {
		              ^

0 [0x0]: line: 94 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #-1, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          jne 27   
12 [0xc]: line: 95 movl 0   
13 [0xd]:          movn #4   
15 [0xf]:          movi #0, adx   
17 [0x11]:          iaload ebx, adx   
18 [0x12]:          rstore ebx   
19 [0x13]:          call @3467 // <platform.kernel#vm.thread_create>   
20 [0x14]:          movl 0   
21 [0x15]:          movn #1   
23 [0x17]:          loadval ebx   
24 [0x18]:          movi #0, adx   
26 [0x1a]:          rmov adx, ebx   
27 [0x1b]:          nop   
28 [0x1c]: line: 96 pushl 0   
29 [0x1d]:          pushl 1   
30 [0x1e]:          call @3476 // <platform.kernel#vm.thread_start>   
31 [0x1f]:          popobj2    
32 [0x20]:          returnobj   
33 [0x21]:          ret   


function: std.io#thread.start[2175] params(0) in file: /usr/include/sharp//io//thread.sharp:99:15: note:  
		    public def start() : thread_result {
		              ^

0 [0x0]: line: 100 pushl 0   
1 [0x1]:           pushnull    
2 [0x2]:           call @2174 // <std.io#thread.start>   
3 [0x3]:           popobj2    
4 [0x4]:           returnobj   
5 [0x5]:           ret   


function: std.io#thread.suspend[2176] params(0) in file: /usr/include/sharp//io//thread.sharp:103:12: note:  
			public def suspend() : thread_result {
		           ^

0 [0x0]: line: 104 pushl 0   
1 [0x1]:           call @3468 // <platform.kernel#vm.suspend>   
2 [0x2]:           popobj2    
3 [0x3]:           smovr_3 fp+1   
4 [0x4]: line: 105 pushl 1   
5 [0x5]:           movg @17 // @std.io#thread_result   
6 [0x6]:           movn #0   
8 [0x8]:           pushobj   
9 [0x9]:           call @2300 // <std#_enum_.operator==>   
10 [0xa]:           loadval ebx   
11 [0xb]:           movr cmt, ebx   
12 [0xc]:           jne 21   
13 [0xd]: line: 106 movi #1, ebx   
15 [0xf]:           movl 0   
16 [0x10]:           movn #9   
18 [0x12]:           movi #0, adx   
20 [0x14]:           rmov adx, ebx   
21 [0x15]:           nop   
22 [0x16]: line: 107 movl 1   
23 [0x17]:           returnobj   
24 [0x18]:           ret   


function: std.io#thread.unsuspend[2177] params(0) in file: /usr/include/sharp//io//thread.sharp:110:12: note:  
			public def unsuspend() : thread_result {
		           ^

0 [0x0]: line: 111 pushl 0   
1 [0x1]:           istore 0   
3 [0x3]:           call @3469 // <platform.kernel#vm.unsuspend>   
4 [0x4]:           popobj2    
5 [0x5]:           smovr_3 fp+1   
6 [0x6]: line: 112 pushl 1   
7 [0x7]:           movg @17 // @std.io#thread_result   
8 [0x8]:           movn #0   
10 [0xa]:           pushobj   
11 [0xb]:           call @2300 // <std#_enum_.operator==>   
12 [0xc]:           loadval ebx   
13 [0xd]:           movr cmt, ebx   
14 [0xe]:           jne 23   
15 [0xf]: line: 113 movi #0, ebx   
17 [0x11]:           movl 0   
18 [0x12]:           movn #9   
20 [0x14]:           movi #0, adx   
22 [0x16]:           rmov adx, ebx   
23 [0x17]:           nop   
24 [0x18]: line: 114 movl 1   
25 [0x19]:           returnobj   
26 [0x1a]:           ret   


function: std.io#thread.unsuspend_and_wait[2178] params(0) in file: /usr/include/sharp//io//thread.sharp:117:12: note:  
			public def unsuspend_and_wait() : thread_result {
		           ^

0 [0x0]: line: 118 pushl 0   
1 [0x1]:           istore 1   
3 [0x3]:           call @3469 // <platform.kernel#vm.unsuspend>   
4 [0x4]:           popobj2    
5 [0x5]:           smovr_3 fp+1   
6 [0x6]: line: 119 pushl 1   
7 [0x7]:           movg @17 // @std.io#thread_result   
8 [0x8]:           movn #0   
10 [0xa]:           pushobj   
11 [0xb]:           call @2300 // <std#_enum_.operator==>   
12 [0xc]:           loadval ebx   
13 [0xd]:           movr cmt, ebx   
14 [0xe]:           jne 23   
15 [0xf]: line: 120 movi #0, ebx   
17 [0x11]:           movl 0   
18 [0x12]:           movn #9   
20 [0x14]:           movi #0, adx   
22 [0x16]:           rmov adx, ebx   
23 [0x17]:           nop   
24 [0x18]: line: 121 movl 1   
25 [0x19]:           returnobj   
26 [0x1a]:           ret   


function: std.io#thread.join[2179] params(0) in file: /usr/include/sharp//io//thread.sharp:124:15: note:  
		    public def join() := vm.thread_join(self);
		              ^

0 [0x0]: line: 124 pushl 0   
1 [0x1]:           call @3471 // <platform.kernel#vm.thread_join>   
2 [0x2]:           popobj2    
3 [0x3]:           returnobj   
4 [0x4]:           ret   


function: std.io#thread.interrupt[2180] params(0) in file: /usr/include/sharp//io//thread.sharp:126:15: note:  
		    public def interrupt() := vm.kill(self);
		              ^

0 [0x0]: line: 126 pushl 0   
1 [0x1]:           call @3472 // <platform.kernel#vm.kill>   
2 [0x2]:           popobj2    
3 [0x3]:           returnobj   
4 [0x4]:           ret   


function: std.io#thread.current[2181] params(0) in file: /usr/include/sharp//io//thread.sharp:128:22: note:  
		    public static def current() := vm.current_thread();
		                     ^

0 [0x0]: line: 128 call @3473 // <platform.kernel#vm.current_thread>   
1 [0x1]:           popobj2    
2 [0x2]:           returnobj   
3 [0x3]:           ret   


function: std.io#thread.sleep[2182] params(1) in file: /usr/include/sharp//io//thread.sharp:130:22: note:  
		    public static def sleep(mills_time : var) := time.sleep(milliseconds, mills_time);
		                     ^

0 [0x0]: line: 130 movg @55 // @std#time_unit   
1 [0x1]:           movn #1   
3 [0x3]:           pushobj   
4 [0x4]:           ipushl #0   
5 [0x5]:           call @3532 // <std#time.sleep>   
6 [0x6]:           ret   


function: std.io#thread.suspend_for[2183] params(1) in file: /usr/include/sharp//io//thread.sharp:132:22: note:  
		    public static def suspend_for(mills_time : var) {
		                     ^

0 [0x0]: line: 133 istore 1   
2 [0x2]:           call @3473 // <platform.kernel#vm.current_thread>   
3 [0x3]:           popobj2    
4 [0x4]:           movn #9   
6 [0x6]:           loadval ebx   
7 [0x7]:           movi #0, adx   
9 [0x9]:           rmov adx, ebx   
10 [0xa]: line: 134 movg @55 // @std#time_unit   
11 [0xb]:           movn #1   
13 [0xd]:           pushobj   
14 [0xe]:           ipushl #0   
15 [0xf]:           call @3533 // <std#time.wait>   
16 [0x10]: line: 135 istore 0   
18 [0x12]:           call @3473 // <platform.kernel#vm.current_thread>   
19 [0x13]:           popobj2    
20 [0x14]:           movn #9   
22 [0x16]:           loadval ebx   
23 [0x17]:           movi #0, adx   
25 [0x19]:           rmov adx, ebx   
26 [0x1a]:           ret   


function: std.io#thread.exit[2184] params(1) in file: /usr/include/sharp//io//thread.sharp:138:22: note:  
		    public static def exit(code : var) {
		                     ^

0 [0x0]: line: 139 call @2181 // <std.io#thread.current>   
1 [0x1]:           ipushl #0   
2 [0x2]:           call @3474 // <platform.kernel#vm.exit_thread>   
3 [0x3]: line: 140 hlt   : protected asm start
4 [0x4]:           ret   : protected asm end


function: std.io#thread.hash[2185] params(0) in file: /usr/include/sharp//io//thread.sharp:143:8: note:  
		    def hash() : long {
		       ^

0 [0x0]: line: 144 new_class @0 // std#__srt_global   
1 [0x1]:           imod adx, #? (112)   
3 [0x3]:           movl 0   
4 [0x4]:           movn #2   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           rstore ebx   
10 [0xa]:           call @2426 // <std#long.long>   
11 [0xb]:           popobj2    
12 [0xc]:           returnobj   
13 [0xd]:           ret   


function: std.io#thread.yield[2186] params(0) in file: /usr/include/sharp//io//thread.sharp:147:22: note:  
		    public static def yield() := vm.thread_yield();
		                     ^

0 [0x0]: line: 147 call @3475 // <platform.kernel#vm.thread_yield>   
1 [0x1]:           ret   


function: std.io#thread.set_exception_handler[2187] params(1) in file: /usr/include/sharp//io//thread.sharp:149:15: note:  
		    public def set_exception_handler(error_handler: uncaught_exception_handler) {
		              ^

0 [0x0]: line: 150 pushl 1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #12   
4 [0x4]:           popobj   
5 [0x5]:           ret   


function: std.io#thread.set_priority[2188] params(1) in file: /usr/include/sharp//io//thread.sharp:153:15: note:  
		    public def set_priority(priority : thread_priority) : thread_result {
		              ^

0 [0x0]: line: 154 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 155 pushl 1   
3 [0x3]:           movg @13 // @std.io#thread_priority   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @2300 // <std#_enum_.operator==>   
8 [0x8]:           loadval ebx   
9 [0x9]:           movr cmt, ebx   
10 [0xa]:           je 29   
11 [0xb]:           pushl 1   
12 [0xc]:           movg @13 // @std.io#thread_priority   
13 [0xd]:           movn #1   
15 [0xf]:           pushobj   
16 [0x10]:           call @2300 // <std#_enum_.operator==>   
17 [0x11]:           loadval ebx   
18 [0x12]:           movr cmt, ebx   
19 [0x13]:           je 29   
20 [0x14]:           pushl 1   
21 [0x15]:           movg @13 // @std.io#thread_priority   
22 [0x16]:           movn #2   
24 [0x18]:           pushobj   
25 [0x19]:           call @2300 // <std#_enum_.operator==>   
26 [0x1a]:           loadval ebx   
27 [0x1b]:           movr cmt, ebx   
28 [0x1c]:           jne 41   
29 [0x1d]: line: 159 pushl 0   
30 [0x1e]:           pushl 1   
31 [0x1f]:           call @2303 // <std#_enum_.get_ordinal>   
32 [0x20]:           call @3477 // <platform.kernel#vm.set_thread_priority>   
33 [0x21]:           popobj2    
34 [0x22]:           pushobj   
35 [0x23]:           movl 0   
36 [0x24]:           _ulck   
37 [0x25]:           popobj2    
38 [0x26]:           returnobj   
39 [0x27]:           ret   
40 [0x28]:           jmp @53   
41 [0x29]: line: 162 new_class @0 // std#__srt_global   
42 [0x2a]:           skip @0 // pc = 42   
43 [0x2b]:           dup    
44 [0x2c]:           new_class @0 // std#__srt_global   
45 [0x2d]:           ret   
46 [0x2e]:           dup    
47 [0x2f]:           newstr @52 // invalid thread priority    
48 [0x30]:           call @1959 // <std#string.string>   
49 [0x31]:           pushl 1   
50 [0x32]:           call @1973 // <std#string.operator+>   
51 [0x33]:           call @3549 // <std#illegal_argument_exception.illegal_argument_exception>   
52 [0x34]:           throw    
53 [0x35]:           nop   
54 [0x36]:           movl 0   
55 [0x37]:           _ulck   


function: std.io#thread.remove_thread[2189] params(1) in file: /usr/include/sharp//io//thread.sharp:168:16: note:  
		    private def remove_thread(t : thread) {
		               ^

0 [0x0]: line: 169 movl 0   
1 [0x1]:           movn #7   
3 [0x3]:           pushobj   
4 [0x4]:           movl 1   
5 [0x5]:           movn #1   
7 [0x7]:           movi #0, adx   
9 [0x9]:           iaload ebx, adx   
10 [0xa]:           rstore ebx   
11 [0xb]:           call @2134 // <std.io#thread_group.remove>   
12 [0xc]:           pop   
13 [0xd]:           ret   


function: std.io#thread.get_id[2190] params(0) in file: /usr/include/sharp//io//thread.sharp:172:15: note:  
		    public def get_id() := id;
		              ^

0 [0x0]: line: 172 movl 0   
1 [0x1]:           movn #2   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#thread.get_native_handle[2191] params(0) in file: /usr/include/sharp//io//thread.sharp:173:15: note:  
		    public def get_native_handle() := native_handle;
		              ^

0 [0x0]: line: 173 movl 0   
1 [0x1]:           movn #1   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#thread.get_stack_size[2192] params(0) in file: /usr/include/sharp//io//thread.sharp:174:15: note:  
		    public def get_stack_size() := stack_size;
		              ^

0 [0x0]: line: 174 movl 0   
1 [0x1]:           movn #10   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#thread.get_name[2193] params(0) in file: /usr/include/sharp//io//thread.sharp:175:15: note:  
		    public def get_name() := name;
		              ^

0 [0x0]: line: 175 movl 0   
1 [0x1]:           movn #6   
3 [0x3]:           returnobj   
4 [0x4]:           ret   


function: std.io#thread.is_exited[2194] params(0) in file: /usr/include/sharp//io//thread.sharp:176:15: note:  
		    public def is_exited() := exited;
		              ^

0 [0x0]: line: 176 movl 0   
1 [0x1]:           movn #5   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#thread.is_daemon[2195] params(0) in file: /usr/include/sharp//io//thread.sharp:177:15: note:  
		    public def is_daemon() := daemon;
		              ^

0 [0x0]: line: 177 movl 0   
1 [0x1]:           movn #4   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#thread.is_started[2196] params(0) in file: /usr/include/sharp//io//thread.sharp:178:15: note:  
		    public def is_started() := started;
		              ^

0 [0x0]: line: 178 movl 0   
1 [0x1]:           movn #8   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#thread.is_suspended[2197] params(0) in file: /usr/include/sharp//io//thread.sharp:179:15: note:  
		    public def is_suspended() := suspended;
		              ^

0 [0x0]: line: 179 movl 0   
1 [0x1]:           movn #9   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#thread.set_main[2198] params(1) in file: /usr/include/sharp//io//thread.sharp:180:12: note:  
			public def set_main(main: (object[])(var)) := self->main = main;
		           ^

0 [0x0]: line: 180 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #11   
4 [0x4]:           loadval ebx   
5 [0x5]:           movi #0, adx   
7 [0x7]:           rmov adx, ebx   
8 [0x8]:           returnobj   
9 [0x9]:           ret   


function: std.io#thread.is_active[2199] params(0) in file: /usr/include/sharp//io//thread.sharp:181:12: note:  
			public def is_active() := started && !exited;
		           ^

0 [0x0]: line: 181 movl 0   
1 [0x1]:           movn #8   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           skne ebx // pc = 14   
7 [0x7]:           movl 0   
8 [0x8]:           movn #5   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           not ebx, ebx   
14 [0xe]:           return_val ebx   
15 [0xf]:           ret   


function: std.io#thread.get_exit_code[2200] params(0) in file: /usr/include/sharp//io//thread.sharp:182:12: note:  
			public def get_exit_code() := exit_code;
		           ^

0 [0x0]: line: 182 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#thread.get_exception_handler[2201] params(0) in file: /usr/include/sharp//io//thread.sharp:183:12: note:  
			public def get_exception_handler() := error_handler;
		           ^

0 [0x0]: line: 183 movl 0   
1 [0x1]:           movn #12   
3 [0x3]:           returnobj   
4 [0x4]:           ret   


overload function: std.io#thread.operator==[2202] params(1) in file: /usr/include/sharp//io//thread.sharp:185:15: note:  
		    public def operator==(t : thread) : var = native_handle==t.native_handle;
		              ^

0 [0x0]: line: 185 movl 0   
1 [0x1]:           movn #1   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #1   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           test ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


function: std.io#__srt_global.critical_section[2203] params(1) in file: /usr/include/sharp//io//critical_section.sharp:4:4: note:  
		def critical_section(block : ()()) {
		   ^

0 [0x0]: line: 5 movg @12 // @std.io#__srt_global   : protected asm start: try start: try block start
1 [0x1]: line: 6 movn #0   
3 [0x3]:         _lck    
4 [0x4]: line: 11 ipushl #0   : protected asm end
5 [0x5]:          loadval ebx   
6 [0x6]:          calld ebx   
7 [0x7]:          jmp @8   : try block end
8 [0x8]:          movl 1   : try end
9 [0x9]:          del   
10 [0xa]: line: 13 movg @12 // @std.io#__srt_global   : protected asm start: finally start
11 [0xb]:          movn #0   
13 [0xd]:          _ulck   
14 [0xe]:          movl 1   : protected asm end
15 [0xf]:          checknull   
16 [0x10]:          je 19   
17 [0x11]:          pushobj   
18 [0x12]:          ret ERR   
19 [0x13]:          nop   : finally end
20 [0x14]:          ret   


function: std.io#__srt_global.critical_section[2204] params(2) in file: /usr/include/sharp//io//critical_section.sharp:21:4: note:  
		def critical_section(block : ()(), lock_obj : object) {
		   ^

0 [0x0]: line: 22 movl 1   : protected asm start: try start: try block start
1 [0x1]: line: 23 _lck    
2 [0x2]: line: 27 ipushl #0   : protected asm end
3 [0x3]:          loadval ebx   
4 [0x4]:          calld ebx   
5 [0x5]:          jmp @6   : try block end
6 [0x6]:          movl 2   : try end
7 [0x7]:          del   
8 [0x8]: line: 29 movl 1   : protected asm start: finally start
9 [0x9]:          _ulck   
10 [0xa]:          movl 2   : protected asm end
11 [0xb]:          checknull   
12 [0xc]:          je 15   
13 [0xd]:          pushobj   
14 [0xe]:          ret ERR   
15 [0xf]:          nop   : finally end
16 [0x10]:          ret   


function: std.io#unix_fs.path_separator[2205] params(0) in file: /usr/include/sharp//io//unix_fs.sharp:12:8: note:  
		    def path_separator() : var {
		       ^

0 [0x0]: line: 13 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          return_val ebx   
7 [0x7]:          ret   


function: std.io#unix_fs.normalize[2206] params(1) in file: /usr/include/sharp//io//unix_fs.sharp:20:8: note:  
		    def normalize(pathname: string) : string {
		       ^

0 [0x0]: line: 21 pushl 1   
1 [0x1]:          call @2000 // <std#string.size>   
2 [0x2]:          ipopl 2   
3 [0x3]: line: 22 istorel 0, fp+3   
5 [0x5]: line: 23 istorel 0, fp+4   
7 [0x7]:          ipushl #4   
8 [0x8]:          loadl ebx, fp+2   
9 [0x9]:          loadval ecx   
10 [0xa]:          lt ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 265   
14 [0xe]: line: 25 pushl 1   
15 [0xf]:          ipushl #4   
16 [0x10]:          call @1982 // <std#string.operator[>   
17 [0x11]:          loadval ebx   
18 [0x12]:          rstore ebx   
19 [0x13]:          movi #92, ebx   
21 [0x15]:          loadval ecx   
22 [0x16]:          test ecx, ebx   
23 [0x17]:          jne 112   
24 [0x18]: line: 26 ipushl #3   
25 [0x19]:          movi #0, ebx   
27 [0x1b]:          loadval ecx   
28 [0x1c]:          gt ecx, ebx   
29 [0x1d]:          movr ebx, cmt   
30 [0x1e]:          skne ebx // pc = 48   
31 [0x1f]:          movl 0   
32 [0x20]:          movn #1   
34 [0x22]:          pushobj   
35 [0x23]:          ipushl #3   
36 [0x24]:          movi #1, ebx   
38 [0x26]:          loadval ecx   
39 [0x27]:          sub ecx, ebx -> ebx   
40 [0x28]:          popobj2    
41 [0x29]:          movr adx, ebx   
42 [0x2a]:          chklen adx   
43 [0x2b]:          iaload ebx, adx   
44 [0x2c]:          rstore ebx   
45 [0x2d]:          movi #47, ebx   
47 [0x2f]:          loadval ecx   
48 [0x30]:          tne ecx, ebx   
49 [0x31]:          jne 66   
50 [0x32]: line: 27 istore 47   
52 [0x34]:          movl 0   
53 [0x35]:          movn #1   
55 [0x37]:          pushobj   
56 [0x38]:          loadl ebx, fp+3   
57 [0x39]:          movr egx, ebx   
58 [0x3a]:          inc ebx   
59 [0x3b]:          smovr_2 ebx, fp+3   
60 [0x3c]:          movr ebx, egx   
61 [0x3d]:          popobj2    
62 [0x3e]:          movr adx, ebx   
63 [0x3f]:          chklen adx   
64 [0x40]:          loadval ebx   
65 [0x41]:          rmov adx, ebx   
66 [0x42]:          nop   
67 [0x43]: line: 29 ipushl #4   
68 [0x44]:          movi #1, ebx   
70 [0x46]:          loadval ecx   
71 [0x47]:          add ecx, ebx -> ebx   
72 [0x48]:          rstore ebx   
73 [0x49]:          loadl ebx, fp+2   
74 [0x4a]:          loadval ecx   
75 [0x4b]:          lt ecx, ebx   
76 [0x4c]:          movr ebx, cmt   
77 [0x4d]:          skne ebx // pc = 92   
78 [0x4e]:          movl 1   
79 [0x4f]:          pushobj   
80 [0x50]:          ipushl #4   
81 [0x51]:          movi #1, ebx   
83 [0x53]:          loadval ecx   
84 [0x54]:          add ecx, ebx -> ebx   
85 [0x55]:          rstore ebx   
86 [0x56]:          call @1982 // <std#string.operator[>   
87 [0x57]:          loadval ebx   
88 [0x58]:          rstore ebx   
89 [0x59]:          movi #92, ebx   
91 [0x5b]:          loadval ecx   
92 [0x5c]:          test ecx, ebx   
93 [0x5d]:          jne 110   
94 [0x5e]: line: 30 iaddl 1, fp@4   
96 [0x60]: line: 31 pushl 1   
97 [0x61]:          ipushl #4   
98 [0x62]:          call @1982 // <std#string.operator[>   
99 [0x63]:          loadval ebx   
100 [0x64]:          rstore ebx   
101 [0x65]:          movi #92, ebx   
103 [0x67]:          loadval ecx   
104 [0x68]:          test ecx, ebx   
105 [0x69]:          je 94   
106 [0x6a]: line: 33 loadl ebx, fp+4   
107 [0x6b]:          movr egx, ebx   
108 [0x6c]:          dec ebx   
109 [0x6d]:          smovr_2 ebx, fp+4   
110 [0x6e]:          nop   
111 [0x6f]:          jmp @261   
112 [0x70]:          pushl 1   
113 [0x71]:          ipushl #4   
114 [0x72]:          call @1982 // <std#string.operator[>   
115 [0x73]:          loadval ebx   
116 [0x74]:          rstore ebx   
117 [0x75]:          movi #47, ebx   
119 [0x77]:          loadval ecx   
120 [0x78]:          test ecx, ebx   
121 [0x79]:          jne 244   
122 [0x7a]: line: 37 ipushl #4   
123 [0x7b]:          movi #1, ebx   
125 [0x7d]:          loadval ecx   
126 [0x7e]:          add ecx, ebx -> ebx   
127 [0x7f]:          rstore ebx   
128 [0x80]:          loadl ebx, fp+2   
129 [0x81]:          loadval ecx   
130 [0x82]:          lt ecx, ebx   
131 [0x83]:          movr ebx, cmt   
132 [0x84]:          skne ebx // pc = 147   
133 [0x85]:          movl 1   
134 [0x86]:          pushobj   
135 [0x87]:          ipushl #4   
136 [0x88]:          movi #1, ebx   
138 [0x8a]:          loadval ecx   
139 [0x8b]:          add ecx, ebx -> ebx   
140 [0x8c]:          rstore ebx   
141 [0x8d]:          call @1982 // <std#string.operator[>   
142 [0x8e]:          loadval ebx   
143 [0x8f]:          rstore ebx   
144 [0x90]:          movi #47, ebx   
146 [0x92]:          loadval ecx   
147 [0x93]:          test ecx, ebx   
148 [0x94]:          jne 192   
149 [0x95]: line: 38 iaddl 1, fp@4   
151 [0x97]: line: 39 pushl 1   
152 [0x98]:          ipushl #4   
153 [0x99]:          call @1982 // <std#string.operator[>   
154 [0x9a]:          loadval ebx   
155 [0x9b]:          rstore ebx   
156 [0x9c]:          movi #47, ebx   
158 [0x9e]:          loadval ecx   
159 [0x9f]:          test ecx, ebx   
160 [0xa0]:          je 149   
161 [0xa1]: line: 42 ipushl #3   
162 [0xa2]:          movi #0, ebx   
164 [0xa4]:          loadval ecx   
165 [0xa5]:          gt ecx, ebx   
166 [0xa6]:          movr ebx, cmt   
167 [0xa7]:          skne ebx // pc = 185   
168 [0xa8]:          movl 0   
169 [0xa9]:          movn #1   
171 [0xab]:          pushobj   
172 [0xac]:          ipushl #3   
173 [0xad]:          movi #1, ebx   
175 [0xaf]:          loadval ecx   
176 [0xb0]:          sub ecx, ebx -> ebx   
177 [0xb1]:          popobj2    
178 [0xb2]:          movr adx, ebx   
179 [0xb3]:          chklen adx   
180 [0xb4]:          iaload ebx, adx   
181 [0xb5]:          rstore ebx   
182 [0xb6]:          movi #47, ebx   
184 [0xb8]:          loadval ecx   
185 [0xb9]:          tne ecx, ebx   
186 [0xba]:          jne 191   
187 [0xbb]: line: 43 loadl ebx, fp+4   
188 [0xbc]:          movr egx, ebx   
189 [0xbd]:          dec ebx   
190 [0xbe]:          smovr_2 ebx, fp+4   
191 [0xbf]:          nop   
192 [0xc0]:          nop   
193 [0xc1]: line: 46 ipushl #3   
194 [0xc2]:          movi #0, ebx   
196 [0xc4]:          loadval ecx   
197 [0xc5]:          test ecx, ebx   
198 [0xc6]:          movr ebx, cmt   
199 [0xc7]:          skpe ebx // pc = 224   
200 [0xc8]:          ipushl #3   
201 [0xc9]:          movi #0, ebx   
203 [0xcb]:          loadval ecx   
204 [0xcc]:          gt ecx, ebx   
205 [0xcd]:          movr ebx, cmt   
206 [0xce]:          skne ebx // pc = 224   
207 [0xcf]:          movl 0   
208 [0xd0]:          movn #1   
210 [0xd2]:          pushobj   
211 [0xd3]:          ipushl #3   
212 [0xd4]:          movi #1, ebx   
214 [0xd6]:          loadval ecx   
215 [0xd7]:          sub ecx, ebx -> ebx   
216 [0xd8]:          popobj2    
217 [0xd9]:          movr adx, ebx   
218 [0xda]:          chklen adx   
219 [0xdb]:          iaload ebx, adx   
220 [0xdc]:          rstore ebx   
221 [0xdd]:          movi #47, ebx   
223 [0xdf]:          loadval ecx   
224 [0xe0]:          tne ecx, ebx   
225 [0xe1]:          jne 242   
226 [0xe2]: line: 47 istore 47   
228 [0xe4]:          movl 0   
229 [0xe5]:          movn #1   
231 [0xe7]:          pushobj   
232 [0xe8]:          loadl ebx, fp+3   
233 [0xe9]:          movr egx, ebx   
234 [0xea]:          inc ebx   
235 [0xeb]:          smovr_2 ebx, fp+3   
236 [0xec]:          movr ebx, egx   
237 [0xed]:          popobj2    
238 [0xee]:          movr adx, ebx   
239 [0xef]:          chklen adx   
240 [0xf0]:          loadval ebx   
241 [0xf1]:          rmov adx, ebx   
242 [0xf2]:          nop   
243 [0xf3]:          jmp @261   
244 [0xf4]: line: 50 pushl 1   
245 [0xf5]:          ipushl #4   
246 [0xf6]:          call @1982 // <std#string.operator[>   
247 [0xf7]:          movl 0   
248 [0xf8]:          movn #1   
250 [0xfa]:          pushobj   
251 [0xfb]:          loadl ebx, fp+3   
252 [0xfc]:          movr egx, ebx   
253 [0xfd]:          inc ebx   
254 [0xfe]:          smovr_2 ebx, fp+3   
255 [0xff]:          movr ebx, egx   
256 [0x100]:          popobj2    
257 [0x101]:          movr adx, ebx   
258 [0x102]:          chklen adx   
259 [0x103]:          loadval ebx   
260 [0x104]:          rmov adx, ebx   
261 [0x105]:          nop   
262 [0x106]:          iaddl 1, fp@4   
264 [0x108]:          jmp @7   
265 [0x109]: line: 53 new_class @0 // std#__srt_global   
266 [0x10a]:          ret   
267 [0x10b]:          dup    
268 [0x10c]:          movl 0   
269 [0x10d]:          movn #1   
271 [0x10f]:          pushobj   
272 [0x110]:          istore 0   
274 [0x112]:          ipushl #3   
275 [0x113]:          call @1964 // <std#string.string>   
276 [0x114]:          popobj2    
277 [0x115]:          returnobj   
278 [0x116]:          ret   


function: std.io#unix_fs.get_attributes[2207] params(1) in file: /usr/include/sharp//io//unix_fs.sharp:61:9: note:  
		     def get_attributes(f: file) : var {
		        ^

0 [0x0]: line: 62 movl 1   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          call @1985 // <std#string.get_data>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+2   
7 [0x7]: line: 63 istorel 0, fp+3   
9 [0x9]: line: 69 pushl 2   : protected asm start
10 [0xa]:          int 0x25   
11 [0xb]:          smovr_2 ebx, fp+3   
12 [0xc]: line: 75 loadl ebx, fp+3   : protected asm end
13 [0xd]:          return_val ebx   
14 [0xe]:          ret   


function: std.io#unix_fs.check_access[2208] params(2) in file: /usr/include/sharp//io//unix_fs.sharp:85:9: note:  
		     def check_access(f: file, access: var) : var {
		        ^

0 [0x0]: line: 86 movl 1   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          call @1985 // <std#string.get_data>   
5 [0x5]:          popobj2    
6 [0x6]:          smovr_3 fp+3   
7 [0x7]: line: 87 istorel 0, fp+4   
9 [0x9]: line: 93 pushl 3   : protected asm start
10 [0xa]:          loadl ebx, fp+2   
11 [0xb]:          int 0x24   
12 [0xc]:          smovr_2 ebx, fp+4   
13 [0xd]: line: 100 loadl ebx, fp+4   : protected asm end
14 [0xe]:           return_val ebx   
15 [0xf]:           ret   


constructor: std.io#unix_fs.unix_fs[2209] params(0) in file: /usr/include/sharp//io//unix_fs.sharp:8:16: note:  
		protected class unix_fs base file_system {
		               ^

0 [0x0]:         movi #47, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         mov8 ebx, ebx   
6 [0x6]:         movi #0, adx   
8 [0x8]:         rmov adx, ebx   
9 [0x9]:         movi #512, ebx   
11 [0xb]:         newarry ebx: 0   
12 [0xc]:         movl 0   
13 [0xd]:         movn #1   
15 [0xf]:         popobj   
16 [0x10]:         ret   


constructor: std.io#file.file[2210] params(1) in file: /usr/include/sharp//io//file.sharp:23:9: note:  
		    file(path: string) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 24 pushl 0   
2 [0x2]:          pushl 1   
3 [0x3]:          call @2214 // <std.io#file.update_path>   
4 [0x4]:          ret   


constructor: std.io#file.file[2211] params(1) in file: /usr/include/sharp//io//file.sharp:27:9: note:  
		    file(path: _int8[]) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 28 pushl 0   
2 [0x2]:          new_class @0 // std#__srt_global   
3 [0x3]:          ret   
4 [0x4]:          dup    
5 [0x5]:          newstr @24 //    
6 [0x6]:          call @1959 // <std#string.string>   
7 [0x7]:          pushl 1   
8 [0x8]:          call @1971 // <std#string.operator+>   
9 [0x9]:          call @2214 // <std.io#file.update_path>   
10 [0xa]:          ret   


function: std.io#file.get_name[2212] params(0) in file: /usr/include/sharp//io//file.sharp:31:8: note:  
		    def get_name() : string {
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          pushnull    
5 [0x5]:          itest ebx   
6 [0x6]:          skpe ebx // pc = 17   
7 [0x7]:          movl 0   
8 [0x8]:          movn #0   
10 [0xa]:          pushobj   
11 [0xb]:          call @2000 // <std#string.size>   
12 [0xc]:          loadval ebx   
13 [0xd]:          rstore ebx   
14 [0xe]:          movi #0, ebx   
16 [0x10]:          loadval ecx   
17 [0x11]:          test ecx, ebx   
18 [0x12]:          jne 23   
19 [0x13]: line: 33 pushnull    
20 [0x14]:          popobj2    
21 [0x15]:          returnobj   
22 [0x16]:          ret   
23 [0x17]:          nop   
24 [0x18]: line: 36 movl 0   
25 [0x19]:          movn #0   
27 [0x1b]:          pushobj   
28 [0x1c]:          call @2000 // <std#string.size>   
29 [0x1d]:          loadval ebx   
30 [0x1e]:          rstore ebx   
31 [0x1f]:          movi #1, ebx   
33 [0x21]:          loadval ecx   
34 [0x22]:          sub ecx, ebx -> ebx   
35 [0x23]:          smovr_2 ebx, fp+1   
36 [0x24]:          ipushl #1   
37 [0x25]:          movi #0, ebx   
39 [0x27]:          loadval ecx   
40 [0x28]:          gt ecx, ebx   
41 [0x29]:          movr ebx, cmt   
42 [0x2a]:          movr cmt, ebx   
43 [0x2b]:          jne 86   
44 [0x2c]: line: 37 movl 0   
45 [0x2d]:          movn #0   
47 [0x2f]:          pushobj   
48 [0x30]:          ipushl #1   
49 [0x31]:          call @1982 // <std#string.operator[>   
50 [0x32]:          loadval ebx   
51 [0x33]:          rstore ebx   
52 [0x34]:          movg @21 // @std.io#file   
53 [0x35]:          movn #1   
55 [0x37]:          movi #0, adx   
57 [0x39]:          iaload ebx, adx   
58 [0x3a]:          loadval ecx   
59 [0x3b]:          test ecx, ebx   
60 [0x3c]:          jne 80   
61 [0x3d]: line: 38 movl 0   
62 [0x3e]:          movn #0   
64 [0x40]:          pushobj   
65 [0x41]:          ipushl #1   
66 [0x42]:          movi #1, ebx   
68 [0x44]:          loadval ecx   
69 [0x45]:          add ecx, ebx -> ebx   
70 [0x46]:          rstore ebx   
71 [0x47]:          movl 0   
72 [0x48]:          movn #0   
74 [0x4a]:          pushobj   
75 [0x4b]:          call @2000 // <std#string.size>   
76 [0x4c]:          call @2014 // <std#string.substring>   
77 [0x4d]:          popobj2    
78 [0x4e]:          returnobj   
79 [0x4f]:          ret   
80 [0x50]:          nop   
81 [0x51]:          loadl ebx, fp+1   
82 [0x52]:          movr egx, ebx   
83 [0x53]:          dec ebx   
84 [0x54]:          smovr_2 ebx, fp+1   
85 [0x55]:          jmp @36   
86 [0x56]: line: 42 movl 0   
87 [0x57]:          movn #0   
89 [0x59]:          returnobj   
90 [0x5a]:          ret   


function: std.io#file.to_string[2213] params(0) in file: /usr/include/sharp//io//file.sharp:45:8: note:  
		    def to_string() := path;
		       ^

0 [0x0]: line: 45 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          returnobj   
4 [0x4]:          ret   


function: std.io#file.update_path[2214] params(1) in file: /usr/include/sharp//io//file.sharp:47:5: note:  
			def update_path(path: string) {
		    ^

0 [0x0]: line: 48 movl 1   
1 [0x1]:          checknull   
2 [0x2]:          movr cmt, ebx   
3 [0x3]:          jne 10   
4 [0x4]: line: 49 new_class @0 // std#__srt_global   
5 [0x5]:          skne adx // pc = 5   
6 [0x6]:          dup    
7 [0x7]:          newstr @53 // file path cannot be null   
8 [0x8]:          call @3563 // <std#nullptr_exception.nullptr_exception>   
9 [0x9]:          throw    
10 [0xa]:          nop   
11 [0xb]: line: 51 pushl 1   
12 [0xc]:          call @1967 // <std#string.empty>   
13 [0xd]:          loadval ebx   
14 [0xe]:          movr cmt, ebx   
15 [0xf]:          jne 22   
16 [0x10]: line: 52 new_class @0 // std#__srt_global   
17 [0x11]:          skne adx // pc = 17   
18 [0x12]:          dup    
19 [0x13]:          newstr @54 // file path cannot be empty   
20 [0x14]:          call @3563 // <std#nullptr_exception.nullptr_exception>   
21 [0x15]:          throw    
22 [0x16]:          nop   
23 [0x17]: line: 53 movg @21 // @std.io#file   
24 [0x18]:          movn #0   
26 [0x1a]:          pushobj   
27 [0x1b]:          pushl 1   
28 [0x1c]:          invoke_delegate 2147 { static=0, args=1 }   
30 [0x1e]:          movl 0   
31 [0x1f]:          movn #0   
33 [0x21]:          popobj   
34 [0x22]:          ret   


function: std.io#file.get_parent_file[2215] params(0) in file: /usr/include/sharp//io//file.sharp:56:8: note:  
		    def get_parent_file() : file {
		       ^

0 [0x0]: line: 57 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          pushnull    
5 [0x5]:          itest ebx   
6 [0x6]:          skpe ebx // pc = 17   
7 [0x7]:          movl 0   
8 [0x8]:          movn #0   
10 [0xa]:          pushobj   
11 [0xb]:          call @2000 // <std#string.size>   
12 [0xc]:          loadval ebx   
13 [0xd]:          rstore ebx   
14 [0xe]:          movi #0, ebx   
16 [0x10]:          loadval ecx   
17 [0x11]:          test ecx, ebx   
18 [0x12]:          jne 23   
19 [0x13]: line: 58 pushnull    
20 [0x14]:          popobj2    
21 [0x15]:          returnobj   
22 [0x16]:          ret   
23 [0x17]:          nop   
24 [0x18]: line: 61 movl 0   
25 [0x19]:          movn #0   
27 [0x1b]:          pushobj   
28 [0x1c]:          call @2000 // <std#string.size>   
29 [0x1d]:          loadval ebx   
30 [0x1e]:          rstore ebx   
31 [0x1f]:          movi #1, ebx   
33 [0x21]:          loadval ecx   
34 [0x22]:          sub ecx, ebx -> ebx   
35 [0x23]:          smovr_2 ebx, fp+1   
36 [0x24]:          ipushl #1   
37 [0x25]:          movi #0, ebx   
39 [0x27]:          loadval ecx   
40 [0x28]:          gt ecx, ebx   
41 [0x29]:          movr ebx, cmt   
42 [0x2a]:          movr cmt, ebx   
43 [0x2b]:          jne 87   
44 [0x2c]: line: 62 movl 0   
45 [0x2d]:          movn #0   
47 [0x2f]:          pushobj   
48 [0x30]:          ipushl #1   
49 [0x31]:          call @1982 // <std#string.operator[>   
50 [0x32]:          loadval ebx   
51 [0x33]:          rstore ebx   
52 [0x34]:          movg @21 // @std.io#file   
53 [0x35]:          movn #1   
55 [0x37]:          movi #0, adx   
57 [0x39]:          iaload ebx, adx   
58 [0x3a]:          loadval ecx   
59 [0x3b]:          test ecx, ebx   
60 [0x3c]:          jne 81   
61 [0x3d]: line: 63 new_class @0 // std#__srt_global   
62 [0x3e]:          iadd adx, #? (112)   
64 [0x40]:          movl 0   
65 [0x41]:          movn #0   
67 [0x43]:          pushobj   
68 [0x44]:          istore 0   
70 [0x46]:          ipushl #1   
71 [0x47]:          movi #1, ebx   
73 [0x49]:          loadval ecx   
74 [0x4a]:          add ecx, ebx -> ebx   
75 [0x4b]:          rstore ebx   
76 [0x4c]:          call @2014 // <std#string.substring>   
77 [0x4d]:          call @2210 // <std.io#file.file>   
78 [0x4e]:          popobj2    
79 [0x4f]:          returnobj   
80 [0x50]:          ret   
81 [0x51]:          nop   
82 [0x52]:          loadl ebx, fp+1   
83 [0x53]:          movr egx, ebx   
84 [0x54]:          dec ebx   
85 [0x55]:          smovr_2 ebx, fp+1   
86 [0x56]:          jmp @36   
87 [0x57]: line: 67 pushnull    
88 [0x58]:          popobj2    
89 [0x59]:          returnobj   
90 [0x5a]:          ret   


function: std.io#file.get_path[2216] params(0) in file: /usr/include/sharp//io//file.sharp:70:8: note:  
		    def get_path() : string {
		       ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          returnobj   
4 [0x4]:          ret   


function: std.io#file.get_absolute_path[2217] params(0) in file: /usr/include/sharp//io//file.sharp:87:8: note:  
		    def get_absolute_path() : string {
		       ^

0 [0x0]: line: 88 movg @21 // @std.io#file   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          pushl 0   
5 [0x5]:          call @2148 // <std.io#file_system.resolve>   
6 [0x6]:          popobj2    
7 [0x7]:          returnobj   
8 [0x8]:          ret   


function: std.io#file.is_readable[2218] params(0) in file: /usr/include/sharp//io//file.sharp:96:8: note:  
		    def is_readable() : var {
		       ^

0 [0x0]: line: 97 movg @21 // @std.io#file   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          pushl 0   
5 [0x5]:          istore 4   
7 [0x7]:          invoke_delegate 2150 { static=0, args=2 }   
9 [0x9]:          loadval ebx   
10 [0xa]:          rstore ebx   
11 [0xb]:          movi #0, ebx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


function: std.io#file.is_writeable[2219] params(0) in file: /usr/include/sharp//io//file.sharp:105:8: note:  
		    def is_writeable() : var {
		       ^

0 [0x0]: line: 106 movg @21 // @std.io#file   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           istore 2   
7 [0x7]:           invoke_delegate 2150 { static=0, args=2 }   
9 [0x9]:           loadval ebx   
10 [0xa]:           rstore ebx   
11 [0xb]:           movi #0, ebx   
13 [0xd]:           loadval ecx   
14 [0xe]:           test ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


function: std.io#file.exists[2220] params(0) in file: /usr/include/sharp//io//file.sharp:114:8: note:  
		    def exists() : var {
		       ^

0 [0x0]: line: 115 movg @21 // @std.io#file   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           ldc ebx // 0   
6 [0x6]:           rstore ebx   
7 [0x7]:           invoke_delegate 2150 { static=0, args=2 }   
9 [0x9]:           loadval ebx   
10 [0xa]:           rstore ebx   
11 [0xb]:           movi #0, ebx   
13 [0xd]:           loadval ecx   
14 [0xe]:           test ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


function: std.io#file.is_directory[2221] params(0) in file: /usr/include/sharp//io//file.sharp:123:8: note:  
		    def is_directory() : var {
		       ^

0 [0x0]: line: 124 movg @21 // @std.io#file   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           invoke_delegate 2149 { static=0, args=1 }   
7 [0x7]:           loadval ebx   
8 [0x8]:           rstore ebx   
9 [0x9]:           movi #4, ebx   
11 [0xb]:           loadval ecx   
12 [0xc]:           uand ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           rstore ebx   
15 [0xf]:           movi #0, ebx   
17 [0x11]:           loadval ecx   
18 [0x12]:           tne ecx, ebx   
19 [0x13]:           return_val cmt   
20 [0x14]:           ret   


function: std.io#file.is_file[2222] params(0) in file: /usr/include/sharp//io//file.sharp:133:8: note:  
		    def is_file() : var {
		       ^

0 [0x0]: line: 134 movg @21 // @std.io#file   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           invoke_delegate 2149 { static=0, args=1 }   
7 [0x7]:           loadval ebx   
8 [0x8]:           rstore ebx   
9 [0x9]:           movi #2, ebx   
11 [0xb]:           loadval ecx   
12 [0xc]:           uand ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           rstore ebx   
15 [0xf]:           movi #0, ebx   
17 [0x11]:           loadval ecx   
18 [0x12]:           tne ecx, ebx   
19 [0x13]:           return_val cmt   
20 [0x14]:           ret   


function: std.io#file.is_hidden[2223] params(0) in file: /usr/include/sharp//io//file.sharp:145:8: note:  
		    def is_hidden() : var {
		       ^

0 [0x0]: line: 146 movg @21 // @std.io#file   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           invoke_delegate 2149 { static=0, args=1 }   
7 [0x7]:           loadval ebx   
8 [0x8]:           rstore ebx   
9 [0x9]:           movi #128, ebx   
11 [0xb]:           loadval ecx   
12 [0xc]:           uand ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           rstore ebx   
15 [0xf]:           movi #0, ebx   
17 [0x11]:           loadval ecx   
18 [0x12]:           tne ecx, ebx   
19 [0x13]:           return_val cmt   
20 [0x14]:           ret   


function: std.io#file.last_modified[2224] params(0) in file: /usr/include/sharp//io//file.sharp:154:8: note:  
		    def last_modified() : var {
		       ^

0 [0x0]: line: 155 movg @21 // @std.io#file   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           ldc ebx // 0   
6 [0x6]:           rstore ebx   
7 [0x7]:           call @2152 // <std.io#file_system.last_modified_time>   
8 [0x8]:           loadval ebx   
9 [0x9]:           return_val ebx   
10 [0xa]:           ret   


function: std.io#file.last_status_changed[2225] params(0) in file: /usr/include/sharp//io//file.sharp:158:8: note:  
		    def last_status_changed() : var {
		       ^

0 [0x0]: line: 159 movg @21 // @std.io#file   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           ldc ebx // 1   
6 [0x6]:           rstore ebx   
7 [0x7]:           call @2152 // <std.io#file_system.last_modified_time>   
8 [0x8]:           loadval ebx   
9 [0x9]:           return_val ebx   
10 [0xa]:           ret   


function: std.io#file.last_accessed[2226] params(0) in file: /usr/include/sharp//io//file.sharp:162:8: note:  
		    def last_accessed() : var {
		       ^

0 [0x0]: line: 163 movg @21 // @std.io#file   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           istore 2   
7 [0x7]:           call @2152 // <std.io#file_system.last_modified_time>   
8 [0x8]:           loadval ebx   
9 [0x9]:           return_val ebx   
10 [0xa]:           ret   


function: std.io#file.length[2227] params(0) in file: /usr/include/sharp//io//file.sharp:171:8: note:  
		    def length() : var {
		       ^

0 [0x0]: line: 172 movg @21 // @std.io#file   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           call @2153 // <std.io#file_system.get_length>   
6 [0x6]:           loadval ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


function: std.io#file.create[2228] params(0) in file: /usr/include/sharp//io//file.sharp:186:8: note:  
		    def create() {
		       ^

0 [0x0]: line: 187 movg @21 // @std.io#file   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           movl 0   
5 [0x5]:           movn #0   
7 [0x7]:           pushobj   
8 [0x8]:           call @2154 // <std.io#file_system.create_file>   
9 [0x9]:           ret   


function: std.io#file.delete[2229] params(0) in file: /usr/include/sharp//io//file.sharp:196:8: note:  
		    def delete() : var {
		       ^

0 [0x0]: line: 197 movg @21 // @std.io#file   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           call @2156 // <std.io#file_system.delete>   
6 [0x6]:           loadval ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


function: std.io#file.list[2230] params(0) in file: /usr/include/sharp//io//file.sharp:212:8: note:  
		    def list() : list<string> {
		       ^

0 [0x0]: line: 213 new_class @0 // std#__srt_global   
1 [0x1]:           ? (149)   
2 [0x2]:           dup    
3 [0x3]:           movg @21 // @std.io#file   
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           pushl 0   
8 [0x8]:           call @2157 // <std.io#file_system.list>   
9 [0x9]:           call @3824 // <std#list<std#string>.list>   
10 [0xa]:           popobj2    
11 [0xb]:           returnobj   
12 [0xc]:           ret   


function: std.io#file.mkdir[2231] params(0) in file: /usr/include/sharp//io//file.sharp:220:8: note:  
		    def mkdir() : var {
		       ^

0 [0x0]: line: 221 movg @21 // @std.io#file   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           call @2158 // <std.io#file_system.create_directory>   
6 [0x6]:           loadval ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


function: std.io#file.rename[2232] params(1) in file: /usr/include/sharp//io//file.sharp:239:8: note:  
		    def rename(dest: file) : var {
		       ^

0 [0x0]: line: 240 movl 1   
1 [0x1]:           checknull   
2 [0x2]:           movr cmt, ebx   
3 [0x3]:           jne 9   
4 [0x4]: line: 241 new_class @0 // std#__srt_global   
5 [0x5]:           skne adx // pc = 5   
6 [0x6]:           dup    
7 [0x7]:           call @3565 // <std#nullptr_exception.nullptr_exception>   
8 [0x8]:           throw    
9 [0x9]:           nop   
10 [0xa]: line: 244 movg @21 // @std.io#file   
11 [0xb]:           movn #0   
13 [0xd]:           pushobj   
14 [0xe]:           pushl 0   
15 [0xf]:           pushl 1   
16 [0x10]:           call @2159 // <std.io#file_system.rename>   
17 [0x11]:           ipopl 2   
18 [0x12]: line: 245 ipushl #2   
19 [0x13]:           movi #0, ebx   
21 [0x15]:           loadval ecx   
22 [0x16]:           test ecx, ebx   
23 [0x17]:           jne 32   
24 [0x18]: line: 247 movl 1   
25 [0x19]:           movn #0   
27 [0x1b]:           pushobj   
28 [0x1c]:           movl 0   
29 [0x1d]:           movn #0   
31 [0x1f]:           popobj   
32 [0x20]:           nop   
33 [0x21]: line: 251 loadl ebx, fp+2   
34 [0x22]:           return_val ebx   
35 [0x23]:           ret   


function: std.io#file.set_last_modified[2233] params(1) in file: /usr/include/sharp//io//file.sharp:266:8: note:  
		    def set_last_modified(time: var) : var {
		       ^

0 [0x0]: line: 267 loadl ebx, fp+1   
1 [0x1]:           mov32 ebx, ebx   
2 [0x2]:           rstore ebx   
3 [0x3]:           movi #0, ebx   
5 [0x5]:           loadval ecx   
6 [0x6]:           lt ecx, ebx   
7 [0x7]:           movr ebx, cmt   
8 [0x8]:           movr cmt, ebx   
9 [0x9]:           jne 16   
10 [0xa]:           new_class @0 // std#__srt_global   
11 [0xb]:           skip @0 // pc = 11   
12 [0xc]:           dup    
13 [0xd]:           newstr @55 // Negative time   
14 [0xe]:           call @3548 // <std#illegal_argument_exception.illegal_argument_exception>   
15 [0xf]:           throw    
16 [0x10]:           nop   
17 [0x11]: line: 268 movg @21 // @std.io#file   
18 [0x12]:           movn #0   
20 [0x14]:           pushobj   
21 [0x15]:           pushl 0   
22 [0x16]:           ipushl #1   
23 [0x17]:           call @2162 // <std.io#file_system.set_last_modified_time>   
24 [0x18]:           loadval ebx   
25 [0x19]:           return_val ebx   
26 [0x1a]:           ret   


function: std.io#file.set_read_only[2234] params(0) in file: /usr/include/sharp//io//file.sharp:279:8: note:  
		    def set_read_only() : var {
		       ^

0 [0x0]: line: 280 movg @21 // @std.io#file   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           call @2163 // <std.io#file_system.set_read_only>   
6 [0x6]:           loadval ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


function: std.io#file.set_writable[2235] params(2) in file: /usr/include/sharp//io//file.sharp:288:8: note:  
		    def set_writable(writable: var, owner_only: var) : var {
		       ^

0 [0x0]: line: 289 movg @21 // @std.io#file   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           istore 2   
7 [0x7]:           ipushl #1   
8 [0x8]:           ipushl #2   
9 [0x9]:           call @2151 // <std.io#file_system.set_permission>   
10 [0xa]:           loadval ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


function: std.io#file.set_writable[2236] params(1) in file: /usr/include/sharp//io//file.sharp:297:8: note:  
		    def set_writable(writable: var) : var {
		       ^

0 [0x0]: line: 298 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           istore 1   
4 [0x4]:           call @2235 // <std.io#file.set_writable>   
5 [0x5]:           loadval ebx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#file.set_readable[2237] params(2) in file: /usr/include/sharp//io//file.sharp:306:8: note:  
		    def set_readable(readable: var, owner_only: var) : var {
		       ^

0 [0x0]: line: 307 movg @21 // @std.io#file   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           istore 4   
7 [0x7]:           ipushl #1   
8 [0x8]:           ipushl #2   
9 [0x9]:           call @2151 // <std.io#file_system.set_permission>   
10 [0xa]:           loadval ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


function: std.io#file.set_readable[2238] params(1) in file: /usr/include/sharp//io//file.sharp:315:8: note:  
		    def set_readable(readable: var) : var {
		       ^

0 [0x0]: line: 316 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           istore 1   
4 [0x4]:           call @2237 // <std.io#file.set_readable>   
5 [0x5]:           loadval ebx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#file.set_executable[2239] params(2) in file: /usr/include/sharp//io//file.sharp:324:8: note:  
		    def set_executable(executable: var, owner_only: var) : var {
		       ^

0 [0x0]: line: 325 movg @21 // @std.io#file   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           ldc ebx // 1   
6 [0x6]:           rstore ebx   
7 [0x7]:           ipushl #1   
8 [0x8]:           ipushl #2   
9 [0x9]:           call @2151 // <std.io#file_system.set_permission>   
10 [0xa]:           loadval ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


function: std.io#file.set_executable[2240] params(1) in file: /usr/include/sharp//io//file.sharp:333:8: note:  
		    def set_executable(executable: var) : var {
		       ^

0 [0x0]: line: 334 pushl 0   
1 [0x1]:           ipushl #1   
2 [0x2]:           istore 1   
4 [0x4]:           call @2239 // <std.io#file.set_executable>   
5 [0x5]:           loadval ebx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.io#file.is_executable[2241] params(0) in file: /usr/include/sharp//io//file.sharp:342:8: note:  
		    def is_executable() : var {
		       ^

0 [0x0]: line: 343 movg @21 // @std.io#file   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           ldc ebx // 1   
6 [0x6]:           rstore ebx   
7 [0x7]:           invoke_delegate 2150 { static=0, args=2 }   
9 [0x9]:           loadval ebx   
10 [0xa]:           rstore ebx   
11 [0xb]:           movi #0, ebx   
13 [0xd]:           loadval ecx   
14 [0xe]:           test ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


function: std.io#file.get_total_space[2242] params(0) in file: /usr/include/sharp//io//file.sharp:354:8: note:  
		    def get_total_space() : var {
		       ^

0 [0x0]: line: 355 ldc ebx // 0   
1 [0x1]:           rstore ebx   
2 [0x2]:           call @2164 // <std.io#file_system.get_space_available>   
3 [0x3]:           loadval ebx   
4 [0x4]:           return_val ebx   
5 [0x5]:           ret   


function: std.io#file.get_free_space[2243] params(0) in file: /usr/include/sharp//io//file.sharp:363:8: note:  
		    def get_free_space() : var {
		       ^

0 [0x0]: line: 364 ldc ebx // 1   
1 [0x1]:           rstore ebx   
2 [0x2]:           call @2164 // <std.io#file_system.get_space_available>   
3 [0x3]:           loadval ebx   
4 [0x4]:           return_val ebx   
5 [0x5]:           ret   


function: std.io#file.get_usable_space[2244] params(0) in file: /usr/include/sharp//io//file.sharp:386:8: note:  
		    def get_usable_space() : var {
		       ^

0 [0x0]: line: 387 istore 2   
2 [0x2]:           call @2164 // <std.io#file_system.get_space_available>   
3 [0x3]:           loadval ebx   
4 [0x4]:           return_val ebx   
5 [0x5]:           ret   


function: std.io#file.generate_temp_file[2245] params(3) in file: /usr/include/sharp//io//file.sharp:393:22: note:  
		    private static def generate_temp_file(prefix: string, suffix: string, dir: file) : file
		                     ^

0 [0x0]: line: 405 pushnull    
1 [0x1]:           popobj2    
2 [0x2]:           returnobj   
3 [0x3]:           ret   


function: std.io#file.create_temp_file[2246] params(3) in file: /usr/include/sharp//io//file.sharp:414:15: note:  
		    static def create_temp_file(prefix: string, suffix: string,
		              ^

0 [0x0]: line: 437 pushnull    
1 [0x1]:           popobj2    
2 [0x2]:           returnobj   
3 [0x3]:           ret   


function: std.io#file.create_temp_file[2247] params(2) in file: /usr/include/sharp//io//file.sharp:448:15: note:  
		    static def create_temp_file(prefix: string, suffix: string) : file
		              ^

0 [0x0]: line: 451 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           pushnull    
3 [0x3]:           call @2246 // <std.io#file.create_temp_file>   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   


function: std.io#file.read_all_text[2248] params(0) in file: /usr/include/sharp//io//file.sharp:454:8: note:  
		    def read_all_text() := fs.read(self);
		       ^

0 [0x0]: line: 454 pushl 0   
1 [0x1]:           call @2160 // <std.io#file_system.read>   
2 [0x2]:           popobj2    
3 [0x3]:           returnobj   
4 [0x4]:           ret   


function: std.io#file.write[2249] params(1) in file: /usr/include/sharp//io//file.sharp:456:8: note:  
		    def write(data: string) := fs.write(self, data);
		       ^

0 [0x0]: line: 456 pushl 0   
1 [0x1]:           pushl 1   
2 [0x2]:           call @2161 // <std.io#file_system.write>   
3 [0x3]:           loadval ebx   
4 [0x4]:           return_val ebx   
5 [0x5]:           ret   


function: std.io#file.get_file_system[2250] params(0) in file: /usr/include/sharp//io//file.sharp:458:23: note:  
		    private static def get_file_system() : file_system {
		                      ^

0 [0x0]: line: 459 call @3449 // <platform#build.is_windows>   
1 [0x1]:           loadval ebx   
2 [0x2]:           movr cmt, ebx   
3 [0x3]:           jne 12   
4 [0x4]: line: 460 new_class @0 // std#__srt_global   
5 [0x5]:           rstore adx   
6 [0x6]:           dup    
7 [0x7]:           call @2143 // <std.io#win_fs.win_fs>   
8 [0x8]:           popobj2    
9 [0x9]:           returnobj   
10 [0xa]:           ret   
11 [0xb]:           jmp @19   
12 [0xc]: line: 462 new_class @0 // std#__srt_global   
13 [0xd]:           mod adx, adx -> adx   
14 [0xe]:           dup    
15 [0xf]:           call @2209 // <std.io#unix_fs.unix_fs>   
16 [0x10]:           popobj2    
17 [0x11]:           returnobj   
18 [0x12]:           ret   
19 [0x13]:           nop   


constructor: std.io#file.file[2251] params(0) in file: /usr/include/sharp//io//file.sharp:17:13: note:  
		public class file {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


function: std#__srt_global.strtod[2252] params(1) in file: /usr/include/sharp//console.sharp:3:4: note:  
		def strtod(str: string) : var {
		   ^

0 [0x0]: line: 4 pushl 0   
1 [0x1]:         call @1985 // <std#string.get_data>   
2 [0x2]:         popobj2    
3 [0x3]:         smovr_3 fp+1   
4 [0x4]: line: 5 istorel 0, fp+2   
6 [0x6]: line: 7 pushl 1   : protected asm start
7 [0x7]:         int 0x43   
8 [0x8]:         smovr_2 ebx, fp+2   
9 [0x9]: line: 13 loadl ebx, fp+2   : protected asm end
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


function: std#__srt_global.snprintf[2253] params(3) in file: /usr/include/sharp//console.sharp:16:4: note:  
		def snprintf(fmt: var, num: var, precision: var) : var[] {
		   ^

0 [0x0]: line: 17 loadl egx, fp+0   : protected asm start
1 [0x1]:          loadl ebx, fp+1   
2 [0x2]:          loadl ecx, fp+2   
3 [0x3]:          int 0x1   
4 [0x4]:          popobj2    
5 [0x5]:          returnobj   
6 [0x6]:          ret   
7 [0x7]: line: 26 pushnull    : protected asm end
8 [0x8]:          popobj2    
9 [0x9]:          returnobj   
10 [0xa]:          ret   


function: std#__srt_global.sys[2254] params(1) in file: /usr/include/sharp//console.sharp:29:4: note:  
		def sys(str: string) : var {
		   ^

0 [0x0]: line: 30 pushl 0   
1 [0x1]:          call @1985 // <std#string.get_data>   
2 [0x2]:          popobj2    
3 [0x3]:          smovr_3 fp+1   
4 [0x4]: line: 31 istorel 0, fp+2   
6 [0x6]: line: 32 pushl 1   : protected asm start
7 [0x7]:          int 0x1a   
8 [0x8]:          smovr_2 cmt, fp+2   
9 [0x9]: line: 38 loadl ebx, fp+2   : protected asm end
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


function: std#__srt_global.print[2255] params(1) in file: /usr/include/sharp//console.sharp:41:4: note:  
		def print(data: _int8[]) {
		   ^

0 [0x0]: line: 42 pushl 0   
1 [0x1]:          call @2283 // <std#__srt_global.print_chars>   
2 [0x2]:          ret   


function: std#__srt_global.print[2256] params(1) in file: /usr/include/sharp//console.sharp:45:4: note:  
		def print(str: string) {
		   ^

0 [0x0]: line: 46 pushl 0   
1 [0x1]:          call @1985 // <std#string.get_data>   
2 [0x2]:          call @2283 // <std#__srt_global.print_chars>   
3 [0x3]:          ret   


function: std#__srt_global.println[2257] params(1) in file: /usr/include/sharp//console.sharp:49:4: note:  
		def println(data: var[]) {
		   ^

0 [0x0]: line: 50 pushl 0   
1 [0x1]:          call @2286 // <std#__srt_global.print_numbers>   
2 [0x2]: line: 51 istore 10   
4 [0x4]:          call @2285 // <std#__srt_global.print_char>   
5 [0x5]:          ret   


function: std#__srt_global.println[2258] params(1) in file: /usr/include/sharp//console.sharp:54:4: note:  
		def println(data: _int8[]) {
		   ^

0 [0x0]: line: 55 pushl 0   
1 [0x1]:          call @2283 // <std#__srt_global.print_chars>   
2 [0x2]: line: 56 istore 10   
4 [0x4]:          call @2285 // <std#__srt_global.print_char>   
5 [0x5]:          ret   


function: std#__srt_global.println[2259] params(1) in file: /usr/include/sharp//console.sharp:59:4: note:  
		def println(data: _int16[]) {
		   ^

0 [0x0]: line: 60 pushl 0   
1 [0x1]:          call @2287 // <std#__srt_global.print_numbers>   
2 [0x2]: line: 61 istore 10   
4 [0x4]:          call @2285 // <std#__srt_global.print_char>   
5 [0x5]:          ret   


function: std#__srt_global.println[2260] params(1) in file: /usr/include/sharp//console.sharp:64:4: note:  
		def println(data: _int32[]) {
		   ^

0 [0x0]: line: 65 pushl 0   
1 [0x1]:          call @2288 // <std#__srt_global.print_numbers>   
2 [0x2]: line: 66 istore 10   
4 [0x4]:          call @2285 // <std#__srt_global.print_char>   
5 [0x5]:          ret   


function: std#__srt_global.println[2261] params(1) in file: /usr/include/sharp//console.sharp:69:4: note:  
		def println(data: _int64[]) {
		   ^

0 [0x0]: line: 70 pushl 0   
1 [0x1]:          call @2289 // <std#__srt_global.print_numbers>   
2 [0x2]: line: 71 istore 10   
4 [0x4]:          call @2285 // <std#__srt_global.print_char>   
5 [0x5]:          ret   


function: std#__srt_global.println[2262] params(1) in file: /usr/include/sharp//console.sharp:74:4: note:  
		def println(data: _uint8[]) {
		   ^

0 [0x0]: line: 75 pushl 0   
1 [0x1]:          call @2290 // <std#__srt_global.print_numbers>   
2 [0x2]: line: 76 istore 10   
4 [0x4]:          call @2285 // <std#__srt_global.print_char>   
5 [0x5]:          ret   


function: std#__srt_global.println[2263] params(1) in file: /usr/include/sharp//console.sharp:79:4: note:  
		def println(data: _uint16[]) {
		   ^

0 [0x0]: line: 80 pushl 0   
1 [0x1]:          call @2291 // <std#__srt_global.print_numbers>   
2 [0x2]: line: 81 istore 10   
4 [0x4]:          call @2285 // <std#__srt_global.print_char>   
5 [0x5]:          ret   


function: std#__srt_global.println[2264] params(1) in file: /usr/include/sharp//console.sharp:84:4: note:  
		def println(data: _uint32[]) {
		   ^

0 [0x0]: line: 85 pushl 0   
1 [0x1]:          call @2292 // <std#__srt_global.print_numbers>   
2 [0x2]: line: 86 istore 10   
4 [0x4]:          call @2285 // <std#__srt_global.print_char>   
5 [0x5]:          ret   


function: std#__srt_global.println[2265] params(1) in file: /usr/include/sharp//console.sharp:89:4: note:  
		def println(data: _uint64[]) {
		   ^

0 [0x0]: line: 90 pushl 0   
1 [0x1]:          call @2293 // <std#__srt_global.print_numbers>   
2 [0x2]: line: 91 istore 10   
4 [0x4]:          call @2285 // <std#__srt_global.print_char>   
5 [0x5]:          ret   


function: std#__srt_global.println[2266] params(1) in file: /usr/include/sharp//console.sharp:94:4: note:  
		def println(data: var) {
		   ^

0 [0x0]: line: 95 ipushl #0   
1 [0x1]:          call @2284 // <std#__srt_global.print_num>   
2 [0x2]: line: 96 istore 10   
4 [0x4]:          call @2285 // <std#__srt_global.print_char>   
5 [0x5]:          ret   


function: std#__srt_global.println[2267] params(0) in file: /usr/include/sharp//console.sharp:99:4: note:  
		def println() {
		   ^

0 [0x0]: line: 100 istore 10   
2 [0x2]:           call @2285 // <std#__srt_global.print_char>   
3 [0x3]:           ret   


function: std#__srt_global.println[2268] params(1) in file: /usr/include/sharp//console.sharp:103:4: note:  
		def println(e: _enum_) {
		   ^

0 [0x0]: line: 104 pushl 0   
1 [0x1]:           call @2302 // <std#_enum_.get_name>   
2 [0x2]:           call @2283 // <std#__srt_global.print_chars>   
3 [0x3]: line: 105 istore 10   
5 [0x5]:           call @2285 // <std#__srt_global.print_char>   
6 [0x6]:           ret   


function: std#__srt_global.read_line[2269] params(0) in file: /usr/include/sharp//console.sharp:108:4: note:  
		def read_line() : string {
		   ^

0 [0x0]: line: 109 istorel 0, fp+0   
2 [0x2]: line: 110 new_class @0 // std#__srt_global   
3 [0x3]:           ret   
4 [0x4]:           dup    
5 [0x5]:           newstr @24 //    
6 [0x6]:           call @1959 // <std#string.string>   
7 [0x7]:           popobj2    
8 [0x8]:           smovr_3 fp+1   
9 [0x9]: line: 112 call @2271 // <std#__srt_global.read_char>   
10 [0xa]:           loadval ebx   
11 [0xb]:           mov8 ebx, ebx   
12 [0xc]:           smovr_2 ebx, fp+0   
13 [0xd]: line: 113 ipushl #0   
14 [0xe]:           movi #13, ebx   
16 [0x10]:           loadval ecx   
17 [0x11]:           tne ecx, ebx   
18 [0x12]:           movr ebx, cmt   
19 [0x13]:           skne ebx // pc = 24   
20 [0x14]:           ipushl #0   
21 [0x15]:           movi #10, ebx   
23 [0x17]:           loadval ecx   
24 [0x18]:           tne ecx, ebx   
25 [0x19]:           jne 35   
26 [0x1a]: line: 114 pushl 1   
27 [0x1b]:           ipushl #0   
28 [0x1c]:           call @1966 // <std#string.append>   
29 [0x1d]:           pop   
30 [0x1e]: line: 115 call @2271 // <std#__srt_global.read_char>   
31 [0x1f]:           loadval ebx   
32 [0x20]:           mov8 ebx, ebx   
33 [0x21]:           smovr_2 ebx, fp+0   
34 [0x22]:           jmp @13   
35 [0x23]: line: 118 movl 1   
36 [0x24]:           returnobj   
37 [0x25]:           ret   


function: std#__srt_global.read_passwd[2270] params(0) in file: /usr/include/sharp//console.sharp:121:4: note:  
		def read_passwd() : string {
		   ^

0 [0x0]: line: 122 istorel 0, fp+0   
2 [0x2]: line: 123 new_class @0 // std#__srt_global   
3 [0x3]:           ret   
4 [0x4]:           dup    
5 [0x5]:           newstr @24 //    
6 [0x6]:           call @1959 // <std#string.string>   
7 [0x7]:           popobj2    
8 [0x8]:           smovr_3 fp+1   
9 [0x9]: line: 125 call @2272 // <std#__srt_global.read_raw_char>   
10 [0xa]:           loadval ebx   
11 [0xb]:           mov8 ebx, ebx   
12 [0xc]:           smovr_2 ebx, fp+0   
13 [0xd]: line: 126 ipushl #0   
14 [0xe]:           movi #13, ebx   
16 [0x10]:           loadval ecx   
17 [0x11]:           tne ecx, ebx   
18 [0x12]:           movr ebx, cmt   
19 [0x13]:           skne ebx // pc = 24   
20 [0x14]:           ipushl #0   
21 [0x15]:           movi #10, ebx   
23 [0x17]:           loadval ecx   
24 [0x18]:           tne ecx, ebx   
25 [0x19]:           jne 35   
26 [0x1a]: line: 127 pushl 1   
27 [0x1b]:           ipushl #0   
28 [0x1c]:           call @1966 // <std#string.append>   
29 [0x1d]:           pop   
30 [0x1e]: line: 128 call @2272 // <std#__srt_global.read_raw_char>   
31 [0x1f]:           loadval ebx   
32 [0x20]:           mov8 ebx, ebx   
33 [0x21]:           smovr_2 ebx, fp+0   
34 [0x22]:           jmp @13   
35 [0x23]: line: 131 movl 1   
36 [0x24]:           returnobj   
37 [0x25]:           ret   


function: std#__srt_global.read_char[2271] params(0) in file: /usr/include/sharp//console.sharp:134:4: note:  
		def read_char() : var {
		   ^

0 [0x0]: line: 135 istore 0   
2 [0x2]:           call @2295 // <std#__srt_global.read_ch>   
3 [0x3]:           loadval ebx   
4 [0x4]:           return_val ebx   
5 [0x5]:           ret   


function: std#__srt_global.read_raw_char[2272] params(0) in file: /usr/include/sharp//console.sharp:138:4: note:  
		def read_raw_char() : var {
		   ^

0 [0x0]: line: 139 istore 1   
2 [0x2]:           call @2295 // <std#__srt_global.read_ch>   
3 [0x3]:           loadval ebx   
4 [0x4]:           return_val ebx   
5 [0x5]:           ret   


function: std#__srt_global.println[2273] params(1) in file: /usr/include/sharp//console.sharp:142:4: note:  
		def println(str: string) {
		   ^

0 [0x0]: line: 143 pushl 0   
1 [0x1]:           call @1985 // <std#string.get_data>   
2 [0x2]:           call @2283 // <std#__srt_global.print_chars>   
3 [0x3]: line: 144 istore 10   
5 [0x5]:           call @2285 // <std#__srt_global.print_char>   
6 [0x6]:           ret   


function: std#__srt_global.println[2274] params(1) in file: /usr/include/sharp//console.sharp:147:4: note:  
		def println(o: printable) {
		   ^

0 [0x0]: line: 148 pushl 0   
1 [0x1]:           invoke_delegate 3523 { static=0, args=0 }   
3 [0x3]:           call @1985 // <std#string.get_data>   
4 [0x4]:           call @2283 // <std#__srt_global.print_chars>   
5 [0x5]: line: 149 istore 10   
7 [0x7]:           call @2285 // <std#__srt_global.print_char>   
8 [0x8]:           ret   


function: std#__srt_global.print[2275] params(1) in file: /usr/include/sharp//console.sharp:152:4: note:  
		def print(o: printable) {
		   ^

0 [0x0]: line: 153 pushl 0   
1 [0x1]:           invoke_delegate 3523 { static=0, args=0 }   
3 [0x3]:           popobj2    
4 [0x4]:           movn #0   
6 [0x6]:           pushobj   
7 [0x7]:           call @2283 // <std#__srt_global.print_chars>   
8 [0x8]:           ret   


function: std#__srt_global.print[2276] params(1) in file: /usr/include/sharp//console.sharp:156:4: note:  
		def print(data: var) {
		   ^

0 [0x0]: line: 157 ipushl #0   
1 [0x1]:           call @2284 // <std#__srt_global.print_num>   
2 [0x2]:           ret   


function: std#__srt_global.flush[2277] params(0) in file: /usr/include/sharp//console.sharp:160:4: note:  
		def flush() {
		   ^

0 [0x0]: line: 161 int 0x34   : protected asm start
1 [0x1]:           ret   : protected asm end


function: std#__srt_global.utc_mills_time[2278] params(0) in file: /usr/include/sharp//console.sharp:164:4: note:  
		def utc_mills_time() : var {
		   ^

0 [0x0]: line: 165 call @3530 // <std#time.mills_time>   
1 [0x1]:           loadval ebx   
2 [0x2]:           return_val ebx   
3 [0x3]:           ret   


function: std#__srt_global.nano_time[2279] params(0) in file: /usr/include/sharp//console.sharp:168:4: note:  
		def nano_time() : var {
		   ^

0 [0x0]: line: 169 call @3525 // <std#time.nano_time>   
1 [0x1]:           loadval ebx   
2 [0x2]:           return_val ebx   
3 [0x3]:           ret   


function: std#__srt_global.exit[2280] params(0) in file: /usr/include/sharp//console.sharp:172:4: note:  
		def exit() {
		   ^

0 [0x0]: line: 173 int 0x1d   : protected asm start
1 [0x1]:           ret   : protected asm end


function: std#__srt_global.sizeOf[2281] params(1) in file: /usr/include/sharp//console.sharp:176:4: note:  
		def sizeOf(data: object) : var {
		   ^

0 [0x0]: line: 177 pushl 0   : protected asm start
1 [0x1]:           int 0x33   
2 [0x2]:           return_val ebx   
3 [0x3]:           ret   
4 [0x4]: line: 183 istorel 0, fp+0   : protected asm end
6 [0x6]:           ret   


function: std#__srt_global.sizeOf[2282] params(1) in file: /usr/include/sharp//console.sharp:186:4: note:  
		def sizeOf(data: object[]) : var {
		   ^

0 [0x0]: line: 187 pushl 0   : protected asm start
1 [0x1]:           int 0x33   
2 [0x2]:           return_val ebx   
3 [0x3]:           ret   
4 [0x4]: line: 193 istorel 0, fp+0   : protected asm end
6 [0x6]:           ret   


function: std#__srt_global.print_chars[2283] params(1) in file: /usr/include/sharp//console.sharp:196:10: note:  
		local def print_chars(str: _int8[]) {
		         ^

0 [0x0]: line: 197 istorel -1, fp+2   
2 [0x2]:           pushl 0   
3 [0x3]:           popl 3   
4 [0x4]:           iaddl 1, fp@2   
6 [0x6]:           movl 3   
7 [0x7]:           sizeof ecx   
8 [0x8]:           loadl ebx, fp+2   
9 [0x9]:           lt ebx, ecx   
10 [0xa]:           jne 16   
11 [0xb]:           iaload ecx, ebx   
12 [0xc]:           smovr_2 ecx, fp+1   
13 [0xd]: line: 198 loadl ebx, fp+1   : protected asm start
14 [0xe]:           _putc ebx   
15 [0xf]:           jmp @4   : protected asm end
16 [0x10]:           ret   


function: std#__srt_global.print_num[2284] params(1) in file: /usr/include/sharp//console.sharp:205:10: note:  
		local def print_num(val: var) {
		         ^

0 [0x0]: line: 206 loadl ebx, fp+0   : protected asm start
1 [0x1]:           put ebx   
2 [0x2]:           ret   : protected asm end


function: std#__srt_global.print_char[2285] params(1) in file: /usr/include/sharp//console.sharp:212:10: note:  
		local def print_char(val: _int8) {
		         ^

0 [0x0]: line: 213 loadl ebx, fp+0   : protected asm start
1 [0x1]:           _putc ebx   
2 [0x2]:           ret   : protected asm end


function: std#__srt_global.print_numbers[2286] params(1) in file: /usr/include/sharp//console.sharp:219:10: note:  
		local def print_numbers(str: var[]) {
		         ^

0 [0x0]: line: 220 movi #91, ebx   : protected asm start
2 [0x2]:           movi #32, ecx   
4 [0x4]:           _putc ebx   
5 [0x5]:           _putc ecx   
6 [0x6]: line: 226 istorel 0, fp+1   : protected asm end
8 [0x8]:           ipushl #1   
9 [0x9]:           movl 0   
10 [0xa]:           sizeof ebx   
11 [0xb]:           loadval ecx   
12 [0xc]:           lt ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 48   
16 [0x10]: line: 227 pushl 0   
17 [0x11]:           loadl ebx, fp+1   
18 [0x12]:           popobj2    
19 [0x13]:           movr adx, ebx   
20 [0x14]:           chklen adx   
21 [0x15]:           iaload ebx, adx   
22 [0x16]:           smovr_2 ebx, fp+2   
23 [0x17]: line: 228 loadl ebx, fp+2   : protected asm start
24 [0x18]:           put ebx   
25 [0x19]: line: 233 ipushl #1   : protected asm end
26 [0x1a]:           movi #1, ebx   
28 [0x1c]:           loadval ecx   
29 [0x1d]:           add ecx, ebx -> ebx   
30 [0x1e]:           rstore ebx   
31 [0x1f]:           movl 0   
32 [0x20]:           sizeof ebx   
33 [0x21]:           loadval ecx   
34 [0x22]:           lt ecx, ebx   
35 [0x23]:           movr ebx, cmt   
36 [0x24]:           movr cmt, ebx   
37 [0x25]:           jne 44   
38 [0x26]: line: 234 movi #44, ebx   : protected asm start
40 [0x28]:           movi #32, ecx   
42 [0x2a]:           _putc ebx   
43 [0x2b]:           _putc ecx   
44 [0x2c]:           nop   : protected asm end
45 [0x2d]:           iaddl 1, fp@1   
47 [0x2f]:           jmp @8   
48 [0x30]: line: 242 movi #32, ebx   : protected asm start
50 [0x32]:           movi #93, ecx   
52 [0x34]:           _putc ebx   
53 [0x35]:           _putc ecx   
54 [0x36]:           ret   : protected asm end


function: std#__srt_global.print_numbers[2287] params(1) in file: /usr/include/sharp//console.sharp:250:10: note:  
		local def print_numbers(str: _int16[]) {
		         ^

0 [0x0]: line: 251 pushl 0   : protected asm start
1 [0x1]:           call @2286 // <std#__srt_global.print_numbers>   
2 [0x2]:           ret   : protected asm end


function: std#__srt_global.print_numbers[2288] params(1) in file: /usr/include/sharp//console.sharp:257:10: note:  
		local def print_numbers(str: _int32[]) {
		         ^

0 [0x0]: line: 258 pushl 0   : protected asm start
1 [0x1]:           call @2286 // <std#__srt_global.print_numbers>   
2 [0x2]:           ret   : protected asm end


function: std#__srt_global.print_numbers[2289] params(1) in file: /usr/include/sharp//console.sharp:264:10: note:  
		local def print_numbers(str: _int64[]) {
		         ^

0 [0x0]: line: 265 pushl 0   : protected asm start
1 [0x1]:           call @2286 // <std#__srt_global.print_numbers>   
2 [0x2]:           ret   : protected asm end


function: std#__srt_global.print_numbers[2290] params(1) in file: /usr/include/sharp//console.sharp:271:10: note:  
		local def print_numbers(str: _uint8[]) {
		         ^

0 [0x0]: line: 272 pushl 0   : protected asm start
1 [0x1]:           call @2286 // <std#__srt_global.print_numbers>   
2 [0x2]:           ret   : protected asm end


function: std#__srt_global.print_numbers[2291] params(1) in file: /usr/include/sharp//console.sharp:278:10: note:  
		local def print_numbers(str: _uint16[]) {
		         ^

0 [0x0]: line: 279 pushl 0   : protected asm start
1 [0x1]:           call @2286 // <std#__srt_global.print_numbers>   
2 [0x2]:           ret   : protected asm end


function: std#__srt_global.print_numbers[2292] params(1) in file: /usr/include/sharp//console.sharp:285:10: note:  
		local def print_numbers(str: _uint32[]) {
		         ^

0 [0x0]: line: 286 pushl 0   : protected asm start
1 [0x1]:           call @2286 // <std#__srt_global.print_numbers>   
2 [0x2]:           ret   : protected asm end


function: std#__srt_global.print_numbers[2293] params(1) in file: /usr/include/sharp//console.sharp:292:10: note:  
		local def print_numbers(str: _uint64[]) {
		         ^

0 [0x0]: line: 293 pushl 0   : protected asm start
1 [0x1]:           call @2286 // <std#__srt_global.print_numbers>   
2 [0x2]:           ret   : protected asm end


function: std#__srt_global.print_chars[2294] params(1) in file: /usr/include/sharp//console.sharp:299:10: note:  
		local def print_chars(str: _int16[]) {
		         ^

0 [0x0]: line: 300 pushl 0   : protected asm start
1 [0x1]:           call @2283 // <std#__srt_global.print_chars>   
2 [0x2]:           ret   : protected asm end


function: std#__srt_global.read_ch[2295] params(1) in file: /usr/include/sharp//console.sharp:306:10: note:  
		local def read_ch(hide: var) : var {
		         ^

0 [0x0]: line: 307 loadl cmt, fp+0   : protected asm start
1 [0x1]:           get ebx   
2 [0x2]:           return_val ebx   
3 [0x3]:           ret   
4 [0x4]: line: 313 istorel 0, fp+0   : protected asm end
6 [0x6]:           ret   


constructor: std#_enum_._enum_[2296] params(1) in file: /usr/include/sharp//enum.sharp:18:11: note:  
		    _enum_(ord : var) {
		          ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 19 ipushl #1   
2 [0x2]:          movl 0   
3 [0x3]:          movn #1   
5 [0x5]:          loadval ebx   
6 [0x6]:          mov64 ebx, ebx   
7 [0x7]:          movi #0, adx   
9 [0x9]:          rmov adx, ebx   
10 [0xa]:          ret   


constructor: std#_enum_._enum_[2297] params(1) in file: /usr/include/sharp//enum.sharp:22:11: note:  
		    _enum_(e : _enum_) {
		          ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 23 movl 1   
2 [0x2]:          movn #1   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          movl 0   
8 [0x8]:          movn #1   
10 [0xa]:          mov64 ebx, ebx   
11 [0xb]:          movi #0, adx   
13 [0xd]:          rmov adx, ebx   
14 [0xe]: line: 24 movl 1   
15 [0xf]:          movn #0   
17 [0x11]:          pushobj   
18 [0x12]:          istore 0   
20 [0x14]:          movl 1   
21 [0x15]:          movn #0   
23 [0x17]:          sizeof ebx   
24 [0x18]:          rstore ebx   
25 [0x19]:          call @2109 // <std.io#__srt_global.copy>   
26 [0x1a]:          movl 0   
27 [0x1b]:          movn #0   
29 [0x1d]:          popobj   
30 [0x1e]:          ret   


overload function: std#_enum_.operator!=[2298] params(1) in file: /usr/include/sharp//enum.sharp:27:8: note:  
		    def operator!=(e : _enum_) : var {
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #1   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          tne ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#_enum_.operator!=[2299] params(1) in file: /usr/include/sharp//enum.sharp:31:8: note:  
		    def operator!=(num : var) : var {
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          tne ecx, ebx   
10 [0xa]:          return_val cmt   
11 [0xb]:          ret   


overload function: std#_enum_.operator==[2300] params(1) in file: /usr/include/sharp//enum.sharp:35:8: note:  
		    def operator==(e : _enum_) : var {
		       ^

0 [0x0]: line: 36 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #1   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


overload function: std#_enum_.operator==[2301] params(1) in file: /usr/include/sharp//enum.sharp:39:8: note:  
		    def operator==(num : var) : var {
		       ^

0 [0x0]: line: 40 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          test ecx, ebx   
10 [0xa]:          return_val cmt   
11 [0xb]:          ret   


function: std#_enum_.get_name[2302] params(0) in file: /usr/include/sharp//enum.sharp:43:8: note:  
		    def get_name() : _int8[] {
		       ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          returnobj   
4 [0x4]:          ret   


function: std#_enum_.get_ordinal[2303] params(0) in file: /usr/include/sharp//enum.sharp:47:8: note:  
		    def get_ordinal() : _int64 {
		       ^

0 [0x0]: line: 48 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          return_val ebx   
7 [0x7]:          ret   


function: std#_enum_.to_string[2304] params(0) in file: /usr/include/sharp//enum.sharp:51:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 52 new_class @0 // std#__srt_global   
1 [0x1]:          ret   
2 [0x2]:          dup    
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          pushobj   
7 [0x7]:          call @1959 // <std#string.string>   
8 [0x8]:          popobj2    
9 [0x9]:          returnobj   
10 [0xa]:          ret   


constructor: std#_enum_._enum_[2305] params(0) in file: /usr/include/sharp//enum.sharp:14:17: note:  
		stable ext class _enum_ {
		                ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


function: std#__srt_global.rand[2306] params(0) in file: /usr/include/sharp//random.sharp:6:4: note:  
		def rand() : var {
		   ^

0 [0x0]: line: 7 istore 0   
2 [0x2]:         movi #1, ebx   
4 [0x4]:         rstore ebx   
5 [0x5]:         call @3484 // <platform.kernel#vm.random_double>   
6 [0x6]:         loadval ebx   
7 [0x7]:         return_val ebx   
8 [0x8]:         ret   


function: std#__srt_global.rand_int[2307] params(2) in file: /usr/include/sharp//random.sharp:10:4: note:  
		def rand_int(min: var, max: var) : var {
		   ^

0 [0x0]: line: 11 ipushl #0   
1 [0x1]:          ipushl #1   
2 [0x2]:          call @3482 // <platform.kernel#vm.random_int>   
3 [0x3]:          loadval ebx   
4 [0x4]:          return_val ebx   
5 [0x5]:          ret   


function: std#__srt_global.rand_double[2308] params(2) in file: /usr/include/sharp//random.sharp:14:4: note:  
		def rand_double(min: var, max: var) : var {
		   ^

0 [0x0]: line: 15 ipushl #0   
1 [0x1]:          ipushl #1   
2 [0x2]:          call @3484 // <platform.kernel#vm.random_double>   
3 [0x3]:          loadval ebx   
4 [0x4]:          return_val ebx   
5 [0x5]:          ret   


function: std#__srt_global.rand_int[2309] params(0) in file: /usr/include/sharp//random.sharp:18:4: note:  
		def rand_int() : var {
		   ^

0 [0x0]: line: 19 call @3481 // <platform.kernel#vm.random_int>   
1 [0x1]:          loadval ebx   
2 [0x2]:          return_val ebx   
3 [0x3]:          ret   


function: std#__srt_global.rand_double[2310] params(0) in file: /usr/include/sharp//random.sharp:22:4: note:  
		def rand_double() : var {
		   ^

0 [0x0]: line: 23 call @3483 // <platform.kernel#vm.random_double>   
1 [0x1]:          loadval ebx   
2 [0x2]:          return_val ebx   
3 [0x3]:          ret   


function: std#__srt_global.set_seed[2311] params(1) in file: /usr/include/sharp//random.sharp:26:4: note:  
		def set_seed(seed: var) {
		   ^

0 [0x0]: line: 27 ipushl #0   
1 [0x1]:          movg @0 // @std#__srt_global   
2 [0x2]:          movn #1   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]: line: 28 movg @0 // @std#__srt_global   
9 [0x9]:          movn #1   
11 [0xb]:          movi #0, adx   
13 [0xd]:          iaload ebx, adx   
14 [0xe]:          rstore ebx   
15 [0xf]:          call @3485 // <platform.kernel#vm.random_seed>   
16 [0x10]:          ret   


constructor: std#tmp.tmp[2312] params(0) in file: /usr/include/sharp//random.sharp:32:5: note:  
		class tmp {
		    ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#ulong.ulong[2313] params(1) in file: /usr/include/sharp//primitives.sharp:274:10: note:  
		    ulong(i : long) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @26 // <std#integer<_uint64>.integer>   
9 [0x9]:         ret   


constructor: std#ulong.ulong[2314] params(1) in file: /usr/include/sharp//primitives.sharp:275:10: note:  
		    ulong(i : int) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @26 // <std#integer<_uint64>.integer>   
9 [0x9]:         ret   


constructor: std#ulong.ulong[2315] params(1) in file: /usr/include/sharp//primitives.sharp:276:10: note:  
		    ulong(i : short) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @26 // <std#integer<_uint64>.integer>   
9 [0x9]:         ret   


constructor: std#ulong.ulong[2316] params(1) in file: /usr/include/sharp//primitives.sharp:277:10: note:  
		    ulong(i : char) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @26 // <std#integer<_uint64>.integer>   
9 [0x9]:         ret   


constructor: std#ulong.ulong[2317] params(1) in file: /usr/include/sharp//primitives.sharp:278:10: note:  
		    ulong(i : byte) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @26 // <std#integer<_uint64>.integer>   
9 [0x9]:         ret   


constructor: std#ulong.ulong[2318] params(1) in file: /usr/include/sharp//primitives.sharp:279:10: note:  
		    ulong(i : bool) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @26 // <std#integer<_uint64>.integer>   
9 [0x9]:         ret   


constructor: std#ulong.ulong[2319] params(1) in file: /usr/include/sharp//primitives.sharp:280:10: note:  
		    ulong(i : ulong) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @26 // <std#integer<_uint64>.integer>   
9 [0x9]:         ret   


constructor: std#ulong.ulong[2320] params(1) in file: /usr/include/sharp//primitives.sharp:281:10: note:  
		    ulong(i : uint) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @26 // <std#integer<_uint64>.integer>   
9 [0x9]:         ret   


constructor: std#ulong.ulong[2321] params(1) in file: /usr/include/sharp//primitives.sharp:282:10: note:  
		    ulong(i : ushort) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @26 // <std#integer<_uint64>.integer>   
9 [0x9]:         ret   


constructor: std#ulong.ulong[2322] params(1) in file: /usr/include/sharp//primitives.sharp:283:10: note:  
		    ulong(i : uchar) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @26 // <std#integer<_uint64>.integer>   
9 [0x9]:         ret   


constructor: std#ulong.ulong[2323] params(1) in file: /usr/include/sharp//primitives.sharp:284:10: note:  
		    ulong(i : double) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @26 // <std#integer<_uint64>.integer>   
9 [0x9]:         ret   


constructor: std#ulong.ulong[2324] params(1) in file: /usr/include/sharp//primitives.sharp:285:10: note:  
		    ulong(i : var) -> base(i) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ipushl #1   
2 [0x2]:         call @26 // <std#integer<_uint64>.integer>   
3 [0x3]:         ret   


overload function: std#ulong.operator![2325] params(0) in file: /usr/include/sharp//primitives.sharp:287:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 287 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           not ebx, ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


overload function: std#ulong.operator++[2326] params(0) in file: /usr/include/sharp//primitives.sharp:288:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 288 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           inc ebx   
7 [0x7]:           movu64 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#ulong.operator++[2327] params(1) in file: /usr/include/sharp//primitives.sharp:289:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 289 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           inc ebx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#ulong.operator--[2328] params(0) in file: /usr/include/sharp//primitives.sharp:290:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 290 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           dec ebx   
7 [0x7]:           movu64 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#ulong.operator--[2329] params(1) in file: /usr/include/sharp//primitives.sharp:291:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 291 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           dec ebx   
8 [0x8]:           movu64 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#ulong.operator+=[2330] params(1) in file: /usr/include/sharp//primitives.sharp:293:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 293 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator+=[2331] params(1) in file: /usr/include/sharp//primitives.sharp:294:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 294 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator+=[2332] params(1) in file: /usr/include/sharp//primitives.sharp:295:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 295 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator+=[2333] params(1) in file: /usr/include/sharp//primitives.sharp:296:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 296 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator+=[2334] params(1) in file: /usr/include/sharp//primitives.sharp:297:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 297 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator+=[2335] params(1) in file: /usr/include/sharp//primitives.sharp:298:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 298 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator+=[2336] params(1) in file: /usr/include/sharp//primitives.sharp:299:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 299 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator+=[2337] params(1) in file: /usr/include/sharp//primitives.sharp:300:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 300 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator+=[2338] params(1) in file: /usr/include/sharp//primitives.sharp:301:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 301 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator+=[2339] params(1) in file: /usr/include/sharp//primitives.sharp:302:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 302 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator+=[2340] params(1) in file: /usr/include/sharp//primitives.sharp:303:8: note:  
		    def operator+=(num : double)   := (value+=num.value);
		       ^

0 [0x0]: line: 303 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator+=[2341] params(1) in file: /usr/include/sharp//primitives.sharp:304:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 304 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           add ecx, ebx -> ebx   
9 [0x9]:           movu64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#ulong.operator-=[2342] params(1) in file: /usr/include/sharp//primitives.sharp:306:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 306 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator-=[2343] params(1) in file: /usr/include/sharp//primitives.sharp:307:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 307 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator-=[2344] params(1) in file: /usr/include/sharp//primitives.sharp:308:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 308 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator-=[2345] params(1) in file: /usr/include/sharp//primitives.sharp:309:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 309 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator-=[2346] params(1) in file: /usr/include/sharp//primitives.sharp:310:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 310 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator-=[2347] params(1) in file: /usr/include/sharp//primitives.sharp:311:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 311 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator-=[2348] params(1) in file: /usr/include/sharp//primitives.sharp:312:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 312 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator-=[2349] params(1) in file: /usr/include/sharp//primitives.sharp:313:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 313 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator-=[2350] params(1) in file: /usr/include/sharp//primitives.sharp:314:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 314 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator-=[2351] params(1) in file: /usr/include/sharp//primitives.sharp:315:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 315 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator-=[2352] params(1) in file: /usr/include/sharp//primitives.sharp:316:8: note:  
		    def operator-=(num : double)   := (value-=num.value);
		       ^

0 [0x0]: line: 316 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator-=[2353] params(1) in file: /usr/include/sharp//primitives.sharp:317:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 317 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           sub ecx, ebx -> ebx   
9 [0x9]:           movu64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#ulong.operator*=[2354] params(1) in file: /usr/include/sharp//primitives.sharp:319:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 319 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator*=[2355] params(1) in file: /usr/include/sharp//primitives.sharp:320:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 320 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator*=[2356] params(1) in file: /usr/include/sharp//primitives.sharp:321:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 321 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator*=[2357] params(1) in file: /usr/include/sharp//primitives.sharp:322:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 322 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator*=[2358] params(1) in file: /usr/include/sharp//primitives.sharp:323:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 323 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator*=[2359] params(1) in file: /usr/include/sharp//primitives.sharp:324:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 324 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator*=[2360] params(1) in file: /usr/include/sharp//primitives.sharp:325:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 325 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator*=[2361] params(1) in file: /usr/include/sharp//primitives.sharp:326:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 326 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator*=[2362] params(1) in file: /usr/include/sharp//primitives.sharp:327:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 327 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator*=[2363] params(1) in file: /usr/include/sharp//primitives.sharp:328:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 328 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator*=[2364] params(1) in file: /usr/include/sharp//primitives.sharp:329:8: note:  
		    def operator*=(num : double)   := (value*=num.value);
		       ^

0 [0x0]: line: 329 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator*=[2365] params(1) in file: /usr/include/sharp//primitives.sharp:330:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 330 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mul ecx, ebx -> ebx   
9 [0x9]:           movu64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#ulong.operator/=[2366] params(1) in file: /usr/include/sharp//primitives.sharp:332:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 332 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator/=[2367] params(1) in file: /usr/include/sharp//primitives.sharp:333:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 333 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator/=[2368] params(1) in file: /usr/include/sharp//primitives.sharp:334:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 334 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator/=[2369] params(1) in file: /usr/include/sharp//primitives.sharp:335:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 335 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator/=[2370] params(1) in file: /usr/include/sharp//primitives.sharp:336:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 336 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator/=[2371] params(1) in file: /usr/include/sharp//primitives.sharp:337:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 337 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator/=[2372] params(1) in file: /usr/include/sharp//primitives.sharp:338:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 338 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator/=[2373] params(1) in file: /usr/include/sharp//primitives.sharp:339:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 339 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator/=[2374] params(1) in file: /usr/include/sharp//primitives.sharp:340:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 340 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator/=[2375] params(1) in file: /usr/include/sharp//primitives.sharp:341:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 341 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator/=[2376] params(1) in file: /usr/include/sharp//primitives.sharp:342:8: note:  
		    def operator/=(num : double)   := (value/=num.value);
		       ^

0 [0x0]: line: 342 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator/=[2377] params(1) in file: /usr/include/sharp//primitives.sharp:343:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 343 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           div ecx, ebx -> ebx   
9 [0x9]:           movu64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#ulong.operator%=[2378] params(1) in file: /usr/include/sharp//primitives.sharp:345:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 345 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator%=[2379] params(1) in file: /usr/include/sharp//primitives.sharp:346:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 346 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator%=[2380] params(1) in file: /usr/include/sharp//primitives.sharp:347:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 347 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator%=[2381] params(1) in file: /usr/include/sharp//primitives.sharp:348:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 348 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator%=[2382] params(1) in file: /usr/include/sharp//primitives.sharp:349:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 349 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator%=[2383] params(1) in file: /usr/include/sharp//primitives.sharp:350:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 350 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator%=[2384] params(1) in file: /usr/include/sharp//primitives.sharp:351:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 351 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator%=[2385] params(1) in file: /usr/include/sharp//primitives.sharp:352:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 352 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator%=[2386] params(1) in file: /usr/include/sharp//primitives.sharp:353:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 353 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator%=[2387] params(1) in file: /usr/include/sharp//primitives.sharp:354:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 354 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator%=[2388] params(1) in file: /usr/include/sharp//primitives.sharp:355:8: note:  
		    def operator%=(num : double)   := (value%=num.value);
		       ^

0 [0x0]: line: 355 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator%=[2389] params(1) in file: /usr/include/sharp//primitives.sharp:356:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 356 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mod ecx, ebx -> ebx   
9 [0x9]:           movu64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#ulong.operator&=[2390] params(1) in file: /usr/include/sharp//primitives.sharp:358:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 358 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ulong.operator&=[2391] params(1) in file: /usr/include/sharp//primitives.sharp:359:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 359 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ulong.operator&=[2392] params(1) in file: /usr/include/sharp//primitives.sharp:360:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 360 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ulong.operator&=[2393] params(1) in file: /usr/include/sharp//primitives.sharp:361:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 361 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ulong.operator&=[2394] params(1) in file: /usr/include/sharp//primitives.sharp:362:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 362 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ulong.operator&=[2395] params(1) in file: /usr/include/sharp//primitives.sharp:363:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 363 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ulong.operator&=[2396] params(1) in file: /usr/include/sharp//primitives.sharp:364:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 364 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ulong.operator&=[2397] params(1) in file: /usr/include/sharp//primitives.sharp:365:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 365 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ulong.operator&=[2398] params(1) in file: /usr/include/sharp//primitives.sharp:366:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 366 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ulong.operator&=[2399] params(1) in file: /usr/include/sharp//primitives.sharp:367:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 367 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ulong.operator&=[2400] params(1) in file: /usr/include/sharp//primitives.sharp:368:8: note:  
		    def operator&=(num : double)   := (value&=num.value);
		       ^

0 [0x0]: line: 368 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ulong.operator&=[2401] params(1) in file: /usr/include/sharp//primitives.sharp:369:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 369 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           and ecx, ebx   
9 [0x9]:           rmov adx, cmt   
10 [0xa]:           returnobj   
11 [0xb]:           ret   


overload function: std#ulong.operator|=[2402] params(1) in file: /usr/include/sharp//primitives.sharp:371:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 371 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator|=[2403] params(1) in file: /usr/include/sharp//primitives.sharp:372:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 372 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator|=[2404] params(1) in file: /usr/include/sharp//primitives.sharp:373:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 373 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator|=[2405] params(1) in file: /usr/include/sharp//primitives.sharp:374:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 374 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator|=[2406] params(1) in file: /usr/include/sharp//primitives.sharp:375:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 375 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator|=[2407] params(1) in file: /usr/include/sharp//primitives.sharp:376:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 376 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator|=[2408] params(1) in file: /usr/include/sharp//primitives.sharp:377:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 377 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator|=[2409] params(1) in file: /usr/include/sharp//primitives.sharp:378:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 378 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator|=[2410] params(1) in file: /usr/include/sharp//primitives.sharp:379:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 379 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator|=[2411] params(1) in file: /usr/include/sharp//primitives.sharp:380:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 380 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator|=[2412] params(1) in file: /usr/include/sharp//primitives.sharp:381:8: note:  
		    def operator|=(num : double)   := (value|=num.value);
		       ^

0 [0x0]: line: 381 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ulong.operator|=[2413] params(1) in file: /usr/include/sharp//primitives.sharp:382:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 382 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           or ecx, ebx   
9 [0x9]:           movu64 cmt, cmt   
10 [0xa]:           rmov adx, cmt   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


constructor: std#ulong.ulong[2414] params(0) in file: /usr/include/sharp//primitives.sharp:273:6: note:  
		class ulong base integer<_uint64> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @234 // <std#integer<_uint64>.integer>   
2 [0x2]:         ret   


constructor: std#long.long[2415] params(1) in file: /usr/include/sharp//primitives.sharp:385:9: note:  
		    long(i : long) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @235 // <std#integer<_int64>.integer>   
9 [0x9]:         ret   


constructor: std#long.long[2416] params(1) in file: /usr/include/sharp//primitives.sharp:386:9: note:  
		    long(i : int) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @235 // <std#integer<_int64>.integer>   
9 [0x9]:         ret   


constructor: std#long.long[2417] params(1) in file: /usr/include/sharp//primitives.sharp:387:9: note:  
		    long(i : short) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @235 // <std#integer<_int64>.integer>   
9 [0x9]:         ret   


constructor: std#long.long[2418] params(1) in file: /usr/include/sharp//primitives.sharp:388:9: note:  
		    long(i : char) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @235 // <std#integer<_int64>.integer>   
9 [0x9]:         ret   


constructor: std#long.long[2419] params(1) in file: /usr/include/sharp//primitives.sharp:389:9: note:  
		    long(i : byte) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @235 // <std#integer<_int64>.integer>   
9 [0x9]:         ret   


constructor: std#long.long[2420] params(1) in file: /usr/include/sharp//primitives.sharp:390:9: note:  
		    long(i : bool) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @235 // <std#integer<_int64>.integer>   
9 [0x9]:         ret   


constructor: std#long.long[2421] params(1) in file: /usr/include/sharp//primitives.sharp:391:9: note:  
		    long(i : ulong) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @235 // <std#integer<_int64>.integer>   
9 [0x9]:         ret   


constructor: std#long.long[2422] params(1) in file: /usr/include/sharp//primitives.sharp:392:9: note:  
		    long(i : uint) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @235 // <std#integer<_int64>.integer>   
9 [0x9]:         ret   


constructor: std#long.long[2423] params(1) in file: /usr/include/sharp//primitives.sharp:393:9: note:  
		    long(i : ushort) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @235 // <std#integer<_int64>.integer>   
9 [0x9]:         ret   


constructor: std#long.long[2424] params(1) in file: /usr/include/sharp//primitives.sharp:394:9: note:  
		    long(i : uchar) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @235 // <std#integer<_int64>.integer>   
9 [0x9]:         ret   


constructor: std#long.long[2425] params(1) in file: /usr/include/sharp//primitives.sharp:395:9: note:  
		    long(i : double) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @235 // <std#integer<_int64>.integer>   
9 [0x9]:         ret   


constructor: std#long.long[2426] params(1) in file: /usr/include/sharp//primitives.sharp:396:9: note:  
		    long(i : var) -> base(i) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         ipushl #1   
2 [0x2]:         call @235 // <std#integer<_int64>.integer>   
3 [0x3]:         ret   


overload function: std#long.operator![2427] params(0) in file: /usr/include/sharp//primitives.sharp:398:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 398 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           not ebx, ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


overload function: std#long.operator++[2428] params(0) in file: /usr/include/sharp//primitives.sharp:399:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 399 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           inc ebx   
7 [0x7]:           mov64 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#long.operator++[2429] params(1) in file: /usr/include/sharp//primitives.sharp:400:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 400 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           inc ebx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#long.operator--[2430] params(0) in file: /usr/include/sharp//primitives.sharp:401:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 401 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           dec ebx   
7 [0x7]:           mov64 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#long.operator--[2431] params(1) in file: /usr/include/sharp//primitives.sharp:402:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 402 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           dec ebx   
8 [0x8]:           mov64 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#long.operator+=[2432] params(1) in file: /usr/include/sharp//primitives.sharp:404:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 404 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator+=[2433] params(1) in file: /usr/include/sharp//primitives.sharp:405:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 405 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator+=[2434] params(1) in file: /usr/include/sharp//primitives.sharp:406:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 406 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator+=[2435] params(1) in file: /usr/include/sharp//primitives.sharp:407:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 407 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator+=[2436] params(1) in file: /usr/include/sharp//primitives.sharp:408:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 408 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator+=[2437] params(1) in file: /usr/include/sharp//primitives.sharp:409:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 409 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator+=[2438] params(1) in file: /usr/include/sharp//primitives.sharp:410:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 410 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator+=[2439] params(1) in file: /usr/include/sharp//primitives.sharp:411:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 411 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator+=[2440] params(1) in file: /usr/include/sharp//primitives.sharp:412:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 412 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator+=[2441] params(1) in file: /usr/include/sharp//primitives.sharp:413:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 413 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator+=[2442] params(1) in file: /usr/include/sharp//primitives.sharp:414:8: note:  
		    def operator+=(num : double)   := (value+=num.value);
		       ^

0 [0x0]: line: 414 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator+=[2443] params(1) in file: /usr/include/sharp//primitives.sharp:415:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 415 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           add ecx, ebx -> ebx   
9 [0x9]:           mov64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#long.operator-=[2444] params(1) in file: /usr/include/sharp//primitives.sharp:417:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 417 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator-=[2445] params(1) in file: /usr/include/sharp//primitives.sharp:418:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 418 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator-=[2446] params(1) in file: /usr/include/sharp//primitives.sharp:419:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 419 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator-=[2447] params(1) in file: /usr/include/sharp//primitives.sharp:420:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 420 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator-=[2448] params(1) in file: /usr/include/sharp//primitives.sharp:421:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 421 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator-=[2449] params(1) in file: /usr/include/sharp//primitives.sharp:422:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 422 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator-=[2450] params(1) in file: /usr/include/sharp//primitives.sharp:423:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 423 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator-=[2451] params(1) in file: /usr/include/sharp//primitives.sharp:424:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 424 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator-=[2452] params(1) in file: /usr/include/sharp//primitives.sharp:425:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 425 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator-=[2453] params(1) in file: /usr/include/sharp//primitives.sharp:426:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 426 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator-=[2454] params(1) in file: /usr/include/sharp//primitives.sharp:427:8: note:  
		    def operator-=(num : double)   := (value-=num.value);
		       ^

0 [0x0]: line: 427 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator-=[2455] params(1) in file: /usr/include/sharp//primitives.sharp:428:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 428 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           sub ecx, ebx -> ebx   
9 [0x9]:           mov64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#long.operator*=[2456] params(1) in file: /usr/include/sharp//primitives.sharp:430:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 430 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator*=[2457] params(1) in file: /usr/include/sharp//primitives.sharp:431:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 431 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator*=[2458] params(1) in file: /usr/include/sharp//primitives.sharp:432:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 432 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator*=[2459] params(1) in file: /usr/include/sharp//primitives.sharp:433:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 433 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator*=[2460] params(1) in file: /usr/include/sharp//primitives.sharp:434:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 434 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator*=[2461] params(1) in file: /usr/include/sharp//primitives.sharp:435:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 435 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator*=[2462] params(1) in file: /usr/include/sharp//primitives.sharp:436:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 436 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator*=[2463] params(1) in file: /usr/include/sharp//primitives.sharp:437:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 437 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator*=[2464] params(1) in file: /usr/include/sharp//primitives.sharp:438:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 438 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator*=[2465] params(1) in file: /usr/include/sharp//primitives.sharp:439:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 439 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator*=[2466] params(1) in file: /usr/include/sharp//primitives.sharp:440:8: note:  
		    def operator*=(num : double)   := (value*=num.value);
		       ^

0 [0x0]: line: 440 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator*=[2467] params(1) in file: /usr/include/sharp//primitives.sharp:441:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 441 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mul ecx, ebx -> ebx   
9 [0x9]:           mov64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#long.operator/=[2468] params(1) in file: /usr/include/sharp//primitives.sharp:443:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 443 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator/=[2469] params(1) in file: /usr/include/sharp//primitives.sharp:444:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 444 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator/=[2470] params(1) in file: /usr/include/sharp//primitives.sharp:445:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 445 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator/=[2471] params(1) in file: /usr/include/sharp//primitives.sharp:446:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 446 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator/=[2472] params(1) in file: /usr/include/sharp//primitives.sharp:447:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 447 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator/=[2473] params(1) in file: /usr/include/sharp//primitives.sharp:448:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 448 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator/=[2474] params(1) in file: /usr/include/sharp//primitives.sharp:449:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 449 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator/=[2475] params(1) in file: /usr/include/sharp//primitives.sharp:450:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 450 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator/=[2476] params(1) in file: /usr/include/sharp//primitives.sharp:451:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 451 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator/=[2477] params(1) in file: /usr/include/sharp//primitives.sharp:452:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 452 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator/=[2478] params(1) in file: /usr/include/sharp//primitives.sharp:453:8: note:  
		    def operator/=(num : double)   := (value/=num.value);
		       ^

0 [0x0]: line: 453 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator/=[2479] params(1) in file: /usr/include/sharp//primitives.sharp:454:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 454 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           div ecx, ebx -> ebx   
9 [0x9]:           mov64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#long.operator%=[2480] params(1) in file: /usr/include/sharp//primitives.sharp:456:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 456 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator%=[2481] params(1) in file: /usr/include/sharp//primitives.sharp:457:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 457 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator%=[2482] params(1) in file: /usr/include/sharp//primitives.sharp:458:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 458 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator%=[2483] params(1) in file: /usr/include/sharp//primitives.sharp:459:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 459 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator%=[2484] params(1) in file: /usr/include/sharp//primitives.sharp:460:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 460 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator%=[2485] params(1) in file: /usr/include/sharp//primitives.sharp:461:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 461 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator%=[2486] params(1) in file: /usr/include/sharp//primitives.sharp:462:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 462 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator%=[2487] params(1) in file: /usr/include/sharp//primitives.sharp:463:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 463 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator%=[2488] params(1) in file: /usr/include/sharp//primitives.sharp:464:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 464 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator%=[2489] params(1) in file: /usr/include/sharp//primitives.sharp:465:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 465 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator%=[2490] params(1) in file: /usr/include/sharp//primitives.sharp:466:8: note:  
		    def operator%=(num : double)   := (value%=num.value);
		       ^

0 [0x0]: line: 466 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov64 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator%=[2491] params(1) in file: /usr/include/sharp//primitives.sharp:467:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 467 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mod ecx, ebx -> ebx   
9 [0x9]:           mov64 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#long.operator&=[2492] params(1) in file: /usr/include/sharp//primitives.sharp:469:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 469 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#long.operator&=[2493] params(1) in file: /usr/include/sharp//primitives.sharp:470:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 470 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#long.operator&=[2494] params(1) in file: /usr/include/sharp//primitives.sharp:471:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 471 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#long.operator&=[2495] params(1) in file: /usr/include/sharp//primitives.sharp:472:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 472 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#long.operator&=[2496] params(1) in file: /usr/include/sharp//primitives.sharp:473:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 473 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#long.operator&=[2497] params(1) in file: /usr/include/sharp//primitives.sharp:474:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 474 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#long.operator&=[2498] params(1) in file: /usr/include/sharp//primitives.sharp:475:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 475 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#long.operator&=[2499] params(1) in file: /usr/include/sharp//primitives.sharp:476:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 476 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#long.operator&=[2500] params(1) in file: /usr/include/sharp//primitives.sharp:477:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 477 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#long.operator&=[2501] params(1) in file: /usr/include/sharp//primitives.sharp:478:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 478 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#long.operator&=[2502] params(1) in file: /usr/include/sharp//primitives.sharp:479:8: note:  
		    def operator&=(num : double)   := (value&=num.value);
		       ^

0 [0x0]: line: 479 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#long.operator&=[2503] params(1) in file: /usr/include/sharp//primitives.sharp:480:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 480 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           and ecx, ebx   
9 [0x9]:           rmov adx, cmt   
10 [0xa]:           returnobj   
11 [0xb]:           ret   


overload function: std#long.operator|=[2504] params(1) in file: /usr/include/sharp//primitives.sharp:482:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 482 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator|=[2505] params(1) in file: /usr/include/sharp//primitives.sharp:483:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 483 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator|=[2506] params(1) in file: /usr/include/sharp//primitives.sharp:484:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 484 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator|=[2507] params(1) in file: /usr/include/sharp//primitives.sharp:485:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 485 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator|=[2508] params(1) in file: /usr/include/sharp//primitives.sharp:486:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 486 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator|=[2509] params(1) in file: /usr/include/sharp//primitives.sharp:487:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 487 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator|=[2510] params(1) in file: /usr/include/sharp//primitives.sharp:488:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 488 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator|=[2511] params(1) in file: /usr/include/sharp//primitives.sharp:489:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 489 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator|=[2512] params(1) in file: /usr/include/sharp//primitives.sharp:490:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 490 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator|=[2513] params(1) in file: /usr/include/sharp//primitives.sharp:491:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 491 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator|=[2514] params(1) in file: /usr/include/sharp//primitives.sharp:492:8: note:  
		    def operator|=(num : double)   := (value|=num.value);
		       ^

0 [0x0]: line: 492 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov64 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#long.operator|=[2515] params(1) in file: /usr/include/sharp//primitives.sharp:493:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 493 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           or ecx, ebx   
9 [0x9]:           mov64 cmt, cmt   
10 [0xa]:           rmov adx, cmt   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


constructor: std#long.long[2516] params(0) in file: /usr/include/sharp//primitives.sharp:384:6: note:  
		class long base integer<_int64> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @443 // <std#integer<_int64>.integer>   
2 [0x2]:         ret   


constructor: std#uint.uint[2517] params(1) in file: /usr/include/sharp//primitives.sharp:497:9: note:  
		    uint(i : long) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @444 // <std#integer<_uint32>.integer>   
9 [0x9]:         ret   


constructor: std#uint.uint[2518] params(1) in file: /usr/include/sharp//primitives.sharp:498:9: note:  
		    uint(i : int) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @444 // <std#integer<_uint32>.integer>   
9 [0x9]:         ret   


constructor: std#uint.uint[2519] params(1) in file: /usr/include/sharp//primitives.sharp:499:9: note:  
		    uint(i : short) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @444 // <std#integer<_uint32>.integer>   
9 [0x9]:         ret   


constructor: std#uint.uint[2520] params(1) in file: /usr/include/sharp//primitives.sharp:500:9: note:  
		    uint(i : char) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @444 // <std#integer<_uint32>.integer>   
9 [0x9]:         ret   


constructor: std#uint.uint[2521] params(1) in file: /usr/include/sharp//primitives.sharp:501:9: note:  
		    uint(i : byte) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @444 // <std#integer<_uint32>.integer>   
9 [0x9]:         ret   


constructor: std#uint.uint[2522] params(1) in file: /usr/include/sharp//primitives.sharp:502:9: note:  
		    uint(i : bool) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @444 // <std#integer<_uint32>.integer>   
9 [0x9]:         ret   


constructor: std#uint.uint[2523] params(1) in file: /usr/include/sharp//primitives.sharp:503:9: note:  
		    uint(i : ulong) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @444 // <std#integer<_uint32>.integer>   
9 [0x9]:         ret   


constructor: std#uint.uint[2524] params(1) in file: /usr/include/sharp//primitives.sharp:504:9: note:  
		    uint(i : uint) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @444 // <std#integer<_uint32>.integer>   
9 [0x9]:         ret   


constructor: std#uint.uint[2525] params(1) in file: /usr/include/sharp//primitives.sharp:505:9: note:  
		    uint(i : ushort) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @444 // <std#integer<_uint32>.integer>   
9 [0x9]:         ret   


constructor: std#uint.uint[2526] params(1) in file: /usr/include/sharp//primitives.sharp:506:9: note:  
		    uint(i : uchar) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @444 // <std#integer<_uint32>.integer>   
9 [0x9]:         ret   


constructor: std#uint.uint[2527] params(1) in file: /usr/include/sharp//primitives.sharp:507:9: note:  
		    uint(i : double) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @444 // <std#integer<_uint32>.integer>   
9 [0x9]:         ret   


constructor: std#uint.uint[2528] params(1) in file: /usr/include/sharp//primitives.sharp:508:9: note:  
		    uint(i : var) -> base(i) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         ipushl #1   
2 [0x2]:         call @444 // <std#integer<_uint32>.integer>   
3 [0x3]:         ret   


overload function: std#uint.operator![2529] params(0) in file: /usr/include/sharp//primitives.sharp:510:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 510 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           not ebx, ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


overload function: std#uint.operator++[2530] params(0) in file: /usr/include/sharp//primitives.sharp:511:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 511 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           inc ebx   
7 [0x7]:           movu32 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#uint.operator++[2531] params(1) in file: /usr/include/sharp//primitives.sharp:512:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 512 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           inc ebx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#uint.operator--[2532] params(0) in file: /usr/include/sharp//primitives.sharp:513:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 513 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           dec ebx   
7 [0x7]:           movu32 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#uint.operator--[2533] params(1) in file: /usr/include/sharp//primitives.sharp:514:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 514 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           dec ebx   
8 [0x8]:           movu32 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#uint.operator+=[2534] params(1) in file: /usr/include/sharp//primitives.sharp:516:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 516 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator+=[2535] params(1) in file: /usr/include/sharp//primitives.sharp:517:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 517 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator+=[2536] params(1) in file: /usr/include/sharp//primitives.sharp:518:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 518 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator+=[2537] params(1) in file: /usr/include/sharp//primitives.sharp:519:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 519 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator+=[2538] params(1) in file: /usr/include/sharp//primitives.sharp:520:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 520 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator+=[2539] params(1) in file: /usr/include/sharp//primitives.sharp:521:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 521 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator+=[2540] params(1) in file: /usr/include/sharp//primitives.sharp:522:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 522 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator+=[2541] params(1) in file: /usr/include/sharp//primitives.sharp:523:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 523 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator+=[2542] params(1) in file: /usr/include/sharp//primitives.sharp:524:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 524 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator+=[2543] params(1) in file: /usr/include/sharp//primitives.sharp:525:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 525 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator+=[2544] params(1) in file: /usr/include/sharp//primitives.sharp:526:8: note:  
		    def operator+=(num : double)   := (value+=num.value);
		       ^

0 [0x0]: line: 526 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator+=[2545] params(1) in file: /usr/include/sharp//primitives.sharp:527:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 527 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           add ecx, ebx -> ebx   
9 [0x9]:           movu32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#uint.operator-=[2546] params(1) in file: /usr/include/sharp//primitives.sharp:529:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 529 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator-=[2547] params(1) in file: /usr/include/sharp//primitives.sharp:530:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 530 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator-=[2548] params(1) in file: /usr/include/sharp//primitives.sharp:531:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 531 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator-=[2549] params(1) in file: /usr/include/sharp//primitives.sharp:532:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 532 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator-=[2550] params(1) in file: /usr/include/sharp//primitives.sharp:533:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 533 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator-=[2551] params(1) in file: /usr/include/sharp//primitives.sharp:534:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 534 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator-=[2552] params(1) in file: /usr/include/sharp//primitives.sharp:535:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 535 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator-=[2553] params(1) in file: /usr/include/sharp//primitives.sharp:536:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 536 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator-=[2554] params(1) in file: /usr/include/sharp//primitives.sharp:537:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 537 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator-=[2555] params(1) in file: /usr/include/sharp//primitives.sharp:538:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 538 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator-=[2556] params(1) in file: /usr/include/sharp//primitives.sharp:539:8: note:  
		    def operator-=(num : double)   := (value-=num.value);
		       ^

0 [0x0]: line: 539 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator-=[2557] params(1) in file: /usr/include/sharp//primitives.sharp:540:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 540 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           sub ecx, ebx -> ebx   
9 [0x9]:           movu32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#uint.operator*=[2558] params(1) in file: /usr/include/sharp//primitives.sharp:542:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 542 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator*=[2559] params(1) in file: /usr/include/sharp//primitives.sharp:543:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 543 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator*=[2560] params(1) in file: /usr/include/sharp//primitives.sharp:544:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 544 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator*=[2561] params(1) in file: /usr/include/sharp//primitives.sharp:545:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 545 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator*=[2562] params(1) in file: /usr/include/sharp//primitives.sharp:546:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 546 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator*=[2563] params(1) in file: /usr/include/sharp//primitives.sharp:547:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 547 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator*=[2564] params(1) in file: /usr/include/sharp//primitives.sharp:548:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 548 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator*=[2565] params(1) in file: /usr/include/sharp//primitives.sharp:549:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 549 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator*=[2566] params(1) in file: /usr/include/sharp//primitives.sharp:550:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 550 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator*=[2567] params(1) in file: /usr/include/sharp//primitives.sharp:551:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 551 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator*=[2568] params(1) in file: /usr/include/sharp//primitives.sharp:552:8: note:  
		    def operator*=(num : double)   := (value*=num.value);
		       ^

0 [0x0]: line: 552 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator*=[2569] params(1) in file: /usr/include/sharp//primitives.sharp:553:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 553 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mul ecx, ebx -> ebx   
9 [0x9]:           movu32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#uint.operator/=[2570] params(1) in file: /usr/include/sharp//primitives.sharp:555:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 555 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator/=[2571] params(1) in file: /usr/include/sharp//primitives.sharp:556:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 556 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator/=[2572] params(1) in file: /usr/include/sharp//primitives.sharp:557:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 557 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator/=[2573] params(1) in file: /usr/include/sharp//primitives.sharp:558:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 558 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator/=[2574] params(1) in file: /usr/include/sharp//primitives.sharp:559:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 559 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator/=[2575] params(1) in file: /usr/include/sharp//primitives.sharp:560:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 560 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator/=[2576] params(1) in file: /usr/include/sharp//primitives.sharp:561:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 561 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator/=[2577] params(1) in file: /usr/include/sharp//primitives.sharp:562:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 562 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator/=[2578] params(1) in file: /usr/include/sharp//primitives.sharp:563:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 563 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator/=[2579] params(1) in file: /usr/include/sharp//primitives.sharp:564:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 564 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator/=[2580] params(1) in file: /usr/include/sharp//primitives.sharp:565:8: note:  
		    def operator/=(num : double)   := (value/=num.value);
		       ^

0 [0x0]: line: 565 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator/=[2581] params(1) in file: /usr/include/sharp//primitives.sharp:566:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 566 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           div ecx, ebx -> ebx   
9 [0x9]:           movu32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#uint.operator%=[2582] params(1) in file: /usr/include/sharp//primitives.sharp:568:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 568 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator%=[2583] params(1) in file: /usr/include/sharp//primitives.sharp:569:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 569 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator%=[2584] params(1) in file: /usr/include/sharp//primitives.sharp:570:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 570 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator%=[2585] params(1) in file: /usr/include/sharp//primitives.sharp:571:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 571 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator%=[2586] params(1) in file: /usr/include/sharp//primitives.sharp:572:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 572 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator%=[2587] params(1) in file: /usr/include/sharp//primitives.sharp:573:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 573 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator%=[2588] params(1) in file: /usr/include/sharp//primitives.sharp:574:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 574 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator%=[2589] params(1) in file: /usr/include/sharp//primitives.sharp:575:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 575 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator%=[2590] params(1) in file: /usr/include/sharp//primitives.sharp:576:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 576 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator%=[2591] params(1) in file: /usr/include/sharp//primitives.sharp:577:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 577 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator%=[2592] params(1) in file: /usr/include/sharp//primitives.sharp:578:8: note:  
		    def operator%=(num : double)   := (value%=num.value);
		       ^

0 [0x0]: line: 578 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator%=[2593] params(1) in file: /usr/include/sharp//primitives.sharp:579:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 579 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mod ecx, ebx -> ebx   
9 [0x9]:           movu32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#uint.operator&=[2594] params(1) in file: /usr/include/sharp//primitives.sharp:581:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 581 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uint.operator&=[2595] params(1) in file: /usr/include/sharp//primitives.sharp:582:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 582 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uint.operator&=[2596] params(1) in file: /usr/include/sharp//primitives.sharp:583:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 583 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uint.operator&=[2597] params(1) in file: /usr/include/sharp//primitives.sharp:584:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 584 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uint.operator&=[2598] params(1) in file: /usr/include/sharp//primitives.sharp:585:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 585 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uint.operator&=[2599] params(1) in file: /usr/include/sharp//primitives.sharp:586:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 586 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uint.operator&=[2600] params(1) in file: /usr/include/sharp//primitives.sharp:587:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 587 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uint.operator&=[2601] params(1) in file: /usr/include/sharp//primitives.sharp:588:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 588 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uint.operator&=[2602] params(1) in file: /usr/include/sharp//primitives.sharp:589:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 589 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uint.operator&=[2603] params(1) in file: /usr/include/sharp//primitives.sharp:590:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 590 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uint.operator&=[2604] params(1) in file: /usr/include/sharp//primitives.sharp:591:8: note:  
		    def operator&=(num : double)   := (value&=num.value);
		       ^

0 [0x0]: line: 591 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#uint.operator&=[2605] params(1) in file: /usr/include/sharp//primitives.sharp:592:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 592 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           and ecx, ebx   
9 [0x9]:           rmov adx, cmt   
10 [0xa]:           returnobj   
11 [0xb]:           ret   


overload function: std#uint.operator|=[2606] params(1) in file: /usr/include/sharp//primitives.sharp:594:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 594 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator|=[2607] params(1) in file: /usr/include/sharp//primitives.sharp:595:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 595 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator|=[2608] params(1) in file: /usr/include/sharp//primitives.sharp:596:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 596 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator|=[2609] params(1) in file: /usr/include/sharp//primitives.sharp:597:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 597 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator|=[2610] params(1) in file: /usr/include/sharp//primitives.sharp:598:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 598 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator|=[2611] params(1) in file: /usr/include/sharp//primitives.sharp:599:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 599 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator|=[2612] params(1) in file: /usr/include/sharp//primitives.sharp:600:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 600 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator|=[2613] params(1) in file: /usr/include/sharp//primitives.sharp:601:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 601 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator|=[2614] params(1) in file: /usr/include/sharp//primitives.sharp:602:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 602 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator|=[2615] params(1) in file: /usr/include/sharp//primitives.sharp:603:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 603 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator|=[2616] params(1) in file: /usr/include/sharp//primitives.sharp:604:8: note:  
		    def operator|=(num : double)   := (value|=num.value);
		       ^

0 [0x0]: line: 604 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uint.operator|=[2617] params(1) in file: /usr/include/sharp//primitives.sharp:605:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 605 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           or ecx, ebx   
9 [0x9]:           movu32 cmt, cmt   
10 [0xa]:           rmov adx, cmt   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


constructor: std#uint.uint[2618] params(0) in file: /usr/include/sharp//primitives.sharp:496:6: note:  
		class uint base integer<_uint32> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @652 // <std#integer<_uint32>.integer>   
2 [0x2]:         ret   


constructor: std#int.int[2619] params(1) in file: /usr/include/sharp//primitives.sharp:608:8: note:  
		    int(i : long) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @653 // <std#integer<_int32>.integer>   
9 [0x9]:         ret   


constructor: std#int.int[2620] params(1) in file: /usr/include/sharp//primitives.sharp:609:8: note:  
		    int(i : int) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @653 // <std#integer<_int32>.integer>   
9 [0x9]:         ret   


constructor: std#int.int[2621] params(1) in file: /usr/include/sharp//primitives.sharp:610:8: note:  
		    int(i : short) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @653 // <std#integer<_int32>.integer>   
9 [0x9]:         ret   


constructor: std#int.int[2622] params(1) in file: /usr/include/sharp//primitives.sharp:611:8: note:  
		    int(i : char) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @653 // <std#integer<_int32>.integer>   
9 [0x9]:         ret   


constructor: std#int.int[2623] params(1) in file: /usr/include/sharp//primitives.sharp:612:8: note:  
		    int(i : byte) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @653 // <std#integer<_int32>.integer>   
9 [0x9]:         ret   


constructor: std#int.int[2624] params(1) in file: /usr/include/sharp//primitives.sharp:613:8: note:  
		    int(i : bool) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @653 // <std#integer<_int32>.integer>   
9 [0x9]:         ret   


constructor: std#int.int[2625] params(1) in file: /usr/include/sharp//primitives.sharp:614:8: note:  
		    int(i : ulong) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @653 // <std#integer<_int32>.integer>   
9 [0x9]:         ret   


constructor: std#int.int[2626] params(1) in file: /usr/include/sharp//primitives.sharp:615:8: note:  
		    int(i : uint) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @653 // <std#integer<_int32>.integer>   
9 [0x9]:         ret   


constructor: std#int.int[2627] params(1) in file: /usr/include/sharp//primitives.sharp:616:8: note:  
		    int(i : ushort) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @653 // <std#integer<_int32>.integer>   
9 [0x9]:         ret   


constructor: std#int.int[2628] params(1) in file: /usr/include/sharp//primitives.sharp:617:8: note:  
		    int(i : uchar) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @653 // <std#integer<_int32>.integer>   
9 [0x9]:         ret   


constructor: std#int.int[2629] params(1) in file: /usr/include/sharp//primitives.sharp:618:8: note:  
		    int(i : double) -> base(i.value) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @653 // <std#integer<_int32>.integer>   
9 [0x9]:         ret   


constructor: std#int.int[2630] params(1) in file: /usr/include/sharp//primitives.sharp:619:8: note:  
		    int(i : var) -> base(i) {}
		       ^

0 [0x0]:         pushl 0   
1 [0x1]:         ipushl #1   
2 [0x2]:         call @653 // <std#integer<_int32>.integer>   
3 [0x3]:         ret   


overload function: std#int.operator![2631] params(0) in file: /usr/include/sharp//primitives.sharp:621:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 621 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           not ebx, ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


overload function: std#int.operator++[2632] params(0) in file: /usr/include/sharp//primitives.sharp:622:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 622 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           inc ebx   
7 [0x7]:           mov32 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#int.operator++[2633] params(1) in file: /usr/include/sharp//primitives.sharp:623:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 623 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           inc ebx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#int.operator--[2634] params(0) in file: /usr/include/sharp//primitives.sharp:624:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 624 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           dec ebx   
7 [0x7]:           mov32 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#int.operator--[2635] params(1) in file: /usr/include/sharp//primitives.sharp:625:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 625 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           dec ebx   
8 [0x8]:           mov32 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#int.operator+=[2636] params(1) in file: /usr/include/sharp//primitives.sharp:627:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 627 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator+=[2637] params(1) in file: /usr/include/sharp//primitives.sharp:628:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 628 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator+=[2638] params(1) in file: /usr/include/sharp//primitives.sharp:629:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 629 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator+=[2639] params(1) in file: /usr/include/sharp//primitives.sharp:630:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 630 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator+=[2640] params(1) in file: /usr/include/sharp//primitives.sharp:631:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 631 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator+=[2641] params(1) in file: /usr/include/sharp//primitives.sharp:632:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 632 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator+=[2642] params(1) in file: /usr/include/sharp//primitives.sharp:633:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 633 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator+=[2643] params(1) in file: /usr/include/sharp//primitives.sharp:634:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 634 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator+=[2644] params(1) in file: /usr/include/sharp//primitives.sharp:635:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 635 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator+=[2645] params(1) in file: /usr/include/sharp//primitives.sharp:636:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 636 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator+=[2646] params(1) in file: /usr/include/sharp//primitives.sharp:637:8: note:  
		    def operator+=(num : double)   := (value+=num.value);
		       ^

0 [0x0]: line: 637 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator+=[2647] params(1) in file: /usr/include/sharp//primitives.sharp:638:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 638 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           add ecx, ebx -> ebx   
9 [0x9]:           mov32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#int.operator-=[2648] params(1) in file: /usr/include/sharp//primitives.sharp:640:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 640 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator-=[2649] params(1) in file: /usr/include/sharp//primitives.sharp:641:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 641 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator-=[2650] params(1) in file: /usr/include/sharp//primitives.sharp:642:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 642 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator-=[2651] params(1) in file: /usr/include/sharp//primitives.sharp:643:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 643 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator-=[2652] params(1) in file: /usr/include/sharp//primitives.sharp:644:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 644 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator-=[2653] params(1) in file: /usr/include/sharp//primitives.sharp:645:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 645 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator-=[2654] params(1) in file: /usr/include/sharp//primitives.sharp:646:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 646 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator-=[2655] params(1) in file: /usr/include/sharp//primitives.sharp:647:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 647 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator-=[2656] params(1) in file: /usr/include/sharp//primitives.sharp:648:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 648 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator-=[2657] params(1) in file: /usr/include/sharp//primitives.sharp:649:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 649 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator-=[2658] params(1) in file: /usr/include/sharp//primitives.sharp:650:8: note:  
		    def operator-=(num : double)   := (value-=num.value);
		       ^

0 [0x0]: line: 650 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator-=[2659] params(1) in file: /usr/include/sharp//primitives.sharp:651:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 651 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           sub ecx, ebx -> ebx   
9 [0x9]:           mov32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#int.operator*=[2660] params(1) in file: /usr/include/sharp//primitives.sharp:653:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 653 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator*=[2661] params(1) in file: /usr/include/sharp//primitives.sharp:654:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 654 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator*=[2662] params(1) in file: /usr/include/sharp//primitives.sharp:655:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 655 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator*=[2663] params(1) in file: /usr/include/sharp//primitives.sharp:656:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 656 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator*=[2664] params(1) in file: /usr/include/sharp//primitives.sharp:657:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 657 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator*=[2665] params(1) in file: /usr/include/sharp//primitives.sharp:658:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 658 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator*=[2666] params(1) in file: /usr/include/sharp//primitives.sharp:659:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 659 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator*=[2667] params(1) in file: /usr/include/sharp//primitives.sharp:660:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 660 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator*=[2668] params(1) in file: /usr/include/sharp//primitives.sharp:661:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 661 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator*=[2669] params(1) in file: /usr/include/sharp//primitives.sharp:662:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 662 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator*=[2670] params(1) in file: /usr/include/sharp//primitives.sharp:663:8: note:  
		    def operator*=(num : double)   := (value*=num.value);
		       ^

0 [0x0]: line: 663 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator*=[2671] params(1) in file: /usr/include/sharp//primitives.sharp:664:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 664 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mul ecx, ebx -> ebx   
9 [0x9]:           mov32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#int.operator/=[2672] params(1) in file: /usr/include/sharp//primitives.sharp:666:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 666 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator/=[2673] params(1) in file: /usr/include/sharp//primitives.sharp:667:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 667 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator/=[2674] params(1) in file: /usr/include/sharp//primitives.sharp:668:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 668 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator/=[2675] params(1) in file: /usr/include/sharp//primitives.sharp:669:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 669 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator/=[2676] params(1) in file: /usr/include/sharp//primitives.sharp:670:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 670 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator/=[2677] params(1) in file: /usr/include/sharp//primitives.sharp:671:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 671 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator/=[2678] params(1) in file: /usr/include/sharp//primitives.sharp:672:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 672 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator/=[2679] params(1) in file: /usr/include/sharp//primitives.sharp:673:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 673 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator/=[2680] params(1) in file: /usr/include/sharp//primitives.sharp:674:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 674 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator/=[2681] params(1) in file: /usr/include/sharp//primitives.sharp:675:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 675 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator/=[2682] params(1) in file: /usr/include/sharp//primitives.sharp:676:8: note:  
		    def operator/=(num : double)   := (value/=num.value);
		       ^

0 [0x0]: line: 676 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator/=[2683] params(1) in file: /usr/include/sharp//primitives.sharp:677:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 677 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           div ecx, ebx -> ebx   
9 [0x9]:           mov32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#int.operator%=[2684] params(1) in file: /usr/include/sharp//primitives.sharp:679:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 679 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator%=[2685] params(1) in file: /usr/include/sharp//primitives.sharp:680:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 680 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator%=[2686] params(1) in file: /usr/include/sharp//primitives.sharp:681:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 681 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator%=[2687] params(1) in file: /usr/include/sharp//primitives.sharp:682:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 682 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator%=[2688] params(1) in file: /usr/include/sharp//primitives.sharp:683:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 683 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator%=[2689] params(1) in file: /usr/include/sharp//primitives.sharp:684:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 684 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator%=[2690] params(1) in file: /usr/include/sharp//primitives.sharp:685:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 685 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator%=[2691] params(1) in file: /usr/include/sharp//primitives.sharp:686:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 686 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator%=[2692] params(1) in file: /usr/include/sharp//primitives.sharp:687:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 687 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator%=[2693] params(1) in file: /usr/include/sharp//primitives.sharp:688:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 688 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator%=[2694] params(1) in file: /usr/include/sharp//primitives.sharp:689:8: note:  
		    def operator%=(num : double)   := (value%=num.value);
		       ^

0 [0x0]: line: 689 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov32 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator%=[2695] params(1) in file: /usr/include/sharp//primitives.sharp:690:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 690 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mod ecx, ebx -> ebx   
9 [0x9]:           mov32 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#int.operator&=[2696] params(1) in file: /usr/include/sharp//primitives.sharp:692:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 692 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#int.operator&=[2697] params(1) in file: /usr/include/sharp//primitives.sharp:693:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 693 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#int.operator&=[2698] params(1) in file: /usr/include/sharp//primitives.sharp:694:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 694 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#int.operator&=[2699] params(1) in file: /usr/include/sharp//primitives.sharp:695:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 695 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#int.operator&=[2700] params(1) in file: /usr/include/sharp//primitives.sharp:696:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 696 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#int.operator&=[2701] params(1) in file: /usr/include/sharp//primitives.sharp:697:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 697 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#int.operator&=[2702] params(1) in file: /usr/include/sharp//primitives.sharp:698:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 698 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#int.operator&=[2703] params(1) in file: /usr/include/sharp//primitives.sharp:699:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 699 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#int.operator&=[2704] params(1) in file: /usr/include/sharp//primitives.sharp:700:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 700 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#int.operator&=[2705] params(1) in file: /usr/include/sharp//primitives.sharp:701:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 701 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#int.operator&=[2706] params(1) in file: /usr/include/sharp//primitives.sharp:702:8: note:  
		    def operator&=(num : double)   := (value&=num.value);
		       ^

0 [0x0]: line: 702 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#int.operator&=[2707] params(1) in file: /usr/include/sharp//primitives.sharp:703:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 703 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           and ecx, ebx   
9 [0x9]:           rmov adx, cmt   
10 [0xa]:           returnobj   
11 [0xb]:           ret   


overload function: std#int.operator|=[2708] params(1) in file: /usr/include/sharp//primitives.sharp:705:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 705 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator|=[2709] params(1) in file: /usr/include/sharp//primitives.sharp:706:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 706 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator|=[2710] params(1) in file: /usr/include/sharp//primitives.sharp:707:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 707 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator|=[2711] params(1) in file: /usr/include/sharp//primitives.sharp:708:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 708 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator|=[2712] params(1) in file: /usr/include/sharp//primitives.sharp:709:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 709 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator|=[2713] params(1) in file: /usr/include/sharp//primitives.sharp:710:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 710 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator|=[2714] params(1) in file: /usr/include/sharp//primitives.sharp:711:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 711 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator|=[2715] params(1) in file: /usr/include/sharp//primitives.sharp:712:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 712 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator|=[2716] params(1) in file: /usr/include/sharp//primitives.sharp:713:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 713 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator|=[2717] params(1) in file: /usr/include/sharp//primitives.sharp:714:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 714 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator|=[2718] params(1) in file: /usr/include/sharp//primitives.sharp:715:8: note:  
		    def operator|=(num : double)   := (value|=num.value);
		       ^

0 [0x0]: line: 715 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov32 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#int.operator|=[2719] params(1) in file: /usr/include/sharp//primitives.sharp:716:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 716 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           or ecx, ebx   
9 [0x9]:           mov32 cmt, cmt   
10 [0xa]:           rmov adx, cmt   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


constructor: std#int.int[2720] params(0) in file: /usr/include/sharp//primitives.sharp:607:6: note:  
		class int base integer<_int32> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @861 // <std#integer<_int32>.integer>   
2 [0x2]:         ret   


constructor: std#ushort.ushort[2721] params(1) in file: /usr/include/sharp//primitives.sharp:719:11: note:  
		    ushort(i : long) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @862 // <std#integer<_uint16>.integer>   
9 [0x9]:         ret   


constructor: std#ushort.ushort[2722] params(1) in file: /usr/include/sharp//primitives.sharp:720:11: note:  
		    ushort(i : int) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @862 // <std#integer<_uint16>.integer>   
9 [0x9]:         ret   


constructor: std#ushort.ushort[2723] params(1) in file: /usr/include/sharp//primitives.sharp:721:11: note:  
		    ushort(i : short) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @862 // <std#integer<_uint16>.integer>   
9 [0x9]:         ret   


constructor: std#ushort.ushort[2724] params(1) in file: /usr/include/sharp//primitives.sharp:722:11: note:  
		    ushort(i : char) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @862 // <std#integer<_uint16>.integer>   
9 [0x9]:         ret   


constructor: std#ushort.ushort[2725] params(1) in file: /usr/include/sharp//primitives.sharp:723:11: note:  
		    ushort(i : byte) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @862 // <std#integer<_uint16>.integer>   
9 [0x9]:         ret   


constructor: std#ushort.ushort[2726] params(1) in file: /usr/include/sharp//primitives.sharp:724:11: note:  
		    ushort(i : bool) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @862 // <std#integer<_uint16>.integer>   
9 [0x9]:         ret   


constructor: std#ushort.ushort[2727] params(1) in file: /usr/include/sharp//primitives.sharp:725:11: note:  
		    ushort(i : ulong) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @862 // <std#integer<_uint16>.integer>   
9 [0x9]:         ret   


constructor: std#ushort.ushort[2728] params(1) in file: /usr/include/sharp//primitives.sharp:726:11: note:  
		    ushort(i : uint) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @862 // <std#integer<_uint16>.integer>   
9 [0x9]:         ret   


constructor: std#ushort.ushort[2729] params(1) in file: /usr/include/sharp//primitives.sharp:727:11: note:  
		    ushort(i : ushort) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @862 // <std#integer<_uint16>.integer>   
9 [0x9]:         ret   


constructor: std#ushort.ushort[2730] params(1) in file: /usr/include/sharp//primitives.sharp:728:11: note:  
		    ushort(i : uchar) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @862 // <std#integer<_uint16>.integer>   
9 [0x9]:         ret   


constructor: std#ushort.ushort[2731] params(1) in file: /usr/include/sharp//primitives.sharp:729:11: note:  
		    ushort(i : double) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @862 // <std#integer<_uint16>.integer>   
9 [0x9]:         ret   


constructor: std#ushort.ushort[2732] params(1) in file: /usr/include/sharp//primitives.sharp:730:11: note:  
		    ushort(i : var) -> base(i) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         ipushl #1   
2 [0x2]:         call @862 // <std#integer<_uint16>.integer>   
3 [0x3]:         ret   


overload function: std#ushort.operator![2733] params(0) in file: /usr/include/sharp//primitives.sharp:732:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 732 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           not ebx, ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


overload function: std#ushort.operator++[2734] params(0) in file: /usr/include/sharp//primitives.sharp:733:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 733 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           inc ebx   
7 [0x7]:           movu16 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#ushort.operator++[2735] params(1) in file: /usr/include/sharp//primitives.sharp:734:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 734 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           inc ebx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#ushort.operator--[2736] params(0) in file: /usr/include/sharp//primitives.sharp:735:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 735 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           dec ebx   
7 [0x7]:           movu16 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#ushort.operator--[2737] params(1) in file: /usr/include/sharp//primitives.sharp:736:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 736 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           dec ebx   
8 [0x8]:           movu16 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#ushort.operator+=[2738] params(1) in file: /usr/include/sharp//primitives.sharp:738:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 738 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator+=[2739] params(1) in file: /usr/include/sharp//primitives.sharp:739:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 739 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator+=[2740] params(1) in file: /usr/include/sharp//primitives.sharp:740:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 740 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator+=[2741] params(1) in file: /usr/include/sharp//primitives.sharp:741:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 741 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator+=[2742] params(1) in file: /usr/include/sharp//primitives.sharp:742:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 742 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator+=[2743] params(1) in file: /usr/include/sharp//primitives.sharp:743:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 743 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator+=[2744] params(1) in file: /usr/include/sharp//primitives.sharp:744:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 744 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator+=[2745] params(1) in file: /usr/include/sharp//primitives.sharp:745:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 745 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator+=[2746] params(1) in file: /usr/include/sharp//primitives.sharp:746:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 746 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator+=[2747] params(1) in file: /usr/include/sharp//primitives.sharp:747:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 747 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator+=[2748] params(1) in file: /usr/include/sharp//primitives.sharp:748:8: note:  
		    def operator+=(num : double)   := (value+=num.value);
		       ^

0 [0x0]: line: 748 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator+=[2749] params(1) in file: /usr/include/sharp//primitives.sharp:749:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 749 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           add ecx, ebx -> ebx   
9 [0x9]:           movu16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#ushort.operator-=[2750] params(1) in file: /usr/include/sharp//primitives.sharp:751:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 751 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator-=[2751] params(1) in file: /usr/include/sharp//primitives.sharp:752:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 752 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator-=[2752] params(1) in file: /usr/include/sharp//primitives.sharp:753:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 753 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator-=[2753] params(1) in file: /usr/include/sharp//primitives.sharp:754:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 754 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator-=[2754] params(1) in file: /usr/include/sharp//primitives.sharp:755:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 755 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator-=[2755] params(1) in file: /usr/include/sharp//primitives.sharp:756:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 756 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator-=[2756] params(1) in file: /usr/include/sharp//primitives.sharp:757:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 757 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator-=[2757] params(1) in file: /usr/include/sharp//primitives.sharp:758:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 758 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator-=[2758] params(1) in file: /usr/include/sharp//primitives.sharp:759:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 759 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator-=[2759] params(1) in file: /usr/include/sharp//primitives.sharp:760:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 760 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator-=[2760] params(1) in file: /usr/include/sharp//primitives.sharp:761:8: note:  
		    def operator-=(num : double)   := (value-=num.value);
		       ^

0 [0x0]: line: 761 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator-=[2761] params(1) in file: /usr/include/sharp//primitives.sharp:762:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 762 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           sub ecx, ebx -> ebx   
9 [0x9]:           movu16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#ushort.operator*=[2762] params(1) in file: /usr/include/sharp//primitives.sharp:764:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 764 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator*=[2763] params(1) in file: /usr/include/sharp//primitives.sharp:765:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 765 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator*=[2764] params(1) in file: /usr/include/sharp//primitives.sharp:766:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 766 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator*=[2765] params(1) in file: /usr/include/sharp//primitives.sharp:767:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 767 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator*=[2766] params(1) in file: /usr/include/sharp//primitives.sharp:768:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 768 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator*=[2767] params(1) in file: /usr/include/sharp//primitives.sharp:769:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 769 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator*=[2768] params(1) in file: /usr/include/sharp//primitives.sharp:770:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 770 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator*=[2769] params(1) in file: /usr/include/sharp//primitives.sharp:771:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 771 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator*=[2770] params(1) in file: /usr/include/sharp//primitives.sharp:772:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 772 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator*=[2771] params(1) in file: /usr/include/sharp//primitives.sharp:773:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 773 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator*=[2772] params(1) in file: /usr/include/sharp//primitives.sharp:774:8: note:  
		    def operator*=(num : double)   := (value*=num.value);
		       ^

0 [0x0]: line: 774 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator*=[2773] params(1) in file: /usr/include/sharp//primitives.sharp:775:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 775 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mul ecx, ebx -> ebx   
9 [0x9]:           movu16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#ushort.operator/=[2774] params(1) in file: /usr/include/sharp//primitives.sharp:777:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 777 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator/=[2775] params(1) in file: /usr/include/sharp//primitives.sharp:778:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 778 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator/=[2776] params(1) in file: /usr/include/sharp//primitives.sharp:779:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 779 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator/=[2777] params(1) in file: /usr/include/sharp//primitives.sharp:780:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 780 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator/=[2778] params(1) in file: /usr/include/sharp//primitives.sharp:781:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 781 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator/=[2779] params(1) in file: /usr/include/sharp//primitives.sharp:782:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 782 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator/=[2780] params(1) in file: /usr/include/sharp//primitives.sharp:783:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 783 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator/=[2781] params(1) in file: /usr/include/sharp//primitives.sharp:784:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 784 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator/=[2782] params(1) in file: /usr/include/sharp//primitives.sharp:785:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 785 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator/=[2783] params(1) in file: /usr/include/sharp//primitives.sharp:786:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 786 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator/=[2784] params(1) in file: /usr/include/sharp//primitives.sharp:787:8: note:  
		    def operator/=(num : double)   := (value/=num.value);
		       ^

0 [0x0]: line: 787 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator/=[2785] params(1) in file: /usr/include/sharp//primitives.sharp:788:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 788 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           div ecx, ebx -> ebx   
9 [0x9]:           movu16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#ushort.operator%=[2786] params(1) in file: /usr/include/sharp//primitives.sharp:790:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 790 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator%=[2787] params(1) in file: /usr/include/sharp//primitives.sharp:791:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 791 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator%=[2788] params(1) in file: /usr/include/sharp//primitives.sharp:792:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 792 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator%=[2789] params(1) in file: /usr/include/sharp//primitives.sharp:793:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 793 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator%=[2790] params(1) in file: /usr/include/sharp//primitives.sharp:794:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 794 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator%=[2791] params(1) in file: /usr/include/sharp//primitives.sharp:795:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 795 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator%=[2792] params(1) in file: /usr/include/sharp//primitives.sharp:796:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 796 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator%=[2793] params(1) in file: /usr/include/sharp//primitives.sharp:797:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 797 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator%=[2794] params(1) in file: /usr/include/sharp//primitives.sharp:798:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 798 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator%=[2795] params(1) in file: /usr/include/sharp//primitives.sharp:799:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 799 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator%=[2796] params(1) in file: /usr/include/sharp//primitives.sharp:800:8: note:  
		    def operator%=(num : double)   := (value%=num.value);
		       ^

0 [0x0]: line: 800 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           movu16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator%=[2797] params(1) in file: /usr/include/sharp//primitives.sharp:801:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 801 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mod ecx, ebx -> ebx   
9 [0x9]:           movu16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#ushort.operator&=[2798] params(1) in file: /usr/include/sharp//primitives.sharp:803:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 803 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ushort.operator&=[2799] params(1) in file: /usr/include/sharp//primitives.sharp:804:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 804 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ushort.operator&=[2800] params(1) in file: /usr/include/sharp//primitives.sharp:805:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 805 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ushort.operator&=[2801] params(1) in file: /usr/include/sharp//primitives.sharp:806:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 806 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ushort.operator&=[2802] params(1) in file: /usr/include/sharp//primitives.sharp:807:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 807 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ushort.operator&=[2803] params(1) in file: /usr/include/sharp//primitives.sharp:808:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 808 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ushort.operator&=[2804] params(1) in file: /usr/include/sharp//primitives.sharp:809:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 809 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ushort.operator&=[2805] params(1) in file: /usr/include/sharp//primitives.sharp:810:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 810 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ushort.operator&=[2806] params(1) in file: /usr/include/sharp//primitives.sharp:811:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 811 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ushort.operator&=[2807] params(1) in file: /usr/include/sharp//primitives.sharp:812:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 812 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ushort.operator&=[2808] params(1) in file: /usr/include/sharp//primitives.sharp:813:8: note:  
		    def operator&=(num : double)   := (value&=num.value);
		       ^

0 [0x0]: line: 813 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#ushort.operator&=[2809] params(1) in file: /usr/include/sharp//primitives.sharp:814:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 814 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           and ecx, ebx   
9 [0x9]:           rmov adx, cmt   
10 [0xa]:           returnobj   
11 [0xb]:           ret   


overload function: std#ushort.operator|=[2810] params(1) in file: /usr/include/sharp//primitives.sharp:816:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 816 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator|=[2811] params(1) in file: /usr/include/sharp//primitives.sharp:817:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 817 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator|=[2812] params(1) in file: /usr/include/sharp//primitives.sharp:818:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 818 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator|=[2813] params(1) in file: /usr/include/sharp//primitives.sharp:819:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 819 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator|=[2814] params(1) in file: /usr/include/sharp//primitives.sharp:820:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 820 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator|=[2815] params(1) in file: /usr/include/sharp//primitives.sharp:821:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 821 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator|=[2816] params(1) in file: /usr/include/sharp//primitives.sharp:822:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 822 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator|=[2817] params(1) in file: /usr/include/sharp//primitives.sharp:823:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 823 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator|=[2818] params(1) in file: /usr/include/sharp//primitives.sharp:824:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 824 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator|=[2819] params(1) in file: /usr/include/sharp//primitives.sharp:825:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 825 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator|=[2820] params(1) in file: /usr/include/sharp//primitives.sharp:826:8: note:  
		    def operator|=(num : double)   := (value|=num.value);
		       ^

0 [0x0]: line: 826 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           movu16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#ushort.operator|=[2821] params(1) in file: /usr/include/sharp//primitives.sharp:827:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 827 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           or ecx, ebx   
9 [0x9]:           movu16 cmt, cmt   
10 [0xa]:           rmov adx, cmt   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


constructor: std#ushort.ushort[2822] params(0) in file: /usr/include/sharp//primitives.sharp:718:6: note:  
		class ushort base integer<_uint16> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1070 // <std#integer<_uint16>.integer>   
2 [0x2]:         ret   


constructor: std#short.short[2823] params(1) in file: /usr/include/sharp//primitives.sharp:830:10: note:  
		    short(i : long) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1071 // <std#integer<_int16>.integer>   
9 [0x9]:         ret   


constructor: std#short.short[2824] params(1) in file: /usr/include/sharp//primitives.sharp:831:10: note:  
		    short(i : int) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1071 // <std#integer<_int16>.integer>   
9 [0x9]:         ret   


constructor: std#short.short[2825] params(1) in file: /usr/include/sharp//primitives.sharp:832:10: note:  
		    short(i : short) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1071 // <std#integer<_int16>.integer>   
9 [0x9]:         ret   


constructor: std#short.short[2826] params(1) in file: /usr/include/sharp//primitives.sharp:833:10: note:  
		    short(i : char) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1071 // <std#integer<_int16>.integer>   
9 [0x9]:         ret   


constructor: std#short.short[2827] params(1) in file: /usr/include/sharp//primitives.sharp:834:10: note:  
		    short(i : byte) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1071 // <std#integer<_int16>.integer>   
9 [0x9]:         ret   


constructor: std#short.short[2828] params(1) in file: /usr/include/sharp//primitives.sharp:835:10: note:  
		    short(i : bool) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1071 // <std#integer<_int16>.integer>   
9 [0x9]:         ret   


constructor: std#short.short[2829] params(1) in file: /usr/include/sharp//primitives.sharp:836:10: note:  
		    short(i : ulong) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1071 // <std#integer<_int16>.integer>   
9 [0x9]:         ret   


constructor: std#short.short[2830] params(1) in file: /usr/include/sharp//primitives.sharp:837:10: note:  
		    short(i : uint) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1071 // <std#integer<_int16>.integer>   
9 [0x9]:         ret   


constructor: std#short.short[2831] params(1) in file: /usr/include/sharp//primitives.sharp:838:10: note:  
		    short(i : ushort) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1071 // <std#integer<_int16>.integer>   
9 [0x9]:         ret   


constructor: std#short.short[2832] params(1) in file: /usr/include/sharp//primitives.sharp:839:10: note:  
		    short(i : uchar) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1071 // <std#integer<_int16>.integer>   
9 [0x9]:         ret   


constructor: std#short.short[2833] params(1) in file: /usr/include/sharp//primitives.sharp:840:10: note:  
		    short(i : double) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1071 // <std#integer<_int16>.integer>   
9 [0x9]:         ret   


constructor: std#short.short[2834] params(1) in file: /usr/include/sharp//primitives.sharp:841:10: note:  
		    short(i : var) -> base(i) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ipushl #1   
2 [0x2]:         call @1071 // <std#integer<_int16>.integer>   
3 [0x3]:         ret   


overload function: std#short.operator![2835] params(0) in file: /usr/include/sharp//primitives.sharp:843:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 843 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           not ebx, ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


overload function: std#short.operator++[2836] params(0) in file: /usr/include/sharp//primitives.sharp:844:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 844 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           inc ebx   
7 [0x7]:           mov16 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#short.operator++[2837] params(1) in file: /usr/include/sharp//primitives.sharp:845:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 845 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           inc ebx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#short.operator--[2838] params(0) in file: /usr/include/sharp//primitives.sharp:846:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 846 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           dec ebx   
7 [0x7]:           mov16 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#short.operator--[2839] params(1) in file: /usr/include/sharp//primitives.sharp:847:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 847 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           dec ebx   
8 [0x8]:           mov16 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#short.operator+=[2840] params(1) in file: /usr/include/sharp//primitives.sharp:849:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 849 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator+=[2841] params(1) in file: /usr/include/sharp//primitives.sharp:850:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 850 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator+=[2842] params(1) in file: /usr/include/sharp//primitives.sharp:851:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 851 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator+=[2843] params(1) in file: /usr/include/sharp//primitives.sharp:852:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 852 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator+=[2844] params(1) in file: /usr/include/sharp//primitives.sharp:853:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 853 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator+=[2845] params(1) in file: /usr/include/sharp//primitives.sharp:854:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 854 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator+=[2846] params(1) in file: /usr/include/sharp//primitives.sharp:855:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 855 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator+=[2847] params(1) in file: /usr/include/sharp//primitives.sharp:856:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 856 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator+=[2848] params(1) in file: /usr/include/sharp//primitives.sharp:857:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 857 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator+=[2849] params(1) in file: /usr/include/sharp//primitives.sharp:858:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 858 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator+=[2850] params(1) in file: /usr/include/sharp//primitives.sharp:859:8: note:  
		    def operator+=(num : double)   := (value+=num.value);
		       ^

0 [0x0]: line: 859 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator+=[2851] params(1) in file: /usr/include/sharp//primitives.sharp:860:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 860 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           add ecx, ebx -> ebx   
9 [0x9]:           mov16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#short.operator-=[2852] params(1) in file: /usr/include/sharp//primitives.sharp:862:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 862 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator-=[2853] params(1) in file: /usr/include/sharp//primitives.sharp:863:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 863 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator-=[2854] params(1) in file: /usr/include/sharp//primitives.sharp:864:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 864 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator-=[2855] params(1) in file: /usr/include/sharp//primitives.sharp:865:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 865 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator-=[2856] params(1) in file: /usr/include/sharp//primitives.sharp:866:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 866 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator-=[2857] params(1) in file: /usr/include/sharp//primitives.sharp:867:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 867 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator-=[2858] params(1) in file: /usr/include/sharp//primitives.sharp:868:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 868 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator-=[2859] params(1) in file: /usr/include/sharp//primitives.sharp:869:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 869 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator-=[2860] params(1) in file: /usr/include/sharp//primitives.sharp:870:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 870 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator-=[2861] params(1) in file: /usr/include/sharp//primitives.sharp:871:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 871 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator-=[2862] params(1) in file: /usr/include/sharp//primitives.sharp:872:8: note:  
		    def operator-=(num : double)   := (value-=num.value);
		       ^

0 [0x0]: line: 872 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator-=[2863] params(1) in file: /usr/include/sharp//primitives.sharp:873:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 873 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           sub ecx, ebx -> ebx   
9 [0x9]:           mov16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#short.operator*=[2864] params(1) in file: /usr/include/sharp//primitives.sharp:875:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 875 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator*=[2865] params(1) in file: /usr/include/sharp//primitives.sharp:876:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 876 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator*=[2866] params(1) in file: /usr/include/sharp//primitives.sharp:877:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 877 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator*=[2867] params(1) in file: /usr/include/sharp//primitives.sharp:878:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 878 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator*=[2868] params(1) in file: /usr/include/sharp//primitives.sharp:879:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 879 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator*=[2869] params(1) in file: /usr/include/sharp//primitives.sharp:880:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 880 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator*=[2870] params(1) in file: /usr/include/sharp//primitives.sharp:881:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 881 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator*=[2871] params(1) in file: /usr/include/sharp//primitives.sharp:882:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 882 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator*=[2872] params(1) in file: /usr/include/sharp//primitives.sharp:883:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 883 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator*=[2873] params(1) in file: /usr/include/sharp//primitives.sharp:884:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 884 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator*=[2874] params(1) in file: /usr/include/sharp//primitives.sharp:885:8: note:  
		    def operator*=(num : double)   := (value*=num.value);
		       ^

0 [0x0]: line: 885 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator*=[2875] params(1) in file: /usr/include/sharp//primitives.sharp:886:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 886 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mul ecx, ebx -> ebx   
9 [0x9]:           mov16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#short.operator/=[2876] params(1) in file: /usr/include/sharp//primitives.sharp:888:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 888 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator/=[2877] params(1) in file: /usr/include/sharp//primitives.sharp:889:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 889 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator/=[2878] params(1) in file: /usr/include/sharp//primitives.sharp:890:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 890 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator/=[2879] params(1) in file: /usr/include/sharp//primitives.sharp:891:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 891 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator/=[2880] params(1) in file: /usr/include/sharp//primitives.sharp:892:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 892 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator/=[2881] params(1) in file: /usr/include/sharp//primitives.sharp:893:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 893 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator/=[2882] params(1) in file: /usr/include/sharp//primitives.sharp:894:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 894 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator/=[2883] params(1) in file: /usr/include/sharp//primitives.sharp:895:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 895 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator/=[2884] params(1) in file: /usr/include/sharp//primitives.sharp:896:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 896 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator/=[2885] params(1) in file: /usr/include/sharp//primitives.sharp:897:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 897 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator/=[2886] params(1) in file: /usr/include/sharp//primitives.sharp:898:8: note:  
		    def operator/=(num : double)   := (value/=num.value);
		       ^

0 [0x0]: line: 898 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator/=[2887] params(1) in file: /usr/include/sharp//primitives.sharp:899:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 899 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           div ecx, ebx -> ebx   
9 [0x9]:           mov16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#short.operator%=[2888] params(1) in file: /usr/include/sharp//primitives.sharp:901:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 901 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator%=[2889] params(1) in file: /usr/include/sharp//primitives.sharp:902:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 902 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator%=[2890] params(1) in file: /usr/include/sharp//primitives.sharp:903:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 903 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator%=[2891] params(1) in file: /usr/include/sharp//primitives.sharp:904:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 904 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator%=[2892] params(1) in file: /usr/include/sharp//primitives.sharp:905:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 905 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator%=[2893] params(1) in file: /usr/include/sharp//primitives.sharp:906:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 906 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator%=[2894] params(1) in file: /usr/include/sharp//primitives.sharp:907:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 907 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator%=[2895] params(1) in file: /usr/include/sharp//primitives.sharp:908:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 908 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator%=[2896] params(1) in file: /usr/include/sharp//primitives.sharp:909:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 909 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator%=[2897] params(1) in file: /usr/include/sharp//primitives.sharp:910:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 910 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator%=[2898] params(1) in file: /usr/include/sharp//primitives.sharp:911:8: note:  
		    def operator%=(num : double)   := (value%=num.value);
		       ^

0 [0x0]: line: 911 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mod ecx, ebx -> ebx   
15 [0xf]:           mov16 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator%=[2899] params(1) in file: /usr/include/sharp//primitives.sharp:912:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 912 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mod ecx, ebx -> ebx   
9 [0x9]:           mov16 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#short.operator&=[2900] params(1) in file: /usr/include/sharp//primitives.sharp:914:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 914 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#short.operator&=[2901] params(1) in file: /usr/include/sharp//primitives.sharp:915:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 915 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#short.operator&=[2902] params(1) in file: /usr/include/sharp//primitives.sharp:916:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 916 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#short.operator&=[2903] params(1) in file: /usr/include/sharp//primitives.sharp:917:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 917 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#short.operator&=[2904] params(1) in file: /usr/include/sharp//primitives.sharp:918:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 918 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#short.operator&=[2905] params(1) in file: /usr/include/sharp//primitives.sharp:919:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 919 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#short.operator&=[2906] params(1) in file: /usr/include/sharp//primitives.sharp:920:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 920 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#short.operator&=[2907] params(1) in file: /usr/include/sharp//primitives.sharp:921:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 921 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#short.operator&=[2908] params(1) in file: /usr/include/sharp//primitives.sharp:922:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 922 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#short.operator&=[2909] params(1) in file: /usr/include/sharp//primitives.sharp:923:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 923 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#short.operator&=[2910] params(1) in file: /usr/include/sharp//primitives.sharp:924:8: note:  
		    def operator&=(num : double)   := (value&=num.value);
		       ^

0 [0x0]: line: 924 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           and ecx, ebx   
15 [0xf]:           rmov adx, cmt   
16 [0x10]:           returnobj   
17 [0x11]:           ret   


overload function: std#short.operator&=[2911] params(1) in file: /usr/include/sharp//primitives.sharp:925:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 925 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           and ecx, ebx   
9 [0x9]:           rmov adx, cmt   
10 [0xa]:           returnobj   
11 [0xb]:           ret   


overload function: std#short.operator|=[2912] params(1) in file: /usr/include/sharp//primitives.sharp:927:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 927 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator|=[2913] params(1) in file: /usr/include/sharp//primitives.sharp:928:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 928 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator|=[2914] params(1) in file: /usr/include/sharp//primitives.sharp:929:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 929 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator|=[2915] params(1) in file: /usr/include/sharp//primitives.sharp:930:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 930 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator|=[2916] params(1) in file: /usr/include/sharp//primitives.sharp:931:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 931 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator|=[2917] params(1) in file: /usr/include/sharp//primitives.sharp:932:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 932 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator|=[2918] params(1) in file: /usr/include/sharp//primitives.sharp:933:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 933 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator|=[2919] params(1) in file: /usr/include/sharp//primitives.sharp:934:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 934 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator|=[2920] params(1) in file: /usr/include/sharp//primitives.sharp:935:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 935 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator|=[2921] params(1) in file: /usr/include/sharp//primitives.sharp:936:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 936 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator|=[2922] params(1) in file: /usr/include/sharp//primitives.sharp:937:8: note:  
		    def operator|=(num : double)   := (value|=num.value);
		       ^

0 [0x0]: line: 937 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           or ecx, ebx   
15 [0xf]:           mov16 cmt, cmt   
16 [0x10]:           rmov adx, cmt   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#short.operator|=[2923] params(1) in file: /usr/include/sharp//primitives.sharp:938:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 938 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           or ecx, ebx   
9 [0x9]:           mov16 cmt, cmt   
10 [0xa]:           rmov adx, cmt   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


constructor: std#short.short[2924] params(0) in file: /usr/include/sharp//primitives.sharp:829:6: note:  
		class short base integer<_int16> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1279 // <std#integer<_int16>.integer>   
2 [0x2]:         ret   


constructor: std#uchar.uchar[2925] params(1) in file: /usr/include/sharp//primitives.sharp:941:10: note:  
		    uchar(i : long) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1280 // <std#integer<_uint8>.integer>   
9 [0x9]:         ret   


constructor: std#uchar.uchar[2926] params(1) in file: /usr/include/sharp//primitives.sharp:942:10: note:  
		    uchar(i : int) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1280 // <std#integer<_uint8>.integer>   
9 [0x9]:         ret   


constructor: std#uchar.uchar[2927] params(1) in file: /usr/include/sharp//primitives.sharp:943:10: note:  
		    uchar(i : short) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1280 // <std#integer<_uint8>.integer>   
9 [0x9]:         ret   


constructor: std#uchar.uchar[2928] params(1) in file: /usr/include/sharp//primitives.sharp:944:10: note:  
		    uchar(i : char) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1280 // <std#integer<_uint8>.integer>   
9 [0x9]:         ret   


constructor: std#uchar.uchar[2929] params(1) in file: /usr/include/sharp//primitives.sharp:945:10: note:  
		    uchar(i : byte) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1280 // <std#integer<_uint8>.integer>   
9 [0x9]:         ret   


constructor: std#uchar.uchar[2930] params(1) in file: /usr/include/sharp//primitives.sharp:946:10: note:  
		    uchar(i : bool) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1280 // <std#integer<_uint8>.integer>   
9 [0x9]:         ret   


constructor: std#uchar.uchar[2931] params(1) in file: /usr/include/sharp//primitives.sharp:947:10: note:  
		    uchar(i : ulong) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1280 // <std#integer<_uint8>.integer>   
9 [0x9]:         ret   


constructor: std#uchar.uchar[2932] params(1) in file: /usr/include/sharp//primitives.sharp:948:10: note:  
		    uchar(i : uint) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1280 // <std#integer<_uint8>.integer>   
9 [0x9]:         ret   


constructor: std#uchar.uchar[2933] params(1) in file: /usr/include/sharp//primitives.sharp:949:10: note:  
		    uchar(i : ushort) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1280 // <std#integer<_uint8>.integer>   
9 [0x9]:         ret   


constructor: std#uchar.uchar[2934] params(1) in file: /usr/include/sharp//primitives.sharp:950:10: note:  
		    uchar(i : uchar) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1280 // <std#integer<_uint8>.integer>   
9 [0x9]:         ret   


constructor: std#uchar.uchar[2935] params(1) in file: /usr/include/sharp//primitives.sharp:951:10: note:  
		    uchar(i : double) -> base(i.value) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1280 // <std#integer<_uint8>.integer>   
9 [0x9]:         ret   


constructor: std#uchar.uchar[2936] params(1) in file: /usr/include/sharp//primitives.sharp:952:10: note:  
		    uchar(i : var) -> base(i) {}
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ipushl #1   
2 [0x2]:         call @1280 // <std#integer<_uint8>.integer>   
3 [0x3]:         ret   


overload function: std#uchar.operator![2937] params(0) in file: /usr/include/sharp//primitives.sharp:954:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 954 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           not ebx, ebx   
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


overload function: std#uchar.operator++[2938] params(0) in file: /usr/include/sharp//primitives.sharp:955:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 955 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           inc ebx   
7 [0x7]:           movu8 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#uchar.operator++[2939] params(1) in file: /usr/include/sharp//primitives.sharp:956:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 956 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           inc ebx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#uchar.operator--[2940] params(0) in file: /usr/include/sharp//primitives.sharp:957:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 957 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           dec ebx   
7 [0x7]:           movu8 ebx, ebx   
8 [0x8]:           movi #0, adx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           return_val ebx   
12 [0xc]:           ret   


overload function: std#uchar.operator--[2941] params(1) in file: /usr/include/sharp//primitives.sharp:958:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 958 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           movr egx, ebx   
7 [0x7]:           dec ebx   
8 [0x8]:           movu8 ebx, ebx   
9 [0x9]:           movi #0, adx   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movr ebx, egx   
13 [0xd]:           return_val ebx   
14 [0xe]:           ret   


overload function: std#uchar.operator+=[2942] params(1) in file: /usr/include/sharp//primitives.sharp:960:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 960 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator+=[2943] params(1) in file: /usr/include/sharp//primitives.sharp:961:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 961 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator+=[2944] params(1) in file: /usr/include/sharp//primitives.sharp:962:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 962 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator+=[2945] params(1) in file: /usr/include/sharp//primitives.sharp:963:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 963 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator+=[2946] params(1) in file: /usr/include/sharp//primitives.sharp:964:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 964 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator+=[2947] params(1) in file: /usr/include/sharp//primitives.sharp:965:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 965 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator+=[2948] params(1) in file: /usr/include/sharp//primitives.sharp:966:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 966 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator+=[2949] params(1) in file: /usr/include/sharp//primitives.sharp:967:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 967 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator+=[2950] params(1) in file: /usr/include/sharp//primitives.sharp:968:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 968 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator+=[2951] params(1) in file: /usr/include/sharp//primitives.sharp:969:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 969 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator+=[2952] params(1) in file: /usr/include/sharp//primitives.sharp:970:8: note:  
		    def operator+=(num : double)   := (value+=num.value);
		       ^

0 [0x0]: line: 970 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           add ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator+=[2953] params(1) in file: /usr/include/sharp//primitives.sharp:971:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 971 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           add ecx, ebx -> ebx   
9 [0x9]:           movu8 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#uchar.operator-=[2954] params(1) in file: /usr/include/sharp//primitives.sharp:973:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 973 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator-=[2955] params(1) in file: /usr/include/sharp//primitives.sharp:974:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 974 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator-=[2956] params(1) in file: /usr/include/sharp//primitives.sharp:975:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 975 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator-=[2957] params(1) in file: /usr/include/sharp//primitives.sharp:976:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 976 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator-=[2958] params(1) in file: /usr/include/sharp//primitives.sharp:977:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 977 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator-=[2959] params(1) in file: /usr/include/sharp//primitives.sharp:978:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 978 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator-=[2960] params(1) in file: /usr/include/sharp//primitives.sharp:979:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 979 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator-=[2961] params(1) in file: /usr/include/sharp//primitives.sharp:980:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 980 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator-=[2962] params(1) in file: /usr/include/sharp//primitives.sharp:981:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 981 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator-=[2963] params(1) in file: /usr/include/sharp//primitives.sharp:982:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 982 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator-=[2964] params(1) in file: /usr/include/sharp//primitives.sharp:983:8: note:  
		    def operator-=(num : double)   := (value-=num.value);
		       ^

0 [0x0]: line: 983 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           sub ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator-=[2965] params(1) in file: /usr/include/sharp//primitives.sharp:984:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 984 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           sub ecx, ebx -> ebx   
9 [0x9]:           movu8 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#uchar.operator*=[2966] params(1) in file: /usr/include/sharp//primitives.sharp:986:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 986 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator*=[2967] params(1) in file: /usr/include/sharp//primitives.sharp:987:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 987 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator*=[2968] params(1) in file: /usr/include/sharp//primitives.sharp:988:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 988 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator*=[2969] params(1) in file: /usr/include/sharp//primitives.sharp:989:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 989 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator*=[2970] params(1) in file: /usr/include/sharp//primitives.sharp:990:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 990 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator*=[2971] params(1) in file: /usr/include/sharp//primitives.sharp:991:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 991 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator*=[2972] params(1) in file: /usr/include/sharp//primitives.sharp:992:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 992 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator*=[2973] params(1) in file: /usr/include/sharp//primitives.sharp:993:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 993 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator*=[2974] params(1) in file: /usr/include/sharp//primitives.sharp:994:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 994 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator*=[2975] params(1) in file: /usr/include/sharp//primitives.sharp:995:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 995 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator*=[2976] params(1) in file: /usr/include/sharp//primitives.sharp:996:8: note:  
		    def operator*=(num : double)   := (value*=num.value);
		       ^

0 [0x0]: line: 996 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           mul ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator*=[2977] params(1) in file: /usr/include/sharp//primitives.sharp:997:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 997 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ecx, adx   
7 [0x7]:           loadval ebx   
8 [0x8]:           mul ecx, ebx -> ebx   
9 [0x9]:           movu8 ebx, ebx   
10 [0xa]:           rmov adx, ebx   
11 [0xb]:           returnobj   
12 [0xc]:           ret   


overload function: std#uchar.operator/=[2978] params(1) in file: /usr/include/sharp//primitives.sharp:999:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 999 movl 1   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 0   
8 [0x8]:           movn #0   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ecx, adx   
13 [0xd]:           loadval ebx   
14 [0xe]:           div ecx, ebx -> ebx   
15 [0xf]:           movu8 ebx, ebx   
16 [0x10]:           rmov adx, ebx   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


overload function: std#uchar.operator/=[2979] params(1) in file: /usr/include/sharp//primitives.sharp:1000:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 1000 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator/=[2980] params(1) in file: /usr/include/sharp//primitives.sharp:1001:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 1001 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator/=[2981] params(1) in file: /usr/include/sharp//primitives.sharp:1002:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 1002 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator/=[2982] params(1) in file: /usr/include/sharp//primitives.sharp:1003:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 1003 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator/=[2983] params(1) in file: /usr/include/sharp//primitives.sharp:1004:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 1004 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator/=[2984] params(1) in file: /usr/include/sharp//primitives.sharp:1005:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 1005 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator/=[2985] params(1) in file: /usr/include/sharp//primitives.sharp:1006:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 1006 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator/=[2986] params(1) in file: /usr/include/sharp//primitives.sharp:1007:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 1007 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator/=[2987] params(1) in file: /usr/include/sharp//primitives.sharp:1008:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 1008 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator/=[2988] params(1) in file: /usr/include/sharp//primitives.sharp:1009:8: note:  
		    def operator/=(num : double)   := (value/=num.value);
		       ^

0 [0x0]: line: 1009 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator/=[2989] params(1) in file: /usr/include/sharp//primitives.sharp:1010:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 1010 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            div ecx, ebx -> ebx   
9 [0x9]:            movu8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#uchar.operator%=[2990] params(1) in file: /usr/include/sharp//primitives.sharp:1012:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 1012 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator%=[2991] params(1) in file: /usr/include/sharp//primitives.sharp:1013:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 1013 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator%=[2992] params(1) in file: /usr/include/sharp//primitives.sharp:1014:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 1014 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator%=[2993] params(1) in file: /usr/include/sharp//primitives.sharp:1015:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 1015 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator%=[2994] params(1) in file: /usr/include/sharp//primitives.sharp:1016:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 1016 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator%=[2995] params(1) in file: /usr/include/sharp//primitives.sharp:1017:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 1017 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator%=[2996] params(1) in file: /usr/include/sharp//primitives.sharp:1018:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 1018 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator%=[2997] params(1) in file: /usr/include/sharp//primitives.sharp:1019:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 1019 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator%=[2998] params(1) in file: /usr/include/sharp//primitives.sharp:1020:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 1020 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator%=[2999] params(1) in file: /usr/include/sharp//primitives.sharp:1021:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 1021 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator%=[3000] params(1) in file: /usr/include/sharp//primitives.sharp:1022:8: note:  
		    def operator%=(num : double)   := (value%=num.value);
		       ^

0 [0x0]: line: 1022 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator%=[3001] params(1) in file: /usr/include/sharp//primitives.sharp:1023:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 1023 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            mod ecx, ebx -> ebx   
9 [0x9]:            movu8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#uchar.operator&=[3002] params(1) in file: /usr/include/sharp//primitives.sharp:1025:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 1025 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#uchar.operator&=[3003] params(1) in file: /usr/include/sharp//primitives.sharp:1026:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 1026 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#uchar.operator&=[3004] params(1) in file: /usr/include/sharp//primitives.sharp:1027:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 1027 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#uchar.operator&=[3005] params(1) in file: /usr/include/sharp//primitives.sharp:1028:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 1028 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#uchar.operator&=[3006] params(1) in file: /usr/include/sharp//primitives.sharp:1029:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 1029 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#uchar.operator&=[3007] params(1) in file: /usr/include/sharp//primitives.sharp:1030:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 1030 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#uchar.operator&=[3008] params(1) in file: /usr/include/sharp//primitives.sharp:1031:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 1031 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#uchar.operator&=[3009] params(1) in file: /usr/include/sharp//primitives.sharp:1032:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 1032 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#uchar.operator&=[3010] params(1) in file: /usr/include/sharp//primitives.sharp:1033:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 1033 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#uchar.operator&=[3011] params(1) in file: /usr/include/sharp//primitives.sharp:1034:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 1034 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#uchar.operator&=[3012] params(1) in file: /usr/include/sharp//primitives.sharp:1035:8: note:  
		    def operator&=(num : double)   := (value&=num.value);
		       ^

0 [0x0]: line: 1035 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#uchar.operator&=[3013] params(1) in file: /usr/include/sharp//primitives.sharp:1036:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 1036 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            and ecx, ebx   
9 [0x9]:            rmov adx, cmt   
10 [0xa]:            returnobj   
11 [0xb]:            ret   


overload function: std#uchar.operator|=[3014] params(1) in file: /usr/include/sharp//primitives.sharp:1038:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 1038 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator|=[3015] params(1) in file: /usr/include/sharp//primitives.sharp:1039:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 1039 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator|=[3016] params(1) in file: /usr/include/sharp//primitives.sharp:1040:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 1040 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator|=[3017] params(1) in file: /usr/include/sharp//primitives.sharp:1041:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 1041 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator|=[3018] params(1) in file: /usr/include/sharp//primitives.sharp:1042:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 1042 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator|=[3019] params(1) in file: /usr/include/sharp//primitives.sharp:1043:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 1043 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator|=[3020] params(1) in file: /usr/include/sharp//primitives.sharp:1044:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 1044 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator|=[3021] params(1) in file: /usr/include/sharp//primitives.sharp:1045:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 1045 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator|=[3022] params(1) in file: /usr/include/sharp//primitives.sharp:1046:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 1046 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator|=[3023] params(1) in file: /usr/include/sharp//primitives.sharp:1047:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 1047 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator|=[3024] params(1) in file: /usr/include/sharp//primitives.sharp:1048:8: note:  
		    def operator|=(num : double)   := (value|=num.value);
		       ^

0 [0x0]: line: 1048 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#uchar.operator|=[3025] params(1) in file: /usr/include/sharp//primitives.sharp:1049:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 1049 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            or ecx, ebx   
9 [0x9]:            movu8 cmt, cmt   
10 [0xa]:            rmov adx, cmt   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


constructor: std#uchar.uchar[3026] params(0) in file: /usr/include/sharp//primitives.sharp:940:6: note:  
		class uchar base integer<_uint8> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1488 // <std#integer<_uint8>.integer>   
2 [0x2]:         ret   


constructor: std#char.char[3027] params(1) in file: /usr/include/sharp//primitives.sharp:1052:9: note:  
		    char(i : long) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1489 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#char.char[3028] params(1) in file: /usr/include/sharp//primitives.sharp:1053:9: note:  
		    char(i : int) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1489 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#char.char[3029] params(1) in file: /usr/include/sharp//primitives.sharp:1054:9: note:  
		    char(i : short) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1489 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#char.char[3030] params(1) in file: /usr/include/sharp//primitives.sharp:1055:9: note:  
		    char(i : char) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1489 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#char.char[3031] params(1) in file: /usr/include/sharp//primitives.sharp:1056:9: note:  
		    char(i : byte) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1489 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#char.char[3032] params(1) in file: /usr/include/sharp//primitives.sharp:1057:9: note:  
		    char(i : bool) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1489 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#char.char[3033] params(1) in file: /usr/include/sharp//primitives.sharp:1058:9: note:  
		    char(i : ulong) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1489 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#char.char[3034] params(1) in file: /usr/include/sharp//primitives.sharp:1059:9: note:  
		    char(i : uint) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1489 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#char.char[3035] params(1) in file: /usr/include/sharp//primitives.sharp:1060:9: note:  
		    char(i : ushort) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1489 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#char.char[3036] params(1) in file: /usr/include/sharp//primitives.sharp:1061:9: note:  
		    char(i : uchar) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1489 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#char.char[3037] params(1) in file: /usr/include/sharp//primitives.sharp:1062:9: note:  
		    char(i : double) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1489 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#char.char[3038] params(1) in file: /usr/include/sharp//primitives.sharp:1063:9: note:  
		    char(i : var) -> base(i) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         ipushl #1   
2 [0x2]:         call @1489 // <std#integer<_int8>.integer>   
3 [0x3]:         ret   


overload function: std#char.operator![3039] params(0) in file: /usr/include/sharp//primitives.sharp:1065:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 1065 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            not ebx, ebx   
7 [0x7]:            return_val ebx   
8 [0x8]:            ret   


overload function: std#char.operator++[3040] params(0) in file: /usr/include/sharp//primitives.sharp:1066:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 1066 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            inc ebx   
7 [0x7]:            mov8 ebx, ebx   
8 [0x8]:            movi #0, adx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            return_val ebx   
12 [0xc]:            ret   


overload function: std#char.operator++[3041] params(1) in file: /usr/include/sharp//primitives.sharp:1067:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 1067 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            movr egx, ebx   
7 [0x7]:            inc ebx   
8 [0x8]:            mov8 ebx, ebx   
9 [0x9]:            movi #0, adx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            movr ebx, egx   
13 [0xd]:            return_val ebx   
14 [0xe]:            ret   


overload function: std#char.operator--[3042] params(0) in file: /usr/include/sharp//primitives.sharp:1068:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 1068 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            dec ebx   
7 [0x7]:            mov8 ebx, ebx   
8 [0x8]:            movi #0, adx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            return_val ebx   
12 [0xc]:            ret   


overload function: std#char.operator--[3043] params(1) in file: /usr/include/sharp//primitives.sharp:1069:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 1069 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            movr egx, ebx   
7 [0x7]:            dec ebx   
8 [0x8]:            mov8 ebx, ebx   
9 [0x9]:            movi #0, adx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            movr ebx, egx   
13 [0xd]:            return_val ebx   
14 [0xe]:            ret   


overload function: std#char.operator+=[3044] params(1) in file: /usr/include/sharp//primitives.sharp:1071:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 1071 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator+=[3045] params(1) in file: /usr/include/sharp//primitives.sharp:1072:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 1072 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator+=[3046] params(1) in file: /usr/include/sharp//primitives.sharp:1073:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 1073 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator+=[3047] params(1) in file: /usr/include/sharp//primitives.sharp:1074:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 1074 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator+=[3048] params(1) in file: /usr/include/sharp//primitives.sharp:1075:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 1075 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator+=[3049] params(1) in file: /usr/include/sharp//primitives.sharp:1076:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 1076 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator+=[3050] params(1) in file: /usr/include/sharp//primitives.sharp:1077:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 1077 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator+=[3051] params(1) in file: /usr/include/sharp//primitives.sharp:1078:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 1078 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator+=[3052] params(1) in file: /usr/include/sharp//primitives.sharp:1079:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 1079 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator+=[3053] params(1) in file: /usr/include/sharp//primitives.sharp:1080:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 1080 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator+=[3054] params(1) in file: /usr/include/sharp//primitives.sharp:1081:8: note:  
		    def operator+=(num : double)   := (value+=num.value);
		       ^

0 [0x0]: line: 1081 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator+=[3055] params(1) in file: /usr/include/sharp//primitives.sharp:1082:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 1082 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            add ecx, ebx -> ebx   
9 [0x9]:            mov8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#char.operator-=[3056] params(1) in file: /usr/include/sharp//primitives.sharp:1084:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 1084 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator-=[3057] params(1) in file: /usr/include/sharp//primitives.sharp:1085:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 1085 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator-=[3058] params(1) in file: /usr/include/sharp//primitives.sharp:1086:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 1086 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator-=[3059] params(1) in file: /usr/include/sharp//primitives.sharp:1087:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 1087 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator-=[3060] params(1) in file: /usr/include/sharp//primitives.sharp:1088:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 1088 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator-=[3061] params(1) in file: /usr/include/sharp//primitives.sharp:1089:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 1089 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator-=[3062] params(1) in file: /usr/include/sharp//primitives.sharp:1090:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 1090 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator-=[3063] params(1) in file: /usr/include/sharp//primitives.sharp:1091:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 1091 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator-=[3064] params(1) in file: /usr/include/sharp//primitives.sharp:1092:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 1092 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator-=[3065] params(1) in file: /usr/include/sharp//primitives.sharp:1093:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 1093 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator-=[3066] params(1) in file: /usr/include/sharp//primitives.sharp:1094:8: note:  
		    def operator-=(num : double)   := (value-=num.value);
		       ^

0 [0x0]: line: 1094 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator-=[3067] params(1) in file: /usr/include/sharp//primitives.sharp:1095:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 1095 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            sub ecx, ebx -> ebx   
9 [0x9]:            mov8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#char.operator*=[3068] params(1) in file: /usr/include/sharp//primitives.sharp:1097:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 1097 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator*=[3069] params(1) in file: /usr/include/sharp//primitives.sharp:1098:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 1098 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator*=[3070] params(1) in file: /usr/include/sharp//primitives.sharp:1099:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 1099 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator*=[3071] params(1) in file: /usr/include/sharp//primitives.sharp:1100:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 1100 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator*=[3072] params(1) in file: /usr/include/sharp//primitives.sharp:1101:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 1101 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator*=[3073] params(1) in file: /usr/include/sharp//primitives.sharp:1102:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 1102 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator*=[3074] params(1) in file: /usr/include/sharp//primitives.sharp:1103:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 1103 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator*=[3075] params(1) in file: /usr/include/sharp//primitives.sharp:1104:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 1104 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator*=[3076] params(1) in file: /usr/include/sharp//primitives.sharp:1105:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 1105 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator*=[3077] params(1) in file: /usr/include/sharp//primitives.sharp:1106:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 1106 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator*=[3078] params(1) in file: /usr/include/sharp//primitives.sharp:1107:8: note:  
		    def operator*=(num : double)   := (value*=num.value);
		       ^

0 [0x0]: line: 1107 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator*=[3079] params(1) in file: /usr/include/sharp//primitives.sharp:1108:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 1108 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            mul ecx, ebx -> ebx   
9 [0x9]:            mov8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#char.operator/=[3080] params(1) in file: /usr/include/sharp//primitives.sharp:1110:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 1110 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator/=[3081] params(1) in file: /usr/include/sharp//primitives.sharp:1111:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 1111 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator/=[3082] params(1) in file: /usr/include/sharp//primitives.sharp:1112:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 1112 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator/=[3083] params(1) in file: /usr/include/sharp//primitives.sharp:1113:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 1113 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator/=[3084] params(1) in file: /usr/include/sharp//primitives.sharp:1114:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 1114 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator/=[3085] params(1) in file: /usr/include/sharp//primitives.sharp:1115:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 1115 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator/=[3086] params(1) in file: /usr/include/sharp//primitives.sharp:1116:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 1116 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator/=[3087] params(1) in file: /usr/include/sharp//primitives.sharp:1117:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 1117 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator/=[3088] params(1) in file: /usr/include/sharp//primitives.sharp:1118:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 1118 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator/=[3089] params(1) in file: /usr/include/sharp//primitives.sharp:1119:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 1119 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator/=[3090] params(1) in file: /usr/include/sharp//primitives.sharp:1120:8: note:  
		    def operator/=(num : double)   := (value/=num.value);
		       ^

0 [0x0]: line: 1120 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator/=[3091] params(1) in file: /usr/include/sharp//primitives.sharp:1121:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 1121 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            div ecx, ebx -> ebx   
9 [0x9]:            mov8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#char.operator%=[3092] params(1) in file: /usr/include/sharp//primitives.sharp:1123:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 1123 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator%=[3093] params(1) in file: /usr/include/sharp//primitives.sharp:1124:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 1124 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator%=[3094] params(1) in file: /usr/include/sharp//primitives.sharp:1125:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 1125 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator%=[3095] params(1) in file: /usr/include/sharp//primitives.sharp:1126:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 1126 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator%=[3096] params(1) in file: /usr/include/sharp//primitives.sharp:1127:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 1127 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator%=[3097] params(1) in file: /usr/include/sharp//primitives.sharp:1128:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 1128 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator%=[3098] params(1) in file: /usr/include/sharp//primitives.sharp:1129:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 1129 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator%=[3099] params(1) in file: /usr/include/sharp//primitives.sharp:1130:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 1130 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator%=[3100] params(1) in file: /usr/include/sharp//primitives.sharp:1131:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 1131 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator%=[3101] params(1) in file: /usr/include/sharp//primitives.sharp:1132:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 1132 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator%=[3102] params(1) in file: /usr/include/sharp//primitives.sharp:1133:8: note:  
		    def operator%=(num : double)   := (value%=num.value);
		       ^

0 [0x0]: line: 1133 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            mov8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator%=[3103] params(1) in file: /usr/include/sharp//primitives.sharp:1134:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 1134 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            mod ecx, ebx -> ebx   
9 [0x9]:            mov8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#char.operator&=[3104] params(1) in file: /usr/include/sharp//primitives.sharp:1136:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 1136 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#char.operator&=[3105] params(1) in file: /usr/include/sharp//primitives.sharp:1137:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 1137 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#char.operator&=[3106] params(1) in file: /usr/include/sharp//primitives.sharp:1138:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 1138 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#char.operator&=[3107] params(1) in file: /usr/include/sharp//primitives.sharp:1139:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 1139 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#char.operator&=[3108] params(1) in file: /usr/include/sharp//primitives.sharp:1140:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 1140 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#char.operator&=[3109] params(1) in file: /usr/include/sharp//primitives.sharp:1141:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 1141 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#char.operator&=[3110] params(1) in file: /usr/include/sharp//primitives.sharp:1142:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 1142 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#char.operator&=[3111] params(1) in file: /usr/include/sharp//primitives.sharp:1143:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 1143 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#char.operator&=[3112] params(1) in file: /usr/include/sharp//primitives.sharp:1144:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 1144 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#char.operator&=[3113] params(1) in file: /usr/include/sharp//primitives.sharp:1145:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 1145 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#char.operator&=[3114] params(1) in file: /usr/include/sharp//primitives.sharp:1146:8: note:  
		    def operator&=(num : double)   := (value&=num.value);
		       ^

0 [0x0]: line: 1146 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#char.operator&=[3115] params(1) in file: /usr/include/sharp//primitives.sharp:1147:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 1147 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            and ecx, ebx   
9 [0x9]:            rmov adx, cmt   
10 [0xa]:            returnobj   
11 [0xb]:            ret   


overload function: std#char.operator|=[3116] params(1) in file: /usr/include/sharp//primitives.sharp:1149:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 1149 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator|=[3117] params(1) in file: /usr/include/sharp//primitives.sharp:1150:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 1150 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator|=[3118] params(1) in file: /usr/include/sharp//primitives.sharp:1151:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 1151 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator|=[3119] params(1) in file: /usr/include/sharp//primitives.sharp:1152:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 1152 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator|=[3120] params(1) in file: /usr/include/sharp//primitives.sharp:1153:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 1153 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator|=[3121] params(1) in file: /usr/include/sharp//primitives.sharp:1154:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 1154 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator|=[3122] params(1) in file: /usr/include/sharp//primitives.sharp:1155:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 1155 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator|=[3123] params(1) in file: /usr/include/sharp//primitives.sharp:1156:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 1156 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator|=[3124] params(1) in file: /usr/include/sharp//primitives.sharp:1157:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 1157 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator|=[3125] params(1) in file: /usr/include/sharp//primitives.sharp:1158:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 1158 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator|=[3126] params(1) in file: /usr/include/sharp//primitives.sharp:1159:8: note:  
		    def operator|=(num : double)   := (value|=num.value);
		       ^

0 [0x0]: line: 1159 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            mov8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#char.operator|=[3127] params(1) in file: /usr/include/sharp//primitives.sharp:1160:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 1160 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            or ecx, ebx   
9 [0x9]:            mov8 cmt, cmt   
10 [0xa]:            rmov adx, cmt   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


function: std#char.is_digit[3128] params(1) in file: /usr/include/sharp//primitives.sharp:1162:15: note:  
		    static def is_digit(ch: var) : var {
		              ^

0 [0x0]: line: 1163 ipushl #0   
1 [0x1]:            movi #48, ebx   
3 [0x3]:            loadval ecx   
4 [0x4]:            gte ecx, ebx   
5 [0x5]:            movr ebx, cmt   
6 [0x6]:            skne ebx // pc = 12   
7 [0x7]:            ipushl #0   
8 [0x8]:            movi #57, ebx   
10 [0xa]:            loadval ecx   
11 [0xb]:            lte ecx, ebx   
12 [0xc]:            return_val cmt   
13 [0xd]:            ret   


function: std#char.is_newline[3129] params(1) in file: /usr/include/sharp//primitives.sharp:1166:15: note:  
		    static def is_newline(ch: var) : var {
		              ^

0 [0x0]: line: 1167 call @3449 // <platform#build.is_windows>   
1 [0x1]:            loadval ebx   
2 [0x2]:            movr cmt, ebx   
3 [0x3]:            jne 19   
4 [0x4]:            ipushl #0   
5 [0x5]:            movi #10, ebx   
7 [0x7]:            loadval ecx   
8 [0x8]:            test ecx, ebx   
9 [0x9]:            movr ebx, cmt   
10 [0xa]:            skpe ebx // pc = 16   
11 [0xb]:            ipushl #0   
12 [0xc]:            movi #13, ebx   
14 [0xe]:            loadval ecx   
15 [0xf]:            test ecx, ebx   
16 [0x10]:            return_val cmt   
17 [0x11]:            ret   
18 [0x12]:            jmp @26   
19 [0x13]: line: 1168 ipushl #0   
20 [0x14]:            movi #10, ebx   
22 [0x16]:            loadval ecx   
23 [0x17]:            test ecx, ebx   
24 [0x18]:            return_val cmt   
25 [0x19]:            ret   
26 [0x1a]:            nop   


function: std#char.is_alpha[3130] params(1) in file: /usr/include/sharp//primitives.sharp:1171:15: note:  
		    static def is_alpha(ch: var) : var {
		              ^

0 [0x0]: line: 1172 ipushl #0   
1 [0x1]:            movi #65, ebx   
3 [0x3]:            loadval ecx   
4 [0x4]:            gte ecx, ebx   
5 [0x5]:            movr ebx, cmt   
6 [0x6]:            skne ebx // pc = 13   
7 [0x7]:            ipushl #0   
8 [0x8]:            movi #90, ebx   
10 [0xa]:            loadval ecx   
11 [0xb]:            lte ecx, ebx   
12 [0xc]:            movr ebx, cmt   
13 [0xd]:            skpe ebx // pc = 26   
14 [0xe]:            ipushl #0   
15 [0xf]:            movi #97, ebx   
17 [0x11]:            loadval ecx   
18 [0x12]:            gte ecx, ebx   
19 [0x13]:            movr ebx, cmt   
20 [0x14]:            skne ebx // pc = 26   
21 [0x15]:            ipushl #0   
22 [0x16]:            movi #122, ebx   
24 [0x18]:            loadval ecx   
25 [0x19]:            lte ecx, ebx   
26 [0x1a]:            return_val cmt   
27 [0x1b]:            ret   


function: std#char.is_alpha_num[3131] params(1) in file: /usr/include/sharp//primitives.sharp:1176:15: note:  
		    static def is_alpha_num(ch: var) : var {
		              ^

0 [0x0]: line: 1177 ipushl #0   
1 [0x1]:            call @3130 // <std#char.is_alpha>   
2 [0x2]:            loadval ebx   
3 [0x3]:            skpe ebx // pc = 7   
4 [0x4]:            ipushl #0   
5 [0x5]:            call @3128 // <std#char.is_digit>   
6 [0x6]:            loadval ebx   
7 [0x7]:            return_val ebx   
8 [0x8]:            ret   


function: std#char.to_lower[3132] params(1) in file: /usr/include/sharp//primitives.sharp:1180:15: note:  
		    static def to_lower(ch: var) : var {
		              ^

0 [0x0]: line: 1181 istore 65   
2 [0x2]:            loadl ebx, fp+0   
3 [0x3]:            loadval ecx   
4 [0x4]:            lte ecx, ebx   
5 [0x5]:            movr ebx, cmt   
6 [0x6]:            skne ebx // pc = 13   
7 [0x7]:            ipushl #0   
8 [0x8]:            movi #90, ebx   
10 [0xa]:            loadval ecx   
11 [0xb]:            lte ecx, ebx   
12 [0xc]:            movr ebx, cmt   
13 [0xd]:            movr cmt, ebx   
14 [0xe]:            jne 27   
15 [0xf]: line: 1182 istore 97   
17 [0x11]:            ipushl #0   
18 [0x12]:            movi #65, ebx   
20 [0x14]:            loadval ecx   
21 [0x15]:            sub ecx, ebx -> ebx   
22 [0x16]:            loadval ecx   
23 [0x17]:            add ecx, ebx -> ebx   
24 [0x18]:            return_val ebx   
25 [0x19]:            ret   
26 [0x1a]:            jmp @30   
27 [0x1b]: line: 1184 loadl ebx, fp+0   
28 [0x1c]:            return_val ebx   
29 [0x1d]:            ret   
30 [0x1e]:            nop   


function: std#char.to_upper[3133] params(1) in file: /usr/include/sharp//primitives.sharp:1187:15: note:  
		    static def to_upper(ch: var) : var {
		              ^

0 [0x0]: line: 1188 istore 97   
2 [0x2]:            loadl ebx, fp+0   
3 [0x3]:            loadval ecx   
4 [0x4]:            lte ecx, ebx   
5 [0x5]:            movr ebx, cmt   
6 [0x6]:            skne ebx // pc = 13   
7 [0x7]:            ipushl #0   
8 [0x8]:            movi #122, ebx   
10 [0xa]:            loadval ecx   
11 [0xb]:            lte ecx, ebx   
12 [0xc]:            movr ebx, cmt   
13 [0xd]:            movr cmt, ebx   
14 [0xe]:            jne 27   
15 [0xf]: line: 1189 istore 65   
17 [0x11]:            ipushl #0   
18 [0x12]:            movi #97, ebx   
20 [0x14]:            loadval ecx   
21 [0x15]:            sub ecx, ebx -> ebx   
22 [0x16]:            loadval ecx   
23 [0x17]:            add ecx, ebx -> ebx   
24 [0x18]:            return_val ebx   
25 [0x19]:            ret   
26 [0x1a]:            jmp @30   
27 [0x1b]: line: 1191 loadl ebx, fp+0   
28 [0x1c]:            return_val ebx   
29 [0x1d]:            ret   
30 [0x1e]:            nop   


constructor: std#char.char[3134] params(0) in file: /usr/include/sharp//primitives.sharp:1051:6: note:  
		class char base integer<_int8> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1697 // <std#integer<_int8>.integer>   
2 [0x2]:         ret   


constructor: std#byte.byte[3135] params(1) in file: /usr/include/sharp//primitives.sharp:1195:9: note:  
		    byte(i : long) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @2936 // <std#uchar.uchar>   
9 [0x9]:         ret   


constructor: std#byte.byte[3136] params(1) in file: /usr/include/sharp//primitives.sharp:1196:9: note:  
		    byte(i : int) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @2936 // <std#uchar.uchar>   
9 [0x9]:         ret   


constructor: std#byte.byte[3137] params(1) in file: /usr/include/sharp//primitives.sharp:1197:9: note:  
		    byte(i : short) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @2936 // <std#uchar.uchar>   
9 [0x9]:         ret   


constructor: std#byte.byte[3138] params(1) in file: /usr/include/sharp//primitives.sharp:1198:9: note:  
		    byte(i : char) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @2936 // <std#uchar.uchar>   
9 [0x9]:         ret   


constructor: std#byte.byte[3139] params(1) in file: /usr/include/sharp//primitives.sharp:1199:9: note:  
		    byte(i : byte) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @2936 // <std#uchar.uchar>   
9 [0x9]:         ret   


constructor: std#byte.byte[3140] params(1) in file: /usr/include/sharp//primitives.sharp:1200:9: note:  
		    byte(i : bool) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @2936 // <std#uchar.uchar>   
9 [0x9]:         ret   


constructor: std#byte.byte[3141] params(1) in file: /usr/include/sharp//primitives.sharp:1201:9: note:  
		    byte(i : ulong) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @2936 // <std#uchar.uchar>   
9 [0x9]:         ret   


constructor: std#byte.byte[3142] params(1) in file: /usr/include/sharp//primitives.sharp:1202:9: note:  
		    byte(i : uint) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @2936 // <std#uchar.uchar>   
9 [0x9]:         ret   


constructor: std#byte.byte[3143] params(1) in file: /usr/include/sharp//primitives.sharp:1203:9: note:  
		    byte(i : ushort) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @2936 // <std#uchar.uchar>   
9 [0x9]:         ret   


constructor: std#byte.byte[3144] params(1) in file: /usr/include/sharp//primitives.sharp:1204:9: note:  
		    byte(i : uchar) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @2936 // <std#uchar.uchar>   
9 [0x9]:         ret   


constructor: std#byte.byte[3145] params(1) in file: /usr/include/sharp//primitives.sharp:1205:9: note:  
		    byte(i : double) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @2936 // <std#uchar.uchar>   
9 [0x9]:         ret   


constructor: std#byte.byte[3146] params(1) in file: /usr/include/sharp//primitives.sharp:1206:9: note:  
		    byte(i : var) -> base(i) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         ipushl #1   
2 [0x2]:         call @2936 // <std#uchar.uchar>   
3 [0x3]:         ret   


overload function: std#byte.operator![3147] params(0) in file: /usr/include/sharp//primitives.sharp:1208:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 1208 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            not ebx, ebx   
7 [0x7]:            return_val ebx   
8 [0x8]:            ret   


overload function: std#byte.operator++[3148] params(0) in file: /usr/include/sharp//primitives.sharp:1209:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 1209 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            inc ebx   
7 [0x7]:            movu8 ebx, ebx   
8 [0x8]:            movi #0, adx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            return_val ebx   
12 [0xc]:            ret   


overload function: std#byte.operator++[3149] params(1) in file: /usr/include/sharp//primitives.sharp:1210:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 1210 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            movr egx, ebx   
7 [0x7]:            inc ebx   
8 [0x8]:            movu8 ebx, ebx   
9 [0x9]:            movi #0, adx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            movr ebx, egx   
13 [0xd]:            return_val ebx   
14 [0xe]:            ret   


overload function: std#byte.operator--[3150] params(0) in file: /usr/include/sharp//primitives.sharp:1211:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 1211 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            dec ebx   
7 [0x7]:            movu8 ebx, ebx   
8 [0x8]:            movi #0, adx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            return_val ebx   
12 [0xc]:            ret   


overload function: std#byte.operator--[3151] params(1) in file: /usr/include/sharp//primitives.sharp:1212:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 1212 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            movr egx, ebx   
7 [0x7]:            dec ebx   
8 [0x8]:            movu8 ebx, ebx   
9 [0x9]:            movi #0, adx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            movr ebx, egx   
13 [0xd]:            return_val ebx   
14 [0xe]:            ret   


overload function: std#byte.operator+=[3152] params(1) in file: /usr/include/sharp//primitives.sharp:1214:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 1214 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator+=[3153] params(1) in file: /usr/include/sharp//primitives.sharp:1215:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 1215 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator+=[3154] params(1) in file: /usr/include/sharp//primitives.sharp:1216:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 1216 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator+=[3155] params(1) in file: /usr/include/sharp//primitives.sharp:1217:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 1217 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator+=[3156] params(1) in file: /usr/include/sharp//primitives.sharp:1218:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 1218 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator+=[3157] params(1) in file: /usr/include/sharp//primitives.sharp:1219:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 1219 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator+=[3158] params(1) in file: /usr/include/sharp//primitives.sharp:1220:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 1220 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator+=[3159] params(1) in file: /usr/include/sharp//primitives.sharp:1221:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 1221 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator+=[3160] params(1) in file: /usr/include/sharp//primitives.sharp:1222:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 1222 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator+=[3161] params(1) in file: /usr/include/sharp//primitives.sharp:1223:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 1223 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator+=[3162] params(1) in file: /usr/include/sharp//primitives.sharp:1224:8: note:  
		    def operator+=(num : double)   := (value+=num.value);
		       ^

0 [0x0]: line: 1224 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator+=[3163] params(1) in file: /usr/include/sharp//primitives.sharp:1225:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 1225 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            add ecx, ebx -> ebx   
9 [0x9]:            movu8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#byte.operator-=[3164] params(1) in file: /usr/include/sharp//primitives.sharp:1227:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 1227 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator-=[3165] params(1) in file: /usr/include/sharp//primitives.sharp:1228:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 1228 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator-=[3166] params(1) in file: /usr/include/sharp//primitives.sharp:1229:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 1229 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator-=[3167] params(1) in file: /usr/include/sharp//primitives.sharp:1230:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 1230 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator-=[3168] params(1) in file: /usr/include/sharp//primitives.sharp:1231:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 1231 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator-=[3169] params(1) in file: /usr/include/sharp//primitives.sharp:1232:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 1232 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator-=[3170] params(1) in file: /usr/include/sharp//primitives.sharp:1233:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 1233 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator-=[3171] params(1) in file: /usr/include/sharp//primitives.sharp:1234:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 1234 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator-=[3172] params(1) in file: /usr/include/sharp//primitives.sharp:1235:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 1235 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator-=[3173] params(1) in file: /usr/include/sharp//primitives.sharp:1236:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 1236 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator-=[3174] params(1) in file: /usr/include/sharp//primitives.sharp:1237:8: note:  
		    def operator-=(num : double)   := (value-=num.value);
		       ^

0 [0x0]: line: 1237 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator-=[3175] params(1) in file: /usr/include/sharp//primitives.sharp:1238:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 1238 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            sub ecx, ebx -> ebx   
9 [0x9]:            movu8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#byte.operator*=[3176] params(1) in file: /usr/include/sharp//primitives.sharp:1240:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 1240 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator*=[3177] params(1) in file: /usr/include/sharp//primitives.sharp:1241:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 1241 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator*=[3178] params(1) in file: /usr/include/sharp//primitives.sharp:1242:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 1242 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator*=[3179] params(1) in file: /usr/include/sharp//primitives.sharp:1243:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 1243 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator*=[3180] params(1) in file: /usr/include/sharp//primitives.sharp:1244:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 1244 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator*=[3181] params(1) in file: /usr/include/sharp//primitives.sharp:1245:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 1245 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator*=[3182] params(1) in file: /usr/include/sharp//primitives.sharp:1246:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 1246 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator*=[3183] params(1) in file: /usr/include/sharp//primitives.sharp:1247:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 1247 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator*=[3184] params(1) in file: /usr/include/sharp//primitives.sharp:1248:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 1248 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator*=[3185] params(1) in file: /usr/include/sharp//primitives.sharp:1249:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 1249 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator*=[3186] params(1) in file: /usr/include/sharp//primitives.sharp:1250:8: note:  
		    def operator*=(num : double)   := (value*=num.value);
		       ^

0 [0x0]: line: 1250 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator*=[3187] params(1) in file: /usr/include/sharp//primitives.sharp:1251:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 1251 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            mul ecx, ebx -> ebx   
9 [0x9]:            movu8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#byte.operator/=[3188] params(1) in file: /usr/include/sharp//primitives.sharp:1253:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 1253 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator/=[3189] params(1) in file: /usr/include/sharp//primitives.sharp:1254:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 1254 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator/=[3190] params(1) in file: /usr/include/sharp//primitives.sharp:1255:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 1255 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator/=[3191] params(1) in file: /usr/include/sharp//primitives.sharp:1256:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 1256 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator/=[3192] params(1) in file: /usr/include/sharp//primitives.sharp:1257:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 1257 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator/=[3193] params(1) in file: /usr/include/sharp//primitives.sharp:1258:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 1258 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator/=[3194] params(1) in file: /usr/include/sharp//primitives.sharp:1259:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 1259 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator/=[3195] params(1) in file: /usr/include/sharp//primitives.sharp:1260:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 1260 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator/=[3196] params(1) in file: /usr/include/sharp//primitives.sharp:1261:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 1261 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator/=[3197] params(1) in file: /usr/include/sharp//primitives.sharp:1262:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 1262 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator/=[3198] params(1) in file: /usr/include/sharp//primitives.sharp:1263:8: note:  
		    def operator/=(num : double)   := (value/=num.value);
		       ^

0 [0x0]: line: 1263 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator/=[3199] params(1) in file: /usr/include/sharp//primitives.sharp:1264:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 1264 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            div ecx, ebx -> ebx   
9 [0x9]:            movu8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#byte.operator%=[3200] params(1) in file: /usr/include/sharp//primitives.sharp:1266:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 1266 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator%=[3201] params(1) in file: /usr/include/sharp//primitives.sharp:1267:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 1267 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator%=[3202] params(1) in file: /usr/include/sharp//primitives.sharp:1268:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 1268 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator%=[3203] params(1) in file: /usr/include/sharp//primitives.sharp:1269:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 1269 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator%=[3204] params(1) in file: /usr/include/sharp//primitives.sharp:1270:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 1270 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator%=[3205] params(1) in file: /usr/include/sharp//primitives.sharp:1271:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 1271 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator%=[3206] params(1) in file: /usr/include/sharp//primitives.sharp:1272:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 1272 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator%=[3207] params(1) in file: /usr/include/sharp//primitives.sharp:1273:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 1273 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator%=[3208] params(1) in file: /usr/include/sharp//primitives.sharp:1274:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 1274 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator%=[3209] params(1) in file: /usr/include/sharp//primitives.sharp:1275:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 1275 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator%=[3210] params(1) in file: /usr/include/sharp//primitives.sharp:1276:8: note:  
		    def operator%=(num : double)   := (value%=num.value);
		       ^

0 [0x0]: line: 1276 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            movu8 ebx, ebx   
16 [0x10]:            rmov adx, ebx   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator%=[3211] params(1) in file: /usr/include/sharp//primitives.sharp:1277:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 1277 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            mod ecx, ebx -> ebx   
9 [0x9]:            movu8 ebx, ebx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


overload function: std#byte.operator&=[3212] params(1) in file: /usr/include/sharp//primitives.sharp:1279:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 1279 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#byte.operator&=[3213] params(1) in file: /usr/include/sharp//primitives.sharp:1280:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 1280 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#byte.operator&=[3214] params(1) in file: /usr/include/sharp//primitives.sharp:1281:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 1281 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#byte.operator&=[3215] params(1) in file: /usr/include/sharp//primitives.sharp:1282:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 1282 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#byte.operator&=[3216] params(1) in file: /usr/include/sharp//primitives.sharp:1283:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 1283 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#byte.operator&=[3217] params(1) in file: /usr/include/sharp//primitives.sharp:1284:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 1284 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#byte.operator&=[3218] params(1) in file: /usr/include/sharp//primitives.sharp:1285:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 1285 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#byte.operator&=[3219] params(1) in file: /usr/include/sharp//primitives.sharp:1286:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 1286 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#byte.operator&=[3220] params(1) in file: /usr/include/sharp//primitives.sharp:1287:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 1287 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#byte.operator&=[3221] params(1) in file: /usr/include/sharp//primitives.sharp:1288:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 1288 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#byte.operator&=[3222] params(1) in file: /usr/include/sharp//primitives.sharp:1289:8: note:  
		    def operator&=(num : double)   := (value&=num.value);
		       ^

0 [0x0]: line: 1289 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#byte.operator&=[3223] params(1) in file: /usr/include/sharp//primitives.sharp:1290:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 1290 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            and ecx, ebx   
9 [0x9]:            rmov adx, cmt   
10 [0xa]:            returnobj   
11 [0xb]:            ret   


overload function: std#byte.operator|=[3224] params(1) in file: /usr/include/sharp//primitives.sharp:1292:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 1292 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator|=[3225] params(1) in file: /usr/include/sharp//primitives.sharp:1293:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 1293 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator|=[3226] params(1) in file: /usr/include/sharp//primitives.sharp:1294:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 1294 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator|=[3227] params(1) in file: /usr/include/sharp//primitives.sharp:1295:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 1295 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator|=[3228] params(1) in file: /usr/include/sharp//primitives.sharp:1296:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 1296 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator|=[3229] params(1) in file: /usr/include/sharp//primitives.sharp:1297:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 1297 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator|=[3230] params(1) in file: /usr/include/sharp//primitives.sharp:1298:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 1298 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator|=[3231] params(1) in file: /usr/include/sharp//primitives.sharp:1299:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 1299 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator|=[3232] params(1) in file: /usr/include/sharp//primitives.sharp:1300:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 1300 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator|=[3233] params(1) in file: /usr/include/sharp//primitives.sharp:1301:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 1301 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator|=[3234] params(1) in file: /usr/include/sharp//primitives.sharp:1302:8: note:  
		    def operator|=(num : double)   := (value|=num.value);
		       ^

0 [0x0]: line: 1302 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            movu8 cmt, cmt   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            returnobj   
18 [0x12]:            ret   


overload function: std#byte.operator|=[3235] params(1) in file: /usr/include/sharp//primitives.sharp:1303:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 1303 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            or ecx, ebx   
9 [0x9]:            movu8 cmt, cmt   
10 [0xa]:            rmov adx, cmt   
11 [0xb]:            returnobj   
12 [0xc]:            ret   


function: std#byte.is_digit[3236] params(1) in file: /usr/include/sharp//primitives.sharp:1305:15: note:  
		    static def is_digit(ch: var) : var {
		              ^

0 [0x0]: line: 1306 ipushl #0   
1 [0x1]:            movi #48, ebx   
3 [0x3]:            loadval ecx   
4 [0x4]:            gte ecx, ebx   
5 [0x5]:            movr ebx, cmt   
6 [0x6]:            skne ebx // pc = 12   
7 [0x7]:            ipushl #0   
8 [0x8]:            movi #57, ebx   
10 [0xa]:            loadval ecx   
11 [0xb]:            lte ecx, ebx   
12 [0xc]:            return_val cmt   
13 [0xd]:            ret   


function: std#byte.is_newline[3237] params(1) in file: /usr/include/sharp//primitives.sharp:1309:15: note:  
		    static def is_newline(ch: var) : var {
		              ^

0 [0x0]: line: 1310 call @3449 // <platform#build.is_windows>   
1 [0x1]:            loadval ebx   
2 [0x2]:            movr cmt, ebx   
3 [0x3]:            jne 19   
4 [0x4]:            ipushl #0   
5 [0x5]:            movi #10, ebx   
7 [0x7]:            loadval ecx   
8 [0x8]:            test ecx, ebx   
9 [0x9]:            movr ebx, cmt   
10 [0xa]:            skpe ebx // pc = 16   
11 [0xb]:            ipushl #0   
12 [0xc]:            movi #13, ebx   
14 [0xe]:            loadval ecx   
15 [0xf]:            test ecx, ebx   
16 [0x10]:            return_val cmt   
17 [0x11]:            ret   
18 [0x12]:            jmp @26   
19 [0x13]: line: 1311 ipushl #0   
20 [0x14]:            movi #10, ebx   
22 [0x16]:            loadval ecx   
23 [0x17]:            test ecx, ebx   
24 [0x18]:            return_val cmt   
25 [0x19]:            ret   
26 [0x1a]:            nop   


function: std#byte.is_alpha[3238] params(1) in file: /usr/include/sharp//primitives.sharp:1314:15: note:  
		    static def is_alpha(ch: var) : var {
		              ^

0 [0x0]: line: 1315 ipushl #0   
1 [0x1]:            movi #65, ebx   
3 [0x3]:            loadval ecx   
4 [0x4]:            gte ecx, ebx   
5 [0x5]:            movr ebx, cmt   
6 [0x6]:            skne ebx // pc = 13   
7 [0x7]:            ipushl #0   
8 [0x8]:            movi #90, ebx   
10 [0xa]:            loadval ecx   
11 [0xb]:            lte ecx, ebx   
12 [0xc]:            movr ebx, cmt   
13 [0xd]:            skpe ebx // pc = 26   
14 [0xe]:            ipushl #0   
15 [0xf]:            movi #97, ebx   
17 [0x11]:            loadval ecx   
18 [0x12]:            gte ecx, ebx   
19 [0x13]:            movr ebx, cmt   
20 [0x14]:            skne ebx // pc = 26   
21 [0x15]:            ipushl #0   
22 [0x16]:            movi #122, ebx   
24 [0x18]:            loadval ecx   
25 [0x19]:            lte ecx, ebx   
26 [0x1a]:            return_val cmt   
27 [0x1b]:            ret   


function: std#byte.is_alpha_num[3239] params(1) in file: /usr/include/sharp//primitives.sharp:1319:15: note:  
		    static def is_alpha_num(ch: var) : var {
		              ^

0 [0x0]: line: 1320 ipushl #0   
1 [0x1]:            call @3238 // <std#byte.is_alpha>   
2 [0x2]:            loadval ebx   
3 [0x3]:            skpe ebx // pc = 7   
4 [0x4]:            ipushl #0   
5 [0x5]:            call @3236 // <std#byte.is_digit>   
6 [0x6]:            loadval ebx   
7 [0x7]:            return_val ebx   
8 [0x8]:            ret   


function: std#byte.to_lower[3240] params(1) in file: /usr/include/sharp//primitives.sharp:1323:15: note:  
		    static def to_lower(ch: var) : var {
		              ^

0 [0x0]: line: 1324 istore 65   
2 [0x2]:            loadl ebx, fp+0   
3 [0x3]:            loadval ecx   
4 [0x4]:            lte ecx, ebx   
5 [0x5]:            movr ebx, cmt   
6 [0x6]:            skne ebx // pc = 13   
7 [0x7]:            ipushl #0   
8 [0x8]:            movi #90, ebx   
10 [0xa]:            loadval ecx   
11 [0xb]:            lte ecx, ebx   
12 [0xc]:            movr ebx, cmt   
13 [0xd]:            movr cmt, ebx   
14 [0xe]:            jne 27   
15 [0xf]: line: 1325 istore 97   
17 [0x11]:            ipushl #0   
18 [0x12]:            movi #65, ebx   
20 [0x14]:            loadval ecx   
21 [0x15]:            sub ecx, ebx -> ebx   
22 [0x16]:            loadval ecx   
23 [0x17]:            add ecx, ebx -> ebx   
24 [0x18]:            return_val ebx   
25 [0x19]:            ret   
26 [0x1a]:            jmp @30   
27 [0x1b]: line: 1327 loadl ebx, fp+0   
28 [0x1c]:            return_val ebx   
29 [0x1d]:            ret   
30 [0x1e]:            nop   


function: std#byte.to_upper[3241] params(1) in file: /usr/include/sharp//primitives.sharp:1330:15: note:  
		    static def to_upper(ch: var) : var {
		              ^

0 [0x0]: line: 1331 istore 97   
2 [0x2]:            loadl ebx, fp+0   
3 [0x3]:            loadval ecx   
4 [0x4]:            lte ecx, ebx   
5 [0x5]:            movr ebx, cmt   
6 [0x6]:            skne ebx // pc = 13   
7 [0x7]:            ipushl #0   
8 [0x8]:            movi #122, ebx   
10 [0xa]:            loadval ecx   
11 [0xb]:            lte ecx, ebx   
12 [0xc]:            movr ebx, cmt   
13 [0xd]:            movr cmt, ebx   
14 [0xe]:            jne 27   
15 [0xf]: line: 1332 istore 65   
17 [0x11]:            ipushl #0   
18 [0x12]:            movi #97, ebx   
20 [0x14]:            loadval ecx   
21 [0x15]:            sub ecx, ebx -> ebx   
22 [0x16]:            loadval ecx   
23 [0x17]:            add ecx, ebx -> ebx   
24 [0x18]:            return_val ebx   
25 [0x19]:            ret   
26 [0x1a]:            jmp @30   
27 [0x1b]: line: 1334 loadl ebx, fp+0   
28 [0x1c]:            return_val ebx   
29 [0x1d]:            ret   
30 [0x1e]:            nop   


constructor: std#byte.byte[3242] params(0) in file: /usr/include/sharp//primitives.sharp:1194:6: note:  
		class byte base uchar {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3026 // <std#uchar.uchar>   
2 [0x2]:         ret   


constructor: std#bool.bool[3243] params(1) in file: /usr/include/sharp//primitives.sharp:1338:9: note:  
		    bool(i : long) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1489 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#bool.bool[3244] params(1) in file: /usr/include/sharp//primitives.sharp:1339:9: note:  
		    bool(i : int) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1489 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#bool.bool[3245] params(1) in file: /usr/include/sharp//primitives.sharp:1340:9: note:  
		    bool(i : short) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1489 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#bool.bool[3246] params(1) in file: /usr/include/sharp//primitives.sharp:1341:9: note:  
		    bool(i : char) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1489 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#bool.bool[3247] params(1) in file: /usr/include/sharp//primitives.sharp:1342:9: note:  
		    bool(i : byte) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1489 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#bool.bool[3248] params(1) in file: /usr/include/sharp//primitives.sharp:1343:9: note:  
		    bool(i : bool) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1489 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#bool.bool[3249] params(1) in file: /usr/include/sharp//primitives.sharp:1344:9: note:  
		    bool(i : ulong) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1489 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#bool.bool[3250] params(1) in file: /usr/include/sharp//primitives.sharp:1345:9: note:  
		    bool(i : uint) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1489 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#bool.bool[3251] params(1) in file: /usr/include/sharp//primitives.sharp:1346:9: note:  
		    bool(i : ushort) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1489 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#bool.bool[3252] params(1) in file: /usr/include/sharp//primitives.sharp:1347:9: note:  
		    bool(i : uchar) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1489 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#bool.bool[3253] params(1) in file: /usr/include/sharp//primitives.sharp:1348:9: note:  
		    bool(i : double) -> base(i.value) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1489 // <std#integer<_int8>.integer>   
9 [0x9]:         ret   


constructor: std#bool.bool[3254] params(1) in file: /usr/include/sharp//primitives.sharp:1349:9: note:  
		    bool(i : var) -> base(i) {}
		        ^

0 [0x0]:         pushl 0   
1 [0x1]:         ipushl #1   
2 [0x2]:         call @1489 // <std#integer<_int8>.integer>   
3 [0x3]:         ret   


overload function: std#bool.operator![3255] params(0) in file: /usr/include/sharp//primitives.sharp:1351:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 1351 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            not ebx, ebx   
7 [0x7]:            return_val ebx   
8 [0x8]:            ret   


overload function: std#bool.operator++[3256] params(0) in file: /usr/include/sharp//primitives.sharp:1352:8: note:  
		    def operator++() := (value = !value);
		       ^

0 [0x0]: line: 1352 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            not ebx, ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            mov8 ebx, ebx   
11 [0xb]:            movi #0, adx   
13 [0xd]:            rmov adx, ebx   
14 [0xe]:            returnobj   
15 [0xf]:            ret   


overload function: std#bool.operator++[3257] params(1) in file: /usr/include/sharp//primitives.sharp:1353:8: note:  
		    def operator++(num : var) := (!value);
		       ^

0 [0x0]: line: 1353 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            not ebx, ebx   
7 [0x7]:            return_val ebx   
8 [0x8]:            ret   


overload function: std#bool.operator--[3258] params(0) in file: /usr/include/sharp//primitives.sharp:1354:8: note:  
		    def operator--() := (value = !value);
		       ^

0 [0x0]: line: 1354 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            not ebx, ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            mov8 ebx, ebx   
11 [0xb]:            movi #0, adx   
13 [0xd]:            rmov adx, ebx   
14 [0xe]:            returnobj   
15 [0xf]:            ret   


overload function: std#bool.operator--[3259] params(1) in file: /usr/include/sharp//primitives.sharp:1355:8: note:  
		    def operator--(num : var) := (value = !value);
		       ^

0 [0x0]: line: 1355 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            not ebx, ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            mov8 ebx, ebx   
11 [0xb]:            movi #0, adx   
13 [0xd]:            rmov adx, ebx   
14 [0xe]:            returnobj   
15 [0xf]:            ret   


overload function: std#bool.operator+=[3260] params(1) in file: /usr/include/sharp//primitives.sharp:1357:8: note:  
		    def operator+=(num : ulong)  := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1357 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator+=[3261] params(1) in file: /usr/include/sharp//primitives.sharp:1358:8: note:  
		    def operator+=(num : long)   := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1358 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator+=[3262] params(1) in file: /usr/include/sharp//primitives.sharp:1359:8: note:  
		    def operator+=(num : uint)   := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1359 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator+=[3263] params(1) in file: /usr/include/sharp//primitives.sharp:1360:8: note:  
		    def operator+=(num : int)    := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1360 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator+=[3264] params(1) in file: /usr/include/sharp//primitives.sharp:1361:8: note:  
		    def operator+=(num : ushort) := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1361 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator+=[3265] params(1) in file: /usr/include/sharp//primitives.sharp:1362:8: note:  
		    def operator+=(num : short)  := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1362 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator+=[3266] params(1) in file: /usr/include/sharp//primitives.sharp:1363:8: note:  
		    def operator+=(num : uchar)  := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1363 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator+=[3267] params(1) in file: /usr/include/sharp//primitives.sharp:1364:8: note:  
		    def operator+=(num : char)   := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1364 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator+=[3268] params(1) in file: /usr/include/sharp//primitives.sharp:1365:8: note:  
		    def operator+=(num : byte)   := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1365 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator+=[3269] params(1) in file: /usr/include/sharp//primitives.sharp:1366:8: note:  
		    def operator+=(num : bool)   := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1366 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator+=[3270] params(1) in file: /usr/include/sharp//primitives.sharp:1367:8: note:  
		    def operator+=(num : double)   := check_value(value+=num.value);
		       ^

0 [0x0]: line: 1367 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            add ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator+=[3271] params(1) in file: /usr/include/sharp//primitives.sharp:1368:8: note:  
		    def operator+=(num : var)    := check_value(value+=num);
		       ^

0 [0x0]: line: 1368 pushl 0   
1 [0x1]:            ipushl #1   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            add ecx, ebx -> ebx   
10 [0xa]:            mov8 ebx, ebx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            rstore ebx   
13 [0xd]:            call @3344 // <std#bool.check_value>   
14 [0xe]:            loadval ebx   
15 [0xf]:            return_val ebx   
16 [0x10]:            ret   


overload function: std#bool.operator-=[3272] params(1) in file: /usr/include/sharp//primitives.sharp:1370:8: note:  
		    def operator-=(num : ulong)  := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1370 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator-=[3273] params(1) in file: /usr/include/sharp//primitives.sharp:1371:8: note:  
		    def operator-=(num : long)   := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1371 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator-=[3274] params(1) in file: /usr/include/sharp//primitives.sharp:1372:8: note:  
		    def operator-=(num : uint)   := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1372 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator-=[3275] params(1) in file: /usr/include/sharp//primitives.sharp:1373:8: note:  
		    def operator-=(num : int)    := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1373 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator-=[3276] params(1) in file: /usr/include/sharp//primitives.sharp:1374:8: note:  
		    def operator-=(num : ushort) := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1374 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator-=[3277] params(1) in file: /usr/include/sharp//primitives.sharp:1375:8: note:  
		    def operator-=(num : short)  := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1375 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator-=[3278] params(1) in file: /usr/include/sharp//primitives.sharp:1376:8: note:  
		    def operator-=(num : uchar)  := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1376 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator-=[3279] params(1) in file: /usr/include/sharp//primitives.sharp:1377:8: note:  
		    def operator-=(num : char)   := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1377 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator-=[3280] params(1) in file: /usr/include/sharp//primitives.sharp:1378:8: note:  
		    def operator-=(num : byte)   := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1378 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator-=[3281] params(1) in file: /usr/include/sharp//primitives.sharp:1379:8: note:  
		    def operator-=(num : bool)   := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1379 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator-=[3282] params(1) in file: /usr/include/sharp//primitives.sharp:1380:8: note:  
		    def operator-=(num : double)   := check_value(value-=num.value);
		       ^

0 [0x0]: line: 1380 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            sub ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator-=[3283] params(1) in file: /usr/include/sharp//primitives.sharp:1381:8: note:  
		    def operator-=(num : var)    := check_value(value-=num);
		       ^

0 [0x0]: line: 1381 pushl 0   
1 [0x1]:            ipushl #1   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            sub ecx, ebx -> ebx   
10 [0xa]:            mov8 ebx, ebx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            rstore ebx   
13 [0xd]:            call @3344 // <std#bool.check_value>   
14 [0xe]:            loadval ebx   
15 [0xf]:            return_val ebx   
16 [0x10]:            ret   


overload function: std#bool.operator*=[3284] params(1) in file: /usr/include/sharp//primitives.sharp:1383:8: note:  
		    def operator*=(num : ulong)  := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1383 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator*=[3285] params(1) in file: /usr/include/sharp//primitives.sharp:1384:8: note:  
		    def operator*=(num : long)   := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1384 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator*=[3286] params(1) in file: /usr/include/sharp//primitives.sharp:1385:8: note:  
		    def operator*=(num : uint)   := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1385 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator*=[3287] params(1) in file: /usr/include/sharp//primitives.sharp:1386:8: note:  
		    def operator*=(num : int)    := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1386 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator*=[3288] params(1) in file: /usr/include/sharp//primitives.sharp:1387:8: note:  
		    def operator*=(num : ushort) := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1387 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator*=[3289] params(1) in file: /usr/include/sharp//primitives.sharp:1388:8: note:  
		    def operator*=(num : short)  := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1388 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator*=[3290] params(1) in file: /usr/include/sharp//primitives.sharp:1389:8: note:  
		    def operator*=(num : uchar)  := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1389 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator*=[3291] params(1) in file: /usr/include/sharp//primitives.sharp:1390:8: note:  
		    def operator*=(num : char)   := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1390 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator*=[3292] params(1) in file: /usr/include/sharp//primitives.sharp:1391:8: note:  
		    def operator*=(num : byte)   := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1391 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator*=[3293] params(1) in file: /usr/include/sharp//primitives.sharp:1392:8: note:  
		    def operator*=(num : bool)   := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1392 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator*=[3294] params(1) in file: /usr/include/sharp//primitives.sharp:1393:8: note:  
		    def operator*=(num : double)   := check_value(value*=num.value);
		       ^

0 [0x0]: line: 1393 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mul ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator*=[3295] params(1) in file: /usr/include/sharp//primitives.sharp:1394:8: note:  
		    def operator*=(num : var)    := check_value(value*=num);
		       ^

0 [0x0]: line: 1394 pushl 0   
1 [0x1]:            ipushl #1   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            mul ecx, ebx -> ebx   
10 [0xa]:            mov8 ebx, ebx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            rstore ebx   
13 [0xd]:            call @3344 // <std#bool.check_value>   
14 [0xe]:            loadval ebx   
15 [0xf]:            return_val ebx   
16 [0x10]:            ret   


overload function: std#bool.operator/=[3296] params(1) in file: /usr/include/sharp//primitives.sharp:1396:8: note:  
		    def operator/=(num : ulong)  := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1396 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator/=[3297] params(1) in file: /usr/include/sharp//primitives.sharp:1397:8: note:  
		    def operator/=(num : long)   := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1397 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator/=[3298] params(1) in file: /usr/include/sharp//primitives.sharp:1398:8: note:  
		    def operator/=(num : uint)   := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1398 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator/=[3299] params(1) in file: /usr/include/sharp//primitives.sharp:1399:8: note:  
		    def operator/=(num : int)    := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1399 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator/=[3300] params(1) in file: /usr/include/sharp//primitives.sharp:1400:8: note:  
		    def operator/=(num : ushort) := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1400 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator/=[3301] params(1) in file: /usr/include/sharp//primitives.sharp:1401:8: note:  
		    def operator/=(num : short)  := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1401 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator/=[3302] params(1) in file: /usr/include/sharp//primitives.sharp:1402:8: note:  
		    def operator/=(num : uchar)  := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1402 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator/=[3303] params(1) in file: /usr/include/sharp//primitives.sharp:1403:8: note:  
		    def operator/=(num : char)   := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1403 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator/=[3304] params(1) in file: /usr/include/sharp//primitives.sharp:1404:8: note:  
		    def operator/=(num : byte)   := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1404 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator/=[3305] params(1) in file: /usr/include/sharp//primitives.sharp:1405:8: note:  
		    def operator/=(num : bool)   := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1405 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator/=[3306] params(1) in file: /usr/include/sharp//primitives.sharp:1406:8: note:  
		    def operator/=(num : double)   := check_value(value/=num.value);
		       ^

0 [0x0]: line: 1406 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            div ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator/=[3307] params(1) in file: /usr/include/sharp//primitives.sharp:1407:8: note:  
		    def operator/=(num : var)    := check_value(value/=num);
		       ^

0 [0x0]: line: 1407 pushl 0   
1 [0x1]:            ipushl #1   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            div ecx, ebx -> ebx   
10 [0xa]:            mov8 ebx, ebx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            rstore ebx   
13 [0xd]:            call @3344 // <std#bool.check_value>   
14 [0xe]:            loadval ebx   
15 [0xf]:            return_val ebx   
16 [0x10]:            ret   


overload function: std#bool.operator%=[3308] params(1) in file: /usr/include/sharp//primitives.sharp:1409:8: note:  
		    def operator%=(num : ulong)  := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1409 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator%=[3309] params(1) in file: /usr/include/sharp//primitives.sharp:1410:8: note:  
		    def operator%=(num : long)   := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1410 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator%=[3310] params(1) in file: /usr/include/sharp//primitives.sharp:1411:8: note:  
		    def operator%=(num : uint)   := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1411 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator%=[3311] params(1) in file: /usr/include/sharp//primitives.sharp:1412:8: note:  
		    def operator%=(num : int)    := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1412 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator%=[3312] params(1) in file: /usr/include/sharp//primitives.sharp:1413:8: note:  
		    def operator%=(num : ushort) := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1413 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator%=[3313] params(1) in file: /usr/include/sharp//primitives.sharp:1414:8: note:  
		    def operator%=(num : short)  := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1414 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator%=[3314] params(1) in file: /usr/include/sharp//primitives.sharp:1415:8: note:  
		    def operator%=(num : uchar)  := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1415 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator%=[3315] params(1) in file: /usr/include/sharp//primitives.sharp:1416:8: note:  
		    def operator%=(num : char)   := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1416 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator%=[3316] params(1) in file: /usr/include/sharp//primitives.sharp:1417:8: note:  
		    def operator%=(num : byte)   := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1417 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator%=[3317] params(1) in file: /usr/include/sharp//primitives.sharp:1418:8: note:  
		    def operator%=(num : bool)   := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1418 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator%=[3318] params(1) in file: /usr/include/sharp//primitives.sharp:1419:8: note:  
		    def operator%=(num : double)   := check_value(value%=num.value);
		       ^

0 [0x0]: line: 1419 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            mod ecx, ebx -> ebx   
16 [0x10]:            mov8 ebx, ebx   
17 [0x11]:            rmov adx, ebx   
18 [0x12]:            rstore ebx   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator%=[3319] params(1) in file: /usr/include/sharp//primitives.sharp:1420:8: note:  
		    def operator%=(num : var)    := check_value(value%=num);
		       ^

0 [0x0]: line: 1420 pushl 0   
1 [0x1]:            ipushl #1   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            mod ecx, ebx -> ebx   
10 [0xa]:            mov8 ebx, ebx   
11 [0xb]:            rmov adx, ebx   
12 [0xc]:            rstore ebx   
13 [0xd]:            call @3344 // <std#bool.check_value>   
14 [0xe]:            loadval ebx   
15 [0xf]:            return_val ebx   
16 [0x10]:            ret   


overload function: std#bool.operator&=[3320] params(1) in file: /usr/include/sharp//primitives.sharp:1422:8: note:  
		    def operator&=(num : ulong)  := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1422 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @3344 // <std#bool.check_value>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#bool.operator&=[3321] params(1) in file: /usr/include/sharp//primitives.sharp:1423:8: note:  
		    def operator&=(num : long)   := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1423 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @3344 // <std#bool.check_value>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#bool.operator&=[3322] params(1) in file: /usr/include/sharp//primitives.sharp:1424:8: note:  
		    def operator&=(num : uint)   := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1424 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @3344 // <std#bool.check_value>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#bool.operator&=[3323] params(1) in file: /usr/include/sharp//primitives.sharp:1425:8: note:  
		    def operator&=(num : int)    := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1425 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @3344 // <std#bool.check_value>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#bool.operator&=[3324] params(1) in file: /usr/include/sharp//primitives.sharp:1426:8: note:  
		    def operator&=(num : ushort) := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1426 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @3344 // <std#bool.check_value>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#bool.operator&=[3325] params(1) in file: /usr/include/sharp//primitives.sharp:1427:8: note:  
		    def operator&=(num : short)  := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1427 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @3344 // <std#bool.check_value>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#bool.operator&=[3326] params(1) in file: /usr/include/sharp//primitives.sharp:1428:8: note:  
		    def operator&=(num : uchar)  := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1428 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @3344 // <std#bool.check_value>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#bool.operator&=[3327] params(1) in file: /usr/include/sharp//primitives.sharp:1429:8: note:  
		    def operator&=(num : char)   := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1429 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @3344 // <std#bool.check_value>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#bool.operator&=[3328] params(1) in file: /usr/include/sharp//primitives.sharp:1430:8: note:  
		    def operator&=(num : byte)   := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1430 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @3344 // <std#bool.check_value>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#bool.operator&=[3329] params(1) in file: /usr/include/sharp//primitives.sharp:1431:8: note:  
		    def operator&=(num : bool)   := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1431 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @3344 // <std#bool.check_value>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#bool.operator&=[3330] params(1) in file: /usr/include/sharp//primitives.sharp:1432:8: note:  
		    def operator&=(num : double)   := check_value(value&=num.value);
		       ^

0 [0x0]: line: 1432 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            and ecx, ebx   
16 [0x10]:            rmov adx, cmt   
17 [0x11]:            rstore cmt   
18 [0x12]:            call @3344 // <std#bool.check_value>   
19 [0x13]:            loadval ebx   
20 [0x14]:            return_val ebx   
21 [0x15]:            ret   


overload function: std#bool.operator&=[3331] params(1) in file: /usr/include/sharp//primitives.sharp:1433:8: note:  
		    def operator&=(num : var)    := check_value(value&=num);
		       ^

0 [0x0]: line: 1433 pushl 0   
1 [0x1]:            ipushl #1   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            and ecx, ebx   
10 [0xa]:            rmov adx, cmt   
11 [0xb]:            rstore cmt   
12 [0xc]:            call @3344 // <std#bool.check_value>   
13 [0xd]:            loadval ebx   
14 [0xe]:            return_val ebx   
15 [0xf]:            ret   


overload function: std#bool.operator|=[3332] params(1) in file: /usr/include/sharp//primitives.sharp:1435:8: note:  
		    def operator|=(num : ulong)  := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1435 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator|=[3333] params(1) in file: /usr/include/sharp//primitives.sharp:1436:8: note:  
		    def operator|=(num : long)   := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1436 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator|=[3334] params(1) in file: /usr/include/sharp//primitives.sharp:1437:8: note:  
		    def operator|=(num : uint)   := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1437 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator|=[3335] params(1) in file: /usr/include/sharp//primitives.sharp:1438:8: note:  
		    def operator|=(num : int)    := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1438 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator|=[3336] params(1) in file: /usr/include/sharp//primitives.sharp:1439:8: note:  
		    def operator|=(num : ushort) := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1439 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator|=[3337] params(1) in file: /usr/include/sharp//primitives.sharp:1440:8: note:  
		    def operator|=(num : short)  := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1440 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator|=[3338] params(1) in file: /usr/include/sharp//primitives.sharp:1441:8: note:  
		    def operator|=(num : uchar)  := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1441 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator|=[3339] params(1) in file: /usr/include/sharp//primitives.sharp:1442:8: note:  
		    def operator|=(num : char)   := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1442 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator|=[3340] params(1) in file: /usr/include/sharp//primitives.sharp:1443:8: note:  
		    def operator|=(num : byte)   := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1443 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator|=[3341] params(1) in file: /usr/include/sharp//primitives.sharp:1444:8: note:  
		    def operator|=(num : bool)   := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1444 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator|=[3342] params(1) in file: /usr/include/sharp//primitives.sharp:1445:8: note:  
		    def operator|=(num : double)   := check_value(value|=num.value);
		       ^

0 [0x0]: line: 1445 pushl 0   
1 [0x1]:            movl 1   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ebx, adx   
7 [0x7]:            rstore ebx   
8 [0x8]:            movl 0   
9 [0x9]:            movn #0   
11 [0xb]:            movi #0, adx   
13 [0xd]:            iaload ecx, adx   
14 [0xe]:            loadval ebx   
15 [0xf]:            or ecx, ebx   
16 [0x10]:            mov8 cmt, cmt   
17 [0x11]:            rmov adx, cmt   
18 [0x12]:            rstore cmt   
19 [0x13]:            call @3344 // <std#bool.check_value>   
20 [0x14]:            loadval ebx   
21 [0x15]:            return_val ebx   
22 [0x16]:            ret   


overload function: std#bool.operator|=[3343] params(1) in file: /usr/include/sharp//primitives.sharp:1446:8: note:  
		    def operator|=(num : var)    := check_value(value|=num);
		       ^

0 [0x0]: line: 1446 pushl 0   
1 [0x1]:            ipushl #1   
2 [0x2]:            movl 0   
3 [0x3]:            movn #0   
5 [0x5]:            movi #0, adx   
7 [0x7]:            iaload ecx, adx   
8 [0x8]:            loadval ebx   
9 [0x9]:            or ecx, ebx   
10 [0xa]:            mov8 cmt, cmt   
11 [0xb]:            rmov adx, cmt   
12 [0xc]:            rstore cmt   
13 [0xd]:            call @3344 // <std#bool.check_value>   
14 [0xe]:            loadval ebx   
15 [0xf]:            return_val ebx   
16 [0x10]:            ret   


function: std#bool.check_value[3344] params(1) in file: /usr/include/sharp//primitives.sharp:1448:8: note:  
		    def check_value(new_val: var) : var {
		       ^

0 [0x0]: line: 1449 loadl ebx, fp+1   
1 [0x1]:            skne ebx // pc = 5   
2 [0x2]:            movi #1, ebx   
4 [0x4]:            skip @2 // pc = 6   
5 [0x5]:            movi #0, ebx   
7 [0x7]:            return_val ebx   
8 [0x8]:            ret   


function: std#bool.to_string[3345] params(0) in file: /usr/include/sharp//primitives.sharp:1452:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 1453 new_class @0 // std#__srt_global   
1 [0x1]:            ret   
2 [0x2]:            dup    
3 [0x3]:            movl 0   
4 [0x4]:            movn #0   
6 [0x6]:            movi #0, adx   
8 [0x8]:            iaload ebx, adx   
9 [0x9]:            skne ebx // pc = 13   
10 [0xa]:            newstr @56 // true   
11 [0xb]:            popobj2    
12 [0xc]:            skip @2 // pc = 14   
13 [0xd]:            newstr @57 // false   
14 [0xe]:            popobj2    
15 [0xf]:            pushobj   
16 [0x10]:            call @1959 // <std#string.string>   
17 [0x11]:            popobj2    
18 [0x12]:            returnobj   
19 [0x13]:            ret   


constructor: std#bool.bool[3346] params(0) in file: /usr/include/sharp//primitives.sharp:1337:6: note:  
		class bool base integer<_int8> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1697 // <std#integer<_int8>.integer>   
2 [0x2]:         ret   


constructor: std#double.double[3347] params(1) in file: /usr/include/sharp//primitives.sharp:1458:11: note:  
		    double(i : long) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1698 // <std#integer<var>.integer>   
9 [0x9]:         ret   


constructor: std#double.double[3348] params(1) in file: /usr/include/sharp//primitives.sharp:1459:11: note:  
		    double(i : int) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1698 // <std#integer<var>.integer>   
9 [0x9]:         ret   


constructor: std#double.double[3349] params(1) in file: /usr/include/sharp//primitives.sharp:1460:11: note:  
		    double(i : short) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1698 // <std#integer<var>.integer>   
9 [0x9]:         ret   


constructor: std#double.double[3350] params(1) in file: /usr/include/sharp//primitives.sharp:1461:11: note:  
		    double(i : char) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1698 // <std#integer<var>.integer>   
9 [0x9]:         ret   


constructor: std#double.double[3351] params(1) in file: /usr/include/sharp//primitives.sharp:1462:11: note:  
		    double(i : byte) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1698 // <std#integer<var>.integer>   
9 [0x9]:         ret   


constructor: std#double.double[3352] params(1) in file: /usr/include/sharp//primitives.sharp:1463:11: note:  
		    double(i : bool) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1698 // <std#integer<var>.integer>   
9 [0x9]:         ret   


constructor: std#double.double[3353] params(1) in file: /usr/include/sharp//primitives.sharp:1464:11: note:  
		    double(i : ulong) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1698 // <std#integer<var>.integer>   
9 [0x9]:         ret   


constructor: std#double.double[3354] params(1) in file: /usr/include/sharp//primitives.sharp:1465:11: note:  
		    double(i : uint) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1698 // <std#integer<var>.integer>   
9 [0x9]:         ret   


constructor: std#double.double[3355] params(1) in file: /usr/include/sharp//primitives.sharp:1466:11: note:  
		    double(i : ushort) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1698 // <std#integer<var>.integer>   
9 [0x9]:         ret   


constructor: std#double.double[3356] params(1) in file: /usr/include/sharp//primitives.sharp:1467:11: note:  
		    double(i : uchar) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1698 // <std#integer<var>.integer>   
9 [0x9]:         ret   


constructor: std#double.double[3357] params(1) in file: /usr/include/sharp//primitives.sharp:1468:11: note:  
		    double(i : double) -> base(i.value) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         movl 1   
2 [0x2]:         movn #0   
4 [0x4]:         movi #0, adx   
6 [0x6]:         iaload ebx, adx   
7 [0x7]:         rstore ebx   
8 [0x8]:         call @1698 // <std#integer<var>.integer>   
9 [0x9]:         ret   


constructor: std#double.double[3358] params(1) in file: /usr/include/sharp//primitives.sharp:1469:11: note:  
		    double(i : var) -> base(i) {}
		          ^

0 [0x0]:         pushl 0   
1 [0x1]:         ipushl #1   
2 [0x2]:         call @1698 // <std#integer<var>.integer>   
3 [0x3]:         ret   


overload function: std#double.operator![3359] params(0) in file: /usr/include/sharp//primitives.sharp:1471:8: note:  
		    def operator!() := (!value);
		       ^

0 [0x0]: line: 1471 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            not ebx, ebx   
7 [0x7]:            return_val ebx   
8 [0x8]:            ret   


overload function: std#double.operator++[3360] params(0) in file: /usr/include/sharp//primitives.sharp:1472:8: note:  
		    def operator++() := (++value);
		       ^

0 [0x0]: line: 1472 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            inc ebx   
7 [0x7]:            movi #0, adx   
9 [0x9]:            rmov adx, ebx   
10 [0xa]:            return_val ebx   
11 [0xb]:            ret   


overload function: std#double.operator++[3361] params(1) in file: /usr/include/sharp//primitives.sharp:1473:8: note:  
		    def operator++(num : var) := (value++);
		       ^

0 [0x0]: line: 1473 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            movr egx, ebx   
7 [0x7]:            inc ebx   
8 [0x8]:            movi #0, adx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            movr ebx, egx   
12 [0xc]:            return_val ebx   
13 [0xd]:            ret   


overload function: std#double.operator--[3362] params(0) in file: /usr/include/sharp//primitives.sharp:1474:8: note:  
		    def operator--() := (--value);
		       ^

0 [0x0]: line: 1474 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            dec ebx   
7 [0x7]:            movi #0, adx   
9 [0x9]:            rmov adx, ebx   
10 [0xa]:            return_val ebx   
11 [0xb]:            ret   


overload function: std#double.operator--[3363] params(1) in file: /usr/include/sharp//primitives.sharp:1475:8: note:  
		    def operator--(num : var) := (value--);
		       ^

0 [0x0]: line: 1475 movl 0   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            movr egx, ebx   
7 [0x7]:            dec ebx   
8 [0x8]:            movi #0, adx   
10 [0xa]:            rmov adx, ebx   
11 [0xb]:            movr ebx, egx   
12 [0xc]:            return_val ebx   
13 [0xd]:            ret   


overload function: std#double.operator+=[3364] params(1) in file: /usr/include/sharp//primitives.sharp:1477:8: note:  
		    def operator+=(num : ulong)  := (value+=num.value);
		       ^

0 [0x0]: line: 1477 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator+=[3365] params(1) in file: /usr/include/sharp//primitives.sharp:1478:8: note:  
		    def operator+=(num : long)   := (value+=num.value);
		       ^

0 [0x0]: line: 1478 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator+=[3366] params(1) in file: /usr/include/sharp//primitives.sharp:1479:8: note:  
		    def operator+=(num : uint)   := (value+=num.value);
		       ^

0 [0x0]: line: 1479 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator+=[3367] params(1) in file: /usr/include/sharp//primitives.sharp:1480:8: note:  
		    def operator+=(num : int)    := (value+=num.value);
		       ^

0 [0x0]: line: 1480 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator+=[3368] params(1) in file: /usr/include/sharp//primitives.sharp:1481:8: note:  
		    def operator+=(num : ushort) := (value+=num.value);
		       ^

0 [0x0]: line: 1481 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator+=[3369] params(1) in file: /usr/include/sharp//primitives.sharp:1482:8: note:  
		    def operator+=(num : short)  := (value+=num.value);
		       ^

0 [0x0]: line: 1482 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator+=[3370] params(1) in file: /usr/include/sharp//primitives.sharp:1483:8: note:  
		    def operator+=(num : uchar)  := (value+=num.value);
		       ^

0 [0x0]: line: 1483 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator+=[3371] params(1) in file: /usr/include/sharp//primitives.sharp:1484:8: note:  
		    def operator+=(num : char)   := (value+=num.value);
		       ^

0 [0x0]: line: 1484 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator+=[3372] params(1) in file: /usr/include/sharp//primitives.sharp:1485:8: note:  
		    def operator+=(num : byte)   := (value+=num.value);
		       ^

0 [0x0]: line: 1485 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator+=[3373] params(1) in file: /usr/include/sharp//primitives.sharp:1486:8: note:  
		    def operator+=(num : bool)   := (value+=num.value);
		       ^

0 [0x0]: line: 1486 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator+=[3374] params(1) in file: /usr/include/sharp//primitives.sharp:1487:8: note:  
		    def operator+=(num : double)   := (value+=num.value);
		       ^

0 [0x0]: line: 1487 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            add ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator+=[3375] params(1) in file: /usr/include/sharp//primitives.sharp:1488:8: note:  
		    def operator+=(num : var)    := (value+=num);
		       ^

0 [0x0]: line: 1488 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            add ecx, ebx -> ebx   
9 [0x9]:            rmov adx, ebx   
10 [0xa]:            returnobj   
11 [0xb]:            ret   


overload function: std#double.operator-=[3376] params(1) in file: /usr/include/sharp//primitives.sharp:1490:8: note:  
		    def operator-=(num : ulong)  := (value-=num.value);
		       ^

0 [0x0]: line: 1490 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator-=[3377] params(1) in file: /usr/include/sharp//primitives.sharp:1491:8: note:  
		    def operator-=(num : long)   := (value-=num.value);
		       ^

0 [0x0]: line: 1491 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator-=[3378] params(1) in file: /usr/include/sharp//primitives.sharp:1492:8: note:  
		    def operator-=(num : uint)   := (value-=num.value);
		       ^

0 [0x0]: line: 1492 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator-=[3379] params(1) in file: /usr/include/sharp//primitives.sharp:1493:8: note:  
		    def operator-=(num : int)    := (value-=num.value);
		       ^

0 [0x0]: line: 1493 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator-=[3380] params(1) in file: /usr/include/sharp//primitives.sharp:1494:8: note:  
		    def operator-=(num : ushort) := (value-=num.value);
		       ^

0 [0x0]: line: 1494 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator-=[3381] params(1) in file: /usr/include/sharp//primitives.sharp:1495:8: note:  
		    def operator-=(num : short)  := (value-=num.value);
		       ^

0 [0x0]: line: 1495 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator-=[3382] params(1) in file: /usr/include/sharp//primitives.sharp:1496:8: note:  
		    def operator-=(num : uchar)  := (value-=num.value);
		       ^

0 [0x0]: line: 1496 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator-=[3383] params(1) in file: /usr/include/sharp//primitives.sharp:1497:8: note:  
		    def operator-=(num : char)   := (value-=num.value);
		       ^

0 [0x0]: line: 1497 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator-=[3384] params(1) in file: /usr/include/sharp//primitives.sharp:1498:8: note:  
		    def operator-=(num : byte)   := (value-=num.value);
		       ^

0 [0x0]: line: 1498 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator-=[3385] params(1) in file: /usr/include/sharp//primitives.sharp:1499:8: note:  
		    def operator-=(num : bool)   := (value-=num.value);
		       ^

0 [0x0]: line: 1499 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator-=[3386] params(1) in file: /usr/include/sharp//primitives.sharp:1500:8: note:  
		    def operator-=(num : double)   := (value-=num.value);
		       ^

0 [0x0]: line: 1500 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            sub ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator-=[3387] params(1) in file: /usr/include/sharp//primitives.sharp:1501:8: note:  
		    def operator-=(num : var)    := (value-=num);
		       ^

0 [0x0]: line: 1501 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            sub ecx, ebx -> ebx   
9 [0x9]:            rmov adx, ebx   
10 [0xa]:            returnobj   
11 [0xb]:            ret   


overload function: std#double.operator*=[3388] params(1) in file: /usr/include/sharp//primitives.sharp:1503:8: note:  
		    def operator*=(num : ulong)  := (value*=num.value);
		       ^

0 [0x0]: line: 1503 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator*=[3389] params(1) in file: /usr/include/sharp//primitives.sharp:1504:8: note:  
		    def operator*=(num : long)   := (value*=num.value);
		       ^

0 [0x0]: line: 1504 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator*=[3390] params(1) in file: /usr/include/sharp//primitives.sharp:1505:8: note:  
		    def operator*=(num : uint)   := (value*=num.value);
		       ^

0 [0x0]: line: 1505 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator*=[3391] params(1) in file: /usr/include/sharp//primitives.sharp:1506:8: note:  
		    def operator*=(num : int)    := (value*=num.value);
		       ^

0 [0x0]: line: 1506 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator*=[3392] params(1) in file: /usr/include/sharp//primitives.sharp:1507:8: note:  
		    def operator*=(num : ushort) := (value*=num.value);
		       ^

0 [0x0]: line: 1507 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator*=[3393] params(1) in file: /usr/include/sharp//primitives.sharp:1508:8: note:  
		    def operator*=(num : short)  := (value*=num.value);
		       ^

0 [0x0]: line: 1508 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator*=[3394] params(1) in file: /usr/include/sharp//primitives.sharp:1509:8: note:  
		    def operator*=(num : uchar)  := (value*=num.value);
		       ^

0 [0x0]: line: 1509 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator*=[3395] params(1) in file: /usr/include/sharp//primitives.sharp:1510:8: note:  
		    def operator*=(num : char)   := (value*=num.value);
		       ^

0 [0x0]: line: 1510 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator*=[3396] params(1) in file: /usr/include/sharp//primitives.sharp:1511:8: note:  
		    def operator*=(num : byte)   := (value*=num.value);
		       ^

0 [0x0]: line: 1511 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator*=[3397] params(1) in file: /usr/include/sharp//primitives.sharp:1512:8: note:  
		    def operator*=(num : bool)   := (value*=num.value);
		       ^

0 [0x0]: line: 1512 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator*=[3398] params(1) in file: /usr/include/sharp//primitives.sharp:1513:8: note:  
		    def operator*=(num : double)   := (value*=num.value);
		       ^

0 [0x0]: line: 1513 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mul ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator*=[3399] params(1) in file: /usr/include/sharp//primitives.sharp:1514:8: note:  
		    def operator*=(num : var)    := (value*=num);
		       ^

0 [0x0]: line: 1514 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            mul ecx, ebx -> ebx   
9 [0x9]:            rmov adx, ebx   
10 [0xa]:            returnobj   
11 [0xb]:            ret   


overload function: std#double.operator/=[3400] params(1) in file: /usr/include/sharp//primitives.sharp:1516:8: note:  
		    def operator/=(num : ulong)  := (value/=num.value);
		       ^

0 [0x0]: line: 1516 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator/=[3401] params(1) in file: /usr/include/sharp//primitives.sharp:1517:8: note:  
		    def operator/=(num : long)   := (value/=num.value);
		       ^

0 [0x0]: line: 1517 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator/=[3402] params(1) in file: /usr/include/sharp//primitives.sharp:1518:8: note:  
		    def operator/=(num : uint)   := (value/=num.value);
		       ^

0 [0x0]: line: 1518 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator/=[3403] params(1) in file: /usr/include/sharp//primitives.sharp:1519:8: note:  
		    def operator/=(num : int)    := (value/=num.value);
		       ^

0 [0x0]: line: 1519 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator/=[3404] params(1) in file: /usr/include/sharp//primitives.sharp:1520:8: note:  
		    def operator/=(num : ushort) := (value/=num.value);
		       ^

0 [0x0]: line: 1520 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator/=[3405] params(1) in file: /usr/include/sharp//primitives.sharp:1521:8: note:  
		    def operator/=(num : short)  := (value/=num.value);
		       ^

0 [0x0]: line: 1521 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator/=[3406] params(1) in file: /usr/include/sharp//primitives.sharp:1522:8: note:  
		    def operator/=(num : uchar)  := (value/=num.value);
		       ^

0 [0x0]: line: 1522 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator/=[3407] params(1) in file: /usr/include/sharp//primitives.sharp:1523:8: note:  
		    def operator/=(num : char)   := (value/=num.value);
		       ^

0 [0x0]: line: 1523 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator/=[3408] params(1) in file: /usr/include/sharp//primitives.sharp:1524:8: note:  
		    def operator/=(num : byte)   := (value/=num.value);
		       ^

0 [0x0]: line: 1524 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator/=[3409] params(1) in file: /usr/include/sharp//primitives.sharp:1525:8: note:  
		    def operator/=(num : bool)   := (value/=num.value);
		       ^

0 [0x0]: line: 1525 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator/=[3410] params(1) in file: /usr/include/sharp//primitives.sharp:1526:8: note:  
		    def operator/=(num : double)   := (value/=num.value);
		       ^

0 [0x0]: line: 1526 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            div ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator/=[3411] params(1) in file: /usr/include/sharp//primitives.sharp:1527:8: note:  
		    def operator/=(num : var)    := (value/=num);
		       ^

0 [0x0]: line: 1527 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            div ecx, ebx -> ebx   
9 [0x9]:            rmov adx, ebx   
10 [0xa]:            returnobj   
11 [0xb]:            ret   


overload function: std#double.operator%=[3412] params(1) in file: /usr/include/sharp//primitives.sharp:1529:8: note:  
		    def operator%=(num : ulong)  := (value%=num.value);
		       ^

0 [0x0]: line: 1529 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator%=[3413] params(1) in file: /usr/include/sharp//primitives.sharp:1530:8: note:  
		    def operator%=(num : long)   := (value%=num.value);
		       ^

0 [0x0]: line: 1530 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator%=[3414] params(1) in file: /usr/include/sharp//primitives.sharp:1531:8: note:  
		    def operator%=(num : uint)   := (value%=num.value);
		       ^

0 [0x0]: line: 1531 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator%=[3415] params(1) in file: /usr/include/sharp//primitives.sharp:1532:8: note:  
		    def operator%=(num : int)    := (value%=num.value);
		       ^

0 [0x0]: line: 1532 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator%=[3416] params(1) in file: /usr/include/sharp//primitives.sharp:1533:8: note:  
		    def operator%=(num : ushort) := (value%=num.value);
		       ^

0 [0x0]: line: 1533 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator%=[3417] params(1) in file: /usr/include/sharp//primitives.sharp:1534:8: note:  
		    def operator%=(num : short)  := (value%=num.value);
		       ^

0 [0x0]: line: 1534 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator%=[3418] params(1) in file: /usr/include/sharp//primitives.sharp:1535:8: note:  
		    def operator%=(num : uchar)  := (value%=num.value);
		       ^

0 [0x0]: line: 1535 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator%=[3419] params(1) in file: /usr/include/sharp//primitives.sharp:1536:8: note:  
		    def operator%=(num : char)   := (value%=num.value);
		       ^

0 [0x0]: line: 1536 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator%=[3420] params(1) in file: /usr/include/sharp//primitives.sharp:1537:8: note:  
		    def operator%=(num : byte)   := (value%=num.value);
		       ^

0 [0x0]: line: 1537 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator%=[3421] params(1) in file: /usr/include/sharp//primitives.sharp:1538:8: note:  
		    def operator%=(num : bool)   := (value%=num.value);
		       ^

0 [0x0]: line: 1538 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator%=[3422] params(1) in file: /usr/include/sharp//primitives.sharp:1539:8: note:  
		    def operator%=(num : double)   := (value%=num.value);
		       ^

0 [0x0]: line: 1539 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            mod ecx, ebx -> ebx   
15 [0xf]:            rmov adx, ebx   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator%=[3423] params(1) in file: /usr/include/sharp//primitives.sharp:1540:8: note:  
		    def operator%=(num : var)    := (value%=num);
		       ^

0 [0x0]: line: 1540 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            mod ecx, ebx -> ebx   
9 [0x9]:            rmov adx, ebx   
10 [0xa]:            returnobj   
11 [0xb]:            ret   


overload function: std#double.operator&=[3424] params(1) in file: /usr/include/sharp//primitives.sharp:1542:8: note:  
		    def operator&=(num : ulong)  := (value&=num.value);
		       ^

0 [0x0]: line: 1542 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator&=[3425] params(1) in file: /usr/include/sharp//primitives.sharp:1543:8: note:  
		    def operator&=(num : long)   := (value&=num.value);
		       ^

0 [0x0]: line: 1543 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator&=[3426] params(1) in file: /usr/include/sharp//primitives.sharp:1544:8: note:  
		    def operator&=(num : uint)   := (value&=num.value);
		       ^

0 [0x0]: line: 1544 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator&=[3427] params(1) in file: /usr/include/sharp//primitives.sharp:1545:8: note:  
		    def operator&=(num : int)    := (value&=num.value);
		       ^

0 [0x0]: line: 1545 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator&=[3428] params(1) in file: /usr/include/sharp//primitives.sharp:1546:8: note:  
		    def operator&=(num : ushort) := (value&=num.value);
		       ^

0 [0x0]: line: 1546 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator&=[3429] params(1) in file: /usr/include/sharp//primitives.sharp:1547:8: note:  
		    def operator&=(num : short)  := (value&=num.value);
		       ^

0 [0x0]: line: 1547 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator&=[3430] params(1) in file: /usr/include/sharp//primitives.sharp:1548:8: note:  
		    def operator&=(num : uchar)  := (value&=num.value);
		       ^

0 [0x0]: line: 1548 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator&=[3431] params(1) in file: /usr/include/sharp//primitives.sharp:1549:8: note:  
		    def operator&=(num : char)   := (value&=num.value);
		       ^

0 [0x0]: line: 1549 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator&=[3432] params(1) in file: /usr/include/sharp//primitives.sharp:1550:8: note:  
		    def operator&=(num : byte)   := (value&=num.value);
		       ^

0 [0x0]: line: 1550 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator&=[3433] params(1) in file: /usr/include/sharp//primitives.sharp:1551:8: note:  
		    def operator&=(num : bool)   := (value&=num.value);
		       ^

0 [0x0]: line: 1551 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator&=[3434] params(1) in file: /usr/include/sharp//primitives.sharp:1552:8: note:  
		    def operator&=(num : double)   := (value&=num.value);
		       ^

0 [0x0]: line: 1552 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            and ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator&=[3435] params(1) in file: /usr/include/sharp//primitives.sharp:1553:8: note:  
		    def operator&=(num : var)    := (value&=num);
		       ^

0 [0x0]: line: 1553 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            and ecx, ebx   
9 [0x9]:            rmov adx, cmt   
10 [0xa]:            returnobj   
11 [0xb]:            ret   


overload function: std#double.operator|=[3436] params(1) in file: /usr/include/sharp//primitives.sharp:1555:8: note:  
		    def operator|=(num : ulong)  := (value|=num.value);
		       ^

0 [0x0]: line: 1555 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator|=[3437] params(1) in file: /usr/include/sharp//primitives.sharp:1556:8: note:  
		    def operator|=(num : long)   := (value|=num.value);
		       ^

0 [0x0]: line: 1556 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator|=[3438] params(1) in file: /usr/include/sharp//primitives.sharp:1557:8: note:  
		    def operator|=(num : uint)   := (value|=num.value);
		       ^

0 [0x0]: line: 1557 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator|=[3439] params(1) in file: /usr/include/sharp//primitives.sharp:1558:8: note:  
		    def operator|=(num : int)    := (value|=num.value);
		       ^

0 [0x0]: line: 1558 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator|=[3440] params(1) in file: /usr/include/sharp//primitives.sharp:1559:8: note:  
		    def operator|=(num : ushort) := (value|=num.value);
		       ^

0 [0x0]: line: 1559 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator|=[3441] params(1) in file: /usr/include/sharp//primitives.sharp:1560:8: note:  
		    def operator|=(num : short)  := (value|=num.value);
		       ^

0 [0x0]: line: 1560 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator|=[3442] params(1) in file: /usr/include/sharp//primitives.sharp:1561:8: note:  
		    def operator|=(num : uchar)  := (value|=num.value);
		       ^

0 [0x0]: line: 1561 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator|=[3443] params(1) in file: /usr/include/sharp//primitives.sharp:1562:8: note:  
		    def operator|=(num : char)   := (value|=num.value);
		       ^

0 [0x0]: line: 1562 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator|=[3444] params(1) in file: /usr/include/sharp//primitives.sharp:1563:8: note:  
		    def operator|=(num : byte)   := (value|=num.value);
		       ^

0 [0x0]: line: 1563 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator|=[3445] params(1) in file: /usr/include/sharp//primitives.sharp:1564:8: note:  
		    def operator|=(num : bool)   := (value|=num.value);
		       ^

0 [0x0]: line: 1564 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator|=[3446] params(1) in file: /usr/include/sharp//primitives.sharp:1565:8: note:  
		    def operator|=(num : double)   := (value|=num.value);
		       ^

0 [0x0]: line: 1565 movl 1   
1 [0x1]:            movn #0   
3 [0x3]:            movi #0, adx   
5 [0x5]:            iaload ebx, adx   
6 [0x6]:            rstore ebx   
7 [0x7]:            movl 0   
8 [0x8]:            movn #0   
10 [0xa]:            movi #0, adx   
12 [0xc]:            iaload ecx, adx   
13 [0xd]:            loadval ebx   
14 [0xe]:            or ecx, ebx   
15 [0xf]:            rmov adx, cmt   
16 [0x10]:            returnobj   
17 [0x11]:            ret   


overload function: std#double.operator|=[3447] params(1) in file: /usr/include/sharp//primitives.sharp:1566:8: note:  
		    def operator|=(num : var)    := (value|=num);
		       ^

0 [0x0]: line: 1566 ipushl #1   
1 [0x1]:            movl 0   
2 [0x2]:            movn #0   
4 [0x4]:            movi #0, adx   
6 [0x6]:            iaload ecx, adx   
7 [0x7]:            loadval ebx   
8 [0x8]:            or ecx, ebx   
9 [0x9]:            rmov adx, cmt   
10 [0xa]:            returnobj   
11 [0xb]:            ret   


constructor: std#double.double[3448] params(0) in file: /usr/include/sharp//primitives.sharp:1457:6: note:  
		class double base integer<var> {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @1906 // <std#integer<var>.integer>   
2 [0x2]:         ret   


function: platform#build.is_windows[3449] params(0) in file: /usr/include/sharp//platform//build.sharp:9:15: note:  
		    static def is_windows() : var {
		              ^

0 [0x0]: line: 10 movg @36 // @platform#build   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          newstr @58 // win   
5 [0x5]:          call @1976 // <std#string.operator==>   
6 [0x6]:          loadval ebx   
7 [0x7]:          return_val ebx   
8 [0x8]:          ret   


function: platform#build.is_linux[3450] params(0) in file: /usr/include/sharp//platform//build.sharp:13:15: note:  
		    static def is_linux() : var {
		              ^

0 [0x0]: line: 14 movg @36 // @platform#build   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          newstr @59 // posix   
5 [0x5]:          call @1976 // <std#string.operator==>   
6 [0x6]:          loadval ebx   
7 [0x7]:          return_val ebx   
8 [0x8]:          ret   


constructor: platform#build.build[3451] params(0) in file: /usr/include/sharp//platform//build.sharp:3:6: note:  
		class build {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


function: platform#__srt_global.load_library[3452] params(1) in file: /usr/include/sharp//platform//dl.sharp:5:4: note:  
		def load_library(name: string) {
		   ^

0 [0x0]: line: 6 pushl 0   
1 [0x1]:         call @3460 // <platform.kernel#platform.load_library>   
2 [0x2]:         ret   


function: platform#__srt_global.free_library[3453] params(1) in file: /usr/include/sharp//platform//dl.sharp:9:4: note:  
		def free_library(name: string): var {
		   ^

0 [0x0]: line: 10 pushl 0   
1 [0x1]:          call @3461 // <platform.kernel#platform.free_library>   
2 [0x2]:          loadval ebx   
3 [0x3]:          return_val ebx   
4 [0x4]:          ret   


function: platform#__srt_global.link[3454] params(2) in file: /usr/include/sharp//platform//dl.sharp:13:4: note:  
		def link(name: string, library: string): var {
		   ^

0 [0x0]: line: 14 pushl 0   
1 [0x1]:          pushl 1   
2 [0x2]:          call @3462 // <platform.kernel#platform.link_func>   
3 [0x3]:          loadval ebx   
4 [0x4]:          return_val ebx   
5 [0x5]:          ret   


constructor: platform.kernel#stack_state.stack_state[3455] params(0) in file: /usr/include/sharp//platform//kernel//stack_state.sharp:3:6: note:  
		class stack_state {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


function: platform.kernel#platform.tls_init[3456] params(0) in file: /usr/include/sharp//platform//kernel//platform.sharp:13:15: note:  
		    static def tls_init() {}
		              ^

0 [0x0]: line: 13 ret   


function: platform.kernel#platform.static_init[3457] params(0) in file: /usr/include/sharp//platform//kernel//platform.sharp:14:23: note:  
		    private static def static_init() {}
		                      ^

0 [0x0]: line: 14 new_class @0 // std#__srt_global   
1 [0x1]:          mov64 adx, adx   
2 [0x2]:          movg @10 // @std.io.task#job_state   
3 [0x3]:          movn #0   
5 [0x5]:          popobj   
6 [0x6]:          newstr @90 // created   
7 [0x7]:          movg @10 // @std.io.task#job_state   
8 [0x8]:          movn #0   
10 [0xa]:          movn #0   
12 [0xc]:          popobj   
13 [0xd]:          movi #-1, ebx   
15 [0xf]:          movg @10 // @std.io.task#job_state   
16 [0x10]:          movn #0   
18 [0x12]:          movn #1   
20 [0x14]:          movi #0, adx   
22 [0x16]:          rmov adx, ebx   
23 [0x17]:          new_class @0 // std#__srt_global   
24 [0x18]:          mov64 adx, adx   
25 [0x19]:          movg @10 // @std.io.task#job_state   
26 [0x1a]:          movn #1   
28 [0x1c]:          popobj   
29 [0x1d]:          newstr @91 // active   
30 [0x1e]:          movg @10 // @std.io.task#job_state   
31 [0x1f]:          movn #1   
33 [0x21]:          movn #0   
35 [0x23]:          popobj   
36 [0x24]:          movi #0, ebx   
38 [0x26]:          movg @10 // @std.io.task#job_state   
39 [0x27]:          movn #1   
41 [0x29]:          movn #1   
43 [0x2b]:          movi #0, adx   
45 [0x2d]:          rmov adx, ebx   
46 [0x2e]:          new_class @0 // std#__srt_global   
47 [0x2f]:          mov64 adx, adx   
48 [0x30]:          movg @10 // @std.io.task#job_state   
49 [0x31]:          movn #2   
51 [0x33]:          popobj   
52 [0x34]:          newstr @92 // completed   
53 [0x35]:          movg @10 // @std.io.task#job_state   
54 [0x36]:          movn #2   
56 [0x38]:          movn #0   
58 [0x3a]:          popobj   
59 [0x3b]:          movi #1, ebx   
61 [0x3d]:          movg @10 // @std.io.task#job_state   
62 [0x3e]:          movn #2   
64 [0x40]:          movn #1   
66 [0x42]:          movi #0, adx   
68 [0x44]:          rmov adx, ebx   
69 [0x45]:          new_class @0 // std#__srt_global   
70 [0x46]:          mov64 adx, adx   
71 [0x47]:          movg @10 // @std.io.task#job_state   
72 [0x48]:          movn #3   
74 [0x4a]:          popobj   
75 [0x4b]:          newstr @93 // cancelled   
76 [0x4c]:          movg @10 // @std.io.task#job_state   
77 [0x4d]:          movn #3   
79 [0x4f]:          movn #0   
81 [0x51]:          popobj   
82 [0x52]:          movi #2, ebx   
84 [0x54]:          movg @10 // @std.io.task#job_state   
85 [0x55]:          movn #3   
87 [0x57]:          movn #1   
89 [0x59]:          movi #0, adx   
91 [0x5b]:          rmov adx, ebx   
92 [0x5c]:          new_class @0 // std#__srt_global   
93 [0x5d]:          movu32 adx, adx   
94 [0x5e]:          movg @13 // @std.io#thread_priority   
95 [0x5f]:          movn #0   
97 [0x61]:          popobj   
98 [0x62]:          newstr @94 // min_priority   
99 [0x63]:          movg @13 // @std.io#thread_priority   
100 [0x64]:          movn #0   
102 [0x66]:          movn #0   
104 [0x68]:          popobj   
105 [0x69]:          movi #1, ebx   
107 [0x6b]:          movg @13 // @std.io#thread_priority   
108 [0x6c]:          movn #0   
110 [0x6e]:          movn #1   
112 [0x70]:          movi #0, adx   
114 [0x72]:          rmov adx, ebx   
115 [0x73]:          new_class @0 // std#__srt_global   
116 [0x74]:          movu32 adx, adx   
117 [0x75]:          movg @13 // @std.io#thread_priority   
118 [0x76]:          movn #1   
120 [0x78]:          popobj   
121 [0x79]:          newstr @95 // norm_priority   
122 [0x7a]:          movg @13 // @std.io#thread_priority   
123 [0x7b]:          movn #1   
125 [0x7d]:          movn #0   
127 [0x7f]:          popobj   
128 [0x80]:          movi #4, ebx   
130 [0x82]:          movg @13 // @std.io#thread_priority   
131 [0x83]:          movn #1   
133 [0x85]:          movn #1   
135 [0x87]:          movi #0, adx   
137 [0x89]:          rmov adx, ebx   
138 [0x8a]:          new_class @0 // std#__srt_global   
139 [0x8b]:          movu32 adx, adx   
140 [0x8c]:          movg @13 // @std.io#thread_priority   
141 [0x8d]:          movn #2   
143 [0x8f]:          popobj   
144 [0x90]:          newstr @96 // max_priority   
145 [0x91]:          movg @13 // @std.io#thread_priority   
146 [0x92]:          movn #2   
148 [0x94]:          movn #0   
150 [0x96]:          popobj   
151 [0x97]:          movi #6, ebx   
153 [0x99]:          movg @13 // @std.io#thread_priority   
154 [0x9a]:          movn #2   
156 [0x9c]:          movn #1   
158 [0x9e]:          movi #0, adx   
160 [0xa0]:          rmov adx, ebx   
161 [0xa1]:          new_class @0 // std#__srt_global   
162 [0xa2]:          sub adx, adx -> adx   
163 [0xa3]:          movg @17 // @std.io#thread_result   
164 [0xa4]:          movn #0   
166 [0xa6]:          popobj   
167 [0xa7]:          newstr @97 // result_ok   
168 [0xa8]:          movg @17 // @std.io#thread_result   
169 [0xa9]:          movn #0   
171 [0xab]:          movn #0   
173 [0xad]:          popobj   
174 [0xae]:          movi #0, ebx   
176 [0xb0]:          movg @17 // @std.io#thread_result   
177 [0xb1]:          movn #0   
179 [0xb3]:          movn #1   
181 [0xb5]:          movi #0, adx   
183 [0xb7]:          rmov adx, ebx   
184 [0xb8]:          new_class @0 // std#__srt_global   
185 [0xb9]:          sub adx, adx -> adx   
186 [0xba]:          movg @17 // @std.io#thread_result   
187 [0xbb]:          movn #1   
189 [0xbd]:          popobj   
190 [0xbe]:          newstr @98 // result_ill_thread_start   
191 [0xbf]:          movg @17 // @std.io#thread_result   
192 [0xc0]:          movn #1   
194 [0xc2]:          movn #0   
196 [0xc4]:          popobj   
197 [0xc5]:          movi #1, ebx   
199 [0xc7]:          movg @17 // @std.io#thread_result   
200 [0xc8]:          movn #1   
202 [0xca]:          movn #1   
204 [0xcc]:          movi #0, adx   
206 [0xce]:          rmov adx, ebx   
207 [0xcf]:          new_class @0 // std#__srt_global   
208 [0xd0]:          sub adx, adx -> adx   
209 [0xd1]:          movg @17 // @std.io#thread_result   
210 [0xd2]:          movn #2   
212 [0xd4]:          popobj   
213 [0xd5]:          newstr @99 // result_thread_running   
214 [0xd6]:          movg @17 // @std.io#thread_result   
215 [0xd7]:          movn #2   
217 [0xd9]:          movn #0   
219 [0xdb]:          popobj   
220 [0xdc]:          movi #2, ebx   
222 [0xde]:          movg @17 // @std.io#thread_result   
223 [0xdf]:          movn #2   
225 [0xe1]:          movn #1   
227 [0xe3]:          movi #0, adx   
229 [0xe5]:          rmov adx, ebx   
230 [0xe6]:          new_class @0 // std#__srt_global   
231 [0xe7]:          sub adx, adx -> adx   
232 [0xe8]:          movg @17 // @std.io#thread_result   
233 [0xe9]:          movn #3   
235 [0xeb]:          popobj   
236 [0xec]:          newstr @100 // result_thread_terminated   
237 [0xed]:          movg @17 // @std.io#thread_result   
238 [0xee]:          movn #3   
240 [0xf0]:          movn #0   
242 [0xf2]:          popobj   
243 [0xf3]:          movi #3, ebx   
245 [0xf5]:          movg @17 // @std.io#thread_result   
246 [0xf6]:          movn #3   
248 [0xf8]:          movn #1   
250 [0xfa]:          movi #0, adx   
252 [0xfc]:          rmov adx, ebx   
253 [0xfd]:          new_class @0 // std#__srt_global   
254 [0xfe]:          sub adx, adx -> adx   
255 [0xff]:          movg @17 // @std.io#thread_result   
256 [0x100]:          movn #4   
258 [0x102]:          popobj   
259 [0x103]:          newstr @101 // result_invalid_stack_size   
260 [0x104]:          movg @17 // @std.io#thread_result   
261 [0x105]:          movn #4   
263 [0x107]:          movn #0   
265 [0x109]:          popobj   
266 [0x10a]:          movi #4, ebx   
268 [0x10c]:          movg @17 // @std.io#thread_result   
269 [0x10d]:          movn #4   
271 [0x10f]:          movn #1   
273 [0x111]:          movi #0, adx   
275 [0x113]:          rmov adx, ebx   
276 [0x114]:          new_class @0 // std#__srt_global   
277 [0x115]:          sub adx, adx -> adx   
278 [0x116]:          movg @17 // @std.io#thread_result   
279 [0x117]:          movn #5   
281 [0x119]:          popobj   
282 [0x11a]:          newstr @102 // result_thread_not_started   
283 [0x11b]:          movg @17 // @std.io#thread_result   
284 [0x11c]:          movn #5   
286 [0x11e]:          movn #0   
288 [0x120]:          popobj   
289 [0x121]:          movi #5, ebx   
291 [0x123]:          movg @17 // @std.io#thread_result   
292 [0x124]:          movn #5   
294 [0x126]:          movn #1   
296 [0x128]:          movi #0, adx   
298 [0x12a]:          rmov adx, ebx   
299 [0x12b]:          new_class @0 // std#__srt_global   
300 [0x12c]:          sub adx, adx -> adx   
301 [0x12d]:          movg @17 // @std.io#thread_result   
302 [0x12e]:          movn #6   
304 [0x130]:          popobj   
305 [0x131]:          newstr @103 // result_ill_thread_join   
306 [0x132]:          movg @17 // @std.io#thread_result   
307 [0x133]:          movn #6   
309 [0x135]:          movn #0   
311 [0x137]:          popobj   
312 [0x138]:          movi #6, ebx   
314 [0x13a]:          movg @17 // @std.io#thread_result   
315 [0x13b]:          movn #6   
317 [0x13d]:          movn #1   
319 [0x13f]:          movi #0, adx   
321 [0x141]:          rmov adx, ebx   
322 [0x142]:          new_class @0 // std#__srt_global   
323 [0x143]:          sub adx, adx -> adx   
324 [0x144]:          movg @17 // @std.io#thread_result   
325 [0x145]:          movn #7   
327 [0x147]:          popobj   
328 [0x148]:          newstr @104 // result_thread_join_failed   
329 [0x149]:          movg @17 // @std.io#thread_result   
330 [0x14a]:          movn #7   
332 [0x14c]:          movn #0   
334 [0x14e]:          popobj   
335 [0x14f]:          movi #7, ebx   
337 [0x151]:          movg @17 // @std.io#thread_result   
338 [0x152]:          movn #7   
340 [0x154]:          movn #1   
342 [0x156]:          movi #0, adx   
344 [0x158]:          rmov adx, ebx   
345 [0x159]:          new_class @0 // std#__srt_global   
346 [0x15a]:          sub adx, adx -> adx   
347 [0x15b]:          movg @17 // @std.io#thread_result   
348 [0x15c]:          movn #8   
350 [0x15e]:          popobj   
351 [0x15f]:          newstr @105 // result_ill_thread_interrupt   
352 [0x160]:          movg @17 // @std.io#thread_result   
353 [0x161]:          movn #8   
355 [0x163]:          movn #0   
357 [0x165]:          popobj   
358 [0x166]:          movi #8, ebx   
360 [0x168]:          movg @17 // @std.io#thread_result   
361 [0x169]:          movn #8   
363 [0x16b]:          movn #1   
365 [0x16d]:          movi #0, adx   
367 [0x16f]:          rmov adx, ebx   
368 [0x170]:          new_class @0 // std#__srt_global   
369 [0x171]:          sub adx, adx -> adx   
370 [0x172]:          movg @17 // @std.io#thread_result   
371 [0x173]:          movn #9   
373 [0x175]:          popobj   
374 [0x176]:          newstr @106 // result_thread_interrupt_failed   
375 [0x177]:          movg @17 // @std.io#thread_result   
376 [0x178]:          movn #9   
378 [0x17a]:          movn #0   
380 [0x17c]:          popobj   
381 [0x17d]:          movi #9, ebx   
383 [0x17f]:          movg @17 // @std.io#thread_result   
384 [0x180]:          movn #9   
386 [0x182]:          movn #1   
388 [0x184]:          movi #0, adx   
390 [0x186]:          rmov adx, ebx   
391 [0x187]:          new_class @0 // std#__srt_global   
392 [0x188]:          sub adx, adx -> adx   
393 [0x189]:          movg @17 // @std.io#thread_result   
394 [0x18a]:          movn #10   
396 [0x18c]:          popobj   
397 [0x18d]:          newstr @107 // result_ill_thread_destroy   
398 [0x18e]:          movg @17 // @std.io#thread_result   
399 [0x18f]:          movn #10   
401 [0x191]:          movn #0   
403 [0x193]:          popobj   
404 [0x194]:          movi #10, ebx   
406 [0x196]:          movg @17 // @std.io#thread_result   
407 [0x197]:          movn #10   
409 [0x199]:          movn #1   
411 [0x19b]:          movi #0, adx   
413 [0x19d]:          rmov adx, ebx   
414 [0x19e]:          new_class @0 // std#__srt_global   
415 [0x19f]:          sub adx, adx -> adx   
416 [0x1a0]:          movg @17 // @std.io#thread_result   
417 [0x1a1]:          movn #11   
419 [0x1a3]:          popobj   
420 [0x1a4]:          newstr @108 // result_thread_create_failed   
421 [0x1a5]:          movg @17 // @std.io#thread_result   
422 [0x1a6]:          movn #11   
424 [0x1a8]:          movn #0   
426 [0x1aa]:          popobj   
427 [0x1ab]:          movi #11, ebx   
429 [0x1ad]:          movg @17 // @std.io#thread_result   
430 [0x1ae]:          movn #11   
432 [0x1b0]:          movn #1   
434 [0x1b2]:          movi #0, adx   
436 [0x1b4]:          rmov adx, ebx   
437 [0x1b5]:          new_class @0 // std#__srt_global   
438 [0x1b6]:          sub adx, adx -> adx   
439 [0x1b7]:          movg @17 // @std.io#thread_result   
440 [0x1b8]:          movn #12   
442 [0x1ba]:          popobj   
443 [0x1bb]:          newstr @109 // result_no_thread_id   
444 [0x1bc]:          movg @17 // @std.io#thread_result   
445 [0x1bd]:          movn #12   
447 [0x1bf]:          movn #0   
449 [0x1c1]:          popobj   
450 [0x1c2]:          movi #12, ebx   
452 [0x1c4]:          movg @17 // @std.io#thread_result   
453 [0x1c5]:          movn #12   
455 [0x1c7]:          movn #1   
457 [0x1c9]:          movi #0, adx   
459 [0x1cb]:          rmov adx, ebx   
460 [0x1cc]:          new_class @0 // std#__srt_global   
461 [0x1cd]:          sub adx, adx -> adx   
462 [0x1ce]:          movg @17 // @std.io#thread_result   
463 [0x1cf]:          movn #13   
465 [0x1d1]:          popobj   
466 [0x1d2]:          newstr @110 // result_thread_destroy_failed   
467 [0x1d3]:          movg @17 // @std.io#thread_result   
468 [0x1d4]:          movn #13   
470 [0x1d6]:          movn #0   
472 [0x1d8]:          popobj   
473 [0x1d9]:          movi #13, ebx   
475 [0x1db]:          movg @17 // @std.io#thread_result   
476 [0x1dc]:          movn #13   
478 [0x1de]:          movn #1   
480 [0x1e0]:          movi #0, adx   
482 [0x1e2]:          rmov adx, ebx   
483 [0x1e3]:          new_class @0 // std#__srt_global   
484 [0x1e4]:          sub adx, adx -> adx   
485 [0x1e5]:          movg @17 // @std.io#thread_result   
486 [0x1e6]:          movn #14   
488 [0x1e8]:          popobj   
489 [0x1e9]:          newstr @111 // result_ill_priority_set   
490 [0x1ea]:          movg @17 // @std.io#thread_result   
491 [0x1eb]:          movn #14   
493 [0x1ed]:          movn #0   
495 [0x1ef]:          popobj   
496 [0x1f0]:          movi #14, ebx   
498 [0x1f2]:          movg @17 // @std.io#thread_result   
499 [0x1f3]:          movn #14   
501 [0x1f5]:          movn #1   
503 [0x1f7]:          movi #0, adx   
505 [0x1f9]:          rmov adx, ebx   
506 [0x1fa]:          new_class @0 // std#__srt_global   
507 [0x1fb]:          sub adx, adx -> adx   
508 [0x1fc]:          movg @17 // @std.io#thread_result   
509 [0x1fd]:          movn #15   
511 [0x1ff]:          popobj   
512 [0x200]:          newstr @112 // result_ill_thread_suspend   
513 [0x201]:          movg @17 // @std.io#thread_result   
514 [0x202]:          movn #15   
516 [0x204]:          movn #0   
518 [0x206]:          popobj   
519 [0x207]:          movi #15, ebx   
521 [0x209]:          movg @17 // @std.io#thread_result   
522 [0x20a]:          movn #15   
524 [0x20c]:          movn #1   
526 [0x20e]:          movi #0, adx   
528 [0x210]:          rmov adx, ebx   
529 [0x211]:          new_class @0 // std#__srt_global   
530 [0x212]:          sub adx, adx -> adx   
531 [0x213]:          movg @17 // @std.io#thread_result   
532 [0x214]:          movn #16   
534 [0x216]:          popobj   
535 [0x217]:          newstr @113 // result_max_spin   
536 [0x218]:          movg @17 // @std.io#thread_result   
537 [0x219]:          movn #16   
539 [0x21b]:          movn #0   
541 [0x21d]:          popobj   
542 [0x21e]:          movi #255, ebx   
544 [0x220]:          movg @17 // @std.io#thread_result   
545 [0x221]:          movn #16   
547 [0x223]:          movn #1   
549 [0x225]:          movi #0, adx   
551 [0x227]:          rmov adx, ebx   
552 [0x228]:          new_class @0 // std#__srt_global   
553 [0x229]:          sub adx, adx -> adx   
554 [0x22a]:          movg @17 // @std.io#thread_result   
555 [0x22b]:          movn #17   
557 [0x22d]:          popobj   
558 [0x22e]:          newstr @114 // enums   
559 [0x22f]:          movg @17 // @std.io#thread_result   
560 [0x230]:          movn #17   
562 [0x232]:          movn #0   
564 [0x234]:          popobj   
565 [0x235]:          movi #256, ebx   
567 [0x237]:          movg @17 // @std.io#thread_result   
568 [0x238]:          movn #17   
570 [0x23a]:          movn #1   
572 [0x23c]:          movi #0, adx   
574 [0x23e]:          rmov adx, ebx   
575 [0x23f]:          new_class @0 // std#__srt_global   
576 [0x240]:          pushobj   
577 [0x241]:          movg @45 // @std.reflect#data_type   
578 [0x242]:          movn #0   
580 [0x244]:          popobj   
581 [0x245]:          newstr @115 // int8   
582 [0x246]:          movg @45 // @std.reflect#data_type   
583 [0x247]:          movn #0   
585 [0x249]:          movn #0   
587 [0x24b]:          popobj   
588 [0x24c]:          movi #0, ebx   
590 [0x24e]:          movg @45 // @std.reflect#data_type   
591 [0x24f]:          movn #0   
593 [0x251]:          movn #1   
595 [0x253]:          movi #0, adx   
597 [0x255]:          rmov adx, ebx   
598 [0x256]:          new_class @0 // std#__srt_global   
599 [0x257]:          pushobj   
600 [0x258]:          movg @45 // @std.reflect#data_type   
601 [0x259]:          movn #1   
603 [0x25b]:          popobj   
604 [0x25c]:          newstr @116 // int16   
605 [0x25d]:          movg @45 // @std.reflect#data_type   
606 [0x25e]:          movn #1   
608 [0x260]:          movn #0   
610 [0x262]:          popobj   
611 [0x263]:          movi #1, ebx   
613 [0x265]:          movg @45 // @std.reflect#data_type   
614 [0x266]:          movn #1   
616 [0x268]:          movn #1   
618 [0x26a]:          movi #0, adx   
620 [0x26c]:          rmov adx, ebx   
621 [0x26d]:          new_class @0 // std#__srt_global   
622 [0x26e]:          pushobj   
623 [0x26f]:          movg @45 // @std.reflect#data_type   
624 [0x270]:          movn #2   
626 [0x272]:          popobj   
627 [0x273]:          newstr @117 // int32   
628 [0x274]:          movg @45 // @std.reflect#data_type   
629 [0x275]:          movn #2   
631 [0x277]:          movn #0   
633 [0x279]:          popobj   
634 [0x27a]:          movi #2, ebx   
636 [0x27c]:          movg @45 // @std.reflect#data_type   
637 [0x27d]:          movn #2   
639 [0x27f]:          movn #1   
641 [0x281]:          movi #0, adx   
643 [0x283]:          rmov adx, ebx   
644 [0x284]:          new_class @0 // std#__srt_global   
645 [0x285]:          pushobj   
646 [0x286]:          movg @45 // @std.reflect#data_type   
647 [0x287]:          movn #3   
649 [0x289]:          popobj   
650 [0x28a]:          newstr @118 // int64   
651 [0x28b]:          movg @45 // @std.reflect#data_type   
652 [0x28c]:          movn #3   
654 [0x28e]:          movn #0   
656 [0x290]:          popobj   
657 [0x291]:          movi #3, ebx   
659 [0x293]:          movg @45 // @std.reflect#data_type   
660 [0x294]:          movn #3   
662 [0x296]:          movn #1   
664 [0x298]:          movi #0, adx   
666 [0x29a]:          rmov adx, ebx   
667 [0x29b]:          new_class @0 // std#__srt_global   
668 [0x29c]:          pushobj   
669 [0x29d]:          movg @45 // @std.reflect#data_type   
670 [0x29e]:          movn #4   
672 [0x2a0]:          popobj   
673 [0x2a1]:          newstr @119 // uint8   
674 [0x2a2]:          movg @45 // @std.reflect#data_type   
675 [0x2a3]:          movn #4   
677 [0x2a5]:          movn #0   
679 [0x2a7]:          popobj   
680 [0x2a8]:          movi #4, ebx   
682 [0x2aa]:          movg @45 // @std.reflect#data_type   
683 [0x2ab]:          movn #4   
685 [0x2ad]:          movn #1   
687 [0x2af]:          movi #0, adx   
689 [0x2b1]:          rmov adx, ebx   
690 [0x2b2]:          new_class @0 // std#__srt_global   
691 [0x2b3]:          pushobj   
692 [0x2b4]:          movg @45 // @std.reflect#data_type   
693 [0x2b5]:          movn #5   
695 [0x2b7]:          popobj   
696 [0x2b8]:          newstr @120 // uint16   
697 [0x2b9]:          movg @45 // @std.reflect#data_type   
698 [0x2ba]:          movn #5   
700 [0x2bc]:          movn #0   
702 [0x2be]:          popobj   
703 [0x2bf]:          movi #5, ebx   
705 [0x2c1]:          movg @45 // @std.reflect#data_type   
706 [0x2c2]:          movn #5   
708 [0x2c4]:          movn #1   
710 [0x2c6]:          movi #0, adx   
712 [0x2c8]:          rmov adx, ebx   
713 [0x2c9]:          new_class @0 // std#__srt_global   
714 [0x2ca]:          pushobj   
715 [0x2cb]:          movg @45 // @std.reflect#data_type   
716 [0x2cc]:          movn #6   
718 [0x2ce]:          popobj   
719 [0x2cf]:          newstr @121 // uint32   
720 [0x2d0]:          movg @45 // @std.reflect#data_type   
721 [0x2d1]:          movn #6   
723 [0x2d3]:          movn #0   
725 [0x2d5]:          popobj   
726 [0x2d6]:          movi #6, ebx   
728 [0x2d8]:          movg @45 // @std.reflect#data_type   
729 [0x2d9]:          movn #6   
731 [0x2db]:          movn #1   
733 [0x2dd]:          movi #0, adx   
735 [0x2df]:          rmov adx, ebx   
736 [0x2e0]:          new_class @0 // std#__srt_global   
737 [0x2e1]:          pushobj   
738 [0x2e2]:          movg @45 // @std.reflect#data_type   
739 [0x2e3]:          movn #7   
741 [0x2e5]:          popobj   
742 [0x2e6]:          newstr @122 // uint64   
743 [0x2e7]:          movg @45 // @std.reflect#data_type   
744 [0x2e8]:          movn #7   
746 [0x2ea]:          movn #0   
748 [0x2ec]:          popobj   
749 [0x2ed]:          movi #7, ebx   
751 [0x2ef]:          movg @45 // @std.reflect#data_type   
752 [0x2f0]:          movn #7   
754 [0x2f2]:          movn #1   
756 [0x2f4]:          movi #0, adx   
758 [0x2f6]:          rmov adx, ebx   
759 [0x2f7]:          new_class @0 // std#__srt_global   
760 [0x2f8]:          pushobj   
761 [0x2f9]:          movg @45 // @std.reflect#data_type   
762 [0x2fa]:          movn #8   
764 [0x2fc]:          popobj   
765 [0x2fd]:          newstr @123 // fnptr   
766 [0x2fe]:          movg @45 // @std.reflect#data_type   
767 [0x2ff]:          movn #8   
769 [0x301]:          movn #0   
771 [0x303]:          popobj   
772 [0x304]:          movi #8, ebx   
774 [0x306]:          movg @45 // @std.reflect#data_type   
775 [0x307]:          movn #8   
777 [0x309]:          movn #1   
779 [0x30b]:          movi #0, adx   
781 [0x30d]:          rmov adx, ebx   
782 [0x30e]:          new_class @0 // std#__srt_global   
783 [0x30f]:          pushobj   
784 [0x310]:          movg @45 // @std.reflect#data_type   
785 [0x311]:          movn #9   
787 [0x313]:          popobj   
788 [0x314]:          newstr @124 // _var   
789 [0x315]:          movg @45 // @std.reflect#data_type   
790 [0x316]:          movn #9   
792 [0x318]:          movn #0   
794 [0x31a]:          popobj   
795 [0x31b]:          movi #9, ebx   
797 [0x31d]:          movg @45 // @std.reflect#data_type   
798 [0x31e]:          movn #9   
800 [0x320]:          movn #1   
802 [0x322]:          movi #0, adx   
804 [0x324]:          rmov adx, ebx   
805 [0x325]:          new_class @0 // std#__srt_global   
806 [0x326]:          pushobj   
807 [0x327]:          movg @45 // @std.reflect#data_type   
808 [0x328]:          movn #10   
810 [0x32a]:          popobj   
811 [0x32b]:          newstr @125 // _object   
812 [0x32c]:          movg @45 // @std.reflect#data_type   
813 [0x32d]:          movn #10   
815 [0x32f]:          movn #0   
817 [0x331]:          popobj   
818 [0x332]:          movi #10, ebx   
820 [0x334]:          movg @45 // @std.reflect#data_type   
821 [0x335]:          movn #10   
823 [0x337]:          movn #1   
825 [0x339]:          movi #0, adx   
827 [0x33b]:          rmov adx, ebx   
828 [0x33c]:          new_class @0 // std#__srt_global   
829 [0x33d]:          pushobj   
830 [0x33e]:          movg @45 // @std.reflect#data_type   
831 [0x33f]:          movn #11   
833 [0x341]:          popobj   
834 [0x342]:          newstr @126 // _class   
835 [0x343]:          movg @45 // @std.reflect#data_type   
836 [0x344]:          movn #11   
838 [0x346]:          movn #0   
840 [0x348]:          popobj   
841 [0x349]:          movi #11, ebx   
843 [0x34b]:          movg @45 // @std.reflect#data_type   
844 [0x34c]:          movn #11   
846 [0x34e]:          movn #1   
848 [0x350]:          movi #0, adx   
850 [0x352]:          rmov adx, ebx   
851 [0x353]:          new_class @0 // std#__srt_global   
852 [0x354]:          pushobj   
853 [0x355]:          movg @45 // @std.reflect#data_type   
854 [0x356]:          movn #12   
856 [0x358]:          popobj   
857 [0x359]:          newstr @127 // method   
858 [0x35a]:          movg @45 // @std.reflect#data_type   
859 [0x35b]:          movn #12   
861 [0x35d]:          movn #0   
863 [0x35f]:          popobj   
864 [0x360]:          movi #12, ebx   
866 [0x362]:          movg @45 // @std.reflect#data_type   
867 [0x363]:          movn #12   
869 [0x365]:          movn #1   
871 [0x367]:          movi #0, adx   
873 [0x369]:          rmov adx, ebx   
874 [0x36a]:          new_class @0 // std#__srt_global   
875 [0x36b]:          pushobj   
876 [0x36c]:          movg @45 // @std.reflect#data_type   
877 [0x36d]:          movn #13   
879 [0x36f]:          popobj   
880 [0x370]:          newstr @128 // _nil   
881 [0x371]:          movg @45 // @std.reflect#data_type   
882 [0x372]:          movn #13   
884 [0x374]:          movn #0   
886 [0x376]:          popobj   
887 [0x377]:          movi #13, ebx   
889 [0x379]:          movg @45 // @std.reflect#data_type   
890 [0x37a]:          movn #13   
892 [0x37c]:          movn #1   
894 [0x37e]:          movi #0, adx   
896 [0x380]:          rmov adx, ebx   
897 [0x381]:          new_class @0 // std#__srt_global   
898 [0x382]:          pushobj   
899 [0x383]:          movg @45 // @std.reflect#data_type   
900 [0x384]:          movn #14   
902 [0x386]:          popobj   
903 [0x387]:          newstr @129 // any   
904 [0x388]:          movg @45 // @std.reflect#data_type   
905 [0x389]:          movn #14   
907 [0x38b]:          movn #0   
909 [0x38d]:          popobj   
910 [0x38e]:          movi #14, ebx   
912 [0x390]:          movg @45 // @std.reflect#data_type   
913 [0x391]:          movn #14   
915 [0x393]:          movn #1   
917 [0x395]:          movi #0, adx   
919 [0x397]:          rmov adx, ebx   
920 [0x398]:          new_class @0 // std#__srt_global   
921 [0x399]:          pushobj   
922 [0x39a]:          movg @45 // @std.reflect#data_type   
923 [0x39b]:          movn #15   
925 [0x39d]:          popobj   
926 [0x39e]:          newstr @130 // untyped   
927 [0x39f]:          movg @45 // @std.reflect#data_type   
928 [0x3a0]:          movn #15   
930 [0x3a2]:          movn #0   
932 [0x3a4]:          popobj   
933 [0x3a5]:          movi #15, ebx   
935 [0x3a7]:          movg @45 // @std.reflect#data_type   
936 [0x3a8]:          movn #15   
938 [0x3aa]:          movn #1   
940 [0x3ac]:          movi #0, adx   
942 [0x3ae]:          rmov adx, ebx   
943 [0x3af]:          new_class @0 // std#__srt_global   
944 [0x3b0]:          pushobj   
945 [0x3b1]:          movg @45 // @std.reflect#data_type   
946 [0x3b2]:          movn #16   
948 [0x3b4]:          popobj   
949 [0x3b5]:          newstr @131 // undefined   
950 [0x3b6]:          movg @45 // @std.reflect#data_type   
951 [0x3b7]:          movn #16   
953 [0x3b9]:          movn #0   
955 [0x3bb]:          popobj   
956 [0x3bc]:          movi #16, ebx   
958 [0x3be]:          movg @45 // @std.reflect#data_type   
959 [0x3bf]:          movn #16   
961 [0x3c1]:          movn #1   
963 [0x3c3]:          movi #0, adx   
965 [0x3c5]:          rmov adx, ebx   
966 [0x3c6]:          new_class @0 // std#__srt_global   
967 [0x3c7]:          new_class @0 // std#__srt_global   
968 [0x3c8]:          movg @48 // @std.reflect#property_type   
969 [0x3c9]:          movn #0   
971 [0x3cb]:          popobj   
972 [0x3cc]:          newstr @132 // class_property   
973 [0x3cd]:          movg @48 // @std.reflect#property_type   
974 [0x3ce]:          movn #0   
976 [0x3d0]:          movn #0   
978 [0x3d2]:          popobj   
979 [0x3d3]:          movi #54474, ebx   
981 [0x3d5]:          movg @48 // @std.reflect#property_type   
982 [0x3d6]:          movn #0   
984 [0x3d8]:          movn #1   
986 [0x3da]:          movi #0, adx   
988 [0x3dc]:          rmov adx, ebx   
989 [0x3dd]:          new_class @0 // std#__srt_global   
990 [0x3de]:          new_class @0 // std#__srt_global   
991 [0x3df]:          movg @48 // @std.reflect#property_type   
992 [0x3e0]:          movn #1   
994 [0x3e2]:          popobj   
995 [0x3e3]:          newstr @133 // field_property   
996 [0x3e4]:          movg @48 // @std.reflect#property_type   
997 [0x3e5]:          movn #1   
999 [0x3e7]:          movn #0   
1001 [0x3e9]:          popobj   
1002 [0x3ea]:          movi #54475, ebx   
1004 [0x3ec]:          movg @48 // @std.reflect#property_type   
1005 [0x3ed]:          movn #1   
1007 [0x3ef]:          movn #1   
1009 [0x3f1]:          movi #0, adx   
1011 [0x3f3]:          rmov adx, ebx   
1012 [0x3f4]:          new_class @0 // std#__srt_global   
1013 [0x3f5]:          new_class @0 // std#__srt_global   
1014 [0x3f6]:          movg @48 // @std.reflect#property_type   
1015 [0x3f7]:          movn #2   
1017 [0x3f9]:          popobj   
1018 [0x3fa]:          newstr @134 // function_property   
1019 [0x3fb]:          movg @48 // @std.reflect#property_type   
1020 [0x3fc]:          movn #2   
1022 [0x3fe]:          movn #0   
1024 [0x400]:          popobj   
1025 [0x401]:          movi #54476, ebx   
1027 [0x403]:          movg @48 // @std.reflect#property_type   
1028 [0x404]:          movn #2   
1030 [0x406]:          movn #1   
1032 [0x408]:          movi #0, adx   
1034 [0x40a]:          rmov adx, ebx   
1035 [0x40b]:          new_class @0 // std#__srt_global   
1036 [0x40c]:          _ulck   
1037 [0x40d]:          movg @54 // @std#time_request   
1038 [0x40e]:          movn #0   
1040 [0x410]:          popobj   
1041 [0x411]:          newstr @135 // tm_seconds   
1042 [0x412]:          movg @54 // @std#time_request   
1043 [0x413]:          movn #0   
1045 [0x415]:          movn #0   
1047 [0x417]:          popobj   
1048 [0x418]:          movi #0, ebx   
1050 [0x41a]:          movg @54 // @std#time_request   
1051 [0x41b]:          movn #0   
1053 [0x41d]:          movn #1   
1055 [0x41f]:          movi #0, adx   
1057 [0x421]:          rmov adx, ebx   
1058 [0x422]:          new_class @0 // std#__srt_global   
1059 [0x423]:          _ulck   
1060 [0x424]:          movg @54 // @std#time_request   
1061 [0x425]:          movn #1   
1063 [0x427]:          popobj   
1064 [0x428]:          newstr @136 // tm_minutes   
1065 [0x429]:          movg @54 // @std#time_request   
1066 [0x42a]:          movn #1   
1068 [0x42c]:          movn #0   
1070 [0x42e]:          popobj   
1071 [0x42f]:          movi #1, ebx   
1073 [0x431]:          movg @54 // @std#time_request   
1074 [0x432]:          movn #1   
1076 [0x434]:          movn #1   
1078 [0x436]:          movi #0, adx   
1080 [0x438]:          rmov adx, ebx   
1081 [0x439]:          new_class @0 // std#__srt_global   
1082 [0x43a]:          _ulck   
1083 [0x43b]:          movg @54 // @std#time_request   
1084 [0x43c]:          movn #2   
1086 [0x43e]:          popobj   
1087 [0x43f]:          newstr @137 // tm_hour   
1088 [0x440]:          movg @54 // @std#time_request   
1089 [0x441]:          movn #2   
1091 [0x443]:          movn #0   
1093 [0x445]:          popobj   
1094 [0x446]:          movi #2, ebx   
1096 [0x448]:          movg @54 // @std#time_request   
1097 [0x449]:          movn #2   
1099 [0x44b]:          movn #1   
1101 [0x44d]:          movi #0, adx   
1103 [0x44f]:          rmov adx, ebx   
1104 [0x450]:          new_class @0 // std#__srt_global   
1105 [0x451]:          _ulck   
1106 [0x452]:          movg @54 // @std#time_request   
1107 [0x453]:          movn #3   
1109 [0x455]:          popobj   
1110 [0x456]:          newstr @138 // tm_mday   
1111 [0x457]:          movg @54 // @std#time_request   
1112 [0x458]:          movn #3   
1114 [0x45a]:          movn #0   
1116 [0x45c]:          popobj   
1117 [0x45d]:          movi #3, ebx   
1119 [0x45f]:          movg @54 // @std#time_request   
1120 [0x460]:          movn #3   
1122 [0x462]:          movn #1   
1124 [0x464]:          movi #0, adx   
1126 [0x466]:          rmov adx, ebx   
1127 [0x467]:          new_class @0 // std#__srt_global   
1128 [0x468]:          _ulck   
1129 [0x469]:          movg @54 // @std#time_request   
1130 [0x46a]:          movn #4   
1132 [0x46c]:          popobj   
1133 [0x46d]:          newstr @139 // tm_mon   
1134 [0x46e]:          movg @54 // @std#time_request   
1135 [0x46f]:          movn #4   
1137 [0x471]:          movn #0   
1139 [0x473]:          popobj   
1140 [0x474]:          movi #4, ebx   
1142 [0x476]:          movg @54 // @std#time_request   
1143 [0x477]:          movn #4   
1145 [0x479]:          movn #1   
1147 [0x47b]:          movi #0, adx   
1149 [0x47d]:          rmov adx, ebx   
1150 [0x47e]:          new_class @0 // std#__srt_global   
1151 [0x47f]:          _ulck   
1152 [0x480]:          movg @54 // @std#time_request   
1153 [0x481]:          movn #5   
1155 [0x483]:          popobj   
1156 [0x484]:          newstr @140 // tm_year   
1157 [0x485]:          movg @54 // @std#time_request   
1158 [0x486]:          movn #5   
1160 [0x488]:          movn #0   
1162 [0x48a]:          popobj   
1163 [0x48b]:          movi #5, ebx   
1165 [0x48d]:          movg @54 // @std#time_request   
1166 [0x48e]:          movn #5   
1168 [0x490]:          movn #1   
1170 [0x492]:          movi #0, adx   
1172 [0x494]:          rmov adx, ebx   
1173 [0x495]:          new_class @0 // std#__srt_global   
1174 [0x496]:          _ulck   
1175 [0x497]:          movg @54 // @std#time_request   
1176 [0x498]:          movn #6   
1178 [0x49a]:          popobj   
1179 [0x49b]:          newstr @141 // tm_wday   
1180 [0x49c]:          movg @54 // @std#time_request   
1181 [0x49d]:          movn #6   
1183 [0x49f]:          movn #0   
1185 [0x4a1]:          popobj   
1186 [0x4a2]:          movi #6, ebx   
1188 [0x4a4]:          movg @54 // @std#time_request   
1189 [0x4a5]:          movn #6   
1191 [0x4a7]:          movn #1   
1193 [0x4a9]:          movi #0, adx   
1195 [0x4ab]:          rmov adx, ebx   
1196 [0x4ac]:          new_class @0 // std#__srt_global   
1197 [0x4ad]:          _ulck   
1198 [0x4ae]:          movg @54 // @std#time_request   
1199 [0x4af]:          movn #7   
1201 [0x4b1]:          popobj   
1202 [0x4b2]:          newstr @142 // tm_yday   
1203 [0x4b3]:          movg @54 // @std#time_request   
1204 [0x4b4]:          movn #7   
1206 [0x4b6]:          movn #0   
1208 [0x4b8]:          popobj   
1209 [0x4b9]:          movi #7, ebx   
1211 [0x4bb]:          movg @54 // @std#time_request   
1212 [0x4bc]:          movn #7   
1214 [0x4be]:          movn #1   
1216 [0x4c0]:          movi #0, adx   
1218 [0x4c2]:          rmov adx, ebx   
1219 [0x4c3]:          new_class @0 // std#__srt_global   
1220 [0x4c4]:          _ulck   
1221 [0x4c5]:          movg @54 // @std#time_request   
1222 [0x4c6]:          movn #8   
1224 [0x4c8]:          popobj   
1225 [0x4c9]:          newstr @143 // tm_isdst   
1226 [0x4ca]:          movg @54 // @std#time_request   
1227 [0x4cb]:          movn #8   
1229 [0x4cd]:          movn #0   
1231 [0x4cf]:          popobj   
1232 [0x4d0]:          movi #8, ebx   
1234 [0x4d2]:          movg @54 // @std#time_request   
1235 [0x4d3]:          movn #8   
1237 [0x4d5]:          movn #1   
1239 [0x4d7]:          movi #0, adx   
1241 [0x4d9]:          rmov adx, ebx   
1242 [0x4da]:          new_class @0 // std#__srt_global   
1243 [0x4db]:          movg @0 // @std#__srt_global   
1244 [0x4dc]:          movg @55 // @std#time_unit   
1245 [0x4dd]:          movn #0   
1247 [0x4df]:          popobj   
1248 [0x4e0]:          newstr @144 // seconds   
1249 [0x4e1]:          movg @55 // @std#time_unit   
1250 [0x4e2]:          movn #0   
1252 [0x4e4]:          movn #0   
1254 [0x4e6]:          popobj   
1255 [0x4e7]:          movi #0, ebx   
1257 [0x4e9]:          movg @55 // @std#time_unit   
1258 [0x4ea]:          movn #0   
1260 [0x4ec]:          movn #1   
1262 [0x4ee]:          movi #0, adx   
1264 [0x4f0]:          rmov adx, ebx   
1265 [0x4f1]:          new_class @0 // std#__srt_global   
1266 [0x4f2]:          movg @0 // @std#__srt_global   
1267 [0x4f3]:          movg @55 // @std#time_unit   
1268 [0x4f4]:          movn #1   
1270 [0x4f6]:          popobj   
1271 [0x4f7]:          newstr @145 // milliseconds   
1272 [0x4f8]:          movg @55 // @std#time_unit   
1273 [0x4f9]:          movn #1   
1275 [0x4fb]:          movn #0   
1277 [0x4fd]:          popobj   
1278 [0x4fe]:          movi #1, ebx   
1280 [0x500]:          movg @55 // @std#time_unit   
1281 [0x501]:          movn #1   
1283 [0x503]:          movn #1   
1285 [0x505]:          movi #0, adx   
1287 [0x507]:          rmov adx, ebx   
1288 [0x508]:          new_class @0 // std#__srt_global   
1289 [0x509]:          movg @0 // @std#__srt_global   
1290 [0x50a]:          movg @55 // @std#time_unit   
1291 [0x50b]:          movn #2   
1293 [0x50d]:          popobj   
1294 [0x50e]:          newstr @146 // microseconds   
1295 [0x50f]:          movg @55 // @std#time_unit   
1296 [0x510]:          movn #2   
1298 [0x512]:          movn #0   
1300 [0x514]:          popobj   
1301 [0x515]:          movi #2, ebx   
1303 [0x517]:          movg @55 // @std#time_unit   
1304 [0x518]:          movn #2   
1306 [0x51a]:          movn #1   
1308 [0x51c]:          movi #0, adx   
1310 [0x51e]:          rmov adx, ebx   
1311 [0x51f]:          new_class @0 // std#__srt_global   
1312 [0x520]:          movg @0 // @std#__srt_global   
1313 [0x521]:          movg @55 // @std#time_unit   
1314 [0x522]:          movn #3   
1316 [0x524]:          popobj   
1317 [0x525]:          newstr @147 // nanoseconds   
1318 [0x526]:          movg @55 // @std#time_unit   
1319 [0x527]:          movn #3   
1321 [0x529]:          movn #0   
1323 [0x52b]:          popobj   
1324 [0x52c]:          movi #3, ebx   
1326 [0x52e]:          movg @55 // @std#time_unit   
1327 [0x52f]:          movn #3   
1329 [0x531]:          movn #1   
1331 [0x533]:          movi #0, adx   
1333 [0x535]:          rmov adx, ebx   
1334 [0x536]:          movg @39 // @platform.kernel#platform   
1335 [0x537]:          movn #1   
1337 [0x539]:          movi #0, adx   
1339 [0x53b]:          movi #3700, ebx   
1341 [0x53d]:          rmov adx, ebx   
1342 [0x53e]:          call @4080 // <std#__srt_global.$03internal_static_init>   
1343 [0x53f]:          call @4081 // <std#string_builder.$03internal_static_init>   
1344 [0x540]:          call @4082 // <std#string.$03internal_static_init>   
1345 [0x541]:          call @4083 // <std.io.task#__srt_global.$03internal_static_init>   
1346 [0x542]:          call @4084 // <std.io.task#job.$03internal_static_init>   
1347 [0x543]:          call @4085 // <std.io#thread_group.$03internal_static_init>   
1348 [0x544]:          call @4086 // <std.io#__srt_global.$03internal_static_init>   
1349 [0x545]:          call @4087 // <std.io#file.$03internal_static_init>   
1350 [0x546]:          call @4088 // <std#time.$03internal_static_init>   
1351 [0x547]:          call @4089 // <std#_nil_.$03internal_static_init>   
1352 [0x548]:          call @4091 // <common#constants.$03internal_static_init>   
1353 [0x549]:          call @4092 // <common#constants.strings.$03internal_static_init>   
1354 [0x54a]:          call @4093 // <ui.res.drawable#__srt_global.$03internal_static_init>   
1355 [0x54b]:          call @4094 // <ui.layout#__srt_global.$03internal_static_init>   
1356 [0x54c]:          call @4095 // <ui.layout#home_screen.$03internal_static_init>   
1357 [0x54d]:          call @4096 // <main#__srt_global.$03internal_static_init>   
1358 [0x54e]:          call @4097 // <std.io#thread_result.$03internal_static_init>   
1359 [0x54f]:          call @4098 // <std#tmp.$03internal_static_init>   
1360 [0x550]:          ret   


function: platform.kernel#platform.exit[3458] params(1) in file: /usr/include/sharp//platform//kernel//platform.sharp:16:15: note:  
		    static def exit(value: var) {
		              ^

0 [0x0]: line: 17 ipushl #0   : protected asm start
1 [0x1]:          int 0x1d   
2 [0x2]:          ret   : protected asm end


function: platform.kernel#platform.get_lib_path[3459] params(1) in file: /usr/include/sharp//platform//kernel//platform.sharp:23:23: note:  
		    private static def get_lib_path(name: string) : _int8[] {
		                      ^

0 [0x0]: line: 24 call @3449 // <platform#build.is_windows>   
1 [0x1]:          loadval ebx   
2 [0x2]:          movr cmt, ebx   
3 [0x3]:          jne 9   
4 [0x4]: line: 25 pushl 0   
5 [0x5]:          newstr @60 // .dll   
6 [0x6]:          call @2013 // <std#string.operator+=>   
7 [0x7]:          pop   
8 [0x8]:          jmp @13   
9 [0x9]: line: 27 pushl 0   
10 [0xa]:          newstr @61 // .so   
11 [0xb]:          call @2013 // <std#string.operator+=>   
12 [0xc]:          pop   
13 [0xd]:          nop   
14 [0xe]: line: 30 new_class @0 // std#__srt_global   
15 [0xf]:          iadd adx, #? (112)   
17 [0x11]:          pushl 0   
18 [0x12]:          call @2210 // <std.io#file.file>   
19 [0x13]:          call @2217 // <std.io#file.get_absolute_path>   
20 [0x14]:          call @1985 // <std#string.get_data>   
21 [0x15]:          popobj2    
22 [0x16]:          returnobj   
23 [0x17]:          ret   


function: platform.kernel#platform.load_library[3460] params(1) in file: /usr/include/sharp//platform//kernel//platform.sharp:33:15: note:  
		    static def load_library(name: string) {
		              ^

0 [0x0]: line: 34 pushl 0   
1 [0x1]:          call @3459 // <platform.kernel#platform.get_lib_path>   
2 [0x2]:          popobj2    
3 [0x3]:          smovr_3 fp+1   
4 [0x4]: line: 35 pushl 1   : protected asm start
5 [0x5]:          int 0x39   
6 [0x6]:          ret   : protected asm end


function: platform.kernel#platform.free_library[3461] params(1) in file: /usr/include/sharp//platform//kernel//platform.sharp:41:15: note:  
		    static def free_library(name: string): var {
		              ^

0 [0x0]: line: 42 pushl 0   
1 [0x1]:          call @3459 // <platform.kernel#platform.get_lib_path>   
2 [0x2]:          popobj2    
3 [0x3]:          smovr_3 fp+1   
4 [0x4]: line: 43 istorel 0, fp+2   
6 [0x6]: line: 44 pushl 1   : protected asm start
7 [0x7]:          int 0x3a   
8 [0x8]:          smovr_2 ebx, fp+2   
9 [0x9]: line: 50 loadl ebx, fp+2   : protected asm end
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


function: platform.kernel#platform.link_func[3462] params(2) in file: /usr/include/sharp//platform//kernel//platform.sharp:53:15: note:  
		    static def link_func(name: string, library: string): var {
		              ^

0 [0x0]: line: 54 pushl 0   
1 [0x1]:          call @3459 // <platform.kernel#platform.get_lib_path>   
2 [0x2]:          popobj2    
3 [0x3]:          smovr_3 fp+2   
4 [0x4]: line: 55 pushl 0   
5 [0x5]:          call @1985 // <std#string.get_data>   
6 [0x6]:          popobj2    
7 [0x7]:          smovr_3 fp+3   
8 [0x8]: line: 56 istorel 0, fp+4   
10 [0xa]: line: 57 pushl 3   : protected asm start
11 [0xb]:          pushl 2   
12 [0xc]:          int 0x3b   
13 [0xd]:          smovr_2 ebx, fp+4   
14 [0xe]: line: 64 loadl ebx, fp+4   : protected asm end
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


function: platform.kernel#platform.srt_init[3463] params(1) in file: /usr/include/sharp//platform//kernel//platform.sharp:67:23: note:  
		    private static def srt_init(args: object[]) : var {
		                      ^

0 [0x0]: line: 68 new_class @0 // std#__srt_global   
1 [0x1]:          ret   
2 [0x2]:          dup    
3 [0x3]:          newstr @24 //    
4 [0x4]:          call @1959 // <std#string.string>   
5 [0x5]:          pushl 0   
6 [0x6]:          movi #0, ebx   
8 [0x8]:          popobj2    
9 [0x9]:          movr adx, ebx   
10 [0xa]:          chklen adx   
11 [0xb]:          movnd adx   
12 [0xc]:          vcast 0 -> []   
13 [0xd]:          pushobj   
14 [0xe]:          call @1971 // <std#string.operator+>   
15 [0xf]:          movg @36 // @platform#build   
16 [0x10]:          movn #1   
18 [0x12]:          popobj   
19 [0x13]: line: 69 new_class @0 // std#__srt_global   
20 [0x14]:          ret   
21 [0x15]:          dup    
22 [0x16]:          newstr @24 //    
23 [0x17]:          call @1959 // <std#string.string>   
24 [0x18]:          pushl 0   
25 [0x19]:          movi #1, ebx   
27 [0x1b]:          popobj2    
28 [0x1c]:          movr adx, ebx   
29 [0x1d]:          chklen adx   
30 [0x1e]:          movnd adx   
31 [0x1f]:          vcast 0 -> []   
32 [0x20]:          pushobj   
33 [0x21]:          call @1971 // <std#string.operator+>   
34 [0x22]:          movg @36 // @platform#build   
35 [0x23]:          movn #3   
37 [0x25]:          popobj   
38 [0x26]: line: 70 new_class @0 // std#__srt_global   
39 [0x27]:          ret   
40 [0x28]:          dup    
41 [0x29]:          newstr @24 //    
42 [0x2a]:          call @1959 // <std#string.string>   
43 [0x2b]:          pushl 0   
44 [0x2c]:          movi #2, ebx   
46 [0x2e]:          popobj2    
47 [0x2f]:          movr adx, ebx   
48 [0x30]:          chklen adx   
49 [0x31]:          movnd adx   
50 [0x32]:          vcast 0 -> []   
51 [0x33]:          pushobj   
52 [0x34]:          call @1971 // <std#string.operator+>   
53 [0x35]:          movg @36 // @platform#build   
54 [0x36]:          movn #2   
56 [0x38]:          popobj   
57 [0x39]: line: 71 new_class @0 // std#__srt_global   
58 [0x3a]:          ret   
59 [0x3b]:          dup    
60 [0x3c]:          newstr @24 //    
61 [0x3d]:          call @1959 // <std#string.string>   
62 [0x3e]:          pushl 0   
63 [0x3f]:          movi #3, ebx   
65 [0x41]:          popobj2    
66 [0x42]:          movr adx, ebx   
67 [0x43]:          chklen adx   
68 [0x44]:          movnd adx   
69 [0x45]:          vcast 0 -> []   
70 [0x46]:          pushobj   
71 [0x47]:          call @1971 // <std#string.operator+>   
72 [0x48]:          movg @36 // @platform#build   
73 [0x49]:          movn #0   
75 [0x4b]:          popobj   
76 [0x4c]: line: 73 call @3457 // <platform.kernel#platform.static_init>   
77 [0x4d]: line: 74 pushl 0   
78 [0x4e]: line: 76 movi #4, ebx   
80 [0x50]:          popobj2    
81 [0x51]:          movr adx, ebx   
82 [0x52]:          chklen adx   
83 [0x53]:          movnd adx   
84 [0x54]:          movi #19, cmt   
86 [0x56]:          cast cmt   
87 [0x57]:          smovr_3 fp+1   
88 [0x58]: line: 77 pushl 1   
89 [0x59]:          call @3478 // <platform.kernel#vm.set_thread>   
90 [0x5a]: line: 79 movg @13 // @std.io#thread_priority   
91 [0x5b]:          movn #2   
93 [0x5d]:          smovr_3 fp+2   
94 [0x5e]: line: 80 movg @14 // @std.io#thread_group   
95 [0x5f]:          movn #0   
97 [0x61]:          pushobj   
98 [0x62]:          pushl 1   
99 [0x63]:          call @2130 // <std.io#thread_group.add>   
100 [0x64]: line: 82 movg @14 // @std.io#thread_group   : protected asm start
101 [0x65]:          movn #0   
103 [0x67]:          pushobj   
104 [0x68]:          movl 1   
105 [0x69]:          movn #7   
107 [0x6b]:          popobj   
108 [0x6c]:          movl 2   
109 [0x6d]:          pushobj   
110 [0x6e]:          movl 1   
111 [0x6f]:          movn #3   
113 [0x71]:          popobj   
114 [0x72]: line: 99 movl 0   : protected asm end
115 [0x73]: line: 100 sizeof ebx   
116 [0x74]:           rstore ebx   
117 [0x75]:           movi #5, ebx   
119 [0x77]:           loadval ecx   
120 [0x78]:           sub ecx, ebx -> ebx   
121 [0x79]:           new_classarray ebx  // std#string[]   
123 [0x7b]:           popobj2    
124 [0x7c]:           smovr_3 fp+3   
125 [0x7d]: line: 101 istorel 0, fp+4   
127 [0x7f]: line: 103 istorel 5, fp+5   
129 [0x81]:           ipushl #5   
130 [0x82]:           movl 0   
131 [0x83]:           sizeof ebx   
132 [0x84]:           loadval ecx   
133 [0x85]:           lt ecx, ebx   
134 [0x86]:           movr ebx, cmt   
135 [0x87]:           movr cmt, ebx   
136 [0x88]:           jne 163   
137 [0x89]: line: 104 new_class @0 // std#__srt_global   
138 [0x8a]:           ret   
139 [0x8b]:           dup    
140 [0x8c]:           pushl 0   
141 [0x8d]:           loadl ebx, fp+5   
142 [0x8e]:           popobj2    
143 [0x8f]:           movr adx, ebx   
144 [0x90]:           chklen adx   
145 [0x91]:           movnd adx   
146 [0x92]:           vcast 0 -> []   
147 [0x93]:           pushobj   
148 [0x94]:           call @1959 // <std#string.string>   
149 [0x95]:           pushl 3   
150 [0x96]:           loadl ebx, fp+4   
151 [0x97]:           movr egx, ebx   
152 [0x98]:           inc ebx   
153 [0x99]:           smovr_2 ebx, fp+4   
154 [0x9a]:           movr ebx, egx   
155 [0x9b]:           popobj2    
156 [0x9c]:           movr adx, ebx   
157 [0x9d]:           chklen adx   
158 [0x9e]:           movnd adx   
159 [0x9f]:           popobj   
160 [0xa0]:           iaddl 1, fp@5   
162 [0xa2]:           jmp @129   
163 [0xa3]: line: 107 istorel 0, fp+6   
165 [0xa5]: line: 108 movg @39 // @platform.kernel#platform   
166 [0xa6]:           movn #0   
168 [0xa8]:           movi #0, adx   
170 [0xaa]:           iaload ebx, adx   
171 [0xab]:           rstore ebx   
172 [0xac]:           movi #0, ebx   
174 [0xae]:           loadval ecx   
175 [0xaf]:           tne ecx, ebx   
176 [0xb0]:           jne 189   
177 [0xb1]: line: 109 movg @39 // @platform.kernel#platform   
178 [0xb2]:           movn #0   
180 [0xb4]:           movi #0, adx   
182 [0xb6]:           iaload ebx, adx   
183 [0xb7]:           rstore ebx   
184 [0xb8]:           pushl 3   
185 [0xb9]:           smov ebx, sp+[-1]   
186 [0xba]:           calld ebx   
187 [0xbb]:           ipopl 6   
188 [0xbc]:           jmp @256   
189 [0xbd]:           movg @39 // @platform.kernel#platform   
190 [0xbe]:           movn #1   
192 [0xc0]:           movi #0, adx   
194 [0xc2]:           iaload ebx, adx   
195 [0xc3]:           rstore ebx   
196 [0xc4]:           movi #0, ebx   
198 [0xc6]:           loadval ecx   
199 [0xc7]:           tne ecx, ebx   
200 [0xc8]:           jne 212   
201 [0xc9]: line: 110 movg @39 // @platform.kernel#platform   
202 [0xca]:           movn #1   
204 [0xcc]:           movi #0, adx   
206 [0xce]:           iaload ebx, adx   
207 [0xcf]:           rstore ebx   
208 [0xd0]:           pushl 3   
209 [0xd1]:           smov ebx, sp+[-1]   
210 [0xd2]:           calld ebx   
211 [0xd3]:           jmp @256   
212 [0xd4]:           movg @39 // @platform.kernel#platform   
213 [0xd5]:           movn #2   
215 [0xd7]:           movi #0, adx   
217 [0xd9]:           iaload ebx, adx   
218 [0xda]:           rstore ebx   
219 [0xdb]:           movi #0, ebx   
221 [0xdd]:           loadval ecx   
222 [0xde]:           tne ecx, ebx   
223 [0xdf]:           jne 234   
224 [0xe0]: line: 111 movg @39 // @platform.kernel#platform   
225 [0xe1]:           movn #2   
227 [0xe3]:           movi #0, adx   
229 [0xe5]:           iaload ebx, adx   
230 [0xe6]:           rstore ebx   
231 [0xe7]:           loadval ebx   
232 [0xe8]:           calld ebx   
233 [0xe9]:           jmp @256   
234 [0xea]:           movg @39 // @platform.kernel#platform   
235 [0xeb]:           movn #3   
237 [0xed]:           movi #0, adx   
239 [0xef]:           iaload ebx, adx   
240 [0xf0]:           rstore ebx   
241 [0xf1]:           movi #0, ebx   
243 [0xf3]:           loadval ecx   
244 [0xf4]:           tne ecx, ebx   
245 [0xf5]:           jne 256   
246 [0xf6]: line: 112 movg @39 // @platform.kernel#platform   
247 [0xf7]:           movn #3   
249 [0xf9]:           movi #0, adx   
251 [0xfb]:           iaload ebx, adx   
252 [0xfc]:           rstore ebx   
253 [0xfd]:           loadval ebx   
254 [0xfe]:           calld ebx   
255 [0xff]:           ipopl 6   
256 [0x100]:           nop   
257 [0x101]: line: 115 loadl ebx, fp+6   
258 [0x102]:           return_val ebx   
259 [0x103]:           ret   


constructor: platform.kernel#platform.platform[3464] params(0) in file: /usr/include/sharp//platform//kernel//platform.sharp:6:6: note:  
		class platform
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


function: platform.kernel#vm.get_frame_info[3465] params(0) in file: /usr/include/sharp//platform//kernel//vm.sharp:6:15: note:  
		    static def get_frame_info() : stack_state {
		              ^

0 [0x0]: line: 7 int 0x35   : protected asm start
1 [0x1]:         popobj2    
2 [0x2]:         returnobj   
3 [0x3]:         ret   
4 [0x4]: line: 13 pushnull    : protected asm end
5 [0x5]:          popobj2    
6 [0x6]:          returnobj   
7 [0x7]:          ret   


function: platform.kernel#vm.get_stack_trace[3466] params(1) in file: /usr/include/sharp//platform//kernel//vm.sharp:16:15: note:  
		    static def get_stack_trace(info : stack_state) : string {
		              ^

0 [0x0]: line: 17 pushl 0   : protected asm start
1 [0x1]:          int 0x36   
2 [0x2]:          popobj2    
3 [0x3]:          returnobj   
4 [0x4]:          ret   
5 [0x5]: line: 24 pushnull    : protected asm end
6 [0x6]:          popobj2    
7 [0x7]:          returnobj   
8 [0x8]:          ret   


function: platform.kernel#vm.thread_create[3467] params(1) in file: /usr/include/sharp//platform//kernel//vm.sharp:27:15: note:  
		    static def thread_create(daemon: var) : var {
		              ^

0 [0x0]: line: 28 istorel 0, fp+1   
2 [0x2]: line: 29 movi #2084, adx   : protected asm start
4 [0x4]:          loadl ebx, fp+0   
5 [0x5]:          int 0x10   
6 [0x6]:          smovr_2 ebx, fp+1   
7 [0x7]: line: 36 loadl ebx, fp+1   : protected asm end
8 [0x8]:          return_val ebx   
9 [0x9]:          ret   


function: platform.kernel#vm.suspend[3468] params(1) in file: /usr/include/sharp//platform//kernel//vm.sharp:39:15: note:  
		    static def suspend(t: thread) : thread_result {
		              ^

0 [0x0]: line: 40 pushl 0   
1 [0x1]:          call @2191 // <std.io#thread.get_native_handle>   
2 [0x2]:          ipopl 1   
3 [0x3]: line: 41 istorel 0, fp+2   
5 [0x5]: line: 43 loadl adx, fp+1   : protected asm start
6 [0x6]:          int 0x12   
7 [0x7]:          smovr_2 cmt, fp+2   
8 [0x8]: line: 49 ipushl #2   : protected asm end
9 [0x9]:          call @2085 // <std.io#thread_result.at>   
10 [0xa]:          popobj2    
11 [0xb]:          returnobj   
12 [0xc]:          ret   


function: platform.kernel#vm.unsuspend[3469] params(2) in file: /usr/include/sharp//platform//kernel//vm.sharp:52:15: note:  
		    static def unsuspend(t: thread, wait: var) : thread_result {
		              ^

0 [0x0]: line: 53 pushl 0   
1 [0x1]:          call @2191 // <std.io#thread.get_native_handle>   
2 [0x2]:          ipopl 2   
3 [0x3]: line: 54 istorel 0, fp+3   
5 [0x5]: line: 56 loadl adx, fp+2   : protected asm start
6 [0x6]:          loadl ebx, fp+1   
7 [0x7]:          int 0x13   
8 [0x8]:          smovr_2 cmt, fp+3   
9 [0x9]: line: 63 ipushl #3   : protected asm end
10 [0xa]:          call @2085 // <std.io#thread_result.at>   
11 [0xb]:          popobj2    
12 [0xc]:          returnobj   
13 [0xd]:          ret   


function: platform.kernel#vm.get_os_time[3470] params(1) in file: /usr/include/sharp//platform//kernel//vm.sharp:66:15: note:  
		    static def get_os_time(tr : var) : var {
		              ^

0 [0x0]: line: 67 istorel 0, fp+1   
2 [0x2]: line: 68 loadl ebx, fp+0   : protected asm start
3 [0x3]:          int 0x2   
4 [0x4]:          smovr_2 bmr, fp+1   
5 [0x5]: line: 74 loadl ebx, fp+1   : protected asm end
6 [0x6]:          return_val ebx   
7 [0x7]:          ret   


function: platform.kernel#vm.thread_join[3471] params(1) in file: /usr/include/sharp//platform//kernel//vm.sharp:77:15: note:  
		    static def thread_join(t: thread) : thread_result {
		              ^

0 [0x0]: line: 78 pushl 0   
1 [0x1]:          call @2191 // <std.io#thread.get_native_handle>   
2 [0x2]:          ipopl 1   
3 [0x3]: line: 79 istorel 0, fp+2   
5 [0x5]: line: 81 loadl adx, fp+1   : protected asm start
6 [0x6]:          int 0xd   
7 [0x7]:          smovr_2 cmt, fp+2   
8 [0x8]: line: 87 ipushl #2   : protected asm end
9 [0x9]:          call @2085 // <std.io#thread_result.at>   
10 [0xa]:          popobj2    
11 [0xb]:          returnobj   
12 [0xc]:          ret   


function: platform.kernel#vm.kill[3472] params(1) in file: /usr/include/sharp//platform//kernel//vm.sharp:90:15: note:  
		    static def kill(t: thread) : thread_result {
		              ^

0 [0x0]: line: 91 pushl 0   
1 [0x1]:          call @2191 // <std.io#thread.get_native_handle>   
2 [0x2]:          ipopl 1   
3 [0x3]: line: 92 istorel 0, fp+2   
5 [0x5]: line: 94 loadl adx, fp+1   : protected asm start
6 [0x6]:          int 0xe   
7 [0x7]:          smovr_2 cmt, fp+2   : protected asm end
8 [0x8]: line: 100 pushl 0   
9 [0x9]:           istore 1   
11 [0xb]:           call @3474 // <platform.kernel#vm.exit_thread>   
12 [0xc]: line: 101 ipushl #2   
13 [0xd]:           call @2085 // <std.io#thread_result.at>   
14 [0xe]:           popobj2    
15 [0xf]:           returnobj   
16 [0x10]:           ret   


function: platform.kernel#vm.current_thread[3473] params(0) in file: /usr/include/sharp//platform//kernel//vm.sharp:104:15: note:  
		    static def current_thread() : thread {
		              ^

0 [0x0]: line: 105 int 0x15   : protected asm start
1 [0x1]:           popobj2    
2 [0x2]:           returnobj   
3 [0x3]:           ret   
4 [0x4]: line: 112 pushnull    : protected asm end
5 [0x5]:           popobj2    
6 [0x6]:           returnobj   
7 [0x7]:           ret   


function: platform.kernel#vm.exit_thread[3474] params(2) in file: /usr/include/sharp//platform//kernel//vm.sharp:115:15: note:  
		    static def exit_thread(t: thread, code: var) {
		              ^

0 [0x0]: line: 116 movi #1, ebx   : protected asm start
2 [0x2]:           movi #0, egx   
4 [0x4]:           movi #-1, ecx   
6 [0x6]:           movi #0, adx   
8 [0x8]:           movl 0   
9 [0x9]:           movn #5   
11 [0xb]:           rmov adx, ebx   
12 [0xc]:           movl 0   
13 [0xd]:           movn #8   
15 [0xf]:           rmov adx, egx   
16 [0x10]:           loadl egx, fp+1   
17 [0x11]:           movl 0   
18 [0x12]:           movn #0   
20 [0x14]:           rmov adx, egx   
21 [0x15]:           movl 0   
22 [0x16]:           movn #1   
24 [0x18]:           rmov adx, ecx   
25 [0x19]:           ret   : protected asm end


function: platform.kernel#vm.thread_yield[3475] params(0) in file: /usr/include/sharp//platform//kernel//vm.sharp:140:15: note:  
		    static def thread_yield() {
		              ^

0 [0x0]: line: 141 int 0x1c   : protected asm start
1 [0x1]:           ret   : protected asm end


function: platform.kernel#vm.thread_start[3476] params(2) in file: /usr/include/sharp//platform//kernel//vm.sharp:146:15: note:  
		    static def thread_start(t: thread, args: object[]) : thread_result {
		              ^

0 [0x0]: line: 147 pushl 0   
1 [0x1]:           call @2191 // <std.io#thread.get_native_handle>   
2 [0x2]:           ipopl 2   
3 [0x3]: line: 148 pushl 0   
4 [0x4]:           call @2192 // <std.io#thread.get_stack_size>   
5 [0x5]:           ipopl 3   
6 [0x6]: line: 149 istorel 0, fp+4   
8 [0x8]: line: 151 loadl ebx, fp+3   : protected asm start
9 [0x9]:           loadl adx, fp+2   
10 [0xa]:           pushl 1   
11 [0xb]:           pushl 0   
12 [0xc]:           int 0xc   
13 [0xd]:           smovr_2 cmt, fp+4   
14 [0xe]: line: 160 ipushl #4   : protected asm end
15 [0xf]:           movi #0, ebx   
17 [0x11]:           loadval ecx   
18 [0x12]:           test ecx, ebx   
19 [0x13]:           jne 22   
20 [0x14]: line: 161 pushl 0   
21 [0x15]:           call @1908 // <std#_object_.wait>   
22 [0x16]:           nop   
23 [0x17]: line: 164 ipushl #4   
24 [0x18]:           call @2085 // <std.io#thread_result.at>   
25 [0x19]:           popobj2    
26 [0x1a]:           returnobj   
27 [0x1b]:           ret   


function: platform.kernel#vm.set_thread_priority[3477] params(2) in file: /usr/include/sharp//platform//kernel//vm.sharp:167:15: note:  
		    static def set_thread_priority(t: thread, priority: var) : thread_result {
		              ^

0 [0x0]: line: 168 pushl 0   
1 [0x1]:           call @2191 // <std.io#thread.get_native_handle>   
2 [0x2]:           ipopl 2   
3 [0x3]: line: 169 istorel 0, fp+3   
5 [0x5]: line: 171 loadl adx, fp+2   : protected asm start
6 [0x6]:           loadl egx, fp+1   
7 [0x7]:           int 0x11   
8 [0x8]:           smovr_2 cmt, fp+3   
9 [0x9]: line: 178 ipushl #3   : protected asm end
10 [0xa]:           call @2085 // <std.io#thread_result.at>   
11 [0xb]:           popobj2    
12 [0xc]:           returnobj   
13 [0xd]:           ret   


function: platform.kernel#vm.set_thread[3478] params(1) in file: /usr/include/sharp//platform//kernel//vm.sharp:181:15: note:  
		    static def set_thread(t: thread) {
		              ^

0 [0x0]: line: 182 pushl 0   : protected asm start
1 [0x1]:           int 0x17   
2 [0x2]:           ret   : protected asm end


function: platform.kernel#vm.thread_args[3479] params(0) in file: /usr/include/sharp//platform//kernel//vm.sharp:188:15: note:  
		    static def thread_args() : object[] {
		              ^

0 [0x0]: line: 189 int 0x16   : protected asm start
1 [0x1]:           popobj2    
2 [0x2]:           returnobj   
3 [0x3]:           ret   
4 [0x4]: line: 196 pushnull    : protected asm end
5 [0x5]:           popobj2    
6 [0x6]:           returnobj   
7 [0x7]:           ret   


function: platform.kernel#vm.cores[3480] params(0) in file: /usr/include/sharp//platform//kernel//vm.sharp:199:15: note:  
		    static def cores() : var {
		              ^

0 [0x0]: line: 200 istorel 0, fp+0   
2 [0x2]: line: 202 int 0x38   : protected asm start
3 [0x3]:           smovr_2 ebx, fp+0   
4 [0x4]: line: 207 loadl ebx, fp+0   : protected asm end
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


function: platform.kernel#vm.random_int[3481] params(0) in file: /usr/include/sharp//platform//kernel//vm.sharp:210:15: note:  
		    static def random_int() : var {
		              ^

0 [0x0]: line: 211 istorel 0, fp+0   
2 [0x2]: line: 213 int 0x19   : protected asm start
3 [0x3]:           smovr_2 ebx, fp+0   
4 [0x4]: line: 218 loadl ebx, fp+0   : protected asm end
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


function: platform.kernel#vm.random_int[3482] params(2) in file: /usr/include/sharp//platform//kernel//vm.sharp:221:15: note:  
		    static def random_int(min: var, max : var) : var {
		              ^

0 [0x0]: line: 222 istorel 0, fp+2   
2 [0x2]: line: 224 loadl ebx, fp+0   : protected asm start
3 [0x3]:           loadl egx, fp+1   
4 [0x4]:           int 0x3f   
5 [0x5]:           smovr_2 ebx, fp+2   
6 [0x6]: line: 231 loadl ebx, fp+2   : protected asm end
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


function: platform.kernel#vm.random_double[3483] params(0) in file: /usr/include/sharp//platform//kernel//vm.sharp:234:15: note:  
		    static def random_double() : var {
		              ^

0 [0x0]: line: 235 istorel 0, fp+0   
2 [0x2]: line: 237 int 0x40   : protected asm start
3 [0x3]:           smovr_2 ebx, fp+0   
4 [0x4]: line: 242 loadl ebx, fp+0   : protected asm end
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


function: platform.kernel#vm.random_double[3484] params(2) in file: /usr/include/sharp//platform//kernel//vm.sharp:245:15: note:  
		    static def random_double(min: var, max : var) : var {
		              ^

0 [0x0]: line: 246 istorel 0, fp+2   
2 [0x2]: line: 248 loadl ebx, fp+0   : protected asm start
3 [0x3]:           loadl egx, fp+1   
4 [0x4]:           int 0x41   
5 [0x5]:           smovr_2 ebx, fp+2   
6 [0x6]: line: 255 loadl ebx, fp+2   : protected asm end
7 [0x7]:           return_val ebx   
8 [0x8]:           ret   


function: platform.kernel#vm.random_seed[3485] params(1) in file: /usr/include/sharp//platform//kernel//vm.sharp:258:15: note:  
		    static def random_seed(seed : var) {
		              ^

0 [0x0]: line: 259 loadl adx, fp+0   : protected asm start
1 [0x1]:           int 0x42   
2 [0x2]:           ret   : protected asm end


constructor: platform.kernel#vm.vm[3486] params(0) in file: /usr/include/sharp//platform//kernel//vm.sharp:5:6: note:  
		class vm {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


function: std.math#__srt_global.is_nan[3487] params(1) in file: /usr/include/sharp//math//math.sharp:44:18: note:  
		public static def is_nan(v: var): var {
		                 ^

0 [0x0]: line: 45 ipushl #0   
1 [0x1]:          loadl ebx, fp+0   
2 [0x2]:          loadval ecx   
3 [0x3]:          tne ecx, ebx   
4 [0x4]:          return_val cmt   
5 [0x5]:          ret   


function: std.math#__srt_global.is_infinite[3488] params(1) in file: /usr/include/sharp//math//math.sharp:56:18: note:  
		public static def is_infinite(v: var): var {
		                 ^

0 [0x0]: line: 57 ipushl #0   
1 [0x1]:          ldc ebx // inf   
2 [0x2]:          loadval ecx   
3 [0x3]:          test ecx, ebx   
4 [0x4]:          movr ebx, cmt   
5 [0x5]:          skpe ebx // pc = 11   
6 [0x6]:          ipushl #0   
7 [0x7]:          movi #-2147483648, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          return_val cmt   
12 [0xc]:          ret   


function: std.math#__srt_global.sin[3489] params(1) in file: /usr/include/sharp//math//math.sharp:60:4: note:  
		def sin(num: var) : var {
		   ^

0 [0x0]: line: 61 ipushl #0   
1 [0x1]:          istore 0   
3 [0x3]:          call @3511 // <std.math#__srt_global.math_proc>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std.math#__srt_global.cos[3490] params(1) in file: /usr/include/sharp//math//math.sharp:64:4: note:  
		def cos(num: var) : var {
		   ^

0 [0x0]: line: 65 ipushl #0   
1 [0x1]:          istore 1   
3 [0x3]:          call @3511 // <std.math#__srt_global.math_proc>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std.math#__srt_global.tan[3491] params(1) in file: /usr/include/sharp//math//math.sharp:68:4: note:  
		def tan(num: var) : var {
		   ^

0 [0x0]: line: 69 ipushl #0   
1 [0x1]:          istore 2   
3 [0x3]:          call @3511 // <std.math#__srt_global.math_proc>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std.math#__srt_global.sinh[3492] params(1) in file: /usr/include/sharp//math//math.sharp:72:4: note:  
		def sinh(num: var) : var {
		   ^

0 [0x0]: line: 73 ipushl #0   
1 [0x1]:          istore 3   
3 [0x3]:          call @3511 // <std.math#__srt_global.math_proc>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std.math#__srt_global.cosh[3493] params(1) in file: /usr/include/sharp//math//math.sharp:76:4: note:  
		def cosh(num: var) : var {
		   ^

0 [0x0]: line: 77 ipushl #0   
1 [0x1]:          istore 4   
3 [0x3]:          call @3511 // <std.math#__srt_global.math_proc>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std.math#__srt_global.tanh[3494] params(1) in file: /usr/include/sharp//math//math.sharp:80:4: note:  
		def tanh(num: var) : var {
		   ^

0 [0x0]: line: 81 ipushl #0   
1 [0x1]:          istore 5   
3 [0x3]:          call @3511 // <std.math#__srt_global.math_proc>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std.math#__srt_global.asin[3495] params(1) in file: /usr/include/sharp//math//math.sharp:84:4: note:  
		def asin(num: var) : var {
		   ^

0 [0x0]: line: 85 ipushl #0   
1 [0x1]:          istore 6   
3 [0x3]:          call @3511 // <std.math#__srt_global.math_proc>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std.math#__srt_global.acos[3496] params(1) in file: /usr/include/sharp//math//math.sharp:88:4: note:  
		def acos(num: var) : var {
		   ^

0 [0x0]: line: 89 ipushl #0   
1 [0x1]:          istore 7   
3 [0x3]:          call @3511 // <std.math#__srt_global.math_proc>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std.math#__srt_global.atan[3497] params(1) in file: /usr/include/sharp//math//math.sharp:92:4: note:  
		def atan(num: var) : var {
		   ^

0 [0x0]: line: 93 ipushl #0   
1 [0x1]:          istore 8   
3 [0x3]:          call @3511 // <std.math#__srt_global.math_proc>   
4 [0x4]:          loadval ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std.math#__srt_global.atan[3498] params(2) in file: /usr/include/sharp//math//math.sharp:96:4: note:  
		def atan(num1: var, num2: var) : var {
		   ^

0 [0x0]: line: 97 ipushl #0   
1 [0x1]:          ipushl #1   
2 [0x2]:          istore 9   
4 [0x4]:          call @3512 // <std.math#__srt_global.math_proc>   
5 [0x5]:          loadval ebx   
6 [0x6]:          return_val ebx   
7 [0x7]:          ret   


function: std.math#__srt_global.exp[3499] params(1) in file: /usr/include/sharp//math//math.sharp:100:4: note:  
		def exp(num: var) : var {
		   ^

0 [0x0]: line: 101 ipushl #0   
1 [0x1]:           istore 10   
3 [0x3]:           call @3511 // <std.math#__srt_global.math_proc>   
4 [0x4]:           loadval ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


function: std.math#__srt_global.log[3500] params(1) in file: /usr/include/sharp//math//math.sharp:104:4: note:  
		def log(num: var) : var {
		   ^

0 [0x0]: line: 105 ipushl #0   
1 [0x1]:           istore 11   
3 [0x3]:           call @3511 // <std.math#__srt_global.math_proc>   
4 [0x4]:           loadval ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


function: std.math#__srt_global.log10[3501] params(1) in file: /usr/include/sharp//math//math.sharp:108:4: note:  
		def log10(num: var) : var {
		   ^

0 [0x0]: line: 109 ipushl #0   
1 [0x1]:           istore 12   
3 [0x3]:           call @3511 // <std.math#__srt_global.math_proc>   
4 [0x4]:           loadval ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


function: std.math#__srt_global.pow[3502] params(2) in file: /usr/include/sharp//math//math.sharp:112:4: note:  
		def pow(num: var, exp: var) : var {
		   ^

0 [0x0]: line: 113 ipushl #0   
1 [0x1]:           ipushl #1   
2 [0x2]:           istore 13   
4 [0x4]:           call @3512 // <std.math#__srt_global.math_proc>   
5 [0x5]:           loadval ebx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.math#__srt_global.sqrt[3503] params(1) in file: /usr/include/sharp//math//math.sharp:116:4: note:  
		def sqrt(num: var) : var {
		   ^

0 [0x0]: line: 117 ipushl #0   
1 [0x1]:           istore 14   
3 [0x3]:           call @3511 // <std.math#__srt_global.math_proc>   
4 [0x4]:           loadval ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


function: std.math#__srt_global.ceil[3504] params(1) in file: /usr/include/sharp//math//math.sharp:120:4: note:  
		def ceil(num: var) : var {
		   ^

0 [0x0]: line: 121 ipushl #0   
1 [0x1]:           istore 15   
3 [0x3]:           call @3511 // <std.math#__srt_global.math_proc>   
4 [0x4]:           loadval ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


function: std.math#__srt_global.floor[3505] params(1) in file: /usr/include/sharp//math//math.sharp:124:4: note:  
		def floor(num: var) : var {
		   ^

0 [0x0]: line: 125 ipushl #0   
1 [0x1]:           istore 16   
3 [0x3]:           call @3511 // <std.math#__srt_global.math_proc>   
4 [0x4]:           loadval ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


function: std.math#__srt_global.abs[3506] params(1) in file: /usr/include/sharp//math//math.sharp:128:4: note:  
		def abs(num: var) : var {
		   ^

0 [0x0]: line: 129 ipushl #0   
1 [0x1]:           call @3507 // <std.math#__srt_global.fabs>   
2 [0x2]:           loadval ebx   
3 [0x3]:           return_val ebx   
4 [0x4]:           ret   


function: std.math#__srt_global.fabs[3507] params(1) in file: /usr/include/sharp//math//math.sharp:132:12: note:  
		private def fabs(num: var) : var {
		           ^

0 [0x0]: line: 133 ipushl #0   
1 [0x1]:           istore 17   
3 [0x3]:           call @3511 // <std.math#__srt_global.math_proc>   
4 [0x4]:           loadval ebx   
5 [0x5]:           return_val ebx   
6 [0x6]:           ret   


function: std.math#__srt_global.ldexp[3508] params(2) in file: /usr/include/sharp//math//math.sharp:136:4: note:  
		def ldexp(num: var, num2: var) : var {
		   ^

0 [0x0]: line: 137 ipushl #0   
1 [0x1]:           ipushl #1   
2 [0x2]:           istore 18   
4 [0x4]:           call @3512 // <std.math#__srt_global.math_proc>   
5 [0x5]:           loadval ebx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.math#__srt_global.fmod[3509] params(2) in file: /usr/include/sharp//math//math.sharp:140:4: note:  
		def fmod(num: var, num2: var) : var {
		   ^

0 [0x0]: line: 141 ipushl #0   
1 [0x1]:           ipushl #1   
2 [0x2]:           istore 19   
4 [0x4]:           call @3512 // <std.math#__srt_global.math_proc>   
5 [0x5]:           loadval ebx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std.math#__srt_global.round[3510] params(1) in file: /usr/include/sharp//math//math.sharp:144:4: note:  
		def round(num: var) : var {
		   ^

0 [0x0]: line: 145 loadl ebx, fp+0   
1 [0x1]:           mov64 ebx, ebx   
2 [0x2]:           mov64 ebx, ebx   
3 [0x3]:           smovr_2 ebx, fp+1   
4 [0x4]: line: 146 loadl ebx, fp+1   
5 [0x5]:           subl ebx, fp@0   
6 [0x6]: line: 148 ipushl #0   
7 [0x7]:           ldc ebx // 0.5   
8 [0x8]:           loadval ecx   
9 [0x9]:           gte ecx, ebx   
10 [0xa]:           movr ebx, cmt   
11 [0xb]:           movr cmt, ebx   
12 [0xc]:           jne 21   
13 [0xd]:           ipushl #1   
14 [0xe]:           movi #1, ebx   
16 [0x10]:           loadval ecx   
17 [0x11]:           add ecx, ebx -> ebx   
18 [0x12]:           return_val ebx   
19 [0x13]:           ret   
20 [0x14]:           jmp @24   
21 [0x15]: line: 149 loadl ebx, fp+1   
22 [0x16]:           return_val ebx   
23 [0x17]:           ret   
24 [0x18]:           nop   


function: std.math#__srt_global.math_proc[3511] params(2) in file: /usr/include/sharp//math//math.sharp:152:10: note:  
		local def math_proc(num: var, proc: var) : var {
		         ^

0 [0x0]: line: 153 loadl ebx, fp+0   : protected asm start
1 [0x1]:           loadl ecx, fp+1   
2 [0x2]:           int 0x18   
3 [0x3]:           return_val cmt   
4 [0x4]:           ret   
5 [0x5]: line: 161 istorel 0, fp+0   : protected asm end
7 [0x7]:           ret   


function: std.math#__srt_global.math_proc[3512] params(3) in file: /usr/include/sharp//math//math.sharp:164:10: note:  
		local def math_proc(num:var, num2: var, proc: var) : var {
		         ^

0 [0x0]: line: 165 loadl ebx, fp+0   : protected asm start
1 [0x1]:           loadl egx, fp+1   
2 [0x2]:           loadl ecx, fp+2   
3 [0x3]:           int 0x18   
4 [0x4]:           return_val cmt   
5 [0x5]:           ret   
6 [0x6]: line: 174 istorel 0, fp+0   : protected asm end
8 [0x8]:           ret   


std#unique.hash[3513] params(0) in file: /usr/include/sharp//unique.sharp:11:8: note:  
		    def hash() : long;
		       ^



std#unique.guid[3514] params(0) in file: /usr/include/sharp//unique.sharp:12:8: note:  
		    def guid() : long;
		       ^



constructor: std#unique.unique[3515] params(0) in file: /usr/include/sharp//unique.sharp:10:10: note:  
		interface unique {
		         ^

0 [0x0]:         ret   


constructor: std.reflect#data_entity.data_entity[3516] params(0) in file: /usr/include/sharp//reflect//data_entity.sharp:4:6: note:  
		class data_entity {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std.reflect#_class_._class_[3517] params(0) in file: /usr/include/sharp//reflect//class.sharp:4:6: note:  
		class _class_ base data_entity {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3516 // <std.reflect#data_entity.data_entity>   
2 [0x2]:         ret   


constructor: std.reflect#reflect.reflect[3518] params(1) in file: /usr/include/sharp//reflect//reflection.sharp:16:12: note:  
		    reflect(ref_obj : object) {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 17 pushl 0   
2 [0x2]:          pushl 1   
3 [0x3]:          ret   


constructor: std.reflect#reflect.reflect[3519] params(0) in file: /usr/include/sharp//reflect//reflection.sharp:3:6: note:  
		class reflect {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std.reflect#data_property.data_property[3520] params(0) in file: /usr/include/sharp//reflect//data_property.sharp:11:6: note:  
		class data_property base data_entity {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3516 // <std.reflect#data_entity.data_entity>   
2 [0x2]:         ret   


constructor: std.reflect#field.field[3521] params(0) in file: /usr/include/sharp//reflect//field.sharp:4:6: note:  
		class field {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std.reflect#function.function[3522] params(0) in file: /usr/include/sharp//reflect//function.sharp:4:6: note:  
		class function base data_entity {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3516 // <std.reflect#data_entity.data_entity>   
2 [0x2]:         ret   


std#printable.to_string[3523] params(0) in file: /usr/include/sharp//printable.sharp:11:8: note:  
		    def to_string() : string;
		       ^



constructor: std#printable.printable[3524] params(0) in file: /usr/include/sharp//printable.sharp:10:10: note:  
		interface printable {
		         ^

0 [0x0]:         ret   


function: std#time.nano_time[3525] params(0) in file: /usr/include/sharp//time.sharp:9:15: note:  
		    static def nano_time() : var {
		              ^

0 [0x0]: line: 10 istorel 0, fp+0   
2 [0x2]: line: 12 int 0xb   : protected asm start
3 [0x3]:          smovr_2 bmr, fp+0   
4 [0x4]: line: 17 loadl ebx, fp+0   : protected asm end
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std#time.get_os_time[3526] params(1) in file: /usr/include/sharp//time.sharp:20:15: note:  
		    static def get_os_time(tr: time_request)
		              ^

0 [0x0]: line: 21 pushl 0   
1 [0x1]:          call @2303 // <std#_enum_.get_ordinal>   
2 [0x2]:          call @3470 // <platform.kernel#vm.get_os_time>   
3 [0x3]:          loadval ebx   
4 [0x4]:          return_val ebx   
5 [0x5]:          ret   


function: std#time.nano_to_micro[3527] params(1) in file: /usr/include/sharp//time.sharp:23:15: note:  
		    static def nano_to_micro(nano: var) : var {
		              ^

0 [0x0]: line: 24 ipushl #0   
1 [0x1]:          movi #1000, ebx   
3 [0x3]:          loadval ecx   
4 [0x4]:          div ecx, ebx -> ebx   
5 [0x5]:          return_val ebx   
6 [0x6]:          ret   


function: std#time.nano_to_mills[3528] params(1) in file: /usr/include/sharp//time.sharp:27:15: note:  
		    static def nano_to_mills(nano: var) : var {
		              ^

0 [0x0]: line: 28 ipushl #0   
1 [0x1]:          call @3527 // <std#time.nano_to_micro>   
2 [0x2]:          loadval ebx   
3 [0x3]:          rstore ebx   
4 [0x4]:          movi #1000, ebx   
6 [0x6]:          loadval ecx   
7 [0x7]:          div ecx, ebx -> ebx   
8 [0x8]:          return_val ebx   
9 [0x9]:          ret   


function: std#time.nano_to_secs[3529] params(1) in file: /usr/include/sharp//time.sharp:31:22: note:  
		    public static def nano_to_secs(nano: var) : var {
		                     ^

0 [0x0]: line: 32 ipushl #0   
1 [0x1]:          call @3528 // <std#time.nano_to_mills>   
2 [0x2]:          loadval ebx   
3 [0x3]:          rstore ebx   
4 [0x4]:          movi #1000, ebx   
6 [0x6]:          loadval ecx   
7 [0x7]:          div ecx, ebx -> ebx   
8 [0x8]:          return_val ebx   
9 [0x9]:          ret   


function: std#time.mills_time[3530] params(0) in file: /usr/include/sharp//time.sharp:35:15: note:  
		    static def mills_time() : var {
		              ^

0 [0x0]: line: 36 call @3525 // <std#time.nano_time>   
1 [0x1]:          call @3528 // <std#time.nano_to_mills>   
2 [0x2]:          loadval ebx   
3 [0x3]:          return_val ebx   
4 [0x4]:          ret   


function: std#time.sleep[3531] params(1) in file: /usr/include/sharp//time.sharp:39:15: note:  
		    static def sleep(time: var) {
		              ^

0 [0x0]: line: 40 movg @55 // @std#time_unit   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          ipushl #0   
5 [0x5]:          call @3532 // <std#time.sleep>   
6 [0x6]:          ret   


function: std#time.sleep[3532] params(2) in file: /usr/include/sharp//time.sharp:43:15: note:  
		    static def sleep(tm_unit: time_unit, time: var) {
		              ^

0 [0x0]: line: 44 loadl ecx, fp+1   
1 [0x1]:          movi #0, ebx   
3 [0x3]:          lt ecx, ebx   
4 [0x4]:          movr ebx, cmt   
5 [0x5]:          movr cmt, ebx   
6 [0x6]:          jne 19   
7 [0x7]: line: 45 new_class @0 // std#__srt_global   
8 [0x8]:          newstr @0 // job#   
9 [0x9]:          dup    
10 [0xa]:          new_class @0 // std#__srt_global   
11 [0xb]:          ret   
12 [0xc]:          dup    
13 [0xd]:          newstr @62 // cannot sleep for negative time:    
14 [0xe]:          call @1959 // <std#string.string>   
15 [0xf]:          ipushl #1   
16 [0x10]:          call @1991 // <std#string.operator+>   
17 [0x11]:          call @3591 // <std#error.error>   
18 [0x12]:          throw    
19 [0x13]:          nop   
20 [0x14]: line: 47 pushl 0   
21 [0x15]:          movg @55 // @std#time_unit   
22 [0x16]:          movn #0   
24 [0x18]:          pushobj   
25 [0x19]:          call @2300 // <std#_enum_.operator==>   
26 [0x1a]:          loadval ebx   
27 [0x1b]:          movr cmt, ebx   
28 [0x1c]:          jne 38   
29 [0x1d]: line: 48 ipushl #1   
30 [0x1e]:          movi #1000000, ebx   
32 [0x20]:          loadval ecx   
33 [0x21]:          mul ecx, ebx -> ebx   
34 [0x22]:          rstore ebx   
35 [0x23]:          call @3534 // <std#time.adjust_time>   
36 [0x24]:          ipopl 1   
37 [0x25]:          jmp @68   
38 [0x26]:          pushl 0   
39 [0x27]:          movg @55 // @std#time_unit   
40 [0x28]:          movn #1   
42 [0x2a]:          pushobj   
43 [0x2b]:          call @2300 // <std#_enum_.operator==>   
44 [0x2c]:          loadval ebx   
45 [0x2d]:          movr cmt, ebx   
46 [0x2e]:          jne 56   
47 [0x2f]: line: 50 ipushl #1   
48 [0x30]:          movi #1000, ebx   
50 [0x32]:          loadval ecx   
51 [0x33]:          mul ecx, ebx -> ebx   
52 [0x34]:          rstore ebx   
53 [0x35]:          call @3534 // <std#time.adjust_time>   
54 [0x36]:          ipopl 1   
55 [0x37]:          jmp @68   
56 [0x38]:          pushl 0   
57 [0x39]:          movg @55 // @std#time_unit   
58 [0x3a]:          movn #2   
60 [0x3c]:          pushobj   
61 [0x3d]:          call @2300 // <std#_enum_.operator==>   
62 [0x3e]:          loadval ebx   
63 [0x3f]:          movr cmt, ebx   
64 [0x40]:          jne 68   
65 [0x41]: line: 52 ipushl #1   
66 [0x42]:          call @3534 // <std#time.adjust_time>   
67 [0x43]:          ipopl 1   
68 [0x44]:          nop   
69 [0x45]: line: 55 loadl ebx, fp+1   : protected asm start
70 [0x46]:          sleep ebx   
71 [0x47]:          ret   : protected asm end


function: std#time.wait[3533] params(2) in file: /usr/include/sharp//time.sharp:61:15: note:  
		    static def wait(tm_unit: time_unit, time: var) {
		              ^

0 [0x0]: line: 62 ipushl #1   
1 [0x1]:          movg @53 // @std#time   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          tne ecx, ebx   
9 [0x9]:          jne 69   
10 [0xa]: line: 63 loadl ecx, fp+1   
11 [0xb]:          movi #0, ebx   
13 [0xd]:          lt ecx, ebx   
14 [0xe]:          movr ebx, cmt   
15 [0xf]:          movr cmt, ebx   
16 [0x10]:          jne 29   
17 [0x11]: line: 64 new_class @0 // std#__srt_global   
18 [0x12]:          newstr @0 // job#   
19 [0x13]:          dup    
20 [0x14]:          new_class @0 // std#__srt_global   
21 [0x15]:          ret   
22 [0x16]:          dup    
23 [0x17]:          newstr @62 // cannot sleep for negative time:    
24 [0x18]:          call @1959 // <std#string.string>   
25 [0x19]:          ipushl #1   
26 [0x1a]:          call @1991 // <std#string.operator+>   
27 [0x1b]:          call @3591 // <std#error.error>   
28 [0x1c]:          throw    
29 [0x1d]:          nop   
30 [0x1e]: line: 66 pushl 0   
31 [0x1f]:          movg @55 // @std#time_unit   
32 [0x20]:          movn #0   
34 [0x22]:          pushobj   
35 [0x23]:          call @2300 // <std#_enum_.operator==>   
36 [0x24]:          loadval ebx   
37 [0x25]:          movr cmt, ebx   
38 [0x26]:          jne 43   
39 [0x27]: line: 67 movi #1000, ebx   
41 [0x29]:          mull ebx, fp@1   
42 [0x2a]:          jmp @68   
43 [0x2b]:          pushl 0   
44 [0x2c]:          movg @55 // @std#time_unit   
45 [0x2d]:          movn #2   
47 [0x2f]:          pushobj   
48 [0x30]:          call @2300 // <std#_enum_.operator==>   
49 [0x31]:          loadval ebx   
50 [0x32]:          movr cmt, ebx   
51 [0x33]:          jne 56   
52 [0x34]: line: 69 movi #1000, ebx   
54 [0x36]:          divl ebx, fp@1   
55 [0x37]:          jmp @68   
56 [0x38]:          pushl 0   
57 [0x39]:          movg @55 // @std#time_unit   
58 [0x3a]:          movn #3   
60 [0x3c]:          pushobj   
61 [0x3d]:          call @2300 // <std#_enum_.operator==>   
62 [0x3e]:          loadval ebx   
63 [0x3f]:          movr cmt, ebx   
64 [0x40]:          jne 68   
65 [0x41]: line: 71 movi #1000000, ebx   
67 [0x43]:          divl ebx, fp@1   
68 [0x44]:          nop   
69 [0x45]:          nop   
70 [0x46]: line: 75 loadl adx, fp+1   : protected asm start
71 [0x47]:          int 0x14   
72 [0x48]:          ret   : protected asm end


function: std#time.adjust_time[3534] params(1) in file: /usr/include/sharp//time.sharp:87:23: note:  
		    private static def adjust_time(usec: var) : var {
		                      ^

0 [0x0]: line: 89 call @3449 // <platform#build.is_windows>   
1 [0x1]:          loadval ebx   
2 [0x2]:          movr cmt, ebx   
3 [0x3]:          jne 11   
4 [0x4]: line: 90 ipushl #0   
5 [0x5]:          movi #1000, ebx   
7 [0x7]:          loadval ecx   
8 [0x8]:          div ecx, ebx -> ebx   
9 [0x9]:          return_val ebx   
10 [0xa]:          ret   
11 [0xb]:          nop   
12 [0xc]: line: 93 loadl ebx, fp+0   
13 [0xd]:          return_val ebx   
14 [0xe]:          ret   


function: std#time.measure[3535] params(2) in file: /usr/include/sharp//time.sharp:96:15: note:  
		    static def measure(tm_unit: time_unit, block: ()()) : var {
		              ^

0 [0x0]: line: 97 call @3525 // <std#time.nano_time>   
1 [0x1]:          ipopl 2   
2 [0x2]:          istorel 0, fp+3   
4 [0x4]: line: 98 ipushl #1   
5 [0x5]:          loadval ebx   
6 [0x6]:          calld ebx   
7 [0x7]: line: 99 call @3525 // <std#time.nano_time>   
8 [0x8]:          ipopl 3   
9 [0x9]: line: 101 pushl 0   
10 [0xa]:           movg @55 // @std#time_unit   
11 [0xb]:           movn #0   
13 [0xd]:           pushobj   
14 [0xe]:           call @2300 // <std#_enum_.operator==>   
15 [0xf]:           loadval ebx   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 25   
18 [0x12]: line: 103 ipushl #2   
19 [0x13]:           call @3529 // <std#time.nano_to_secs>   
20 [0x14]:           ipopl 2   
21 [0x15]: line: 104 ipushl #3   
22 [0x16]:           call @3529 // <std#time.nano_to_secs>   
23 [0x17]:           ipopl 3   
24 [0x18]:           jmp @56   
25 [0x19]:           pushl 0   
26 [0x1a]:           movg @55 // @std#time_unit   
27 [0x1b]:           movn #1   
29 [0x1d]:           pushobj   
30 [0x1e]:           call @2300 // <std#_enum_.operator==>   
31 [0x1f]:           loadval ebx   
32 [0x20]:           movr cmt, ebx   
33 [0x21]:           jne 41   
34 [0x22]: line: 107 ipushl #2   
35 [0x23]:           call @3528 // <std#time.nano_to_mills>   
36 [0x24]:           ipopl 2   
37 [0x25]: line: 108 ipushl #3   
38 [0x26]:           call @3528 // <std#time.nano_to_mills>   
39 [0x27]:           ipopl 3   
40 [0x28]:           jmp @56   
41 [0x29]:           pushl 0   
42 [0x2a]:           movg @55 // @std#time_unit   
43 [0x2b]:           movn #2   
45 [0x2d]:           pushobj   
46 [0x2e]:           call @2300 // <std#_enum_.operator==>   
47 [0x2f]:           loadval ebx   
48 [0x30]:           movr cmt, ebx   
49 [0x31]:           jne 56   
50 [0x32]: line: 111 ipushl #2   
51 [0x33]:           call @3527 // <std#time.nano_to_micro>   
52 [0x34]:           ipopl 2   
53 [0x35]: line: 112 ipushl #3   
54 [0x36]:           call @3527 // <std#time.nano_to_micro>   
55 [0x37]:           ipopl 3   
56 [0x38]:           nop   
57 [0x39]: line: 116 ipushl #3   
58 [0x3a]:           loadl ebx, fp+2   
59 [0x3b]:           loadval ecx   
60 [0x3c]:           sub ecx, ebx -> ebx   
61 [0x3d]:           return_val ebx   
62 [0x3e]:           ret   


function: std#time.measure[3536] params(3) in file: /usr/include/sharp//time.sharp:119:15: note:  
		    static def measure(tm_unit: time_unit, args: object[], block: (object[])()) : var {
		              ^

0 [0x0]: line: 120 call @3525 // <std#time.nano_time>   
1 [0x1]:           ipopl 3   
2 [0x2]:           istorel 0, fp+4   
4 [0x4]: line: 121 ipushl #2   
5 [0x5]:           pushl 1   
6 [0x6]:           smov ebx, sp+[-1]   
7 [0x7]:           calld ebx   
8 [0x8]: line: 122 call @3525 // <std#time.nano_time>   
9 [0x9]:           ipopl 4   
10 [0xa]: line: 124 pushl 0   
11 [0xb]:           movg @55 // @std#time_unit   
12 [0xc]:           movn #0   
14 [0xe]:           pushobj   
15 [0xf]:           call @2300 // <std#_enum_.operator==>   
16 [0x10]:           loadval ebx   
17 [0x11]:           movr cmt, ebx   
18 [0x12]:           jne 26   
19 [0x13]: line: 126 ipushl #3   
20 [0x14]:           call @3529 // <std#time.nano_to_secs>   
21 [0x15]:           ipopl 3   
22 [0x16]: line: 127 ipushl #4   
23 [0x17]:           call @3529 // <std#time.nano_to_secs>   
24 [0x18]:           ipopl 4   
25 [0x19]:           jmp @57   
26 [0x1a]:           pushl 0   
27 [0x1b]:           movg @55 // @std#time_unit   
28 [0x1c]:           movn #1   
30 [0x1e]:           pushobj   
31 [0x1f]:           call @2300 // <std#_enum_.operator==>   
32 [0x20]:           loadval ebx   
33 [0x21]:           movr cmt, ebx   
34 [0x22]:           jne 42   
35 [0x23]: line: 130 ipushl #3   
36 [0x24]:           call @3528 // <std#time.nano_to_mills>   
37 [0x25]:           ipopl 3   
38 [0x26]: line: 131 ipushl #4   
39 [0x27]:           call @3528 // <std#time.nano_to_mills>   
40 [0x28]:           ipopl 4   
41 [0x29]:           jmp @57   
42 [0x2a]:           pushl 0   
43 [0x2b]:           movg @55 // @std#time_unit   
44 [0x2c]:           movn #2   
46 [0x2e]:           pushobj   
47 [0x2f]:           call @2300 // <std#_enum_.operator==>   
48 [0x30]:           loadval ebx   
49 [0x31]:           movr cmt, ebx   
50 [0x32]:           jne 57   
51 [0x33]: line: 134 ipushl #3   
52 [0x34]:           call @3527 // <std#time.nano_to_micro>   
53 [0x35]:           ipopl 3   
54 [0x36]: line: 135 ipushl #4   
55 [0x37]:           call @3527 // <std#time.nano_to_micro>   
56 [0x38]:           ipopl 4   
57 [0x39]:           nop   
58 [0x3a]: line: 139 ipushl #4   
59 [0x3b]:           loadl ebx, fp+3   
60 [0x3c]:           loadval ecx   
61 [0x3d]:           sub ecx, ebx -> ebx   
62 [0x3e]:           return_val ebx   
63 [0x3f]:           ret   


constructor: std#time.time[3537] params(0) in file: /usr/include/sharp//time.sharp:6:6: note:  
		class time {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


function: std#_nil_.to_string[3538] params(0) in file: /usr/include/sharp//nil.sharp:14:15: note:  
		    public def to_string() := new string("nil");
		              ^

0 [0x0]: line: 14 new_class @0 // std#__srt_global   
1 [0x1]:          ret   
2 [0x2]:          dup    
3 [0x3]:          newstr @1 // nil   
4 [0x4]:          call @1959 // <std#string.string>   
5 [0x5]:          popobj2    
6 [0x6]:          returnobj   
7 [0x7]:          ret   


constructor: std#_nil_._nil_[3539] params(0) in file: /usr/include/sharp//nil.sharp:10:13: note:  
		stable class _nil_ {
		            ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#throwable.throwable[3540] params(1) in file: /usr/include/sharp//exceptions.sharp:30:21: note:  
		    public throwable(message : _int8[]) {
		                    ^

0 [0x0]: line: 26 call @3465 // <platform.kernel#vm.get_frame_info>   
1 [0x1]:          movl 0   
2 [0x2]:          movn #2   
4 [0x4]:          popobj   
5 [0x5]:          pushl 0   
6 [0x6]: line: 31 pushl 1   
7 [0x7]:          movl 0   
8 [0x8]:          movn #0   
10 [0xa]:          popobj   
11 [0xb]:          ret   


constructor: std#throwable.throwable[3541] params(1) in file: /usr/include/sharp//exceptions.sharp:34:21: note:  
		    public throwable(message : string) {
		                    ^

0 [0x0]: line: 26 call @3465 // <platform.kernel#vm.get_frame_info>   
1 [0x1]:          movl 0   
2 [0x2]:          movn #2   
4 [0x4]:          popobj   
5 [0x5]:          pushl 0   
6 [0x6]: line: 35 pushl 1   
7 [0x7]:          call @1985 // <std#string.get_data>   
8 [0x8]:          movl 0   
9 [0x9]:          movn #0   
11 [0xb]:          popobj   
12 [0xc]:          ret   


function: std#throwable.get_message[3542] params(0) in file: /usr/include/sharp//exceptions.sharp:38:8: note:  
		    def get_message() : string {
		       ^

0 [0x0]: line: 39 new_class @0 // std#__srt_global   
1 [0x1]:          ret   
2 [0x2]:          dup    
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          pushobj   
7 [0x7]:          call @1959 // <std#string.string>   
8 [0x8]:          popobj2    
9 [0x9]:          returnobj   
10 [0xa]:          ret   


function: std#throwable.to_string[3543] params(0) in file: /usr/include/sharp//exceptions.sharp:42:8: note:  
		    def to_string() : string
		       ^

0 [0x0]: line: 43 new_class @0 // std#__srt_global   
1 [0x1]:          ret   
2 [0x2]:          dup    
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          pushobj   
7 [0x7]:          call @1959 // <std#string.string>   
8 [0x8]:          popobj2    
9 [0x9]:          returnobj   
10 [0xa]:          ret   


constructor: std#throwable.throwable[3544] params(0) in file: /usr/include/sharp//exceptions.sharp:10:6: note:  
		class throwable {
		     ^

0 [0x0]: line: 26 call @3465 // <platform.kernel#vm.get_frame_info>   
1 [0x1]:          movl 0   
2 [0x2]:          movn #2   
4 [0x4]:          popobj   
5 [0x5]:          ret   


constructor: std#exception.exception[3545] params(1) in file: /usr/include/sharp//exceptions.sharp:50:21: note:  
		    public exception(message : _int8[]) -> base(message) {}
		                    ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3540 // <std#throwable.throwable>   
3 [0x3]:         ret   


constructor: std#exception.exception[3546] params(1) in file: /usr/include/sharp//exceptions.sharp:51:21: note:  
		    public exception(message : string) -> base(message) {}
		                    ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3541 // <std#throwable.throwable>   
3 [0x3]:         ret   


constructor: std#exception.exception[3547] params(0) in file: /usr/include/sharp//exceptions.sharp:49:6: note:  
		class exception base throwable {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3544 // <std#throwable.throwable>   
2 [0x2]:         ret   


constructor: std#illegal_argument_exception.illegal_argument_exception[3548] params(1) in file: /usr/include/sharp//exceptions.sharp:55:38: note:  
		    public illegal_argument_exception(message : _int8[]) -> base(message) {}
		                                     ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3545 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#illegal_argument_exception.illegal_argument_exception[3549] params(1) in file: /usr/include/sharp//exceptions.sharp:56:38: note:  
		    public illegal_argument_exception(message : string) -> base(message) {}
		                                     ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3546 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#illegal_argument_exception.illegal_argument_exception[3550] params(0) in file: /usr/include/sharp//exceptions.sharp:54:6: note:  
		class illegal_argument_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3547 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#illegal_state_exception.illegal_state_exception[3551] params(1) in file: /usr/include/sharp//exceptions.sharp:59:35: note:  
		    public illegal_state_exception(message : _int8[]) -> base(message) {}
		                                  ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3545 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#illegal_state_exception.illegal_state_exception[3552] params(1) in file: /usr/include/sharp//exceptions.sharp:60:35: note:  
		    public illegal_state_exception(message : string) -> base(message) {}
		                                  ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3546 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#illegal_state_exception.illegal_state_exception[3553] params(0) in file: /usr/include/sharp//exceptions.sharp:58:6: note:  
		class illegal_state_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3547 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#out_of_bounds_exception.out_of_bounds_exception[3554] params(1) in file: /usr/include/sharp//exceptions.sharp:63:35: note:  
		    public out_of_bounds_exception(message : _int8[]) -> base(message) {}
		                                  ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3545 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#out_of_bounds_exception.out_of_bounds_exception[3555] params(1) in file: /usr/include/sharp//exceptions.sharp:64:35: note:  
		    public out_of_bounds_exception(message : string) -> base(message) {}
		                                  ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3546 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#out_of_bounds_exception.out_of_bounds_exception[3556] params(0) in file: /usr/include/sharp//exceptions.sharp:62:6: note:  
		class out_of_bounds_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3547 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#io_exception.io_exception[3557] params(1) in file: /usr/include/sharp//exceptions.sharp:67:24: note:  
		    public io_exception(message : _int8[]) -> base(message) {}
		                       ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3545 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#io_exception.io_exception[3558] params(1) in file: /usr/include/sharp//exceptions.sharp:68:24: note:  
		    public io_exception(message : string) -> base(message) {}
		                       ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3546 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#io_exception.io_exception[3559] params(0) in file: /usr/include/sharp//exceptions.sharp:66:6: note:  
		class io_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3547 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#invalid_operation_exception.invalid_operation_exception[3560] params(1) in file: /usr/include/sharp//exceptions.sharp:71:39: note:  
		    public invalid_operation_exception(message : _int8[]) -> base(message) {}
		                                      ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3545 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#invalid_operation_exception.invalid_operation_exception[3561] params(1) in file: /usr/include/sharp//exceptions.sharp:72:39: note:  
		    public invalid_operation_exception(message : string) -> base(message) {}
		                                      ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3546 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#invalid_operation_exception.invalid_operation_exception[3562] params(0) in file: /usr/include/sharp//exceptions.sharp:70:6: note:  
		class invalid_operation_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3547 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#nullptr_exception.nullptr_exception[3563] params(1) in file: /usr/include/sharp//exceptions.sharp:75:29: note:  
		    public nullptr_exception(message : _int8[]) -> base(message) {}
		                            ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3545 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#nullptr_exception.nullptr_exception[3564] params(1) in file: /usr/include/sharp//exceptions.sharp:76:29: note:  
		    public nullptr_exception(message : string) -> base(message) {}
		                            ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3546 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#nullptr_exception.nullptr_exception[3565] params(0) in file: /usr/include/sharp//exceptions.sharp:74:6: note:  
		class nullptr_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3547 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#runtime_exception.runtime_exception[3566] params(1) in file: /usr/include/sharp//exceptions.sharp:79:29: note:  
		    public runtime_exception(message : _int8[]) -> base(message) {}
		                            ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3545 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#runtime_exception.runtime_exception[3567] params(1) in file: /usr/include/sharp//exceptions.sharp:80:29: note:  
		    public runtime_exception(message : string) -> base(message) {}
		                            ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3546 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#runtime_exception.runtime_exception[3568] params(0) in file: /usr/include/sharp//exceptions.sharp:78:6: note:  
		class runtime_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3547 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#stack_overflow_exception.stack_overflow_exception[3569] params(1) in file: /usr/include/sharp//exceptions.sharp:83:36: note:  
		    public stack_overflow_exception(message : _int8[]) -> base(message) {}
		                                   ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3545 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#stack_overflow_exception.stack_overflow_exception[3570] params(1) in file: /usr/include/sharp//exceptions.sharp:84:36: note:  
		    public stack_overflow_exception(message : string) -> base(message) {}
		                                   ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3546 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#stack_overflow_exception.stack_overflow_exception[3571] params(0) in file: /usr/include/sharp//exceptions.sharp:82:6: note:  
		class stack_overflow_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3547 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#thread_stack_exception.thread_stack_exception[3572] params(1) in file: /usr/include/sharp//exceptions.sharp:87:34: note:  
		    public thread_stack_exception(message : _int8[]) -> base(message) {}
		                                 ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3545 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#thread_stack_exception.thread_stack_exception[3573] params(1) in file: /usr/include/sharp//exceptions.sharp:88:34: note:  
		    public thread_stack_exception(message : string) -> base(message) {}
		                                 ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3546 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#thread_stack_exception.thread_stack_exception[3574] params(0) in file: /usr/include/sharp//exceptions.sharp:86:6: note:  
		class thread_stack_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3547 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#class_cast_exception.class_cast_exception[3575] params(1) in file: /usr/include/sharp//exceptions.sharp:91:32: note:  
		    public class_cast_exception(message : _int8[]) -> base(message) {}
		                               ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3545 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#class_cast_exception.class_cast_exception[3576] params(1) in file: /usr/include/sharp//exceptions.sharp:92:32: note:  
		    public class_cast_exception(message : string) -> base(message) {}
		                               ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3546 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#class_cast_exception.class_cast_exception[3577] params(0) in file: /usr/include/sharp//exceptions.sharp:90:6: note:  
		class class_cast_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3547 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#out_of_memory_exception.out_of_memory_exception[3578] params(1) in file: /usr/include/sharp//exceptions.sharp:95:35: note:  
		    public out_of_memory_exception(message : _int8[]) -> base(message) {}
		                                  ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3545 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#out_of_memory_exception.out_of_memory_exception[3579] params(1) in file: /usr/include/sharp//exceptions.sharp:96:35: note:  
		    public out_of_memory_exception(message : string) -> base(message) {}
		                                  ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3546 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#out_of_memory_exception.out_of_memory_exception[3580] params(0) in file: /usr/include/sharp//exceptions.sharp:94:6: note:  
		class out_of_memory_exception base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3547 // <std#exception.exception>   
2 [0x2]:         ret   


constructor: std#not_implemented_error.not_implemented_error[3581] params(1) in file: /usr/include/sharp//exceptions.sharp:99:33: note:  
		    public not_implemented_error(message : _int8[]) -> base(message) {}
		                                ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3590 // <std#error.error>   
3 [0x3]:         ret   


constructor: std#not_implemented_error.not_implemented_error[3582] params(1) in file: /usr/include/sharp//exceptions.sharp:100:33: note:  
		    public not_implemented_error(message : string) -> base(message) {}
		                                ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3591 // <std#error.error>   
3 [0x3]:         ret   


constructor: std#not_implemented_error.not_implemented_error[3583] params(0) in file: /usr/include/sharp//exceptions.sharp:98:6: note:  
		class not_implemented_error base error {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3592 // <std#error.error>   
2 [0x2]:         ret   


constructor: std#unsatisfied_link_error.unsatisfied_link_error[3584] params(1) in file: /usr/include/sharp//exceptions.sharp:103:34: note:  
		    public unsatisfied_link_error(message : _int8[]) -> base(message) {}
		                                 ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3590 // <std#error.error>   
3 [0x3]:         ret   


constructor: std#unsatisfied_link_error.unsatisfied_link_error[3585] params(1) in file: /usr/include/sharp//exceptions.sharp:104:34: note:  
		    public unsatisfied_link_error(message : string) -> base(message) {}
		                                 ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3591 // <std#error.error>   
3 [0x3]:         ret   


constructor: std#unsatisfied_link_error.unsatisfied_link_error[3586] params(0) in file: /usr/include/sharp//exceptions.sharp:102:6: note:  
		class unsatisfied_link_error base error {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3592 // <std#error.error>   
2 [0x2]:         ret   


constructor: std#assertion_error.assertion_error[3587] params(1) in file: /usr/include/sharp//exceptions.sharp:107:27: note:  
		    public assertion_error(message : _int8[]) -> base(message) {}
		                          ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3590 // <std#error.error>   
3 [0x3]:         ret   


constructor: std#assertion_error.assertion_error[3588] params(1) in file: /usr/include/sharp//exceptions.sharp:108:27: note:  
		    public assertion_error(message : string) -> base(message) {}
		                          ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3591 // <std#error.error>   
3 [0x3]:         ret   


constructor: std#assertion_error.assertion_error[3589] params(0) in file: /usr/include/sharp//exceptions.sharp:106:6: note:  
		class assertion_error base error {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3592 // <std#error.error>   
2 [0x2]:         ret   


constructor: std#error.error[3590] params(1) in file: /usr/include/sharp//exceptions.sharp:112:17: note:  
		    public error(message : _int8[]) -> base(message) {}
		                ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3545 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#error.error[3591] params(1) in file: /usr/include/sharp//exceptions.sharp:113:17: note:  
		    public error(message : string) -> base(message) {}
		                ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         call @3546 // <std#exception.exception>   
3 [0x3]:         ret   


constructor: std#error.error[3592] params(0) in file: /usr/include/sharp//exceptions.sharp:111:6: note:  
		class error base exception {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3547 // <std#exception.exception>   
2 [0x2]:         ret   


function: std#__srt_global.runtime_error[3593] params(1) in file: /usr/include/sharp//exceptions.sharp:129:4: note:  
		def runtime_error(message: string) : runtime_except {
		   ^

0 [0x0]: line: 130 new_class @0 // std#__srt_global   
1 [0x1]:           and adx, adx   
2 [0x2]:           dup    
3 [0x3]:           pushl 0   
4 [0x4]:           call @3567 // <std#runtime_exception.runtime_exception>   
5 [0x5]:           popobj2    
6 [0x6]:           returnobj   
7 [0x7]:           ret   


function: std#__srt_global.runtime_error[3594] params(0) in file: /usr/include/sharp//exceptions.sharp:133:4: note:  
		def runtime_error() : runtime_except {
		   ^

0 [0x0]: line: 134 new_class @0 // std#__srt_global   
1 [0x1]:           and adx, adx   
2 [0x2]:           dup    
3 [0x3]:           call @3568 // <std#runtime_exception.runtime_exception>   
4 [0x4]:           popobj2    
5 [0x5]:           returnobj   
6 [0x6]:           ret   


function: std#__srt_global.todo[3595] params(1) in file: /usr/include/sharp//exceptions.sharp:137:4: note:  
		def todo(message: string) {
		   ^

0 [0x0]: line: 138 new_class @0 // std#__srt_global   
1 [0x1]:           checknull   
2 [0x2]:           dup    
3 [0x3]:           pushl 0   
4 [0x4]:           call @3582 // <std#not_implemented_error.not_implemented_error>   
5 [0x5]:           throw    
6 [0x6]:           ret   


function: std#__srt_global.assert[3596] params(1) in file: /usr/include/sharp//exceptions.sharp:141:4: note:  
		def assert(cond : var) {
		   ^

0 [0x0]: line: 142 loadl ebx, fp+0   
1 [0x1]:           not ebx, ebx   
2 [0x2]:           movr cmt, ebx   
3 [0x3]:           jne 10   
4 [0x4]: line: 143 new_class @0 // std#__srt_global   
5 [0x5]:           new_classarray adx  // ui.support#text_view[]   
7 [0x7]:           newstr @63 // assertion failed!   
8 [0x8]:           call @3587 // <std#assertion_error.assertion_error>   
9 [0x9]:           throw    
10 [0xa]:           nop   
11 [0xb]:           ret   


function: std#__srt_global.assert[3597] params(2) in file: /usr/include/sharp//exceptions.sharp:147:4: note:  
		def assert(cond : var, message: string) {
		   ^

0 [0x0]: line: 148 loadl ebx, fp+0   
1 [0x1]:           not ebx, ebx   
2 [0x2]:           movr cmt, ebx   
3 [0x3]:           jne 10   
4 [0x4]: line: 149 new_class @0 // std#__srt_global   
5 [0x5]:           new_classarray adx  // ui.support#text_view[]   
7 [0x7]:           pushl 1   
8 [0x8]:           call @3588 // <std#assertion_error.assertion_error>   
9 [0x9]:           throw    
10 [0xa]:           nop   
11 [0xb]:           ret   


common.gpio#__srt_global.setup[3598] params(0) in file: common//gpio//gpio.sharp:3:11: note:  
		native def setup();
		          ^



common.gpio#__srt_global.pin_mode[3599] params(2) in file: common//gpio//gpio.sharp:4:11: note:  
		native def pin_mode(pin: var, mode: var);
		          ^



common.gpio#__srt_global.write_pin[3600] params(2) in file: common//gpio//gpio.sharp:5:11: note:  
		native def write_pin(pin: var, value: var);
		          ^



common.gpio#__srt_global.read_pin[3601] params(1) in file: common//gpio//gpio.sharp:6:11: note:  
		native def read_pin(pin: var): var;
		          ^



common.network.driver#__srt_global.setup[3602] params(5) in file: common//network//driver//dev_interface.sharp:6:11: note:  
		native def setup(trnsLvl: var, rate: var, delay: var,
		          ^



common.network.driver#__srt_global.set_transmission_lvl[3603] params(1) in file: common//network//driver//dev_interface.sharp:9:11: note:  
		native def set_transmission_lvl(level: var);
		          ^



common.network.driver#__srt_global.set_transmission_rate[3604] params(1) in file: common//network//driver//dev_interface.sharp:11:11: note:  
		native def set_transmission_rate(level: var);
		          ^



common.network.driver#__srt_global.dump_details[3605] params(0) in file: common//network//driver//dev_interface.sharp:13:11: note:  
		native def dump_details();
		          ^



common.network.driver#__srt_global.set_retry_count[3606] params(2) in file: common//network//driver//dev_interface.sharp:15:11: note:  
		native def set_retry_count(delay: var, count: var);
		          ^



common.network.driver#__srt_global.power_down[3607] params(0) in file: common//network//driver//dev_interface.sharp:17:11: note:  
		native def power_down();
		          ^



common.network.driver#__srt_global.get_signal_strength[3608] params(0) in file: common//network//driver//dev_interface.sharp:19:11: note:  
		native def get_signal_strength(): var;
		          ^



common.network.driver#__srt_global.get_network_quality[3609] params(0) in file: common//network//driver//dev_interface.sharp:21:11: note:  
		native def get_network_quality(): var[];
		          ^



common.network.driver#__srt_global.jam[3610] params(1) in file: common//network//driver//dev_interface.sharp:23:11: note:  
		native def jam(channel: var);
		          ^



common.network.driver#__srt_global.read[3611] params(0) in file: common//network//driver//dev_interface.sharp:25:11: note:  
		native def read() : _int8[];
		          ^



common.network.driver#__srt_global.listen[3612] params(0) in file: common//network//driver//dev_interface.sharp:27:11: note:  
		native def listen() : _int8[];
		          ^



common.network.driver#__srt_global.send[3613] params(1) in file: common//network//driver//dev_interface.sharp:29:11: note:  
		native def send(data: _int8[]);
		          ^



common.network.driver#__srt_global.get_last_error[3614] params(0) in file: common//network//driver//dev_interface.sharp:31:11: note:  
		native def get_last_error() : var;
		          ^



constructor: common.network.driver#nrf24.nrf24[3615] params(0) in file: common//network//driver//nrf.sharp:12:10: note:  
		    nrf24()
		         ^

0 [0x0]:         movi #0, ebx   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         movi #0, adx   
7 [0x7]:         rmov adx, ebx   
8 [0x8]:         movi #0, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #1   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         ldc ebx // 0   
17 [0x11]:         movl 0   
18 [0x12]:         movn #2   
20 [0x14]:         movi #0, adx   
22 [0x16]:         rmov adx, ebx   
23 [0x17]:         ldc ebx // 1   
24 [0x18]:         movl 0   
25 [0x19]:         movn #3   
27 [0x1b]:         movi #0, adx   
29 [0x1d]:         rmov adx, ebx   
30 [0x1e]:         pushl 0   
31 [0x1f]: line: 14 movi #1, ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #0   
36 [0x24]:          movi #0, adx   
38 [0x26]:          rmov adx, ebx   
39 [0x27]: line: 15 movi #1, ebx   
41 [0x29]:          movl 0   
42 [0x2a]:          movn #1   
44 [0x2c]:          movi #0, adx   
46 [0x2e]:          rmov adx, ebx   
47 [0x2f]: line: 16 movl 0   
48 [0x30]:          movn #2   
50 [0x32]:          movi #0, adx   
52 [0x34]:          iaload ebx, adx   
53 [0x35]:          rstore ebx   
54 [0x36]:          movl 0   
55 [0x37]:          movn #3   
57 [0x39]:          movi #0, adx   
59 [0x3b]:          iaload ebx, adx   
60 [0x3c]:          rstore ebx   
61 [0x3d]:          istore 2   
63 [0x3f]:          movi #5, ebx   
65 [0x41]:          rstore ebx   
66 [0x42]:          movg @105 // @common#constants   
67 [0x43]:          movn #20   
69 [0x45]:          movi #0, adx   
71 [0x47]:          iaload ebx, adx   
72 [0x48]:          rstore ebx   
73 [0x49]:          invoke_delegate 3602 { static=1, args=5 }   
75 [0x4b]:          ret   


function: common.network.driver#nrf24.set_rf_lvl[3616] params(1) in file: common//network//driver//nrf.sharp:20:5: note:  
			def set_rf_lvl(level: var) {
		    ^

0 [0x0]: line: 21 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 22 pushl 0   
3 [0x3]:          call @3627 // <common.network.driver#nrf24.check_state>   
4 [0x4]: line: 23 ipushl #1   
5 [0x5]:          movl 0   
6 [0x6]:          movn #2   
8 [0x8]:          loadval ebx   
9 [0x9]:          movi #0, adx   
11 [0xb]:          rmov adx, ebx   
12 [0xc]: line: 24 ipushl #1   
13 [0xd]:          invoke_delegate 3603 { static=1, args=1 }   
15 [0xf]:          movl 0   
16 [0x10]:          _ulck   
17 [0x11]:          ret   


function: common.network.driver#nrf24.jam_network[3617] params(1) in file: common//network//driver//nrf.sharp:28:12: note:  
		        def jam_network(channel: var) {
		           ^

0 [0x0]: line: 29 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 30 pushl 0   
3 [0x3]:          call @3627 // <common.network.driver#nrf24.check_state>   
4 [0x4]: line: 31 ipushl #1   
5 [0x5]:          invoke_delegate 3610 { static=1, args=1 }   
7 [0x7]:          movl 0   
8 [0x8]:          _ulck   
9 [0x9]:          ret   


function: common.network.driver#nrf24.set_data_rate[3618] params(1) in file: common//network//driver//nrf.sharp:35:5: note:  
			def set_data_rate(level: var) {
		    ^

0 [0x0]: line: 36 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 37 pushl 0   
3 [0x3]:          call @3627 // <common.network.driver#nrf24.check_state>   
4 [0x4]: line: 38 ipushl #1   
5 [0x5]:          movl 0   
6 [0x6]:          movn #3   
8 [0x8]:          loadval ebx   
9 [0x9]:          movi #0, adx   
11 [0xb]:          rmov adx, ebx   
12 [0xc]: line: 39 ipushl #1   
13 [0xd]:          invoke_delegate 3604 { static=1, args=1 }   
15 [0xf]:          movl 0   
16 [0x10]:          _ulck   
17 [0x11]:          ret   


function: common.network.driver#nrf24.dump[3619] params(0) in file: common//network//driver//nrf.sharp:43:5: note:  
			def dump() {
		    ^

0 [0x0]: line: 44 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 45 pushl 0   
3 [0x3]:          call @3627 // <common.network.driver#nrf24.check_state>   
4 [0x4]: line: 46 invoke_delegate 3605 { static=1, args=0 }   
6 [0x6]:          movl 0   
7 [0x7]:          _ulck   
8 [0x8]:          ret   


function: common.network.driver#nrf24.update_retry_count[3620] params(2) in file: common//network//driver//nrf.sharp:50:5: note:  
			def update_retry_count(delay: var, count: var) {
		    ^

0 [0x0]: line: 51 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 52 pushl 0   
3 [0x3]:          call @3627 // <common.network.driver#nrf24.check_state>   
4 [0x4]: line: 53 ipushl #1   
5 [0x5]:          ipushl #2   
6 [0x6]:          invoke_delegate 3606 { static=1, args=2 }   
8 [0x8]:          movl 0   
9 [0x9]:          _ulck   
10 [0xa]:          ret   


function: common.network.driver#nrf24.shut_down[3621] params(0) in file: common//network//driver//nrf.sharp:57:5: note:  
			def shut_down() {
		    ^

0 [0x0]: line: 58 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 59 movi #0, ebx   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          movi #0, adx   
9 [0x9]:          rmov adx, ebx   
10 [0xa]: line: 60 invoke_delegate 3607 { static=1, args=0 }   
12 [0xc]:          movl 0   
13 [0xd]:          _ulck   
14 [0xe]:          ret   


function: common.network.driver#nrf24.get_network_quality[3622] params(0) in file: common//network//driver//nrf.sharp:64:8: note:  
		    def get_network_quality() : var[] {
		       ^

0 [0x0]: line: 65 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 66 pushl 0   
3 [0x3]:          call @3627 // <common.network.driver#nrf24.check_state>   
4 [0x4]: line: 67 invoke_delegate 3609 { static=1, args=0 }   
6 [0x6]:          popobj2    
7 [0x7]:          pushobj   
8 [0x8]:          movl 0   
9 [0x9]:          _ulck   
10 [0xa]:          ret   
11 [0xb]:          movl 0   
12 [0xc]:          _ulck   


function: common.network.driver#nrf24.get_signal_strength[3623] params(0) in file: common//network//driver//nrf.sharp:71:5: note:  
			def get_signal_strength(): var {
		    ^

0 [0x0]: line: 72 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 73 pushl 0   
3 [0x3]:          call @3627 // <common.network.driver#nrf24.check_state>   
4 [0x4]: line: 74 invoke_delegate 3608 { static=1, args=0 }   
6 [0x6]:          loadval ebx   
7 [0x7]:          return_val ebx   
8 [0x8]:          movl 0   
9 [0x9]:          _ulck   
10 [0xa]:          ret   
11 [0xb]:          movl 0   
12 [0xc]:          _ulck   


function: common.network.driver#nrf24.read[3624] params(1) in file: common//network//driver//nrf.sharp:78:5: note:  
			def read(response: string): var {
		    ^

0 [0x0]: line: 79 pushl 0   
1 [0x1]:          call @3627 // <common.network.driver#nrf24.check_state>   
2 [0x2]: line: 81 pushl 1   
3 [0x3]:          invoke_delegate 3611 { static=1, args=0 }   
5 [0x5]:          call @1980 // <std#string.operator=>   
6 [0x6]: line: 82 invoke_delegate 3614 { static=1, args=0 }   
8 [0x8]:          loadval ebx   
9 [0x9]:          return_val ebx   
10 [0xa]:          ret   


function: common.network.driver#nrf24.listen[3625] params(1) in file: common//network//driver//nrf.sharp:85:5: note:  
			def listen(response: string) {
		    ^

0 [0x0]: line: 86 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 87 pushl 0   
3 [0x3]:          call @3627 // <common.network.driver#nrf24.check_state>   
4 [0x4]: line: 88 pushl 1   
5 [0x5]:          invoke_delegate 3612 { static=1, args=0 }   
7 [0x7]:          call @1980 // <std#string.operator=>   
8 [0x8]:          movl 0   
9 [0x9]:          _ulck   
10 [0xa]:          ret   


function: common.network.driver#nrf24.send[3626] params(1) in file: common//network//driver//nrf.sharp:92:5: note:  
			def send(response: string): var {
		    ^

0 [0x0]: line: 93 pushl 0   
1 [0x1]:          call @3627 // <common.network.driver#nrf24.check_state>   
2 [0x2]: line: 95 pushl 1   
3 [0x3]:          call @1985 // <std#string.get_data>   
4 [0x4]:          invoke_delegate 3613 { static=1, args=1 }   
6 [0x6]: line: 96 invoke_delegate 3614 { static=1, args=0 }   
8 [0x8]:          loadval ebx   
9 [0x9]:          return_val ebx   
10 [0xa]:          ret   


function: common.network.driver#nrf24.check_state[3627] params(0) in file: common//network//driver//nrf.sharp:99:5: note:  
			def check_state() {
		    ^

0 [0x0]: line: 100 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           not ebx, ebx   
7 [0x7]:           movr cmt, ebx   
8 [0x8]:           jne 15   
9 [0x9]: line: 101 new_class @0 // std#__srt_global   
10 [0xa]:           loadval adx   
11 [0xb]:           dup    
12 [0xc]:           newstr @64 // device is not setup   
13 [0xd]:           call @3551 // <std#illegal_state_exception.illegal_state_exception>   
14 [0xe]:           throw    
15 [0xf]:           nop   
16 [0x10]: line: 102 movl 0   
17 [0x11]:           movn #1   
19 [0x13]:           movi #0, adx   
21 [0x15]:           iaload ebx, adx   
22 [0x16]:           not ebx, ebx   
23 [0x17]:           movr cmt, ebx   
24 [0x18]:           jne 31   
25 [0x19]: line: 103 new_class @0 // std#__srt_global   
26 [0x1a]:           loadval adx   
27 [0x1b]:           dup    
28 [0x1c]:           newstr @65 // device is shutown   
29 [0x1d]:           call @3551 // <std#illegal_state_exception.illegal_state_exception>   
30 [0x1e]:           throw    
31 [0x1f]:           nop   
32 [0x20]:           ret   


function: common.network.core#request.jam_network[3628] params(1) in file: common//network//core//request.sharp:20:15: note:  
		    static def jam_network(channel: var)
		              ^

0 [0x0]: line: 21 movg @78 // @common.network.core#request   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          ipushl #0   
5 [0x5]:          call @3617 // <common.network.driver#nrf24.jam_network>   
6 [0x6]:          ret   


function: common.network.core#request.get_network_quality[3629] params(0) in file: common//network//core//request.sharp:23:15: note:  
		    static def get_network_quality()
		              ^

0 [0x0]: line: 24 movg @78 // @common.network.core#request   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          call @3622 // <common.network.driver#nrf24.get_network_quality>   
5 [0x5]:          popobj2    
6 [0x6]:          returnobj   
7 [0x7]:          ret   


function: common.network.core#request.get_signal_strength[3630] params(0) in file: common//network//core//request.sharp:26:15: note:  
		    static def get_signal_strength()
		              ^

0 [0x0]: line: 27 movg @78 // @common.network.core#request   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          call @3623 // <common.network.driver#nrf24.get_signal_strength>   
5 [0x5]:          loadval ebx   
6 [0x6]:          return_val ebx   
7 [0x7]:          ret   


function: common.network.core#request.write[3631] params(1) in file: common//network//core//request.sharp:29:23: note:  
		    private static def write(rdata: request_data): var {
		                      ^

0 [0x0]: line: 30 movg @78 // @common.network.core#request   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          pushl 0   
5 [0x5]:          call @3638 // <common.network.core#request_data.to_string>   
6 [0x6]:          call @3626 // <common.network.driver#nrf24.send>   
7 [0x7]:          loadval ebx   
8 [0x8]:          return_val ebx   
9 [0x9]:          ret   


function: common.network.core#request.process_result[3632] params(2) in file: common//network//core//request.sharp:33:23: note:  
		    private static def process_result(raw: string, rdata: request_data) {
		                      ^

0 [0x0]: line: 34 movl 0   
1 [0x1]:          checknull   
2 [0x2]:          skpe ebx // pc = 11   
3 [0x3]:          movl 0   
4 [0x4]:          pushobj   
5 [0x5]:          call @2000 // <std#string.size>   
6 [0x6]:          loadval ebx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movi #0, ebx   
10 [0xa]:          loadval ecx   
11 [0xb]:          test ecx, ebx   
12 [0xc]:          jne 14   
13 [0xd]: line: 35 ret   
14 [0xe]:          nop   
15 [0xf]: line: 37 istorel 0, fp+2   
17 [0x11]: line: 38 new_class @0 // std#__srt_global   
18 [0x12]: line: 39 ret   
19 [0x13]:          dup    
20 [0x14]:          call @2017 // <std#string.string>   
21 [0x15]:          popobj2    
22 [0x16]:          smovr_3 fp+3   
23 [0x17]: line: 40 new_class @0 // std#__srt_global   
24 [0x18]:          ret   
25 [0x19]:          dup    
26 [0x1a]:          call @2017 // <std#string.string>   
27 [0x1b]:          popobj2    
28 [0x1c]:          smovr_3 fp+4   
29 [0x1d]: line: 42 loadl ebx, fp+2   
30 [0x1e]:          smovr_2 ebx, fp+5   
31 [0x1f]: line: 43 pushl 0   
32 [0x20]:          ipushl #2   
33 [0x21]:          call @1982 // <std#string.operator[>   
34 [0x22]:          loadval ebx   
35 [0x23]:          rstore ebx   
36 [0x24]:          movi #61, ebx   
38 [0x26]:          loadval ecx   
39 [0x27]:          tne ecx, ebx   
40 [0x28]:          jne 44   
41 [0x29]:          iaddl 1, fp@2   
43 [0x2b]:          jmp @31   
44 [0x2c]: line: 44 pushl 0   
45 [0x2d]:          ipushl #5   
46 [0x2e]:          ipushl #2   
47 [0x2f]:          call @2014 // <std#string.substring>   
48 [0x30]:          popobj2    
49 [0x31]:          smovr_3 fp+3   
50 [0x32]: line: 46 loadl ebx, fp+2   
51 [0x33]:          inc ebx   
52 [0x34]:          smovr_2 ebx, fp+2   
53 [0x35]:          smovr_2 ebx, fp+5   
54 [0x36]: line: 47 pushl 0   
55 [0x37]:          ipushl #2   
56 [0x38]:          call @1982 // <std#string.operator[>   
57 [0x39]:          loadval ebx   
58 [0x3a]:          rstore ebx   
59 [0x3b]:          movi #44, ebx   
61 [0x3d]:          loadval ecx   
62 [0x3e]:          tne ecx, ebx   
63 [0x3f]:          jne 79   
64 [0x40]: line: 48 iaddl 1, fp@2   
66 [0x42]: line: 49 ipushl #2   
67 [0x43]:          pushl 0   
68 [0x44]:          call @2000 // <std#string.size>   
69 [0x45]:          loadval ebx   
70 [0x46]:          loadval ecx   
71 [0x47]:          lt ecx, ebx   
72 [0x48]:          movr ebx, cmt   
73 [0x49]:          not ebx, ebx   
74 [0x4a]:          movr cmt, ebx   
75 [0x4b]:          jne 77   
76 [0x4c]: line: 50 jmp @79   
77 [0x4d]:          nop   
78 [0x4e]:          jmp @54   
79 [0x4f]: line: 53 pushl 0   
80 [0x50]:          ipushl #5   
81 [0x51]:          ipushl #2   
82 [0x52]:          call @2014 // <std#string.substring>   
83 [0x53]:          popobj2    
84 [0x54]:          smovr_3 fp+4   
85 [0x55]: line: 55 pushl 1   
86 [0x56]:          pushl 3   
87 [0x57]:          pushl 4   
88 [0x58]:          call @3637 // <common.network.core#request_data.add_item>   
89 [0x59]:          pop   
90 [0x5a]: line: 56 iaddl 1, fp@2   
92 [0x5c]: line: 58 ipushl #2   
93 [0x5d]:          movi #1, ebx   
95 [0x5f]:          loadval ecx   
96 [0x60]:          add ecx, ebx -> ebx   
97 [0x61]:          rstore ebx   
98 [0x62]:          pushl 0   
99 [0x63]:          call @2000 // <std#string.size>   
100 [0x64]:          loadval ebx   
101 [0x65]:          loadval ecx   
102 [0x66]:          gte ecx, ebx   
103 [0x67]:          movr ebx, cmt   
104 [0x68]:          movr cmt, ebx   
105 [0x69]:          jne 107   
106 [0x6a]: line: 59 jmp @109   
107 [0x6b]:          nop   
108 [0x6c]:          jmp @17   
109 [0x6d]:          ret   


function: common.network.core#request.read[3633] params(1) in file: common//network//core//request.sharp:64:23: note:  
		    private static def read(rdata: request_data): var {
		                      ^

0 [0x0]: line: 65 new_class @0 // std#__srt_global   
1 [0x1]:          ret   
2 [0x2]:          dup    
3 [0x3]:          call @2017 // <std#string.string>   
4 [0x4]:          popobj2    
5 [0x5]:          smovr_3 fp+1   
6 [0x6]: line: 66 movg @78 // @common.network.core#request   
7 [0x7]:          movn #0   
9 [0x9]:          pushobj   
10 [0xa]:          pushl 1   
11 [0xb]:          call @3624 // <common.network.driver#nrf24.read>   
12 [0xc]:          ipopl 2   
13 [0xd]: line: 69 ipushl #2   
14 [0xe]:          movi #0, ebx   
16 [0x10]:          loadval ecx   
17 [0x11]:          test ecx, ebx   
18 [0x12]:          jne 26   
19 [0x13]: line: 71 pushl 1   
20 [0x14]:          pushl 0   
21 [0x15]:          call @3632 // <common.network.core#request.process_result>   
22 [0x16]: line: 72 istorel 0, fp+0   
24 [0x18]:          ret   
25 [0x19]:          jmp @29   
26 [0x1a]: line: 73 loadl ebx, fp+2   
27 [0x1b]:          return_val ebx   
28 [0x1c]:          ret   
29 [0x1d]:          nop   


function: common.network.core#request.listen[3634] params(1) in file: common//network//core//request.sharp:77:15: note:  
		    static def listen(rdata: request_data) {
		              ^

0 [0x0]: line: 78 new_class @0 // std#__srt_global   
1 [0x1]:          ret   
2 [0x2]:          dup    
3 [0x3]:          call @2017 // <std#string.string>   
4 [0x4]:          popobj2    
5 [0x5]:          smovr_3 fp+1   
6 [0x6]: line: 79 movg @78 // @common.network.core#request   
7 [0x7]:          movn #0   
9 [0x9]:          pushobj   
10 [0xa]:          pushl 1   
11 [0xb]:          call @3625 // <common.network.driver#nrf24.listen>   
12 [0xc]: line: 81 pushl 1   
13 [0xd]:          pushl 0   
14 [0xe]:          call @3632 // <common.network.core#request.process_result>   
15 [0xf]:          ret   


function: common.network.core#request.rw_inf[3635] params(3) in file: common//network//core//request.sharp:84:15: note:  
		    static def rw_inf(rdata: request_data, rw: var, count: var) : var {
		              ^

0 [0x0]: line: 85 movg @78 // @common.network.core#request   
1 [0x1]:          movn #0   
3 [0x3]:          _lck    
4 [0x4]: line: 86 ipushl #1   
5 [0x5]:          ldc ebx // 0   
6 [0x6]:          loadval ecx   
7 [0x7]:          test ecx, ebx   
8 [0x8]:          jne 55   
9 [0x9]: line: 87 pushl 0   
10 [0xa]: line: 88 call @3633 // <common.network.core#request.read>   
11 [0xb]:          loadval ebx   
12 [0xc]:          rstore ebx   
13 [0xd]:          movi #0, ebx   
15 [0xf]:          loadval ecx   
16 [0x10]:          tne ecx, ebx   
17 [0x11]:          jne 51   
18 [0x12]: line: 89 call @2186 // <std.io#thread.yield>   
19 [0x13]: line: 90 istore 1   
21 [0x15]:          call @2182 // <std.io#thread.sleep>   
22 [0x16]: line: 91 ipushl #2   
23 [0x17]:          movi #-100, ebx   
25 [0x19]:          loadval ecx   
26 [0x1a]:          tne ecx, ebx   
27 [0x1b]:          movr ebx, cmt   
28 [0x1c]:          skne ebx // pc = 40   
29 [0x1d]:          loadl ebx, fp+2   
30 [0x1e]:          movr egx, ebx   
31 [0x1f]:          dec ebx   
32 [0x20]:          smovr_2 ebx, fp+2   
33 [0x21]:          movr ebx, egx   
34 [0x22]:          rstore ebx   
35 [0x23]:          movi #0, ebx   
37 [0x25]:          loadval ecx   
38 [0x26]:          lt ecx, ebx   
39 [0x27]:          movr ebx, cmt   
40 [0x28]:          movr cmt, ebx   
41 [0x29]:          jne 49   
42 [0x2a]: line: 92 istorel 1, fp+0   
44 [0x2c]:          movg @78 // @common.network.core#request   
45 [0x2d]:          movn #0   
47 [0x2f]:          _ulck   
48 [0x30]:          ret   
49 [0x31]:          nop   
50 [0x32]: line: 94 jmp @9   
51 [0x33]:          nop   
52 [0x34]: line: 97 jmp @54   
53 [0x35]:          jmp @9   
54 [0x36]:          jmp @100   
55 [0x37]: line: 100 pushl 0   
56 [0x38]: line: 101 call @3631 // <common.network.core#request.write>   
57 [0x39]:           loadval ebx   
58 [0x3a]:           rstore ebx   
59 [0x3b]:           movi #0, ebx   
61 [0x3d]:           loadval ecx   
62 [0x3e]:           tne ecx, ebx   
63 [0x3f]:           jne 97   
64 [0x40]: line: 102 call @2186 // <std.io#thread.yield>   
65 [0x41]: line: 103 istore 1   
67 [0x43]:           call @2182 // <std.io#thread.sleep>   
68 [0x44]: line: 104 ipushl #2   
69 [0x45]:           movi #-100, ebx   
71 [0x47]:           loadval ecx   
72 [0x48]:           tne ecx, ebx   
73 [0x49]:           movr ebx, cmt   
74 [0x4a]:           skne ebx // pc = 86   
75 [0x4b]:           loadl ebx, fp+2   
76 [0x4c]:           movr egx, ebx   
77 [0x4d]:           dec ebx   
78 [0x4e]:           smovr_2 ebx, fp+2   
79 [0x4f]:           movr ebx, egx   
80 [0x50]:           rstore ebx   
81 [0x51]:           movi #0, ebx   
83 [0x53]:           loadval ecx   
84 [0x54]:           lt ecx, ebx   
85 [0x55]:           movr ebx, cmt   
86 [0x56]:           movr cmt, ebx   
87 [0x57]:           jne 95   
88 [0x58]: line: 105 istorel 1, fp+0   
90 [0x5a]:           movg @78 // @common.network.core#request   
91 [0x5b]:           movn #0   
93 [0x5d]:           _ulck   
94 [0x5e]:           ret   
95 [0x5f]:           nop   
96 [0x60]: line: 107 jmp @55   
97 [0x61]:           nop   
98 [0x62]: line: 110 jmp @100   
99 [0x63]:           jmp @55   
100 [0x64]:           nop   
101 [0x65]: line: 114 istorel 0, fp+0   
103 [0x67]:           movg @78 // @common.network.core#request   
104 [0x68]:           movn #0   
106 [0x6a]:           _ulck   
107 [0x6b]:           ret   
108 [0x6c]:           movg @78 // @common.network.core#request   
109 [0x6d]:           movn #0   
111 [0x6f]:           _ulck   


constructor: common.network.core#request.request[3636] params(0) in file: common//network//core//request.sharp:7:6: note:  
		class request
		     ^

0 [0x0]: line: 14 movg @78 // @common.network.core#request   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          pushnull    
5 [0x5]:          itest ebx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 21   
8 [0x8]: line: 15 new_class @0 // std#__srt_global   
9 [0x9]:          mull adx, fp@0   
10 [0xa]:          dup    
11 [0xb]:          call @3615 // <common.network.driver#nrf24.nrf24>   
12 [0xc]:          movg @78 // @common.network.core#request   
13 [0xd]:          movn #0   
15 [0xf]:          popobj   
16 [0x10]: line: 16 movg @78 // @common.network.core#request   
17 [0x11]:          movn #0   
19 [0x13]:          pushobj   
20 [0x14]:          call @3619 // <common.network.driver#nrf24.dump>   
21 [0x15]:          nop   
22 [0x16]:          ret   


function: common.network.core#request_data.add_item[3637] params(2) in file: common//network//core//request_data.sharp:28:8: note:  
		    def add_item(key: string, value: string) : request_data {
		       ^

0 [0x0]: line: 29 new_class @0 // std#__srt_global   
1 [0x1]:          isubl 112, fp@0   
3 [0x3]:          pushl 1   
4 [0x4]:          pushl 2   
5 [0x5]:          call @3641 // <common.network.core#request_data.request_item.request_item>   
6 [0x6]:          popobj2    
7 [0x7]:          smovr_3 fp+3   
8 [0x8]: line: 30 movl 0   
9 [0x9]:          movn #0   
11 [0xb]:          pushobj   
12 [0xc]:          pushl 3   
13 [0xd]:          movl 0   
14 [0xe]:          movn #1   
16 [0x10]:          movi #0, adx   
18 [0x12]:          iaload ebx, adx   
19 [0x13]:          rstore ebx   
20 [0x14]:          call @3995 // <std#list<common.network.core#request_data.request_item>.indexof>   
21 [0x15]:          ipopl 4   
22 [0x16]: line: 32 ipushl #4   
23 [0x17]:          movi #-1, ebx   
25 [0x19]:          loadval ecx   
26 [0x1a]:          test ecx, ebx   
27 [0x1b]:          jne 35   
28 [0x1c]: line: 33 movl 0   
29 [0x1d]:          movn #0   
31 [0x1f]:          pushobj   
32 [0x20]:          pushl 3   
33 [0x21]:          call @3984 // <std#list<common.network.core#request_data.request_item>.add>   
34 [0x22]:          jmp @46   
35 [0x23]: line: 35 pushl 2   
36 [0x24]:          movl 0   
37 [0x25]:          movn #0   
39 [0x27]:          pushobj   
40 [0x28]:          ipushl #4   
41 [0x29]:          call @3977 // <std#list<common.network.core#request_data.request_item>.at>   
42 [0x2a]:          popobj2    
43 [0x2b]:          movn #1   
45 [0x2d]:          popobj   
46 [0x2e]:          nop   
47 [0x2f]: line: 37 movl 0   
48 [0x30]:          movn #2   
50 [0x32]:          del   
51 [0x33]: line: 38 movl 0   
52 [0x34]:          returnobj   
53 [0x35]:          ret   


function: common.network.core#request_data.to_string[3638] params(0) in file: common//network//core//request_data.sharp:41:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 42 pushl 0   
1 [0x1]:          call @3998 // <common.network.core#request_data.get_request_string>   
2 [0x2]:          popobj2    
3 [0x3]:          returnobj   
4 [0x4]:          ret   


function: common.network.core#request_data.at[3639] params(1) in file: common//network//core//request_data.sharp:45:8: note:  
		    def at(key: string): string {
		       ^

0 [0x0]: line: 46 new_class @0 // std#__srt_global   
1 [0x1]:          isubl 112, fp@0   
3 [0x3]:          pushl 1   
4 [0x4]:          pushnull    
5 [0x5]:          call @3641 // <common.network.core#request_data.request_item.request_item>   
6 [0x6]:          popobj2    
7 [0x7]:          smovr_3 fp+2   
8 [0x8]: line: 47 movl 0   
9 [0x9]:          movn #0   
11 [0xb]:          pushobj   
12 [0xc]:          pushl 2   
13 [0xd]:          movl 0   
14 [0xe]:          movn #1   
16 [0x10]:          movi #0, adx   
18 [0x12]:          iaload ebx, adx   
19 [0x13]:          rstore ebx   
20 [0x14]:          call @3995 // <std#list<common.network.core#request_data.request_item>.indexof>   
21 [0x15]:          ipopl 3   
22 [0x16]: line: 49 ipushl #3   
23 [0x17]:          movi #-1, ebx   
25 [0x19]:          loadval ecx   
26 [0x1a]:          test ecx, ebx   
27 [0x1b]:          jne 33   
28 [0x1c]: line: 50 pushnull    
29 [0x1d]:          popobj2    
30 [0x1e]:          returnobj   
31 [0x1f]:          ret   
32 [0x20]:          jmp @44   
33 [0x21]: line: 52 movl 0   
34 [0x22]:          movn #0   
36 [0x24]:          pushobj   
37 [0x25]:          ipushl #3   
38 [0x26]:          call @3977 // <std#list<common.network.core#request_data.request_item>.at>   
39 [0x27]:          popobj2    
40 [0x28]:          movn #1   
42 [0x2a]:          returnobj   
43 [0x2b]:          ret   
44 [0x2c]:          nop   


function: common.network.core#request_data.clear[3640] params(0) in file: common//network//core//request_data.sharp:55:8: note:  
		    def clear() {
		       ^

0 [0x0]: line: 56 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          call @3981 // <std#list<common.network.core#request_data.request_item>.clear>   
5 [0x5]: line: 57 movl 0   
6 [0x6]:          movn #2   
8 [0x8]:          del   
9 [0x9]:          ret   


constructor: common.network.core#request_data.request_item.request_item[3641] params(2) in file: common//network//core//request_data.sharp:65:21: note:  
		        request_item(k: string, v: string)
		                    ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 67 pushl 1   
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          popobj   
6 [0x6]: line: 68 pushl 2   
7 [0x7]:          movl 0   
8 [0x8]:          movn #1   
10 [0xa]:          popobj   
11 [0xb]:          ret   


constructor: common.network.core#request_data.request_item.request_item[3642] params(0) in file: common//network//core//request_data.sharp:60:10: note:  
		    class request_item
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: common.network.core#request_data.request_data[3643] params(0) in file: common//network//core//request_data.sharp:3:6: note:  
		class request_data {
		     ^

0 [0x0]:         new_class @0 // std#__srt_global   
1 [0x1]:         ? (157)   
2 [0x2]:         dup    
3 [0x3]:         call @3970 // <std#list<common.network.core#request_data.request_item>.list>   
4 [0x4]:         movl 0   
5 [0x5]:         movn #0   
7 [0x7]:         popobj   
8 [0x8]:         movi #4090, ebx   
10 [0xa]:         movl 0   
11 [0xb]:         movn #1   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         ret   


constructor: common.network.remote#jam_request_impl.jam_request_impl[3644] params(0) in file: common//network//remote//jam_request_impl.sharp:9:21: note:  
		    jam_request_impl()
		                    ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3654 // <common.network.remote#command_request_impl.command_request_impl>   
2 [0x2]: line: 11 new_class @0 // std#__srt_global   
3 [0x3]:          iaddl 112, fp@0   
5 [0x5]:          call @3643 // <common.network.core#request_data.request_data>   
6 [0x6]:          movl 0   
7 [0x7]:          movn #0   
9 [0x9]:          popobj   
10 [0xa]: line: 12 movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          pushobj   
14 [0xe]:          movg @106 // @common#constants.strings   
15 [0xf]:          movn #0   
17 [0x11]:          pushobj   
18 [0x12]:          movg @106 // @common#constants.strings   
19 [0x13]:          movn #17   
21 [0x15]:          pushobj   
22 [0x16]:          call @3637 // <common.network.core#request_data.add_item>   
23 [0x17]:          pop   
24 [0x18]:          ret   


function: common.network.remote#jam_request_impl.jam[3645] params(1) in file: common//network//remote//jam_request_impl.sharp:17:8: note:  
		    def jam(channel: var) {
		       ^

0 [0x0]: line: 18 ipushl #1   
1 [0x1]:          call @3628 // <common.network.core#request.jam_network>   
2 [0x2]:          ret   


function: common.network.remote#jam_request_impl.post[3646] params(1) in file: common//network//remote//jam_request_impl.sharp:21:8: note:  
		    def post(channel: var): var {
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          movg @106 // @common#constants.strings   
5 [0x5]:          movn #4   
7 [0x7]:          pushobj   
8 [0x8]:          new_class @0 // std#__srt_global   
9 [0x9]:          ret   
10 [0xa]:          dup    
11 [0xb]:          newstr @24 //    
12 [0xc]:          call @1959 // <std#string.string>   
13 [0xd]:          ipushl #1   
14 [0xe]:          call @1991 // <std#string.operator+>   
15 [0xf]:          call @3637 // <common.network.core#request_data.add_item>   
16 [0x10]:          pop   
17 [0x11]: line: 23 pushl 0   
18 [0x12]:          movl 0   
19 [0x13]:          movn #0   
21 [0x15]:          pushobj   
22 [0x16]:          istore 1   
24 [0x18]:          movi #1, ebx   
26 [0x1a]:          rstore ebx   
27 [0x1b]:          call @3653 // <common.network.remote#command_request_impl.send_command>   
28 [0x1c]:          loadval ebx   
29 [0x1d]:          return_val ebx   
30 [0x1e]:          ret   


constructor: common.network.remote#acknowledge_request_impl.acknowledge_request_impl[3647] params(0) in file: common//network//remote//acknowledge_request_impl.sharp:10:29: note:  
		    acknowledge_request_impl()
		                            ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3654 // <common.network.remote#command_request_impl.command_request_impl>   
2 [0x2]: line: 12 new_class @0 // std#__srt_global   
3 [0x3]:          iaddl 112, fp@0   
5 [0x5]:          call @3643 // <common.network.core#request_data.request_data>   
6 [0x6]:          movl 0   
7 [0x7]:          movn #0   
9 [0x9]:          popobj   
10 [0xa]: line: 13 movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          pushobj   
14 [0xe]:          movg @106 // @common#constants.strings   
15 [0xf]:          movn #1   
17 [0x11]:          pushobj   
18 [0x12]:          movg @106 // @common#constants.strings   
19 [0x13]:          movn #2   
21 [0x15]:          pushobj   
22 [0x16]:          call @3637 // <common.network.core#request_data.add_item>   
23 [0x17]:          pop   
24 [0x18]:          ret   


function: common.network.remote#acknowledge_request_impl.send[3648] params(0) in file: common//network//remote//acknowledge_request_impl.sharp:18:8: note:  
		    def send() {
		       ^

0 [0x0]: line: 19 pushl 0   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          pushobj   
5 [0x5]:          istore 0   
7 [0x7]:          movi #1, ebx   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @3653 // <common.network.remote#command_request_impl.send_command>   
11 [0xb]:          pop   
12 [0xc]:          ret   


function: common.network.remote#__srt_global.initialize[3649] params(1) in file: common//network//remote//remote.sharp:6:4: note:  
		def initialize(net: network) {
		   ^

0 [0x0]: line: 7 new_class @0 // std#__srt_global   
1 [0x1]:         smovr adx, sp+0   
2 [0x2]:         dup    
3 [0x3]:         call @3657 // <common.network.remote#handshake_request_impl.handshake_request_impl>   
4 [0x4]:         movl 0   
5 [0x5]:         movn #0   
7 [0x7]:         popobj   
8 [0x8]: line: 8 new_class @0 // std#__srt_global   
9 [0x9]:         iaload adx, adx   
10 [0xa]:         dup    
11 [0xb]:         call @3654 // <common.network.remote#command_request_impl.command_request_impl>   
12 [0xc]:         movl 0   
13 [0xd]:         movn #1   
15 [0xf]:         popobj   
16 [0x10]: line: 9 new_class @0 // std#__srt_global   
17 [0x11]:         orl adx, 0   
18 [0x12]:         dup    
19 [0x13]:         call @3662 // <common.network.remote#flight_mode_change_request_impl.flight_mode_change_request_impl>   
20 [0x14]:         movl 0   
21 [0x15]:         movn #2   
23 [0x17]:         popobj   
24 [0x18]: line: 10 new_class @0 // std#__srt_global   
25 [0x19]:          imodl 112, fp@0   
27 [0x1b]:          call @3647 // <common.network.remote#acknowledge_request_impl.acknowledge_request_impl>   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #3   
31 [0x1f]:          popobj   
32 [0x20]: line: 11 new_class @0 // std#__srt_global   
33 [0x21]:          popobj   
34 [0x22]:          dup    
35 [0x23]:          call @3656 // <common.network.remote#signal_strength_request_impl.signal_strength_request_impl>   
36 [0x24]:          movl 0   
37 [0x25]:          movn #4   
39 [0x27]:          popobj   
40 [0x28]: line: 12 new_class @0 // std#__srt_global   
41 [0x29]:          loadl adx, fp+0   
42 [0x2a]:          dup    
43 [0x2b]:          call @3651 // <common.network.remote#network_scan_request_impl.network_scan_request_impl>   
44 [0x2c]:          movl 0   
45 [0x2d]:          movn #5   
47 [0x2f]:          popobj   
48 [0x30]: line: 13 new_class @0 // std#__srt_global   
49 [0x31]:          andl adx, 0   
50 [0x32]:          dup    
51 [0x33]:          call @3661 // <common.network.remote#flight_data_request_impl.flight_data_request_impl>   
52 [0x34]:          movl 0   
53 [0x35]:          movn #6   
55 [0x37]:          popobj   
56 [0x38]: line: 14 new_class @0 // std#__srt_global   
57 [0x39]:          idivl 112, fp@0   
59 [0x3b]:          call @3644 // <common.network.remote#jam_request_impl.jam_request_impl>   
60 [0x3c]:          movl 0   
61 [0x3d]:          movn #7   
63 [0x3f]:          popobj   
64 [0x40]:          ret   


function: common.network.remote#network_scan_request_impl.scan_network[3650] params(0) in file: common//network//remote//network_scan_request_impl.sharp:10:8: note:  
		    def scan_network(): var[] {
		       ^

0 [0x0]: line: 11 call @3629 // <common.network.core#request.get_network_quality>   
1 [0x1]:          popobj2    
2 [0x2]:          returnobj   
3 [0x3]:          ret   


constructor: common.network.remote#network_scan_request_impl.network_scan_request_impl[3651] params(0) in file: common//network//remote//network_scan_request_impl.sharp:8:6: note:  
		class network_scan_request_impl base request : network_scan_request
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3636 // <common.network.core#request.request>   
2 [0x2]:         ret   


function: common.network.remote#command_request_impl.listen[3652] params(0) in file: common//network//remote//command_request_impl.sharp:11:8: note:  
		    def listen(): command_response {
		       ^

0 [0x0]: line: 12 new_class @0 // std#__srt_global   
1 [0x1]:          iaddl 112, fp@0   
3 [0x3]:          call @3643 // <common.network.core#request_data.request_data>   
4 [0x4]:          popobj2    
5 [0x5]:          smovr_3 fp+1   
6 [0x6]: line: 14 pushl 1   
7 [0x7]: line: 15 call @3634 // <common.network.core#request.listen>   
8 [0x8]: line: 17 pushl 1   
9 [0x9]:          movg @106 // @common#constants.strings   
10 [0xa]:          movn #0   
12 [0xc]:          pushobj   
13 [0xd]:          call @3639 // <common.network.core#request_data.at>   
14 [0xe]:          popobj2    
15 [0xf]:          smovr_3 fp+2   
16 [0x10]: line: 18 movl 2   
17 [0x11]:          checknull   
18 [0x12]:          not ebx, ebx   
19 [0x13]:          movr cmt, ebx   
20 [0x14]:          jne 31   
21 [0x15]: line: 19 new_class @0 // std#__srt_global   
22 [0x16]:          get adx   
23 [0x17]:          dup    
24 [0x18]:          pushl 2   
25 [0x19]:          pushl 1   
26 [0x1a]:          call @3696 // <common.network.data.response#command_response.command_response>   
27 [0x1b]:          popobj2    
28 [0x1c]:          returnobj   
29 [0x1d]:          ret   
30 [0x1e]:          jmp @34   
31 [0x1f]: line: 21 pushl 1   
32 [0x20]:          call @3640 // <common.network.core#request_data.clear>   
33 [0x21]: line: 22 jmp @6   
34 [0x22]:          nop   
35 [0x23]: line: 25 pushnull    
36 [0x24]:          popobj2    
37 [0x25]:          returnobj   
38 [0x26]:          ret   


function: common.network.remote#command_request_impl.send_command[3653] params(3) in file: common//network//remote//command_request_impl.sharp:28:8: note:  
		    def send_command(req: request_data, ack: var, timeout: var): var {
		       ^

0 [0x0]: line: 29 new_class @0 // std#__srt_global   
1 [0x1]:          iaddl 112, fp@0   
3 [0x3]:          call @3643 // <common.network.core#request_data.request_data>   
4 [0x4]:          popobj2    
5 [0x5]:          smovr_3 fp+4   
6 [0x6]: line: 31 loadl ebx, fp+3   
7 [0x7]:          movr cmt, ebx   
8 [0x8]:          jne 67   
9 [0x9]: line: 33 pushl 1   
10 [0xa]:          ldc ebx // 1   
11 [0xb]:          rstore ebx   
12 [0xc]:          istore 3   
14 [0xe]:          call @3635 // <common.network.core#request.rw_inf>   
15 [0xf]:          loadval ebx   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 21   
18 [0x12]: line: 34 istorel 1, fp+0   
20 [0x14]:          ret   
21 [0x15]:          nop   
22 [0x16]: line: 37 loadl ebx, fp+2   
23 [0x17]:          movr cmt, ebx   
24 [0x18]:          jne 65   
25 [0x19]: line: 38 pushl 4   
26 [0x1a]:          ldc ebx // 0   
27 [0x1b]:          rstore ebx   
28 [0x1c]:          istore 3   
30 [0x1e]:          call @3635 // <common.network.core#request.rw_inf>   
31 [0x1f]:          loadval ebx   
32 [0x20]:          movr cmt, ebx   
33 [0x21]:          jne 37   
34 [0x22]: line: 39 istorel 1, fp+0   
36 [0x24]:          ret   
37 [0x25]:          nop   
38 [0x26]: line: 42 pushl 4   
39 [0x27]:          movg @106 // @common#constants.strings   
40 [0x28]:          movn #1   
42 [0x2a]:          pushobj   
43 [0x2b]:          call @3639 // <common.network.core#request_data.at>   
44 [0x2c]:          popobj2    
45 [0x2d]:          smovr_3 fp+5   
46 [0x2e]: line: 43 movl 5   
47 [0x2f]:          checknull   
48 [0x30]:          not ebx, ebx   
49 [0x31]:          skne ebx // pc = 58   
50 [0x32]:          movl 5   
51 [0x33]:          pushobj   
52 [0x34]:          movg @106 // @common#constants.strings   
53 [0x35]:          movn #2   
55 [0x37]:          pushobj   
56 [0x38]:          call @1977 // <std#string.operator==>   
57 [0x39]:          loadval ebx   
58 [0x3a]:          not ebx, ebx   
59 [0x3b]:          movr cmt, ebx   
60 [0x3c]:          jne 64   
61 [0x3d]: line: 44 istorel 1, fp+0   
63 [0x3f]:          ret   
64 [0x40]:          nop   
65 [0x41]:          nop   
66 [0x42]:          jmp @116   
67 [0x43]: line: 48 pushl 1   
68 [0x44]: line: 49 ldc ebx // 1   
69 [0x45]:          rstore ebx   
70 [0x46]:          istore 3   
72 [0x48]:          call @3635 // <common.network.core#request.rw_inf>   
73 [0x49]:          pop   
74 [0x4a]: line: 51 loadl ebx, fp+2   
75 [0x4b]:          movr cmt, ebx   
76 [0x4c]:          jne 115   
77 [0x4d]: line: 52 pushl 4   
78 [0x4e]:          ldc ebx // 0   
79 [0x4f]:          rstore ebx   
80 [0x50]:          istore 3   
82 [0x52]:          call @3635 // <common.network.core#request.rw_inf>   
83 [0x53]:          loadval ebx   
84 [0x54]:          movr cmt, ebx   
85 [0x55]:          jne 87   
86 [0x56]: line: 53 jmp @67   
87 [0x57]:          nop   
88 [0x58]: line: 56 pushl 4   
89 [0x59]:          movg @106 // @common#constants.strings   
90 [0x5a]:          movn #1   
92 [0x5c]:          pushobj   
93 [0x5d]:          call @3639 // <common.network.core#request_data.at>   
94 [0x5e]:          popobj2    
95 [0x5f]:          smovr_3 fp+6   
96 [0x60]: line: 57 movl 6   
97 [0x61]:          checknull   
98 [0x62]:          not ebx, ebx   
99 [0x63]:          skne ebx // pc = 108   
100 [0x64]:          movl 6   
101 [0x65]:          pushobj   
102 [0x66]:          movg @106 // @common#constants.strings   
103 [0x67]:          movn #2   
105 [0x69]:          pushobj   
106 [0x6a]:          call @1977 // <std#string.operator==>   
107 [0x6b]:          loadval ebx   
108 [0x6c]:          not ebx, ebx   
109 [0x6d]:          movr cmt, ebx   
110 [0x6e]:          jne 114   
111 [0x6f]: line: 58 pushl 4   
112 [0x70]:          call @3640 // <common.network.core#request_data.clear>   
113 [0x71]: line: 59 jmp @67   
114 [0x72]:          nop   
115 [0x73]:          nop   
116 [0x74]:          nop   
117 [0x75]: line: 64 istorel 0, fp+0   
119 [0x77]:          ret   


constructor: common.network.remote#command_request_impl.command_request_impl[3654] params(0) in file: common//network//remote//command_request_impl.sharp:8:6: note:  
		class command_request_impl base request : command_request
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3636 // <common.network.core#request.request>   
2 [0x2]:         ret   


function: common.network.remote#signal_strength_request_impl.get_strength[3655] params(0) in file: common//network//remote//signal_strength_request_impl.sharp:10:8: note:  
		    def get_strength(): var {
		       ^

0 [0x0]: line: 11 call @3630 // <common.network.core#request.get_signal_strength>   
1 [0x1]:          loadval ebx   
2 [0x2]:          return_val ebx   
3 [0x3]:          ret   


constructor: common.network.remote#signal_strength_request_impl.signal_strength_request_impl[3656] params(0) in file: common//network//remote//signal_strength_request_impl.sharp:8:6: note:  
		class signal_strength_request_impl base request : signal_strength_request
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3636 // <common.network.core#request.request>   
2 [0x2]:         ret   


constructor: common.network.remote#handshake_request_impl.handshake_request_impl[3657] params(0) in file: common//network//remote//handshake_request_impl.sharp:10:27: note:  
		    handshake_request_impl()
		                          ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3654 // <common.network.remote#command_request_impl.command_request_impl>   
2 [0x2]: line: 12 new_class @0 // std#__srt_global   
3 [0x3]:          iaddl 112, fp@0   
5 [0x5]:          call @3643 // <common.network.core#request_data.request_data>   
6 [0x6]:          movl 0   
7 [0x7]:          movn #0   
9 [0x9]:          popobj   
10 [0xa]: line: 13 movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          pushobj   
14 [0xe]:          movg @106 // @common#constants.strings   
15 [0xf]:          movn #0   
17 [0x11]:          pushobj   
18 [0x12]:          movg @106 // @common#constants.strings   
19 [0x13]:          movn #10   
21 [0x15]:          pushobj   
22 [0x16]:          call @3637 // <common.network.core#request_data.add_item>   
23 [0x17]:          pop   
24 [0x18]:          ret   


function: common.network.remote#handshake_request_impl.handshake[3658] params(0) in file: common//network//remote//handshake_request_impl.sharp:18:8: note:  
		    def handshake() {
		       ^

0 [0x0]: line: 19 pushl 0   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          pushobj   
5 [0x5]:          istore 1   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          rstore ebx   
10 [0xa]:          call @3653 // <common.network.remote#command_request_impl.send_command>   
11 [0xb]:          pop   
12 [0xc]:          ret   


function: common.network.remote#flight_data_request_impl._get[3659] params(0) in file: common//network//remote//flight_data_request_impl.sharp:11:8: note:  
		    def _get() : flight_data_response {
		       ^

0 [0x0]: line: 12 new_class @0 // std#__srt_global   
1 [0x1]:          iaddl 112, fp@0   
3 [0x3]:          call @3643 // <common.network.core#request_data.request_data>   
4 [0x4]:          popobj2    
5 [0x5]:          smovr_3 fp+1   
6 [0x6]: line: 13 new_class @0 // std#__srt_global   
7 [0x7]:          iaddl 112, fp@0   
9 [0x9]:          call @3643 // <common.network.core#request_data.request_data>   
10 [0xa]:          popobj2    
11 [0xb]:          smovr_3 fp+2   
12 [0xc]: line: 14 pushl 2   
13 [0xd]:          movg @106 // @common#constants.strings   
14 [0xe]:          movn #0   
16 [0x10]:          pushobj   
17 [0x11]:          movg @106 // @common#constants.strings   
18 [0x12]:          movn #16   
20 [0x14]:          pushobj   
21 [0x15]:          call @3637 // <common.network.core#request_data.add_item>   
22 [0x16]:          pop   
23 [0x17]: line: 17 pushl 2   
24 [0x18]:          ldc ebx // 1   
25 [0x19]:          rstore ebx   
26 [0x1a]:          istore 3   
28 [0x1c]:          call @3635 // <common.network.core#request.rw_inf>   
29 [0x1d]:          loadval ebx   
30 [0x1e]:          movr cmt, ebx   
31 [0x1f]:          jne 36   
32 [0x20]: line: 18 pushnull    
33 [0x21]:          popobj2    
34 [0x22]:          returnobj   
35 [0x23]:          ret   
36 [0x24]:          nop   
37 [0x25]: line: 21 pushl 1   
38 [0x26]:          ldc ebx // 0   
39 [0x27]:          rstore ebx   
40 [0x28]:          istore 3   
42 [0x2a]:          call @3635 // <common.network.core#request.rw_inf>   
43 [0x2b]:          loadval ebx   
44 [0x2c]:          movr cmt, ebx   
45 [0x2d]:          jne 50   
46 [0x2e]: line: 22 pushnull    
47 [0x2f]:          popobj2    
48 [0x30]:          returnobj   
49 [0x31]:          ret   
50 [0x32]:          nop   
51 [0x33]: line: 25 pushl 1   
52 [0x34]:          movg @106 // @common#constants.strings   
53 [0x35]:          movn #1   
55 [0x37]:          pushobj   
56 [0x38]:          call @3639 // <common.network.core#request_data.at>   
57 [0x39]:          popobj2    
58 [0x3a]:          smovr_3 fp+3   
59 [0x3b]: line: 26 movl 3   
60 [0x3c]:          checknull   
61 [0x3d]:          not ebx, ebx   
62 [0x3e]:          skne ebx // pc = 101   
63 [0x3f]:          movl 3   
64 [0x40]:          pushobj   
65 [0x41]:          newstr @66 // data   
66 [0x42]:          call @1976 // <std#string.operator==>   
67 [0x43]:          loadval ebx   
68 [0x44]:          skne ebx // pc = 101   
69 [0x45]:          movl 1   
70 [0x46]:          pushobj   
71 [0x47]:          movg @106 // @common#constants.strings   
72 [0x48]:          movn #6   
74 [0x4a]:          pushobj   
75 [0x4b]:          call @3639 // <common.network.core#request_data.at>   
76 [0x4c]:          pushnull    
77 [0x4d]:          itest ebx   
78 [0x4e]:          not ebx, ebx   
79 [0x4f]:          skne ebx // pc = 101   
80 [0x50]:          movl 1   
81 [0x51]:          pushobj   
82 [0x52]:          movg @106 // @common#constants.strings   
83 [0x53]:          movn #5   
85 [0x55]:          pushobj   
86 [0x56]:          call @3639 // <common.network.core#request_data.at>   
87 [0x57]:          pushnull    
88 [0x58]:          itest ebx   
89 [0x59]:          not ebx, ebx   
90 [0x5a]:          skne ebx // pc = 101   
91 [0x5b]:          movl 1   
92 [0x5c]:          pushobj   
93 [0x5d]:          movg @106 // @common#constants.strings   
94 [0x5e]:          movn #7   
96 [0x60]:          pushobj   
97 [0x61]:          call @3639 // <common.network.core#request_data.at>   
98 [0x62]:          pushnull    
99 [0x63]:          itest ebx   
100 [0x64]:          not ebx, ebx   
101 [0x65]:          movr cmt, ebx   
102 [0x66]:          jne 156   
103 [0x67]: line: 28 pushl 1   
104 [0x68]:          movg @106 // @common#constants.strings   
105 [0x69]:          movn #6   
107 [0x6b]:          pushobj   
108 [0x6c]:          call @3639 // <common.network.core#request_data.at>   
109 [0x6d]:          call @848 // <std#integer<_int32>.parse>   
110 [0x6e]:          movl 0   
111 [0x6f]:          movn #0   
113 [0x71]:          movn #0   
115 [0x73]:          loadval ebx   
116 [0x74]:          movi #0, adx   
118 [0x76]:          rmov adx, ebx   
119 [0x77]: line: 29 pushl 1   
120 [0x78]:          movg @106 // @common#constants.strings   
121 [0x79]:          movn #5   
123 [0x7b]:          pushobj   
124 [0x7c]:          call @3639 // <common.network.core#request_data.at>   
125 [0x7d]:          call @848 // <std#integer<_int32>.parse>   
126 [0x7e]:          movl 0   
127 [0x7f]:          movn #0   
129 [0x81]:          movn #1   
131 [0x83]:          loadval ebx   
132 [0x84]:          movi #0, adx   
134 [0x86]:          rmov adx, ebx   
135 [0x87]: line: 30 pushl 1   
136 [0x88]:          movg @106 // @common#constants.strings   
137 [0x89]:          movn #7   
139 [0x8b]:          pushobj   
140 [0x8c]:          call @3639 // <common.network.core#request_data.at>   
141 [0x8d]:          call @848 // <std#integer<_int32>.parse>   
142 [0x8e]:          movl 0   
143 [0x8f]:          movn #0   
145 [0x91]:          movn #2   
147 [0x93]:          loadval ebx   
148 [0x94]:          movi #0, adx   
150 [0x96]:          rmov adx, ebx   
151 [0x97]: line: 31 movl 0   
152 [0x98]:          movn #0   
154 [0x9a]:          returnobj   
155 [0x9b]:          ret   
156 [0x9c]:          nop   
157 [0x9d]: line: 34 pushnull    
158 [0x9e]:          popobj2    
159 [0x9f]:          returnobj   
160 [0xa0]:          ret   


function: common.network.remote#flight_data_request_impl.post[3660] params(1) in file: common//network//remote//flight_data_request_impl.sharp:37:8: note:  
		    def post(data: flight_data_response) {
		       ^

0 [0x0]: line: 38 new_class @0 // std#__srt_global   
1 [0x1]:          iaddl 112, fp@0   
3 [0x3]:          call @3643 // <common.network.core#request_data.request_data>   
4 [0x4]:          popobj2    
5 [0x5]:          smovr_3 fp+2   
6 [0x6]: line: 39 pushl 2   
7 [0x7]:          movg @106 // @common#constants.strings   
8 [0x8]:          movn #1   
10 [0xa]:          pushobj   
11 [0xb]:          new_class @0 // std#__srt_global   
12 [0xc]:          ret   
13 [0xd]:          dup    
14 [0xe]:          newstr @66 // data   
15 [0xf]:          call @1959 // <std#string.string>   
16 [0x10]:          call @3637 // <common.network.core#request_data.add_item>   
17 [0x11]:          pop   
18 [0x12]: line: 40 pushl 2   
19 [0x13]:          movg @106 // @common#constants.strings   
20 [0x14]:          movn #5   
22 [0x16]:          pushobj   
23 [0x17]:          new_class @0 // std#__srt_global   
24 [0x18]:          ret   
25 [0x19]:          dup    
26 [0x1a]:          newstr @24 //    
27 [0x1b]:          call @1959 // <std#string.string>   
28 [0x1c]:          movl 1   
29 [0x1d]:          movn #1   
31 [0x1f]:          movi #0, adx   
33 [0x21]:          iaload ebx, adx   
34 [0x22]:          rstore ebx   
35 [0x23]:          call @1991 // <std#string.operator+>   
36 [0x24]:          call @3637 // <common.network.core#request_data.add_item>   
37 [0x25]:          pop   
38 [0x26]: line: 41 pushl 2   
39 [0x27]:          movg @106 // @common#constants.strings   
40 [0x28]:          movn #7   
42 [0x2a]:          pushobj   
43 [0x2b]:          new_class @0 // std#__srt_global   
44 [0x2c]:          ret   
45 [0x2d]:          dup    
46 [0x2e]:          newstr @24 //    
47 [0x2f]:          call @1959 // <std#string.string>   
48 [0x30]:          movl 1   
49 [0x31]:          movn #2   
51 [0x33]:          movi #0, adx   
53 [0x35]:          iaload ebx, adx   
54 [0x36]:          rstore ebx   
55 [0x37]:          call @1991 // <std#string.operator+>   
56 [0x38]:          call @3637 // <common.network.core#request_data.add_item>   
57 [0x39]:          pop   
58 [0x3a]: line: 42 pushl 2   
59 [0x3b]:          movg @106 // @common#constants.strings   
60 [0x3c]:          movn #6   
62 [0x3e]:          pushobj   
63 [0x3f]:          new_class @0 // std#__srt_global   
64 [0x40]:          ret   
65 [0x41]:          dup    
66 [0x42]:          newstr @24 //    
67 [0x43]:          call @1959 // <std#string.string>   
68 [0x44]:          movl 1   
69 [0x45]:          movn #0   
71 [0x47]:          movi #0, adx   
73 [0x49]:          iaload ebx, adx   
74 [0x4a]:          rstore ebx   
75 [0x4b]:          call @1991 // <std#string.operator+>   
76 [0x4c]:          call @3637 // <common.network.core#request_data.add_item>   
77 [0x4d]:          pop   
78 [0x4e]: line: 43 pushl 0   
79 [0x4f]:          pushl 2   
80 [0x50]:          istore 0   
82 [0x52]:          movi #1, ebx   
84 [0x54]:          rstore ebx   
85 [0x55]:          call @3653 // <common.network.remote#command_request_impl.send_command>   
86 [0x56]:          pop   
87 [0x57]:          ret   


constructor: common.network.remote#flight_data_request_impl.flight_data_request_impl[3661] params(0) in file: common//network//remote//flight_data_request_impl.sharp:7:6: note:  
		class flight_data_request_impl base command_request_impl : flight_data_request
		     ^

0 [0x0]:         new_class @0 // std#__srt_global   
1 [0x1]:         invoke_delegate 0 { static=0, args=0 }   
3 [0x3]:         istore 0   
5 [0x5]:         movi #0, ebx   
7 [0x7]:         rstore ebx   
8 [0x8]:         istore 0   
10 [0xa]:         call @3694 // <common.network.data.response#flight_data_response.flight_data_response>   
11 [0xb]:         movl 0   
12 [0xc]:         movn #0   
14 [0xe]:         popobj   
15 [0xf]:         ret   


constructor: common.network.remote#flight_mode_change_request_impl.flight_mode_change_request_impl[3662] params(0) in file: common//network//remote//flight_mode_request_impl.sharp:9:36: note:  
		    flight_mode_change_request_impl()
		                                   ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3654 // <common.network.remote#command_request_impl.command_request_impl>   
2 [0x2]: line: 11 new_class @0 // std#__srt_global   
3 [0x3]:          iaddl 112, fp@0   
5 [0x5]:          call @3643 // <common.network.core#request_data.request_data>   
6 [0x6]:          movl 0   
7 [0x7]:          movn #0   
9 [0x9]:          popobj   
10 [0xa]: line: 12 movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          pushobj   
14 [0xe]:          movg @106 // @common#constants.strings   
15 [0xf]:          movn #0   
17 [0x11]:          pushobj   
18 [0x12]:          movg @106 // @common#constants.strings   
19 [0x13]:          movn #15   
21 [0x15]:          pushobj   
22 [0x16]:          call @3637 // <common.network.core#request_data.add_item>   
23 [0x17]:          pop   
24 [0x18]:          ret   


function: common.network.remote#flight_mode_change_request_impl.change_mode[3663] params(1) in file: common//network//remote//flight_mode_request_impl.sharp:17:8: note:  
		    def change_mode(mode: string): var {
		       ^

0 [0x0]: line: 18 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          movg @106 // @common#constants.strings   
5 [0x5]:          movn #3   
7 [0x7]:          pushobj   
8 [0x8]:          pushl 1   
9 [0x9]:          call @3637 // <common.network.core#request_data.add_item>   
10 [0xa]:          pop   
11 [0xb]: line: 19 pushl 0   
12 [0xc]:          movl 0   
13 [0xd]:          movn #0   
15 [0xf]:          pushobj   
16 [0x10]:          istore 1   
18 [0x12]:          movi #1, ebx   
20 [0x14]:          rstore ebx   
21 [0x15]:          call @3653 // <common.network.remote#command_request_impl.send_command>   
22 [0x16]:          loadval ebx   
23 [0x17]:          return_val ebx   
24 [0x18]:          ret   


function: common.network#network.handshake[3664] params(0) in file: common//network//network.sharp:25:15: note:  
		    static def handshake() {
		              ^

0 [0x0]: line: 26 call @3999 // <common.network#network.get_INSTANCE>   
1 [0x1]:          popobj2    
2 [0x2]:          movn #0   
4 [0x4]:          pushobj   
5 [0x5]:          invoke_delegate 3692 { static=0, args=0 }   
7 [0x7]:          ret   


function: common.network#network.listen[3665] params(0) in file: common//network//network.sharp:29:15: note:  
		    static def listen(): command_response {
		              ^

0 [0x0]: line: 30 call @3999 // <common.network#network.get_INSTANCE>   
1 [0x1]:          popobj2    
2 [0x2]:          movn #1   
4 [0x4]:          pushobj   
5 [0x5]:          invoke_delegate 3684 { static=0, args=0 }   
7 [0x7]:          popobj2    
8 [0x8]:          returnobj   
9 [0x9]:          ret   


function: common.network#network.change_mode[3666] params(1) in file: common//network//network.sharp:33:15: note:  
		    static def change_mode(mode: string): var {
		              ^

0 [0x0]: line: 34 call @3999 // <common.network#network.get_INSTANCE>   
1 [0x1]:          popobj2    
2 [0x2]:          _lck    
3 [0x3]: line: 35 call @3999 // <common.network#network.get_INSTANCE>   
4 [0x4]:          popobj2    
5 [0x5]:          movn #2   
7 [0x7]:          pushobj   
8 [0x8]:          pushl 0   
9 [0x9]:          invoke_delegate 3682 { static=0, args=1 }   
11 [0xb]:          loadval ebx   
12 [0xc]:          return_val ebx   
13 [0xd]:          call @3999 // <common.network#network.get_INSTANCE>   
14 [0xe]:          popobj2    
15 [0xf]:          _ulck   
16 [0x10]:          ret   
17 [0x11]:          call @3999 // <common.network#network.get_INSTANCE>   
18 [0x12]:          popobj2    
19 [0x13]:          _ulck   


function: common.network#network.jam[3667] params(1) in file: common//network//network.sharp:39:15: note:  
		    static def jam(channel: var) {
		              ^

0 [0x0]: line: 40 call @3999 // <common.network#network.get_INSTANCE>   
1 [0x1]:          popobj2    
2 [0x2]:          _lck    
3 [0x3]: line: 41 call @3999 // <common.network#network.get_INSTANCE>   
4 [0x4]:          popobj2    
5 [0x5]:          movn #7   
7 [0x7]:          pushobj   
8 [0x8]:          ipushl #0   
9 [0x9]:          invoke_delegate 3677 { static=0, args=1 }   
11 [0xb]:          call @3999 // <common.network#network.get_INSTANCE>   
12 [0xc]:          popobj2    
13 [0xd]:          _ulck   
14 [0xe]:          ret   


function: common.network#network.request_jam[3668] params(1) in file: common//network//network.sharp:45:15: note:  
		    static def request_jam(channel: var): var {
		              ^

0 [0x0]: line: 46 call @3999 // <common.network#network.get_INSTANCE>   
1 [0x1]:          popobj2    
2 [0x2]:          _lck    
3 [0x3]: line: 47 call @3999 // <common.network#network.get_INSTANCE>   
4 [0x4]:          popobj2    
5 [0x5]:          movn #7   
7 [0x7]:          pushobj   
8 [0x8]:          ipushl #0   
9 [0x9]:          invoke_delegate 3678 { static=0, args=1 }   
11 [0xb]:          loadval ebx   
12 [0xc]:          return_val ebx   
13 [0xd]:          call @3999 // <common.network#network.get_INSTANCE>   
14 [0xe]:          popobj2    
15 [0xf]:          _ulck   
16 [0x10]:          ret   
17 [0x11]:          call @3999 // <common.network#network.get_INSTANCE>   
18 [0x12]:          popobj2    
19 [0x13]:          _ulck   


function: common.network#network.get_signal_strength[3669] params(0) in file: common//network//network.sharp:51:15: note:  
		    static def get_signal_strength() : var {
		              ^

0 [0x0]: line: 52 call @3999 // <common.network#network.get_INSTANCE>   
1 [0x1]:          popobj2    
2 [0x2]:          movn #4   
4 [0x4]:          pushobj   
5 [0x5]:          invoke_delegate 3687 { static=0, args=0 }   
7 [0x7]:          loadval ebx   
8 [0x8]:          return_val ebx   
9 [0x9]:          ret   


function: common.network#network.scan_network[3670] params(0) in file: common//network//network.sharp:55:15: note:  
		    static def scan_network() : var[] {
		              ^

0 [0x0]: line: 56 call @3999 // <common.network#network.get_INSTANCE>   
1 [0x1]:          popobj2    
2 [0x2]:          _lck    
3 [0x3]: line: 57 call @3999 // <common.network#network.get_INSTANCE>   
4 [0x4]:          popobj2    
5 [0x5]:          movn #5   
7 [0x7]:          pushobj   
8 [0x8]:          invoke_delegate 3675 { static=0, args=0 }   
10 [0xa]:          popobj2    
11 [0xb]:          pushobj   
12 [0xc]:          call @3999 // <common.network#network.get_INSTANCE>   
13 [0xd]:          popobj2    
14 [0xe]:          _ulck   
15 [0xf]:          ret   
16 [0x10]:          call @3999 // <common.network#network.get_INSTANCE>   
17 [0x11]:          popobj2    
18 [0x12]:          _ulck   


function: common.network#network.get_flight_data[3671] params(0) in file: common//network//network.sharp:61:15: note:  
		    static def get_flight_data() : flight_data_response {
		              ^

0 [0x0]: line: 62 call @3999 // <common.network#network.get_INSTANCE>   
1 [0x1]:          popobj2    
2 [0x2]:          _lck    
3 [0x3]: line: 63 call @3999 // <common.network#network.get_INSTANCE>   
4 [0x4]:          popobj2    
5 [0x5]:          movn #6   
7 [0x7]:          pushobj   
8 [0x8]:          invoke_delegate 3689 { static=0, args=0 }   
10 [0xa]:          popobj2    
11 [0xb]:          pushobj   
12 [0xc]:          call @3999 // <common.network#network.get_INSTANCE>   
13 [0xd]:          popobj2    
14 [0xe]:          _ulck   
15 [0xf]:          popobj2    
16 [0x10]:          returnobj   
17 [0x11]:          ret   
18 [0x12]:          call @3999 // <common.network#network.get_INSTANCE>   
19 [0x13]:          popobj2    
20 [0x14]:          _ulck   


function: common.network#network.post_flight_data[3672] params(1) in file: common//network//network.sharp:67:15: note:  
		    static def post_flight_data(data: flight_data_response) {
		              ^

0 [0x0]: line: 68 call @3999 // <common.network#network.get_INSTANCE>   
1 [0x1]:          popobj2    
2 [0x2]:          _lck    
3 [0x3]: line: 69 call @3999 // <common.network#network.get_INSTANCE>   
4 [0x4]:          popobj2    
5 [0x5]:          movn #6   
7 [0x7]:          pushobj   
8 [0x8]:          pushl 0   
9 [0x9]:          invoke_delegate 3690 { static=0, args=1 }   
11 [0xb]:          call @3999 // <common.network#network.get_INSTANCE>   
12 [0xc]:          popobj2    
13 [0xd]:          _ulck   
14 [0xe]:          ret   


function: common.network#network.send_acknowledge[3673] params(0) in file: common//network//network.sharp:73:15: note:  
		    static def send_acknowledge() {
		              ^

0 [0x0]: line: 74 call @3999 // <common.network#network.get_INSTANCE>   
1 [0x1]:          popobj2    
2 [0x2]:          _lck    
3 [0x3]: line: 75 call @3999 // <common.network#network.get_INSTANCE>   
4 [0x4]:          popobj2    
5 [0x5]:          movn #3   
7 [0x7]:          pushobj   
8 [0x8]:          invoke_delegate 3680 { static=0, args=0 }   
10 [0xa]:          call @3999 // <common.network#network.get_INSTANCE>   
11 [0xb]:          popobj2    
12 [0xc]:          _ulck   
13 [0xd]:          ret   


constructor: common.network#network.network[3674] params(0) in file: common//network//network.sharp:5:6: note:  
		class network {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


common.network.data.request#network_scan_request.scan_network[3675] params(0) in file: common//network//data//request//network_scan_request.sharp:5:8: note:  
		    def scan_network(): var[];
		       ^



constructor: common.network.data.request#network_scan_request.network_scan_request[3676] params(0) in file: common//network//data//request//network_scan_request.sharp:3:10: note:  
		interface network_scan_request
		         ^

0 [0x0]:         ret   


common.network.data.request#jam_request.jam[3677] params(1) in file: common//network//data//request//jam_request.sharp:7:8: note:  
		    def jam(channel: var);
		       ^



common.network.data.request#jam_request.post[3678] params(1) in file: common//network//data//request//jam_request.sharp:8:8: note:  
		    def post(channel: var) : var;
		       ^



constructor: common.network.data.request#jam_request.jam_request[3679] params(0) in file: common//network//data//request//jam_request.sharp:5:10: note:  
		interface jam_request
		         ^

0 [0x0]:         ret   


common.network.data.request#acknowledge_request.send[3680] params(0) in file: common//network//data//request//ackowledge_request.sharp:7:8: note:  
		    def send();
		       ^



constructor: common.network.data.request#acknowledge_request.acknowledge_request[3681] params(0) in file: common//network//data//request//ackowledge_request.sharp:5:10: note:  
		interface acknowledge_request
		         ^

0 [0x0]:         ret   


common.network.data.request#flight_mode_change_request.change_mode[3682] params(1) in file: common//network//data//request//fight_mode_change_request.sharp:5:8: note:  
		    def change_mode(mode: string): var;
		       ^



constructor: common.network.data.request#flight_mode_change_request.flight_mode_change_request[3683] params(0) in file: common//network//data//request//fight_mode_change_request.sharp:3:10: note:  
		interface flight_mode_change_request
		         ^

0 [0x0]:         ret   


common.network.data.request#command_request.listen[3684] params(0) in file: common//network//data//request//command_request.sharp:7:8: note:  
		    def listen(): command_response;
		       ^



common.network.data.request#command_request.send_command[3685] params(3) in file: common//network//data//request//command_request.sharp:8:8: note:  
		    def send_command(req: request_data, ack: var, timeout: var): var;
		       ^



constructor: common.network.data.request#command_request.command_request[3686] params(0) in file: common//network//data//request//command_request.sharp:5:10: note:  
		interface command_request
		         ^

0 [0x0]:         ret   


common.network.data.request#signal_strength_request.get_strength[3687] params(0) in file: common//network//data//request//signal_strength_request.sharp:5:8: note:  
		    def get_strength(): var;
		       ^



constructor: common.network.data.request#signal_strength_request.signal_strength_request[3688] params(0) in file: common//network//data//request//signal_strength_request.sharp:3:10: note:  
		interface signal_strength_request
		         ^

0 [0x0]:         ret   


common.network.data.request#flight_data_request._get[3689] params(0) in file: common//network//data//request//fight_data_request.sharp:7:8: note:  
		    def _get(): flight_data_response;
		       ^



common.network.data.request#flight_data_request.post[3690] params(1) in file: common//network//data//request//fight_data_request.sharp:8:8: note:  
		    def post(data: flight_data_response);
		       ^



constructor: common.network.data.request#flight_data_request.flight_data_request[3691] params(0) in file: common//network//data//request//fight_data_request.sharp:5:10: note:  
		interface flight_data_request
		         ^

0 [0x0]:         ret   


common.network.data.request#handshake_request.handshake[3692] params(0) in file: common//network//data//request//handshake_request.sharp:5:8: note:  
		    def handshake();
		       ^



constructor: common.network.data.request#handshake_request.handshake_request[3693] params(0) in file: common//network//data//request//handshake_request.sharp:3:10: note:  
		interface handshake_request
		         ^

0 [0x0]:         ret   


constructor: common.network.data.response#flight_data_response.flight_data_response[3694] params(3) in file: common//network//data//response//flight_data_response.sharp:7:25: note:  
		    flight_data_response(bat_lvl: var, altitude: var, speed: var)
		                        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 9 ipushl #1   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         movi #0, adx   
8 [0x8]:         rmov adx, ebx   
9 [0x9]: line: 10 ipushl #2   
10 [0xa]:          movl 0   
11 [0xb]:          movn #1   
13 [0xd]:          loadval ebx   
14 [0xe]:          movi #0, adx   
16 [0x10]:          rmov adx, ebx   
17 [0x11]: line: 11 ipushl #3   
18 [0x12]:          movl 0   
19 [0x13]:          movn #2   
21 [0x15]:          loadval ebx   
22 [0x16]:          movi #0, adx   
24 [0x18]:          rmov adx, ebx   
25 [0x19]:          ret   


constructor: common.network.data.response#flight_data_response.flight_data_response[3695] params(0) in file: common//network//data//response//flight_data_response.sharp:5:6: note:  
		class flight_data_response
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: common.network.data.response#command_response.command_response[3696] params(2) in file: common//network//data//response//command_response.sharp:7:21: note:  
		    command_response(cmd: string, req: request_data)
		                    ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 9 pushl 1   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         popobj   
6 [0x6]: line: 10 pushl 2   
7 [0x7]:          movl 0   
8 [0x8]:          movn #1   
10 [0xa]:          popobj   
11 [0xb]:          ret   


constructor: common.network.data.response#command_response.command_response[3697] params(0) in file: common//network//data//response//command_response.sharp:5:6: note:  
		class command_response
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: common#constants.strings.strings[3698] params(0) in file: common//constants.sharp:39:10: note:  
		    class strings {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: common#constants.constants[3699] params(0) in file: common//constants.sharp:3:6: note:  
		class constants {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


function: main#__srt_global.main[3700] params(1) in file: controller//main.sharp:12:4: note:  
		def main(args: string[])
		   ^

0 [0x0]: line: 14 new_class @0 // std#__srt_global   
1 [0x1]:          ret   
2 [0x2]:          dup    
3 [0x3]:          newstr @67 // bin/dragonfly   
4 [0x4]:          call @1959 // <std#string.string>   
5 [0x5]:          call @3452 // <platform#__srt_global.load_library>   
6 [0x6]: line: 15 ldc ebx // 0   
7 [0x7]:          rstore ebx   
8 [0x8]:          movg @105 // @common#constants   
9 [0x9]:          movn #20   
11 [0xb]:          loadval ebx   
12 [0xc]:          movi #0, adx   
14 [0xe]:          rmov adx, ebx   
15 [0xf]: line: 17 invoke_delegate 3598 { static=1, args=0 }   
17 [0x11]: line: 18 call @3803 // <main#__srt_global.setup_conn_tracker>   
18 [0x12]: line: 20 call @2026 // <std.io.task#task.builder>   
19 [0x13]:          call @2048 // <std.io.task#job_builder.long_term>   
20 [0x14]:          istore 3000   
22 [0x16]:          call @2043 // <std.io.task#job_builder.schedule>   
23 [0x17]:          istore 4105   
25 [0x19]:          call @2049 // <std.io.task#job_builder.operator=>   
26 [0x1a]:          pop   
27 [0x1b]: line: 34 call @2026 // <std.io.task#task.builder>   
28 [0x1c]:          istore 3000   
30 [0x1e]:          call @2043 // <std.io.task#job_builder.schedule>   
31 [0x1f]:          istore 50   
33 [0x21]:          movg @55 // @std#time_unit   
34 [0x22]:          movn #1   
36 [0x24]:          pushobj   
37 [0x25]:          call @2044 // <std.io.task#job_builder.recurring>   
38 [0x26]:          istore 4106   
40 [0x28]:          call @2049 // <std.io.task#job_builder.operator=>   
41 [0x29]:          pop   
42 [0x2a]: line: 44 call @3714 // <ui.support#window.start_ui>   
43 [0x2b]:          ret   


function: ui.res#resources.setup[3701] params(0) in file: controller//ui//res//resource.sharp:18:12: note:  
			static def setup() {
		           ^

0 [0x0]: line: 19 call @4000 // <ui.res#resources.get_res>   
1 [0x1]:          popobj2    
2 [0x2]:          movn #0   
4 [0x4]:          pushobj   
5 [0x5]:          new_class @0 // std#__srt_global   
6 [0x6]:          inc adx   
7 [0x7]:          dup    
8 [0x8]:          istore 5   
10 [0xa]:          call @2630 // <std#int.int>   
11 [0xb]:          movg @108 // @ui.res.drawable#__srt_global   
12 [0xc]:          movn #7   
14 [0xe]:          pushobj   
15 [0xf]:          call @4007 // <std#hashmap<std#int,ui.support#drawable>.put>   
16 [0x10]:          pop   
17 [0x11]: line: 20 call @4000 // <ui.res#resources.get_res>   
18 [0x12]:          popobj2    
19 [0x13]:          movn #0   
21 [0x15]:          pushobj   
22 [0x16]:          new_class @0 // std#__srt_global   
23 [0x17]:          inc adx   
24 [0x18]:          dup    
25 [0x19]:          istore 6   
27 [0x1b]:          call @2630 // <std#int.int>   
28 [0x1c]:          movg @108 // @ui.res.drawable#__srt_global   
29 [0x1d]:          movn #11   
31 [0x1f]:          pushobj   
32 [0x20]:          call @4007 // <std#hashmap<std#int,ui.support#drawable>.put>   
33 [0x21]:          pop   
34 [0x22]: line: 21 call @4000 // <ui.res#resources.get_res>   
35 [0x23]:          popobj2    
36 [0x24]:          movn #0   
38 [0x26]:          pushobj   
39 [0x27]:          new_class @0 // std#__srt_global   
40 [0x28]:          inc adx   
41 [0x29]:          dup    
42 [0x2a]:          istore 7   
44 [0x2c]:          call @2630 // <std#int.int>   
45 [0x2d]:          movg @108 // @ui.res.drawable#__srt_global   
46 [0x2e]:          movn #1   
48 [0x30]:          pushobj   
49 [0x31]:          call @4007 // <std#hashmap<std#int,ui.support#drawable>.put>   
50 [0x32]:          pop   
51 [0x33]: line: 22 call @4000 // <ui.res#resources.get_res>   
52 [0x34]:          popobj2    
53 [0x35]:          movn #0   
55 [0x37]:          pushobj   
56 [0x38]:          new_class @0 // std#__srt_global   
57 [0x39]:          inc adx   
58 [0x3a]:          dup    
59 [0x3b]:          istore 8   
61 [0x3d]:          call @2630 // <std#int.int>   
62 [0x3e]:          movg @108 // @ui.res.drawable#__srt_global   
63 [0x3f]:          movn #15   
65 [0x41]:          pushobj   
66 [0x42]:          call @4007 // <std#hashmap<std#int,ui.support#drawable>.put>   
67 [0x43]:          pop   
68 [0x44]: line: 23 call @4000 // <ui.res#resources.get_res>   
69 [0x45]:          popobj2    
70 [0x46]:          movn #0   
72 [0x48]:          pushobj   
73 [0x49]:          new_class @0 // std#__srt_global   
74 [0x4a]:          inc adx   
75 [0x4b]:          dup    
76 [0x4c]:          istore 9   
78 [0x4e]:          call @2630 // <std#int.int>   
79 [0x4f]:          movg @108 // @ui.res.drawable#__srt_global   
80 [0x50]:          movn #9   
82 [0x52]:          pushobj   
83 [0x53]:          call @4007 // <std#hashmap<std#int,ui.support#drawable>.put>   
84 [0x54]:          pop   
85 [0x55]: line: 24 call @4000 // <ui.res#resources.get_res>   
86 [0x56]:          popobj2    
87 [0x57]:          movn #0   
89 [0x59]:          pushobj   
90 [0x5a]:          new_class @0 // std#__srt_global   
91 [0x5b]:          inc adx   
92 [0x5c]:          dup    
93 [0x5d]:          istore 10   
95 [0x5f]:          call @2630 // <std#int.int>   
96 [0x60]:          movg @108 // @ui.res.drawable#__srt_global   
97 [0x61]:          movn #3   
99 [0x63]:          pushobj   
100 [0x64]:          call @4007 // <std#hashmap<std#int,ui.support#drawable>.put>   
101 [0x65]:          pop   
102 [0x66]: line: 25 call @4000 // <ui.res#resources.get_res>   
103 [0x67]:          popobj2    
104 [0x68]:          movn #0   
106 [0x6a]:          pushobj   
107 [0x6b]:          new_class @0 // std#__srt_global   
108 [0x6c]:          inc adx   
109 [0x6d]:          dup    
110 [0x6e]:          istore 11   
112 [0x70]:          call @2630 // <std#int.int>   
113 [0x71]:          movg @108 // @ui.res.drawable#__srt_global   
114 [0x72]:          movn #17   
116 [0x74]:          pushobj   
117 [0x75]:          call @4007 // <std#hashmap<std#int,ui.support#drawable>.put>   
118 [0x76]:          pop   
119 [0x77]: line: 26 call @4000 // <ui.res#resources.get_res>   
120 [0x78]:          popobj2    
121 [0x79]:          movn #0   
123 [0x7b]:          pushobj   
124 [0x7c]:          new_class @0 // std#__srt_global   
125 [0x7d]:          inc adx   
126 [0x7e]:          dup    
127 [0x7f]:          istore 13   
129 [0x81]:          call @2630 // <std#int.int>   
130 [0x82]:          movg @108 // @ui.res.drawable#__srt_global   
131 [0x83]:          movn #19   
133 [0x85]:          pushobj   
134 [0x86]:          call @4007 // <std#hashmap<std#int,ui.support#drawable>.put>   
135 [0x87]:          pop   
136 [0x88]: line: 27 call @4000 // <ui.res#resources.get_res>   
137 [0x89]:          popobj2    
138 [0x8a]:          movn #0   
140 [0x8c]:          pushobj   
141 [0x8d]:          new_class @0 // std#__srt_global   
142 [0x8e]:          inc adx   
143 [0x8f]:          dup    
144 [0x90]:          istore 14   
146 [0x92]:          call @2630 // <std#int.int>   
147 [0x93]:          movg @108 // @ui.res.drawable#__srt_global   
148 [0x94]:          movn #21   
150 [0x96]:          pushobj   
151 [0x97]:          call @4007 // <std#hashmap<std#int,ui.support#drawable>.put>   
152 [0x98]:          pop   
153 [0x99]: line: 28 call @4000 // <ui.res#resources.get_res>   
154 [0x9a]:          popobj2    
155 [0x9b]:          movn #0   
157 [0x9d]:          pushobj   
158 [0x9e]:          new_class @0 // std#__srt_global   
159 [0x9f]:          inc adx   
160 [0xa0]:          dup    
161 [0xa1]:          istore 15   
163 [0xa3]:          call @2630 // <std#int.int>   
164 [0xa4]:          movg @108 // @ui.res.drawable#__srt_global   
165 [0xa5]:          movn #13   
167 [0xa7]:          pushobj   
168 [0xa8]:          call @4007 // <std#hashmap<std#int,ui.support#drawable>.put>   
169 [0xa9]:          pop   
170 [0xaa]: line: 29 call @4000 // <ui.res#resources.get_res>   
171 [0xab]:          popobj2    
172 [0xac]:          movn #0   
174 [0xae]:          pushobj   
175 [0xaf]:          new_class @0 // std#__srt_global   
176 [0xb0]:          inc adx   
177 [0xb1]:          dup    
178 [0xb2]:          istore 16   
180 [0xb4]:          call @2630 // <std#int.int>   
181 [0xb5]:          movg @108 // @ui.res.drawable#__srt_global   
182 [0xb6]:          movn #5   
184 [0xb8]:          pushobj   
185 [0xb9]:          call @4007 // <std#hashmap<std#int,ui.support#drawable>.put>   
186 [0xba]:          pop   
187 [0xbb]: line: 30 call @4000 // <ui.res#resources.get_res>   
188 [0xbc]:          popobj2    
189 [0xbd]:          movn #0   
191 [0xbf]:          pushobj   
192 [0xc0]:          new_class @0 // std#__srt_global   
193 [0xc1]:          inc adx   
194 [0xc2]:          dup    
195 [0xc3]:          istore 17   
197 [0xc5]:          call @2630 // <std#int.int>   
198 [0xc6]:          movg @108 // @ui.res.drawable#__srt_global   
199 [0xc7]:          movn #23   
201 [0xc9]:          pushobj   
202 [0xca]:          call @4007 // <std#hashmap<std#int,ui.support#drawable>.put>   
203 [0xcb]:          pop   
204 [0xcc]: line: 31 call @4000 // <ui.res#resources.get_res>   
205 [0xcd]:          popobj2    
206 [0xce]:          movn #0   
208 [0xd0]:          pushobj   
209 [0xd1]:          new_class @0 // std#__srt_global   
210 [0xd2]:          inc adx   
211 [0xd3]:          dup    
212 [0xd4]:          istore 25   
214 [0xd6]:          call @2630 // <std#int.int>   
215 [0xd7]:          movg @108 // @ui.res.drawable#__srt_global   
216 [0xd8]:          movn #25   
218 [0xda]:          pushobj   
219 [0xdb]:          call @4007 // <std#hashmap<std#int,ui.support#drawable>.put>   
220 [0xdc]:          pop   
221 [0xdd]:          ret   


function: ui.res#resources.get_drawable[3702] params(1) in file: controller//ui//res//resource.sharp:34:12: note:  
			static def get_drawable(res_id: var) : drawable {
		           ^

0 [0x0]: line: 35 call @4000 // <ui.res#resources.get_res>   
1 [0x1]:          popobj2    
2 [0x2]:          movn #0   
4 [0x4]:          pushobj   
5 [0x5]:          new_class @0 // std#__srt_global   
6 [0x6]:          inc adx   
7 [0x7]:          dup    
8 [0x8]:          ipushl #0   
9 [0x9]:          call @2630 // <std#int.int>   
10 [0xa]:          call @4006 // <std#hashmap<std#int,ui.support#drawable>.at>   
11 [0xb]:          popobj2    
12 [0xc]:          returnobj   
13 [0xd]:          ret   


constructor: ui.res#resources.resources[3703] params(0) in file: controller//ui//res//resource.sharp:6:6: note:  
		class resources {
		     ^

0 [0x0]:         new_class @0 // std#__srt_global   
1 [0x1]:         ? (159)   
2 [0x2]:         dup    
3 [0x3]:         call @4002 // <std#hashmap<std#int,ui.support#drawable>.hashmap>   
4 [0x4]:         movl 0   
5 [0x5]:         movn #0   
7 [0x7]:         popobj   
8 [0x8]:         ret   


constructor: ui.support#text_view.text_view[3704] params(1) in file: controller//ui//support//text_view.sharp:20:14: note:  
		    text_view(id: var) -> base(id) {}
		             ^

0 [0x0]:         new_class @0 // std#__srt_global   
1 [0x1]:         ret   
2 [0x2]:         dup    
3 [0x3]:         newstr @24 //    
4 [0x4]:         call @1959 // <std#string.string>   
5 [0x5]:         movl 0   
6 [0x6]:         movn #19   
8 [0x8]:         popobj   
9 [0x9]:         movi #1, ebx   
11 [0xb]:         movl 0   
12 [0xc]:         movn #20   
14 [0xe]:         movi #0, adx   
16 [0x10]:         rmov adx, ebx   
17 [0x11]:         pushl 0   
18 [0x12]:         ipushl #1   
19 [0x13]:         call @3754 // <ui.support#view.view>   
20 [0x14]:         ret   


function: ui.support#text_view.transform_height[3705] params(0) in file: controller//ui//support//text_view.sharp:22:8: note:  
		    def transform_height() : var {
		       ^

0 [0x0]: line: 23 istore 8   
2 [0x2]:          movl 0   
3 [0x3]:          movn #20   
5 [0x5]:          movi #0, adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          loadval ecx   
9 [0x9]:          mul ecx, ebx -> ebx   
10 [0xa]:          return_val ebx   
11 [0xb]:          ret   


function: ui.support#text_view.transform_width[3706] params(0) in file: controller//ui//support//text_view.sharp:26:8: note:  
		    def transform_width() : var {
		       ^

0 [0x0]: line: 27 movl 0   
1 [0x1]:          movn #19   
3 [0x3]:          pushobj   
4 [0x4]:          call @2000 // <std#string.size>   
5 [0x5]:          loadval ebx   
6 [0x6]:          rstore ebx   
7 [0x7]:          istore 6   
9 [0x9]:          movl 0   
10 [0xa]:          movn #20   
12 [0xc]:          movi #0, adx   
14 [0xe]:          iaload ebx, adx   
15 [0xf]:          loadval ecx   
16 [0x10]:          mul ecx, ebx -> ebx   
17 [0x11]:          loadval ecx   
18 [0x12]:          mul ecx, ebx -> ebx   
19 [0x13]:          return_val ebx   
20 [0x14]:          ret   


function: ui.support#text_view.draw[3707] params(0) in file: controller//ui//support//text_view.sharp:30:8: note:  
		    def draw() {
		       ^

0 [0x0]: line: 31 pushl 0   
1 [0x1]:          call @3760 // <ui.support#view.invalidate>   
2 [0x2]: line: 33 movl 0   
3 [0x3]:          movn #5   
5 [0x5]:          movi #0, adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          rstore ebx   
9 [0x9]:          ldc ebx // 0   
10 [0xa]:          loadval ecx   
11 [0xb]:          test ecx, ebx   
12 [0xc]:          movr ebx, cmt   
13 [0xd]:          skne ebx // pc = 30   
14 [0xe]:          movl 0   
15 [0xf]:          movn #19   
17 [0x11]:          pushobj   
18 [0x12]:          pushnull    
19 [0x13]:          itest ebx   
20 [0x14]:          not ebx, ebx   
21 [0x15]:          skne ebx // pc = 30   
22 [0x16]:          movl 0   
23 [0x17]:          movn #19   
25 [0x19]:          pushobj   
26 [0x1a]:          call @1985 // <std#string.get_data>   
27 [0x1b]:          pushnull    
28 [0x1c]:          itest ebx   
29 [0x1d]:          not ebx, ebx   
30 [0x1e]:          movr cmt, ebx   
31 [0x1f]:          jne 38   
32 [0x20]: line: 34 movl 0   
33 [0x21]:          movn #17   
35 [0x23]:          pushobj   
36 [0x24]:          pushl 0   
37 [0x25]:          call @3717 // <ui.support#window.draw_text>   
38 [0x26]:          nop   
39 [0x27]:          ret   


function: ui.support#text_view.on_destroy[3708] params(0) in file: controller//ui//support//text_view.sharp:37:8: note:  
		    def on_destroy() {
		       ^

0 [0x0]: line: 38 pushl 0   
1 [0x1]:          new_class @0 // std#__srt_global   
2 [0x2]:          ret   
3 [0x3]:          dup    
4 [0x4]:          newstr @24 //    
5 [0x5]:          call @1959 // <std#string.string>   
6 [0x6]:          call @4009 // <ui.support#text_view.set_text>   
7 [0x7]: line: 39 movi #0, ebx   
9 [0x9]:          movl 0   
10 [0xa]:          movn #16   
12 [0xc]:          movi #0, adx   
14 [0xe]:          rmov adx, ebx   
15 [0xf]:          ret   


constructor: ui.support#text_view.text_view[3709] params(0) in file: controller//ui//support//text_view.sharp:3:6: note:  
		class text_view base view {
		     ^

0 [0x0]:         new_class @0 // std#__srt_global   
1 [0x1]:         ret   
2 [0x2]:         dup    
3 [0x3]:         newstr @24 //    
4 [0x4]:         call @1959 // <std#string.string>   
5 [0x5]:         movl 0   
6 [0x6]:         movn #19   
8 [0x8]:         popobj   
9 [0x9]:         movi #1, ebx   
11 [0xb]:         movl 0   
12 [0xc]:         movn #20   
14 [0xe]:         movi #0, adx   
16 [0x10]:         rmov adx, ebx   
17 [0x11]:         ret   


constructor: ui.support#margin.margin[3710] params(0) in file: controller//ui//support//margin.sharp:3:6: note:  
		class margin {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: ui.support#drawable.drawable[3711] params(4) in file: controller//ui//support//drawable.sharp:5:10: note:  
			drawable(id : var, bytes: var[], w: var, h: var) {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 6 ipushl #1   
2 [0x2]:         movl 0   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         movi #0, adx   
8 [0x8]:         rmov adx, ebx   
9 [0x9]: line: 7 pushl 2   
10 [0xa]:         movl 0   
11 [0xb]:         movn #1   
13 [0xd]:         popobj   
14 [0xe]: line: 8 ipushl #3   
15 [0xf]:         movl 0   
16 [0x10]:         movn #2   
18 [0x12]:         loadval ebx   
19 [0x13]:         movi #0, adx   
21 [0x15]:         rmov adx, ebx   
22 [0x16]: line: 9 ipushl #4   
23 [0x17]:         movl 0   
24 [0x18]:         movn #3   
26 [0x1a]:         loadval ebx   
27 [0x1b]:         movi #0, adx   
29 [0x1d]:         rmov adx, ebx   
30 [0x1e]:         ret   


constructor: ui.support#drawable.drawable[3712] params(0) in file: controller//ui//support//drawable.sharp:3:6: note:  
		class drawable {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: ui.support#window.window[3713] params(1) in file: controller//ui//support//window.sharp:17:11: note:  
		    window(name : _int8[]) {
		          ^

0 [0x0]:         new_class @0 // std#__srt_global   
1 [0x1]:         ? (160)   
2 [0x2]:         dup    
3 [0x3]:         call @4013 // <std#list<ui.support#fragment>.list>   
4 [0x4]:         movl 0   
5 [0x5]:         movn #0   
7 [0x7]:         popobj   
8 [0x8]:         new_class @0 // std#__srt_global   
9 [0x9]:         ? (160)   
10 [0xa]:         dup    
11 [0xb]:         call @4013 // <std#list<ui.support#fragment>.list>   
12 [0xc]:         movl 0   
13 [0xd]:         movn #1   
15 [0xf]:         popobj   
16 [0x10]:         pushl 0   
17 [0x11]: line: 18 pushl 1   
18 [0x12]:          movl 0   
19 [0x13]:          movn #2   
21 [0x15]:          popobj   
22 [0x16]: line: 19 movl 0   
23 [0x17]:          movn #5   
25 [0x19]:          pushobj   
26 [0x1a]:          pushnull    
27 [0x1b]:          itest ebx   
28 [0x1c]:          movr cmt, ebx   
29 [0x1d]:          jne 38   
30 [0x1e]: line: 20 new_class @0 // std#__srt_global   
31 [0x1f]:          ? (131)   
32 [0x20]:          dup    
33 [0x21]:          call @3784 // <ui.driver#ssd1306.ssd1306>   
34 [0x22]:          movl 0   
35 [0x23]:          movn #5   
37 [0x25]:          popobj   
38 [0x26]:          nop   
39 [0x27]:          ret   


function: ui.support#window.start_ui[3714] params(0) in file: controller//ui//support//window.sharp:23:22: note:  
		    public static def start_ui() {
		                     ^

0 [0x0]: line: 24 call @3701 // <ui.res#resources.setup>   
1 [0x1]: line: 25 call @3796 // <ui.layout.config#__srt_global.configure_layout>   
2 [0x2]: line: 26 call @3797 // <ui.layout.config#__srt_global.start>   
3 [0x3]:          ret   


function: ui.support#window.navigate[3715] params(1) in file: controller//ui//support//window.sharp:29:8: note:  
		    def navigate(screen: var) {
		       ^

0 [0x0]: line: 30 movl 2   
1 [0x1]:          del   
2 [0x2]: line: 31 istorel 0, fp+3   
4 [0x4]:          ipushl #3   
5 [0x5]:          movl 0   
6 [0x6]:          movn #0   
8 [0x8]:          pushobj   
9 [0x9]:          call @4030 // <std#list<ui.support#fragment>.size>   
10 [0xa]:          loadval ebx   
11 [0xb]:          loadval ecx   
12 [0xc]:          lt ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          movr cmt, ebx   
15 [0xf]:          jne 45   
16 [0x10]: line: 32 movl 0   
17 [0x11]:          movn #0   
19 [0x13]:          pushobj   
20 [0x14]:          ipushl #3   
21 [0x15]:          call @4020 // <std#list<ui.support#fragment>.at>   
22 [0x16]:          popobj2    
23 [0x17]:          movn #2   
25 [0x19]:          movi #0, adx   
27 [0x1b]:          iaload ebx, adx   
28 [0x1c]:          rstore ebx   
29 [0x1d]:          loadl ebx, fp+1   
30 [0x1e]:          loadval ecx   
31 [0x1f]:          test ecx, ebx   
32 [0x20]:          jne 41   
33 [0x21]: line: 33 movl 0   
34 [0x22]:          movn #0   
36 [0x24]:          pushobj   
37 [0x25]:          ipushl #3   
38 [0x26]:          call @4020 // <std#list<ui.support#fragment>.at>   
39 [0x27]:          popobj2    
40 [0x28]:          smovr_3 fp+2   
41 [0x29]:          nop   
42 [0x2a]:          iaddl 1, fp@3   
44 [0x2c]:          jmp @4   
45 [0x2d]: line: 36 movl 2   
46 [0x2e]:          checknull   
47 [0x2f]:          not ebx, ebx   
48 [0x30]:          movr cmt, ebx   
49 [0x31]:          jne 58   
50 [0x32]: line: 37 pushl 2   
51 [0x33]:          invoke_delegate 3733 { static=0, args=0 }   
53 [0x35]: line: 38 pushl 2   
54 [0x36]:          movl 0   
55 [0x37]:          movn #4   
57 [0x39]:          popobj   
58 [0x3a]:          nop   
59 [0x3b]:          ret   


function: ui.support#window.starter_fragment[3716] params(1) in file: controller//ui//support//window.sharp:42:8: note:  
		    def starter_fragment(frag: var) {
		       ^

0 [0x0]: line: 43 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #3   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]:          ret   


function: ui.support#window.draw_text[3717] params(1) in file: controller//ui//support//window.sharp:46:18: note:  
		    protected def draw_text(tv: text_view) {
		                 ^

0 [0x0]: line: 47 movl 0   
1 [0x1]:          movn #5   
3 [0x3]:          pushobj   
4 [0x4]:          movl 1   
5 [0x5]:          movn #0   
7 [0x7]:          movi #0, adx   
9 [0x9]:          iaload ebx, adx   
10 [0xa]:          rstore ebx   
11 [0xb]:          movl 1   
12 [0xc]:          movn #1   
14 [0xe]:          movi #0, adx   
16 [0x10]:          iaload ebx, adx   
17 [0x11]:          rstore ebx   
18 [0x12]:          movl 1   
19 [0x13]:          movn #20   
21 [0x15]:          movi #0, adx   
23 [0x17]:          iaload ebx, adx   
24 [0x18]:          rstore ebx   
25 [0x19]:          movl 1   
26 [0x1a]:          movn #2   
28 [0x1c]:          movi #0, adx   
30 [0x1e]:          iaload ebx, adx   
31 [0x1f]:          rstore ebx   
32 [0x20]:          pushl 1   
33 [0x21]:          call @3706 // <ui.support#text_view.transform_width>   
34 [0x22]:          movl 1   
35 [0x23]:          movn #19   
37 [0x25]:          pushobj   
38 [0x26]:          call @1985 // <std#string.get_data>   
39 [0x27]:          call @3789 // <ui.driver#ssd1306.draw_word>   
40 [0x28]:          ret   


function: ui.support#window.draw_img[3718] params(1) in file: controller//ui//support//window.sharp:50:18: note:  
		    protected def draw_img(iv: image_view) {
		                 ^

0 [0x0]: line: 51 movl 1   
1 [0x1]:          movn #19   
3 [0x3]:          smovr_3 fp+2   
4 [0x4]: line: 52 movl 0   
5 [0x5]:          movn #5   
7 [0x7]:          pushobj   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          iaload ebx, adx   
14 [0xe]:          rstore ebx   
15 [0xf]:          movl 1   
16 [0x10]:          movn #1   
18 [0x12]:          movi #0, adx   
20 [0x14]:          iaload ebx, adx   
21 [0x15]:          rstore ebx   
22 [0x16]:          movl 1   
23 [0x17]:          movn #2   
25 [0x19]:          movi #0, adx   
27 [0x1b]:          iaload ebx, adx   
28 [0x1c]:          rstore ebx   
29 [0x1d]:          movl 1   
30 [0x1e]:          movn #3   
32 [0x20]:          movi #0, adx   
34 [0x22]:          iaload ebx, adx   
35 [0x23]:          rstore ebx   
36 [0x24]:          movl 2   
37 [0x25]:          movn #2   
39 [0x27]:          movi #0, adx   
41 [0x29]:          iaload ebx, adx   
42 [0x2a]:          rstore ebx   
43 [0x2b]:          movl 2   
44 [0x2c]:          movn #3   
46 [0x2e]:          movi #0, adx   
48 [0x30]:          iaload ebx, adx   
49 [0x31]:          rstore ebx   
50 [0x32]:          movl 1   
51 [0x33]:          movn #19   
53 [0x35]:          movn #1   
55 [0x37]:          pushobj   
56 [0x38]:          call @3788 // <ui.driver#ssd1306.draw_img>   
57 [0x39]:          ret   


function: ui.support#window.show[3719] params(0) in file: controller//ui//support//window.sharp:55:8: note:  
		    def show() {
		       ^

0 [0x0]: line: 56 pushl 0   
1 [0x1]:          movl 0   
2 [0x2]:          movn #3   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          call @3715 // <ui.support#window.navigate>   
9 [0x9]: line: 57 pushl 0   
10 [0xa]:          call @3721 // <ui.support#window.start_updater>   
11 [0xb]:          ret   


function: ui.support#window.add_fragment[3720] params(1) in file: controller//ui//support//window.sharp:60:8: note:  
		    def add_fragment(frag : fragment) {
		       ^

0 [0x0]: line: 61 pushl 1   
1 [0x1]:          invoke_delegate 3731 { static=0, args=0 }   
3 [0x3]: line: 62 movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          pushobj   
7 [0x7]:          pushl 1   
8 [0x8]:          call @4027 // <std#list<ui.support#fragment>.add>   
9 [0x9]:          ret   


function: ui.support#window.start_updater[3721] params(0) in file: controller//ui//support//window.sharp:65:8: note:  
		    def start_updater() {
		       ^

0 [0x0]: line: 66 call @2186 // <std.io#thread.yield>   
1 [0x1]: line: 67 movl 0   
2 [0x2]: line: 68 movn #5   
4 [0x4]:          pushobj   
5 [0x5]:          call @3785 // <ui.driver#ssd1306.clear>   
6 [0x6]: line: 70 movl 0   
7 [0x7]:          movn #4   
9 [0x9]:          pushobj   
10 [0xa]:          pushnull    
11 [0xb]:          itest ebx   
12 [0xc]:          not ebx, ebx   
13 [0xd]:          movr cmt, ebx   
14 [0xe]:          jne 20   
15 [0xf]: line: 71 movl 0   
16 [0x10]:          movn #4   
18 [0x12]:          pushobj   
19 [0x13]:          call @3730 // <ui.support#fragment.draw>   
20 [0x14]:          nop   
21 [0x15]: line: 74 movl 0   
22 [0x16]:          movn #5   
24 [0x18]:          pushobj   
25 [0x19]:          call @3787 // <ui.driver#ssd1306.update_display>   
26 [0x1a]: line: 75 istore 30   
28 [0x1c]:          call @2182 // <std.io#thread.sleep>   
29 [0x1d]:          jmp @0   
30 [0x1e]:          ret   


constructor: ui.support#window.window[3722] params(0) in file: controller//ui//support//window.sharp:9:6: note:  
		class window {
		     ^

0 [0x0]:         new_class @0 // std#__srt_global   
1 [0x1]:         ? (160)   
2 [0x2]:         dup    
3 [0x3]:         call @4013 // <std#list<ui.support#fragment>.list>   
4 [0x4]:         movl 0   
5 [0x5]:         movn #0   
7 [0x7]:         popobj   
8 [0x8]:         new_class @0 // std#__srt_global   
9 [0x9]:         ? (160)   
10 [0xa]:         dup    
11 [0xb]:         call @4013 // <std#list<ui.support#fragment>.list>   
12 [0xc]:         movl 0   
13 [0xd]:         movn #1   
15 [0xf]:         popobj   
16 [0x10]:         ret   


constructor: ui.support#fragment.fragment[3723] params(2) in file: controller//ui//support//fragment.sharp:9:13: note:  
		    fragment(container : window, id: var) {
		            ^

0 [0x0]:         new_class @0 // std#__srt_global   
1 [0x1]:         ? (162)   
2 [0x2]:         dup    
3 [0x3]:         call @4043 // <std#list<ui.support#view>.list>   
4 [0x4]:         movl 0   
5 [0x5]:         movn #0   
7 [0x7]:         popobj   
8 [0x8]:         pushl 0   
9 [0x9]: line: 10 pushl 1   
10 [0xa]:          movl 0   
11 [0xb]:          movn #1   
13 [0xd]:          popobj   
14 [0xe]: line: 11 ipushl #2   
15 [0xf]:          movl 0   
16 [0x10]:          movn #2   
18 [0x12]:          loadval ebx   
19 [0x13]:          movi #0, adx   
21 [0x15]:          rmov adx, ebx   
22 [0x16]:          ret   


function: ui.support#fragment.add_view[3724] params(1) in file: controller//ui//support//fragment.sharp:14:8: note:  
		    def add_view(v : view) {
		       ^

0 [0x0]: line: 15 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          movl 1   
5 [0x5]:          movn #17   
7 [0x7]:          popobj   
8 [0x8]: line: 16 pushl 0   
9 [0x9]:          movl 1   
10 [0xa]:          movn #18   
12 [0xc]:          popobj   
13 [0xd]: line: 17 movl 0   
14 [0xe]:          movn #0   
16 [0x10]:          pushobj   
17 [0x11]:          pushl 1   
18 [0x12]:          call @4057 // <std#list<ui.support#view>.add>   
19 [0x13]:          ret   


function: ui.support#fragment.find_view_by_id[3725] params(1) in file: controller//ui//support//fragment.sharp:20:8: note:  
		    def find_view_by_id(id: var) : view {
		       ^

0 [0x0]: line: 21 istorel 0, fp+2   
2 [0x2]:          ipushl #2   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          pushobj   
7 [0x7]:          call @4060 // <std#list<ui.support#view>.size>   
8 [0x8]:          loadval ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          lt ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 44   
14 [0xe]: line: 23 movl 0   
15 [0xf]:          movn #0   
17 [0x11]:          pushobj   
18 [0x12]:          ipushl #2   
19 [0x13]:          call @4050 // <std#list<ui.support#view>.at>   
20 [0x14]:          popobj2    
21 [0x15]:          movn #6   
23 [0x17]:          movi #0, adx   
25 [0x19]:          iaload ebx, adx   
26 [0x1a]:          rstore ebx   
27 [0x1b]:          loadl ebx, fp+1   
28 [0x1c]:          loadval ecx   
29 [0x1d]:          test ecx, ebx   
30 [0x1e]:          jne 40   
31 [0x1f]: line: 24 movl 0   
32 [0x20]:          movn #0   
34 [0x22]:          pushobj   
35 [0x23]:          ipushl #2   
36 [0x24]:          call @4050 // <std#list<ui.support#view>.at>   
37 [0x25]:          popobj2    
38 [0x26]:          returnobj   
39 [0x27]:          ret   
40 [0x28]:          nop   
41 [0x29]:          iaddl 1, fp@2   
43 [0x2b]:          jmp @2   
44 [0x2c]: line: 27 pushnull    
45 [0x2d]:          popobj2    
46 [0x2e]:          returnobj   
47 [0x2f]:          ret   


function: ui.support#fragment.on_create[3726] params(0) in file: controller//ui//support//fragment.sharp:30:8: note:  
		    def on_create() {
		       ^

0 [0x0]: line: 31 ldc ebx // 1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #3   
4 [0x4]:          movi #0, adx   
6 [0x6]:          rmov adx, ebx   
7 [0x7]: line: 32 istorel 0, fp+1   
9 [0x9]:          ipushl #1   
10 [0xa]:          movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          pushobj   
14 [0xe]:          call @4060 // <std#list<ui.support#view>.size>   
15 [0xf]:          loadval ebx   
16 [0x10]:          loadval ecx   
17 [0x11]:          lt ecx, ebx   
18 [0x12]:          movr ebx, cmt   
19 [0x13]:          movr cmt, ebx   
20 [0x14]:          jne 34   
21 [0x15]: line: 33 movl 0   
22 [0x16]:          movn #0   
24 [0x18]:          pushobj   
25 [0x19]:          ipushl #1   
26 [0x1a]:          call @4050 // <std#list<ui.support#view>.at>   
27 [0x1b]:          popobj2    
28 [0x1c]:          smovr_3 fp+2   
29 [0x1d]: line: 34 pushl 2   
30 [0x1e]:          call @3760 // <ui.support#view.invalidate>   
31 [0x1f]:          iaddl 1, fp@1   
33 [0x21]:          jmp @9   
34 [0x22]:          ret   


function: ui.support#fragment.invalidate_refrences[3727] params(1) in file: controller//ui//support//fragment.sharp:38:8: note:  
		    def invalidate_refrences(id : var) {
		       ^

0 [0x0]: line: 39 istorel 0, fp+2   
2 [0x2]:          ipushl #2   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          pushobj   
7 [0x7]:          call @4060 // <std#list<ui.support#view>.size>   
8 [0x8]:          loadval ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          lt ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 42   
14 [0xe]: line: 40 movl 0   
15 [0xf]:          movn #0   
17 [0x11]:          pushobj   
18 [0x12]:          ipushl #2   
19 [0x13]:          call @4050 // <std#list<ui.support#view>.at>   
20 [0x14]:          popobj2    
21 [0x15]:          smovr_3 fp+3   
22 [0x16]: line: 41 pushl 3   
23 [0x17]:          ipushl #1   
24 [0x18]:          call @3759 // <ui.support#view.has_ref>   
25 [0x19]:          loadval ebx   
26 [0x1a]:          movr cmt, ebx   
27 [0x1b]:          jne 38   
28 [0x1c]: line: 42 movi #0, ebx   
30 [0x1e]:          movl 3   
31 [0x1f]:          movn #16   
33 [0x21]:          movi #0, adx   
35 [0x23]:          rmov adx, ebx   
36 [0x24]: line: 43 pushl 3   
37 [0x25]:          call @3760 // <ui.support#view.invalidate>   
38 [0x26]:          nop   
39 [0x27]:          iaddl 1, fp@2   
41 [0x29]:          jmp @2   
42 [0x2a]:          ret   


function: ui.support#fragment.on_destroy[3728] params(0) in file: controller//ui//support//fragment.sharp:48:8: note:  
		    def on_destroy() {
		       ^

0 [0x0]: line: 49 ldc ebx // 0   
1 [0x1]:          movl 0   
2 [0x2]:          movn #3   
4 [0x4]:          movi #0, adx   
6 [0x6]:          rmov adx, ebx   
7 [0x7]: line: 50 istorel 0, fp+1   
9 [0x9]:          ipushl #1   
10 [0xa]:          movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          pushobj   
14 [0xe]:          call @4060 // <std#list<ui.support#view>.size>   
15 [0xf]:          loadval ebx   
16 [0x10]:          loadval ecx   
17 [0x11]:          lt ecx, ebx   
18 [0x12]:          movr ebx, cmt   
19 [0x13]:          movr cmt, ebx   
20 [0x14]:          jne 32   
21 [0x15]: line: 51 movl 0   
22 [0x16]:          movn #0   
24 [0x18]:          pushobj   
25 [0x19]:          ipushl #1   
26 [0x1a]:          call @4050 // <std#list<ui.support#view>.at>   
27 [0x1b]:          invoke_delegate 3755 { static=0, args=0 }   
29 [0x1d]:          iaddl 1, fp@1   
31 [0x1f]:          jmp @9   
32 [0x20]:          ret   


function: ui.support#fragment.navigate[3729] params(2) in file: controller//ui//support//fragment.sharp:55:8: note:  
		    def navigate(screen: var, finish: var) {
		       ^

0 [0x0]: line: 56 loadl ebx, fp+2   
1 [0x1]:          movr cmt, ebx   
2 [0x2]:          jne 5   
3 [0x3]: line: 57 pushl 0   
4 [0x4]:          call @3728 // <ui.support#fragment.on_destroy>   
5 [0x5]:          nop   
6 [0x6]: line: 58 movl 0   
7 [0x7]:          movn #1   
9 [0x9]:          pushobj   
10 [0xa]:          ipushl #1   
11 [0xb]:          call @3715 // <ui.support#window.navigate>   
12 [0xc]:          ret   


function: ui.support#fragment.draw[3730] params(0) in file: controller//ui//support//fragment.sharp:61:8: note:  
		    def draw() {
		       ^

0 [0x0]: line: 62 istorel 0, fp+1   
2 [0x2]:          ipushl #1   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          pushobj   
7 [0x7]:          call @4060 // <std#list<ui.support#view>.size>   
8 [0x8]:          loadval ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          lt ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 25   
14 [0xe]: line: 63 movl 0   
15 [0xf]:          movn #0   
17 [0x11]:          pushobj   
18 [0x12]:          ipushl #1   
19 [0x13]:          call @4050 // <std#list<ui.support#view>.at>   
20 [0x14]:          invoke_delegate 3761 { static=0, args=0 }   
22 [0x16]:          iaddl 1, fp@1   
24 [0x18]:          jmp @2   
25 [0x19]:          ret   


ui.support#fragment.configure[3731] params(0) in file: controller//ui//support//fragment.sharp:67:8: note:  
		    def configure();
		       ^



constructor: ui.support#fragment.fragment[3732] params(0) in file: controller//ui//support//fragment.sharp:3:6: note:  
		class fragment : lifecycle {
		     ^

0 [0x0]:         new_class @0 // std#__srt_global   
1 [0x1]:         ? (162)   
2 [0x2]:         dup    
3 [0x3]:         call @4043 // <std#list<ui.support#view>.list>   
4 [0x4]:         movl 0   
5 [0x5]:         movn #0   
7 [0x7]:         popobj   
8 [0x8]:         ret   


ui.support#lifecycle.on_create[3733] params(0) in file: controller//ui//support//lifecycle.sharp:4:8: note:  
		    def on_create();
		       ^



ui.support#lifecycle.on_destroy[3734] params(0) in file: controller//ui//support//lifecycle.sharp:5:8: note:  
		    def on_destroy();
		       ^



constructor: ui.support#lifecycle.lifecycle[3735] params(0) in file: controller//ui//support//lifecycle.sharp:3:10: note:  
		interface lifecycle {
		         ^

0 [0x0]:         ret   


constructor: ui.support#image_view.image_view[3736] params(1) in file: controller//ui//support//image_view.sharp:8:15: note:  
		    image_view(id: var) -> base(id) {}
		              ^

0 [0x0]:         pushl 0   
1 [0x1]:         ipushl #1   
2 [0x2]:         call @3754 // <ui.support#view.view>   
3 [0x3]:         ret   


function: ui.support#image_view.transform_height[3737] params(0) in file: controller//ui//support//image_view.sharp:10:8: note:  
		    def transform_height() : var {
		       ^

0 [0x0]: line: 11 movl 0   
1 [0x1]:          movn #19   
3 [0x3]:          pushobj   
4 [0x4]:          pushnull    
5 [0x5]:          itest ebx   
6 [0x6]:          not ebx, ebx   
7 [0x7]:          skne ebx // pc = 17   
8 [0x8]:          movl 0   
9 [0x9]:          movn #19   
11 [0xb]:          movn #3   
13 [0xd]:          movi #0, adx   
15 [0xf]:          iaload ebx, adx   
16 [0x10]:          skip @2 // pc = 18   
17 [0x11]:          movi #0, ebx   
19 [0x13]:          return_val ebx   
20 [0x14]:          ret   


function: ui.support#image_view.transform_width[3738] params(0) in file: controller//ui//support//image_view.sharp:14:8: note:  
		    def transform_width() : var {
		       ^

0 [0x0]: line: 15 movl 0   
1 [0x1]:          movn #19   
3 [0x3]:          pushobj   
4 [0x4]:          pushnull    
5 [0x5]:          itest ebx   
6 [0x6]:          not ebx, ebx   
7 [0x7]:          skne ebx // pc = 17   
8 [0x8]:          movl 0   
9 [0x9]:          movn #19   
11 [0xb]:          movn #2   
13 [0xd]:          movi #0, adx   
15 [0xf]:          iaload ebx, adx   
16 [0x10]:          skip @2 // pc = 18   
17 [0x11]:          movi #0, ebx   
19 [0x13]:          return_val ebx   
20 [0x14]:          ret   


function: ui.support#image_view.set_drawable[3739] params(1) in file: controller//ui//support//image_view.sharp:18:8: note:  
		    def set_drawable(res_id: var) : image_view {
		       ^

0 [0x0]: line: 19 ipushl #1   
1 [0x1]:          call @3702 // <ui.res#resources.get_drawable>   
2 [0x2]:          movl 0   
3 [0x3]:          movn #19   
5 [0x5]:          popobj   
6 [0x6]: line: 20 movi #0, ebx   
8 [0x8]:          movl 0   
9 [0x9]:          movn #16   
11 [0xb]:          movi #0, adx   
13 [0xd]:          rmov adx, ebx   
14 [0xe]: line: 21 movl 0   
15 [0xf]:          returnobj   
16 [0x10]:          ret   


function: ui.support#image_view.draw[3740] params(0) in file: controller//ui//support//image_view.sharp:24:8: note:  
		    def draw() {
		       ^

0 [0x0]: line: 25 pushl 0   
1 [0x1]:          call @3760 // <ui.support#view.invalidate>   
2 [0x2]: line: 27 movl 0   
3 [0x3]:          movn #5   
5 [0x5]:          movi #0, adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          rstore ebx   
9 [0x9]:          ldc ebx // 0   
10 [0xa]:          loadval ecx   
11 [0xb]:          test ecx, ebx   
12 [0xc]:          movr ebx, cmt   
13 [0xd]:          skne ebx // pc = 21   
14 [0xe]:          movl 0   
15 [0xf]:          movn #19   
17 [0x11]:          pushobj   
18 [0x12]:          pushnull    
19 [0x13]:          itest ebx   
20 [0x14]:          not ebx, ebx   
21 [0x15]:          movr cmt, ebx   
22 [0x16]:          jne 29   
23 [0x17]: line: 28 movl 0   
24 [0x18]:          movn #17   
26 [0x1a]:          pushobj   
27 [0x1b]:          pushl 0   
28 [0x1c]:          call @3718 // <ui.support#window.draw_img>   
29 [0x1d]:          nop   
30 [0x1e]:          ret   


function: ui.support#image_view.on_destroy[3741] params(0) in file: controller//ui//support//image_view.sharp:31:8: note:  
		    def on_destroy() {
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #19   
3 [0x3]:          del   
4 [0x4]: line: 33 movi #0, ebx   
6 [0x6]:          movl 0   
7 [0x7]:          movn #16   
9 [0x9]:          movi #0, adx   
11 [0xb]:          rmov adx, ebx   
12 [0xc]:          ret   


constructor: ui.support#image_view.image_view[3742] params(0) in file: controller//ui//support//image_view.sharp:5:6: note:  
		class image_view base view {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3753 // <ui.support#view.view>   
2 [0x2]:         ret   


constructor: ui.support#constants.view.view[3743] params(0) in file: controller//ui//support//constants.sharp:5:10: note:  
		    class view {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: ui.support#constants.window.window[3744] params(0) in file: controller//ui//support//constants.sharp:15:10: note:  
		    class window {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: ui.support#constants.lifecycle.lifecycle[3745] params(0) in file: controller//ui//support//constants.sharp:21:10: note:  
		    class lifecycle {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: ui.support#constants.time.time[3746] params(0) in file: controller//ui//support//constants.sharp:26:10: note:  
		    class time {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: ui.support#constants.layout.layout[3747] params(0) in file: controller//ui//support//constants.sharp:31:10: note:  
		    class layout {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: ui.support#constants.margins.margins[3748] params(0) in file: controller//ui//support//constants.sharp:36:10: note:  
		    class margins {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: ui.support#constants.resource.id.id[3749] params(0) in file: controller//ui//support//constants.sharp:42:15: note:  
		         class id {
		              ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: ui.support#constants.resource.resource[3750] params(0) in file: controller//ui//support//constants.sharp:40:10: note:  
		    class resource {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: ui.support#constants.standard.standard[3751] params(0) in file: controller//ui//support//constants.sharp:73:10: note:  
		    class standard {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: ui.support#constants.constants[3752] params(0) in file: controller//ui//support//constants.sharp:3:6: note:  
		class constants {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: ui.support#view.view[3753] params(0) in file: controller//ui//support//view.sharp:4:17: note:  
		    private view() {}
		                ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: ui.support#view.view[3754] params(1) in file: controller//ui//support//view.sharp:6:16: note:  
		    public view(id : var) {
		               ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 7 ipushl #1   
2 [0x2]:         movl 0   
3 [0x3]:         movn #6   
5 [0x5]:         loadval ebx   
6 [0x6]:         movi #0, adx   
8 [0x8]:         rmov adx, ebx   
9 [0x9]:         ret   


ui.support#view.on_destroy[3755] params(0) in file: controller//ui//support//view.sharp:31:8: note:  
		    def on_destroy();
		       ^



function: ui.support#view.set_width[3756] params(1) in file: controller//ui//support//view.sharp:33:8: note:  
		    def set_width(size: var) : view {
		       ^

0 [0x0]: line: 34 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #2   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]: line: 35 movi #0, ebx   
10 [0xa]:          movl 0   
11 [0xb]:          movn #16   
13 [0xd]:          movi #0, adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]: line: 36 movl 0   
17 [0x11]:          returnobj   
18 [0x12]:          ret   


ui.support#view.transform_height[3757] params(0) in file: controller//ui//support//view.sharp:39:8: note:  
		    def transform_height(): var;
		       ^



ui.support#view.transform_width[3758] params(0) in file: controller//ui//support//view.sharp:40:8: note:  
		    def transform_width(): var;
		       ^



function: ui.support#view.has_ref[3759] params(1) in file: controller//ui//support//view.sharp:42:8: note:  
		    def has_ref(id: var) : var {
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          movn #7   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          loadval ecx   
9 [0x9]:          test ecx, ebx   
10 [0xa]:          movr ebx, cmt   
11 [0xb]:          skpe ebx // pc = 58   
12 [0xc]:          movl 0   
13 [0xd]:          movn #8   
15 [0xf]:          movi #0, adx   
17 [0x11]:          iaload ebx, adx   
18 [0x12]:          rstore ebx   
19 [0x13]:          loadl ebx, fp+1   
20 [0x14]:          loadval ecx   
21 [0x15]:          test ecx, ebx   
22 [0x16]:          movr ebx, cmt   
23 [0x17]:          skpe ebx // pc = 58   
24 [0x18]:          movl 0   
25 [0x19]:          movn #10   
27 [0x1b]:          movi #0, adx   
29 [0x1d]:          iaload ebx, adx   
30 [0x1e]:          rstore ebx   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          loadval ecx   
33 [0x21]:          test ecx, ebx   
34 [0x22]:          movr ebx, cmt   
35 [0x23]:          skpe ebx // pc = 58   
36 [0x24]:          movl 0   
37 [0x25]:          movn #11   
39 [0x27]:          movi #0, adx   
41 [0x29]:          iaload ebx, adx   
42 [0x2a]:          rstore ebx   
43 [0x2b]:          loadl ebx, fp+1   
44 [0x2c]:          loadval ecx   
45 [0x2d]:          test ecx, ebx   
46 [0x2e]:          movr ebx, cmt   
47 [0x2f]:          skpe ebx // pc = 58   
48 [0x30]:          movl 0   
49 [0x31]:          movn #12   
51 [0x33]:          movi #0, adx   
53 [0x35]:          iaload ebx, adx   
54 [0x36]:          rstore ebx   
55 [0x37]:          loadl ebx, fp+1   
56 [0x38]:          loadval ecx   
57 [0x39]:          test ecx, ebx   
58 [0x3a]:          return_val cmt   
59 [0x3b]:          ret   


function: ui.support#view.invalidate[3760] params(0) in file: controller//ui//support//view.sharp:48:18: note:  
		    protected def invalidate() {
		                 ^

0 [0x0]: line: 49 movl 0   
1 [0x1]:          movn #16   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          not ebx, ebx   
7 [0x7]:          movr cmt, ebx   
8 [0x8]:          jne 2038   
9 [0x9]: line: 50 movi #1, ebx   
11 [0xb]:          movl 0   
12 [0xc]:          movn #16   
14 [0xe]:          movi #0, adx   
16 [0x10]:          rmov adx, ebx   
17 [0x11]: line: 51 movi #0, ebx   
19 [0x13]:          movl 0   
20 [0x14]:          movn #0   
22 [0x16]:          movi #0, adx   
24 [0x18]:          rmov adx, ebx   
25 [0x19]: line: 52 movi #0, ebx   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          movi #0, adx   
32 [0x20]:          rmov adx, ebx   
33 [0x21]: line: 54 movl 1   
34 [0x22]:          del   
35 [0x23]: line: 55 movl 0   
36 [0x24]:          movn #7   
38 [0x26]:          movi #0, adx   
40 [0x28]:          iaload ebx, adx   
41 [0x29]:          rstore ebx   
42 [0x2a]:          ldc ebx // 1   
43 [0x2b]:          loadval ecx   
44 [0x2c]:          gt ecx, ebx   
45 [0x2d]:          movr ebx, cmt   
46 [0x2e]:          movr cmt, ebx   
47 [0x2f]:          jne 89   
48 [0x30]: line: 56 movl 0   
49 [0x31]:          movn #18   
51 [0x33]:          pushobj   
52 [0x34]:          movl 0   
53 [0x35]:          movn #7   
55 [0x37]:          movi #0, adx   
57 [0x39]:          iaload ebx, adx   
58 [0x3a]:          rstore ebx   
59 [0x3b]:          call @3725 // <ui.support#fragment.find_view_by_id>   
60 [0x3c]:          popobj2    
61 [0x3d]:          smovr_3 fp+1   
62 [0x3e]: line: 57 pushl 1   
63 [0x3f]:          call @3760 // <ui.support#view.invalidate>   
64 [0x40]: line: 58 movl 1   
65 [0x41]:          movn #0   
67 [0x43]:          movi #0, adx   
69 [0x45]:          iaload ebx, adx   
70 [0x46]:          movl 0   
71 [0x47]:          movn #0   
73 [0x49]:          movi #0, adx   
75 [0x4b]:          rmov adx, ebx   
76 [0x4c]: line: 59 pushl 0   
77 [0x4d]:          invoke_delegate 3758 { static=0, args=0 }   
79 [0x4f]:          movl 0   
80 [0x50]:          movn #0   
82 [0x52]:          movi #0, adx   
84 [0x54]:          iaload ecx, adx   
85 [0x55]:          loadval ebx   
86 [0x56]:          sub ecx, ebx -> ebx   
87 [0x57]:          rmov adx, ebx   
88 [0x58]:          jmp @106   
89 [0x59]:          movl 0   
90 [0x5a]:          movn #7   
92 [0x5c]:          movi #0, adx   
94 [0x5e]:          iaload ebx, adx   
95 [0x5f]:          rstore ebx   
96 [0x60]:          ldc ebx // 1   
97 [0x61]:          loadval ecx   
98 [0x62]:          test ecx, ebx   
99 [0x63]:          jne 106   
100 [0x64]: line: 61 new_class @0 // std#__srt_global   
101 [0x65]:          loadval adx   
102 [0x66]:          dup    
103 [0x67]:          newstr @68 // cannot align view to left of parent use 'to_start_of(parent)' instead   
104 [0x68]:          call @3551 // <std#illegal_state_exception.illegal_state_exception>   
105 [0x69]:          throw    
106 [0x6a]:          nop   
107 [0x6b]: line: 64 movl 0   
108 [0x6c]:          movn #8   
110 [0x6e]:          movi #0, adx   
112 [0x70]:          iaload ebx, adx   
113 [0x71]:          rstore ebx   
114 [0x72]:          ldc ebx // 1   
115 [0x73]:          loadval ecx   
116 [0x74]:          gt ecx, ebx   
117 [0x75]:          movr ebx, cmt   
118 [0x76]:          movr cmt, ebx   
119 [0x77]:          jne 148   
120 [0x78]: line: 65 movl 0   
121 [0x79]:          movn #18   
123 [0x7b]:          pushobj   
124 [0x7c]:          movl 0   
125 [0x7d]:          movn #8   
127 [0x7f]:          movi #0, adx   
129 [0x81]:          iaload ebx, adx   
130 [0x82]:          rstore ebx   
131 [0x83]:          call @3725 // <ui.support#fragment.find_view_by_id>   
132 [0x84]:          popobj2    
133 [0x85]:          smovr_3 fp+1   
134 [0x86]: line: 66 pushl 1   
135 [0x87]:          call @3760 // <ui.support#view.invalidate>   
136 [0x88]: line: 67 movl 1   
137 [0x89]:          movn #0   
139 [0x8b]:          movi #0, adx   
141 [0x8d]:          iaload ebx, adx   
142 [0x8e]:          movl 0   
143 [0x8f]:          movn #0   
145 [0x91]:          movi #0, adx   
147 [0x93]:          rmov adx, ebx   
148 [0x94]:          nop   
149 [0x95]: line: 70 movl 0   
150 [0x96]:          movn #10   
152 [0x98]:          movi #0, adx   
154 [0x9a]:          iaload ebx, adx   
155 [0x9b]:          rstore ebx   
156 [0x9c]:          ldc ebx // 1   
157 [0x9d]:          loadval ecx   
158 [0x9e]:          gt ecx, ebx   
159 [0x9f]:          movr ebx, cmt   
160 [0xa0]:          movr cmt, ebx   
161 [0xa1]:          jne 230   
162 [0xa2]: line: 71 movl 0   
163 [0xa3]:          movn #7   
165 [0xa5]:          movi #0, adx   
167 [0xa7]:          iaload ebx, adx   
168 [0xa8]:          rstore ebx   
169 [0xa9]:          ldc ebx // 1   
170 [0xaa]:          loadval ecx   
171 [0xab]:          gt ecx, ebx   
172 [0xac]:          movr ebx, cmt   
173 [0xad]:          skne ebx // pc = 188   
174 [0xae]:          movl 0   
175 [0xaf]:          movn #10   
177 [0xb1]:          movi #0, adx   
179 [0xb3]:          iaload ebx, adx   
180 [0xb4]:          rstore ebx   
181 [0xb5]:          movl 0   
182 [0xb6]:          movn #7   
184 [0xb8]:          movi #0, adx   
186 [0xba]:          iaload ebx, adx   
187 [0xbb]:          loadval ecx   
188 [0xbc]:          tne ecx, ebx   
189 [0xbd]:          jne 196   
190 [0xbe]: line: 72 new_class @0 // std#__srt_global   
191 [0xbf]:          loadval adx   
192 [0xc0]:          dup    
193 [0xc1]:          newstr @69 // cannot align view to top of another view to whom we are not left aligned to   
194 [0xc2]:          call @3551 // <std#illegal_state_exception.illegal_state_exception>   
195 [0xc3]:          throw    
196 [0xc4]:          nop   
197 [0xc5]: line: 75 movl 1   
198 [0xc6]:          checknull   
199 [0xc7]:          movr cmt, ebx   
200 [0xc8]:          jne 215   
201 [0xc9]: line: 76 movl 0   
202 [0xca]:          movn #18   
204 [0xcc]:          pushobj   
205 [0xcd]:          movl 0   
206 [0xce]:          movn #10   
208 [0xd0]:          movi #0, adx   
210 [0xd2]:          iaload ebx, adx   
211 [0xd3]:          rstore ebx   
212 [0xd4]:          call @3725 // <ui.support#fragment.find_view_by_id>   
213 [0xd5]:          popobj2    
214 [0xd6]:          smovr_3 fp+1   
215 [0xd7]:          nop   
216 [0xd8]: line: 77 pushl 1   
217 [0xd9]:          call @3760 // <ui.support#view.invalidate>   
218 [0xda]: line: 78 movl 1   
219 [0xdb]:          movn #1   
221 [0xdd]:          movi #0, adx   
223 [0xdf]:          iaload ebx, adx   
224 [0xe0]:          movl 0   
225 [0xe1]:          movn #1   
227 [0xe3]:          movi #0, adx   
229 [0xe5]:          rmov adx, ebx   
230 [0xe6]:          nop   
231 [0xe7]: line: 81 movl 0   
232 [0xe8]:          movn #13   
234 [0xea]:          movi #0, adx   
236 [0xec]:          iaload ebx, adx   
237 [0xed]:          rstore ebx   
238 [0xee]:          ldc ebx // 1   
239 [0xef]:          loadval ecx   
240 [0xf0]:          gt ecx, ebx   
241 [0xf1]:          movr ebx, cmt   
242 [0xf2]:          movr cmt, ebx   
243 [0xf3]:          jne 357   
244 [0xf4]: line: 82 movl 0   
245 [0xf5]:          movn #10   
247 [0xf7]:          movi #0, adx   
249 [0xf9]:          iaload ebx, adx   
250 [0xfa]:          rstore ebx   
251 [0xfb]:          ldc ebx // 1   
252 [0xfc]:          loadval ecx   
253 [0xfd]:          gte ecx, ebx   
254 [0xfe]:          movr ebx, cmt   
255 [0xff]:          skpe ebx // pc = 279   
256 [0x100]:          movl 0   
257 [0x101]:          movn #11   
259 [0x103]:          movi #0, adx   
261 [0x105]:          iaload ebx, adx   
262 [0x106]:          rstore ebx   
263 [0x107]:          ldc ebx // 1   
264 [0x108]:          loadval ecx   
265 [0x109]:          gte ecx, ebx   
266 [0x10a]:          movr ebx, cmt   
267 [0x10b]:          skpe ebx // pc = 279   
268 [0x10c]:          movl 0   
269 [0x10d]:          movn #14   
271 [0x10f]:          movi #0, adx   
273 [0x111]:          iaload ebx, adx   
274 [0x112]:          rstore ebx   
275 [0x113]:          ldc ebx // 1   
276 [0x114]:          loadval ecx   
277 [0x115]:          gte ecx, ebx   
278 [0x116]:          movr ebx, cmt   
279 [0x117]:          movr cmt, ebx   
280 [0x118]:          jne 287   
281 [0x119]: line: 84 new_class @0 // std#__srt_global   
282 [0x11a]:          loadval adx   
283 [0x11b]:          dup    
284 [0x11c]:          newstr @70 // cannot align view to top of another view with top or bottom alignment   
285 [0x11d]:          call @3551 // <std#illegal_state_exception.illegal_state_exception>   
286 [0x11e]:          throw    
287 [0x11f]:          nop   
288 [0x120]: line: 87 movl 1   
289 [0x121]:          checknull   
290 [0x122]:          movr cmt, ebx   
291 [0x123]:          jne 306   
292 [0x124]: line: 88 movl 0   
293 [0x125]:          movn #18   
295 [0x127]:          pushobj   
296 [0x128]:          movl 0   
297 [0x129]:          movn #10   
299 [0x12b]:          movi #0, adx   
301 [0x12d]:          iaload ebx, adx   
302 [0x12e]:          rstore ebx   
303 [0x12f]:          call @3725 // <ui.support#fragment.find_view_by_id>   
304 [0x130]:          popobj2    
305 [0x131]:          smovr_3 fp+1   
306 [0x132]:          nop   
307 [0x133]: line: 89 pushl 1   
308 [0x134]:          call @3760 // <ui.support#view.invalidate>   
309 [0x135]: line: 90 movl 1   
310 [0x136]:          movn #1   
312 [0x138]:          movi #0, adx   
314 [0x13a]:          iaload ebx, adx   
315 [0x13b]:          rstore ebx   
316 [0x13c]:          pushl 0   
317 [0x13d]:          invoke_delegate 3757 { static=0, args=0 }   
319 [0x13f]:          loadval ebx   
320 [0x140]:          loadval ecx   
321 [0x141]:          sub ecx, ebx -> ebx   
322 [0x142]:          movl 0   
323 [0x143]:          movn #1   
325 [0x145]:          movi #0, adx   
327 [0x147]:          rmov adx, ebx   
328 [0x148]: line: 92 movl 1   
329 [0x149]:          movn #4   
331 [0x14b]:          pushobj   
332 [0x14c]:          pushnull    
333 [0x14d]:          itest ebx   
334 [0x14e]:          not ebx, ebx   
335 [0x14f]:          movr cmt, ebx   
336 [0x150]:          jne 355   
337 [0x151]: line: 93 movl 1   
338 [0x152]:          movn #4   
340 [0x154]:          movn #2   
342 [0x156]:          movi #0, adx   
344 [0x158]:          iaload ebx, adx   
345 [0x159]:          rstore ebx   
346 [0x15a]:          movl 0   
347 [0x15b]:          movn #1   
349 [0x15d]:          movi #0, adx   
351 [0x15f]:          iaload ecx, adx   
352 [0x160]:          loadval ebx   
353 [0x161]:          sub ecx, ebx -> ebx   
354 [0x162]:          rmov adx, ebx   
355 [0x163]:          nop   
356 [0x164]:          jmp @374   
357 [0x165]:          movl 0   
358 [0x166]:          movn #13   
360 [0x168]:          movi #0, adx   
362 [0x16a]:          iaload ebx, adx   
363 [0x16b]:          rstore ebx   
364 [0x16c]:          ldc ebx // 1   
365 [0x16d]:          loadval ecx   
366 [0x16e]:          test ecx, ebx   
367 [0x16f]:          jne 374   
368 [0x170]: line: 96 new_class @0 // std#__srt_global   
369 [0x171]:          loadval adx   
370 [0x172]:          dup    
371 [0x173]:          newstr @71 // cannot align view above parent view, use 'to_top_of(parent)' instead   
372 [0x174]:          call @3551 // <std#illegal_state_exception.illegal_state_exception>   
373 [0x175]:          throw    
374 [0x176]:          nop   
375 [0x177]: line: 99 movl 0   
376 [0x178]:          movn #14   
378 [0x17a]:          movi #0, adx   
380 [0x17c]:          iaload ebx, adx   
381 [0x17d]:          rstore ebx   
382 [0x17e]:          ldc ebx // 1   
383 [0x17f]:          loadval ecx   
384 [0x180]:          gt ecx, ebx   
385 [0x181]:          movr ebx, cmt   
386 [0x182]:          movr cmt, ebx   
387 [0x183]:          jne 566   
388 [0x184]: line: 100 movl 0   
389 [0x185]:           movn #10   
391 [0x187]:           movi #0, adx   
393 [0x189]:           iaload ebx, adx   
394 [0x18a]:           rstore ebx   
395 [0x18b]:           ldc ebx // 1   
396 [0x18c]:           loadval ecx   
397 [0x18d]:           gte ecx, ebx   
398 [0x18e]:           movr ebx, cmt   
399 [0x18f]:           skpe ebx // pc = 411   
400 [0x190]:           movl 0   
401 [0x191]:           movn #13   
403 [0x193]:           movi #0, adx   
405 [0x195]:           iaload ebx, adx   
406 [0x196]:           rstore ebx   
407 [0x197]:           ldc ebx // 1   
408 [0x198]:           loadval ecx   
409 [0x199]:           gte ecx, ebx   
410 [0x19a]:           movr ebx, cmt   
411 [0x19b]:           movr cmt, ebx   
412 [0x19c]:           jne 419   
413 [0x19d]: line: 101 new_class @0 // std#__srt_global   
414 [0x19e]:           loadval adx   
415 [0x19f]:           dup    
416 [0x1a0]:           newstr @72 // cannot align view to bottom while also having top alignment   
417 [0x1a1]:           call @3551 // <std#illegal_state_exception.illegal_state_exception>   
418 [0x1a2]:           throw    
419 [0x1a3]:           nop   
420 [0x1a4]: line: 103 movl 1   
421 [0x1a5]:           checknull   
422 [0x1a6]:           skpe ebx // pc = 443   
423 [0x1a7]:           movl 1   
424 [0x1a8]:           pushobj   
425 [0x1a9]:           pushnull    
426 [0x1aa]:           itest ebx   
427 [0x1ab]:           not ebx, ebx   
428 [0x1ac]:           skne ebx // pc = 443   
429 [0x1ad]:           movl 1   
430 [0x1ae]:           movn #6   
432 [0x1b0]:           movi #0, adx   
434 [0x1b2]:           iaload ebx, adx   
435 [0x1b3]:           rstore ebx   
436 [0x1b4]:           movl 0   
437 [0x1b5]:           movn #11   
439 [0x1b7]:           movi #0, adx   
441 [0x1b9]:           iaload ebx, adx   
442 [0x1ba]:           loadval ecx   
443 [0x1bb]:           tne ecx, ebx   
444 [0x1bc]:           jne 459   
445 [0x1bd]: line: 104 movl 0   
446 [0x1be]:           movn #18   
448 [0x1c0]:           pushobj   
449 [0x1c1]:           movl 0   
450 [0x1c2]:           movn #14   
452 [0x1c4]:           movi #0, adx   
454 [0x1c6]:           iaload ebx, adx   
455 [0x1c7]:           rstore ebx   
456 [0x1c8]:           call @3725 // <ui.support#fragment.find_view_by_id>   
457 [0x1c9]:           popobj2    
458 [0x1ca]:           smovr_3 fp+1   
459 [0x1cb]:           nop   
460 [0x1cc]: line: 105 pushl 1   
461 [0x1cd]:           call @3760 // <ui.support#view.invalidate>   
462 [0x1ce]: line: 106 movl 1   
463 [0x1cf]:           movn #3   
465 [0x1d1]:           movi #0, adx   
467 [0x1d3]:           iaload ebx, adx   
468 [0x1d4]:           rstore ebx   
469 [0x1d5]:           movi #-1, ebx   
471 [0x1d7]:           loadval ecx   
472 [0x1d8]:           test ecx, ebx   
473 [0x1d9]:           jne 483   
474 [0x1da]: line: 107 movi #65, ebx   
476 [0x1dc]:           movl 0   
477 [0x1dd]:           movn #1   
479 [0x1df]:           movi #0, adx   
481 [0x1e1]:           rmov adx, ebx   
482 [0x1e2]:           jmp @536   
483 [0x1e3]:           movl 1   
484 [0x1e4]:           movn #3   
486 [0x1e6]:           movi #0, adx   
488 [0x1e8]:           iaload ebx, adx   
489 [0x1e9]:           rstore ebx   
490 [0x1ea]:           movi #-2, ebx   
492 [0x1ec]:           loadval ecx   
493 [0x1ed]:           tne ecx, ebx   
494 [0x1ee]:           jne 517   
495 [0x1ef]: line: 109 movl 1   
496 [0x1f0]:           movn #1   
498 [0x1f2]:           movi #0, adx   
500 [0x1f4]:           iaload ebx, adx   
501 [0x1f5]:           rstore ebx   
502 [0x1f6]:           movl 1   
503 [0x1f7]:           movn #3   
505 [0x1f9]:           movi #0, adx   
507 [0x1fb]:           iaload ebx, adx   
508 [0x1fc]:           loadval ecx   
509 [0x1fd]:           add ecx, ebx -> ebx   
510 [0x1fe]:           movl 0   
511 [0x1ff]:           movn #1   
513 [0x201]:           movi #0, adx   
515 [0x203]:           rmov adx, ebx   
516 [0x204]:           jmp @536   
517 [0x205]: line: 111 movl 1   
518 [0x206]:           movn #1   
520 [0x208]:           movi #0, adx   
522 [0x20a]:           iaload ebx, adx   
523 [0x20b]:           rstore ebx   
524 [0x20c]:           pushl 1   
525 [0x20d]:           invoke_delegate 3757 { static=0, args=0 }   
527 [0x20f]:           loadval ebx   
528 [0x210]:           loadval ecx   
529 [0x211]:           add ecx, ebx -> ebx   
530 [0x212]:           movl 0   
531 [0x213]:           movn #1   
533 [0x215]:           movi #0, adx   
535 [0x217]:           rmov adx, ebx   
536 [0x218]:           nop   
537 [0x219]: line: 113 movl 1   
538 [0x21a]:           movn #4   
540 [0x21c]:           pushobj   
541 [0x21d]:           pushnull    
542 [0x21e]:           itest ebx   
543 [0x21f]:           not ebx, ebx   
544 [0x220]:           movr cmt, ebx   
545 [0x221]:           jne 564   
546 [0x222]: line: 114 movl 1   
547 [0x223]:           movn #4   
549 [0x225]:           movn #3   
551 [0x227]:           movi #0, adx   
553 [0x229]:           iaload ebx, adx   
554 [0x22a]:           rstore ebx   
555 [0x22b]:           movl 0   
556 [0x22c]:           movn #1   
558 [0x22e]:           movi #0, adx   
560 [0x230]:           iaload ecx, adx   
561 [0x231]:           loadval ebx   
562 [0x232]:           add ecx, ebx -> ebx   
563 [0x233]:           rmov adx, ebx   
564 [0x234]:           nop   
565 [0x235]:           jmp @583   
566 [0x236]:           movl 0   
567 [0x237]:           movn #14   
569 [0x239]:           movi #0, adx   
571 [0x23b]:           iaload ebx, adx   
572 [0x23c]:           rstore ebx   
573 [0x23d]:           ldc ebx // 1   
574 [0x23e]:           loadval ecx   
575 [0x23f]:           test ecx, ebx   
576 [0x240]:           jne 583   
577 [0x241]: line: 117 new_class @0 // std#__srt_global   
578 [0x242]:           loadval adx   
579 [0x243]:           dup    
580 [0x244]:           newstr @73 // cannot align view below the parent, use 'to_bottom_of(parent)' instead   
581 [0x245]:           call @3551 // <std#illegal_state_exception.illegal_state_exception>   
582 [0x246]:           throw    
583 [0x247]:           nop   
584 [0x248]: line: 120 movl 0   
585 [0x249]:           movn #11   
587 [0x24b]:           movi #0, adx   
589 [0x24d]:           iaload ebx, adx   
590 [0x24e]:           rstore ebx   
591 [0x24f]:           ldc ebx // 1   
592 [0x250]:           loadval ecx   
593 [0x251]:           gt ecx, ebx   
594 [0x252]:           movr ebx, cmt   
595 [0x253]:           movr cmt, ebx   
596 [0x254]:           jne 783   
597 [0x255]: line: 121 movl 0   
598 [0x256]:           movn #10   
600 [0x258]:           movi #0, adx   
602 [0x25a]:           iaload ebx, adx   
603 [0x25b]:           rstore ebx   
604 [0x25c]:           ldc ebx // 1   
605 [0x25d]:           loadval ecx   
606 [0x25e]:           gte ecx, ebx   
607 [0x25f]:           movr ebx, cmt   
608 [0x260]:           movr cmt, ebx   
609 [0x261]:           jne 616   
610 [0x262]: line: 122 new_class @0 // std#__srt_global   
611 [0x263]:           loadval adx   
612 [0x264]:           dup    
613 [0x265]:           newstr @72 // cannot align view to bottom while also having top alignment   
614 [0x266]:           call @3551 // <std#illegal_state_exception.illegal_state_exception>   
615 [0x267]:           throw    
616 [0x268]:           nop   
617 [0x269]: line: 124 movl 1   
618 [0x26a]:           checknull   
619 [0x26b]:           skpe ebx // pc = 640   
620 [0x26c]:           movl 1   
621 [0x26d]:           pushobj   
622 [0x26e]:           pushnull    
623 [0x26f]:           itest ebx   
624 [0x270]:           not ebx, ebx   
625 [0x271]:           skne ebx // pc = 640   
626 [0x272]:           movl 1   
627 [0x273]:           movn #6   
629 [0x275]:           movi #0, adx   
631 [0x277]:           iaload ebx, adx   
632 [0x278]:           rstore ebx   
633 [0x279]:           movl 0   
634 [0x27a]:           movn #11   
636 [0x27c]:           movi #0, adx   
638 [0x27e]:           iaload ebx, adx   
639 [0x27f]:           loadval ecx   
640 [0x280]:           tne ecx, ebx   
641 [0x281]:           jne 656   
642 [0x282]: line: 125 movl 0   
643 [0x283]:           movn #18   
645 [0x285]:           pushobj   
646 [0x286]:           movl 0   
647 [0x287]:           movn #11   
649 [0x289]:           movi #0, adx   
651 [0x28b]:           iaload ebx, adx   
652 [0x28c]:           rstore ebx   
653 [0x28d]:           call @3725 // <ui.support#fragment.find_view_by_id>   
654 [0x28e]:           popobj2    
655 [0x28f]:           smovr_3 fp+1   
656 [0x290]:           nop   
657 [0x291]: line: 126 pushl 1   
658 [0x292]:           call @3760 // <ui.support#view.invalidate>   
659 [0x293]: line: 127 movl 1   
660 [0x294]:           movn #3   
662 [0x296]:           movi #0, adx   
664 [0x298]:           iaload ebx, adx   
665 [0x299]:           rstore ebx   
666 [0x29a]:           movi #-1, ebx   
668 [0x29c]:           loadval ecx   
669 [0x29d]:           test ecx, ebx   
670 [0x29e]:           jne 686   
671 [0x29f]: line: 128 istore 64   
673 [0x2a1]:           pushl 0   
674 [0x2a2]:           invoke_delegate 3757 { static=0, args=0 }   
676 [0x2a4]:           loadval ebx   
677 [0x2a5]:           loadval ecx   
678 [0x2a6]:           sub ecx, ebx -> ebx   
679 [0x2a7]:           movl 0   
680 [0x2a8]:           movn #1   
682 [0x2aa]:           movi #0, adx   
684 [0x2ac]:           rmov adx, ebx   
685 [0x2ad]:           jmp @753   
686 [0x2ae]:           movl 1   
687 [0x2af]:           movn #3   
689 [0x2b1]:           movi #0, adx   
691 [0x2b3]:           iaload ebx, adx   
692 [0x2b4]:           rstore ebx   
693 [0x2b5]:           movi #-2, ebx   
695 [0x2b7]:           loadval ecx   
696 [0x2b8]:           tne ecx, ebx   
697 [0x2b9]:           jne 727   
698 [0x2ba]: line: 130 movl 1   
699 [0x2bb]:           movn #1   
701 [0x2bd]:           movi #0, adx   
703 [0x2bf]:           iaload ebx, adx   
704 [0x2c0]:           rstore ebx   
705 [0x2c1]:           movl 1   
706 [0x2c2]:           movn #3   
708 [0x2c4]:           movi #0, adx   
710 [0x2c6]:           iaload ebx, adx   
711 [0x2c7]:           loadval ecx   
712 [0x2c8]:           add ecx, ebx -> ebx   
713 [0x2c9]:           rstore ebx   
714 [0x2ca]:           pushl 0   
715 [0x2cb]:           invoke_delegate 3757 { static=0, args=0 }   
717 [0x2cd]:           loadval ebx   
718 [0x2ce]:           loadval ecx   
719 [0x2cf]:           sub ecx, ebx -> ebx   
720 [0x2d0]:           movl 0   
721 [0x2d1]:           movn #1   
723 [0x2d3]:           movi #0, adx   
725 [0x2d5]:           rmov adx, ebx   
726 [0x2d6]:           jmp @753   
727 [0x2d7]: line: 132 movl 1   
728 [0x2d8]:           movn #1   
730 [0x2da]:           movi #0, adx   
732 [0x2dc]:           iaload ebx, adx   
733 [0x2dd]:           rstore ebx   
734 [0x2de]:           pushl 1   
735 [0x2df]:           invoke_delegate 3757 { static=0, args=0 }   
737 [0x2e1]:           loadval ebx   
738 [0x2e2]:           loadval ecx   
739 [0x2e3]:           add ecx, ebx -> ebx   
740 [0x2e4]:           rstore ebx   
741 [0x2e5]:           pushl 0   
742 [0x2e6]:           invoke_delegate 3757 { static=0, args=0 }   
744 [0x2e8]:           loadval ebx   
745 [0x2e9]:           loadval ecx   
746 [0x2ea]:           sub ecx, ebx -> ebx   
747 [0x2eb]:           movl 0   
748 [0x2ec]:           movn #1   
750 [0x2ee]:           movi #0, adx   
752 [0x2f0]:           rmov adx, ebx   
753 [0x2f1]:           nop   
754 [0x2f2]: line: 134 movl 1   
755 [0x2f3]:           movn #4   
757 [0x2f5]:           pushobj   
758 [0x2f6]:           pushnull    
759 [0x2f7]:           itest ebx   
760 [0x2f8]:           not ebx, ebx   
761 [0x2f9]:           movr cmt, ebx   
762 [0x2fa]:           jne 781   
763 [0x2fb]: line: 135 movl 1   
764 [0x2fc]:           movn #4   
766 [0x2fe]:           movn #3   
768 [0x300]:           movi #0, adx   
770 [0x302]:           iaload ebx, adx   
771 [0x303]:           rstore ebx   
772 [0x304]:           movl 0   
773 [0x305]:           movn #1   
775 [0x307]:           movi #0, adx   
777 [0x309]:           iaload ecx, adx   
778 [0x30a]:           loadval ebx   
779 [0x30b]:           add ecx, ebx -> ebx   
780 [0x30c]:           rmov adx, ebx   
781 [0x30d]:           nop   
782 [0x30e]:           jmp @856   
783 [0x30f]:           movl 0   
784 [0x310]:           movn #11   
786 [0x312]:           movi #0, adx   
788 [0x314]:           iaload ebx, adx   
789 [0x315]:           rstore ebx   
790 [0x316]:           ldc ebx // 1   
791 [0x317]:           loadval ecx   
792 [0x318]:           test ecx, ebx   
793 [0x319]:           jne 856   
794 [0x31a]: line: 138 movl 0   
795 [0x31b]:           movn #10   
797 [0x31d]:           movi #0, adx   
799 [0x31f]:           iaload ebx, adx   
800 [0x320]:           rstore ebx   
801 [0x321]:           ldc ebx // 0   
802 [0x322]:           loadval ecx   
803 [0x323]:           gt ecx, ebx   
804 [0x324]:           movr ebx, cmt   
805 [0x325]:           movr cmt, ebx   
806 [0x326]:           jne 813   
807 [0x327]: line: 139 new_class @0 // std#__srt_global   
808 [0x328]:           loadval adx   
809 [0x329]:           dup    
810 [0x32a]:           newstr @72 // cannot align view to bottom while also having top alignment   
811 [0x32b]:           call @3551 // <std#illegal_state_exception.illegal_state_exception>   
812 [0x32c]:           throw    
813 [0x32d]:           nop   
814 [0x32e]: line: 140 istore 64   
816 [0x330]:           pushl 0   
817 [0x331]:           invoke_delegate 3757 { static=0, args=0 }   
819 [0x333]:           loadval ebx   
820 [0x334]:           loadval ecx   
821 [0x335]:           sub ecx, ebx -> ebx   
822 [0x336]:           movl 0   
823 [0x337]:           movn #1   
825 [0x339]:           movi #0, adx   
827 [0x33b]:           rmov adx, ebx   
828 [0x33c]: line: 142 movl 0   
829 [0x33d]:           movn #4   
831 [0x33f]:           pushobj   
832 [0x340]:           pushnull    
833 [0x341]:           itest ebx   
834 [0x342]:           not ebx, ebx   
835 [0x343]:           movr cmt, ebx   
836 [0x344]:           jne 855   
837 [0x345]: line: 143 movl 0   
838 [0x346]:           movn #4   
840 [0x348]:           movn #3   
842 [0x34a]:           movi #0, adx   
844 [0x34c]:           iaload ebx, adx   
845 [0x34d]:           rstore ebx   
846 [0x34e]:           movl 0   
847 [0x34f]:           movn #1   
849 [0x351]:           movi #0, adx   
851 [0x353]:           iaload ecx, adx   
852 [0x354]:           loadval ebx   
853 [0x355]:           sub ecx, ebx -> ebx   
854 [0x356]:           rmov adx, ebx   
855 [0x357]:           nop   
856 [0x358]:           nop   
857 [0x359]: line: 147 movl 0   
858 [0x35a]:           movn #12   
860 [0x35c]:           movi #0, adx   
862 [0x35e]:           iaload ebx, adx   
863 [0x35f]:           rstore ebx   
864 [0x360]:           ldc ebx // 1   
865 [0x361]:           loadval ecx   
866 [0x362]:           gt ecx, ebx   
867 [0x363]:           movr ebx, cmt   
868 [0x364]:           movr cmt, ebx   
869 [0x365]:           jne 1171   
870 [0x366]: line: 148 movl 0   
871 [0x367]:           movn #7   
873 [0x369]:           movi #0, adx   
875 [0x36b]:           iaload ebx, adx   
876 [0x36c]:           rstore ebx   
877 [0x36d]:           ldc ebx // 1   
878 [0x36e]:           loadval ecx   
879 [0x36f]:           gte ecx, ebx   
880 [0x370]:           movr ebx, cmt   
881 [0x371]:           movr cmt, ebx   
882 [0x372]:           jne 889   
883 [0x373]: line: 149 new_class @0 // std#__srt_global   
884 [0x374]:           loadval adx   
885 [0x375]:           dup    
886 [0x376]:           newstr @74 // cannot align view to right while also having left alignment   
887 [0x377]:           call @3551 // <std#illegal_state_exception.illegal_state_exception>   
888 [0x378]:           throw    
889 [0x379]:           nop   
890 [0x37a]: line: 151 movl 1   
891 [0x37b]:           checknull   
892 [0x37c]:           skpe ebx // pc = 913   
893 [0x37d]:           movl 1   
894 [0x37e]:           pushobj   
895 [0x37f]:           pushnull    
896 [0x380]:           itest ebx   
897 [0x381]:           not ebx, ebx   
898 [0x382]:           skne ebx // pc = 913   
899 [0x383]:           movl 1   
900 [0x384]:           movn #6   
902 [0x386]:           movi #0, adx   
904 [0x388]:           iaload ebx, adx   
905 [0x389]:           rstore ebx   
906 [0x38a]:           movl 0   
907 [0x38b]:           movn #12   
909 [0x38d]:           movi #0, adx   
911 [0x38f]:           iaload ebx, adx   
912 [0x390]:           loadval ecx   
913 [0x391]:           tne ecx, ebx   
914 [0x392]:           jne 929   
915 [0x393]: line: 152 movl 0   
916 [0x394]:           movn #18   
918 [0x396]:           pushobj   
919 [0x397]:           movl 0   
920 [0x398]:           movn #12   
922 [0x39a]:           movi #0, adx   
924 [0x39c]:           iaload ebx, adx   
925 [0x39d]:           rstore ebx   
926 [0x39e]:           call @3725 // <ui.support#fragment.find_view_by_id>   
927 [0x39f]:           popobj2    
928 [0x3a0]:           smovr_3 fp+1   
929 [0x3a1]:           nop   
930 [0x3a2]: line: 153 pushl 1   
931 [0x3a3]:           call @3760 // <ui.support#view.invalidate>   
932 [0x3a4]: line: 154 movl 1   
933 [0x3a5]:           movn #2   
935 [0x3a7]:           movi #0, adx   
937 [0x3a9]:           iaload ebx, adx   
938 [0x3aa]:           rstore ebx   
939 [0x3ab]:           movi #-1, ebx   
941 [0x3ad]:           loadval ecx   
942 [0x3ae]:           test ecx, ebx   
943 [0x3af]:           jne 953   
944 [0x3b0]: line: 155 movi #129, ebx   
946 [0x3b2]:           movl 0   
947 [0x3b3]:           movn #0   
949 [0x3b5]:           movi #0, adx   
951 [0x3b7]:           rmov adx, ebx   
952 [0x3b8]:           jmp @1141   
953 [0x3b9]:           movl 1   
954 [0x3ba]:           movn #2   
956 [0x3bc]:           movi #0, adx   
958 [0x3be]:           iaload ebx, adx   
959 [0x3bf]:           rstore ebx   
960 [0x3c0]:           movi #-2, ebx   
962 [0x3c2]:           loadval ecx   
963 [0x3c3]:           tne ecx, ebx   
964 [0x3c4]:           jne 1122   
965 [0x3c5]: line: 157 movl 1   
966 [0x3c6]:           movn #15   
968 [0x3c8]:           movi #0, adx   
970 [0x3ca]:           iaload ebx, adx   
971 [0x3cb]:           rstore ebx   
972 [0x3cc]:           ldc ebx // 1   
973 [0x3cd]:           loadval ecx   
974 [0x3ce]:           test ecx, ebx   
975 [0x3cf]:           jne 996   
976 [0x3d0]: line: 158 movl 1   
977 [0x3d1]:           movn #0   
979 [0x3d3]:           movi #0, adx   
981 [0x3d5]:           iaload ebx, adx   
982 [0x3d6]:           rstore ebx   
983 [0x3d7]:           pushl 1   
984 [0x3d8]:           invoke_delegate 3758 { static=0, args=0 }   
986 [0x3da]:           loadval ebx   
987 [0x3db]:           loadval ecx   
988 [0x3dc]:           add ecx, ebx -> ebx   
989 [0x3dd]:           movl 0   
990 [0x3de]:           movn #0   
992 [0x3e0]:           movi #0, adx   
994 [0x3e2]:           rmov adx, ebx   
995 [0x3e3]:           jmp @1120   
996 [0x3e4]:           movl 1   
997 [0x3e5]:           movn #15   
999 [0x3e7]:           movi #0, adx   
1001 [0x3e9]:           iaload ebx, adx   
1002 [0x3ea]:           rstore ebx   
1003 [0x3eb]:           movi #2, ebx   
1005 [0x3ed]:           loadval ecx   
1006 [0x3ee]:           test ecx, ebx   
1007 [0x3ef]:           jne 1099   
1008 [0x3f0]: line: 160 movl 1   
1009 [0x3f1]:           movn #2   
1011 [0x3f3]:           movi #0, adx   
1013 [0x3f5]:           iaload ebx, adx   
1014 [0x3f6]:           rstore ebx   
1015 [0x3f7]:           movl 1   
1016 [0x3f8]:           movn #0   
1018 [0x3fa]:           movi #0, adx   
1020 [0x3fc]:           iaload ebx, adx   
1021 [0x3fd]:           rstore ebx   
1022 [0x3fe]:           pushl 1   
1023 [0x3ff]:           invoke_delegate 3758 { static=0, args=0 }   
1025 [0x401]:           loadval ebx   
1026 [0x402]:           loadval ecx   
1027 [0x403]:           add ecx, ebx -> ebx   
1028 [0x404]:           loadval ecx   
1029 [0x405]:           sub ecx, ebx -> ebx   
1030 [0x406]:           rstore ebx   
1031 [0x407]:           pushl 1   
1032 [0x408]:           invoke_delegate 3758 { static=0, args=0 }   
1034 [0x40a]:           loadval ebx   
1035 [0x40b]:           loadval ecx   
1036 [0x40c]:           add ecx, ebx -> ebx   
1037 [0x40d]:           smovr_2 ebx, fp+2   
1038 [0x40e]: line: 161 ipushl #2   
1039 [0x40f]:           movi #0, ebx   
1041 [0x411]:           loadval ecx   
1042 [0x412]:           gt ecx, ebx   
1043 [0x413]:           movr ebx, cmt   
1044 [0x414]:           skne ebx // pc = 1055   
1045 [0x415]:           ipushl #2   
1046 [0x416]:           movl 1   
1047 [0x417]:           movn #2   
1049 [0x419]:           movi #0, adx   
1051 [0x41b]:           iaload ebx, adx   
1052 [0x41c]:           loadval ecx   
1053 [0x41d]:           lt ecx, ebx   
1054 [0x41e]:           movr ebx, cmt   
1055 [0x41f]:           movr cmt, ebx   
1056 [0x420]:           jne 1078   
1057 [0x421]: line: 162 movl 1   
1058 [0x422]:           movn #0   
1060 [0x424]:           movi #0, adx   
1062 [0x426]:           iaload ebx, adx   
1063 [0x427]:           rstore ebx   
1064 [0x428]:           loadl ebx, fp+2   
1065 [0x429]:           loadval ecx   
1066 [0x42a]:           add ecx, ebx -> ebx   
1067 [0x42b]:           rstore ebx   
1068 [0x42c]:           movl 0   
1069 [0x42d]:           movn #0   
1071 [0x42f]:           movi #0, adx   
1073 [0x431]:           iaload ecx, adx   
1074 [0x432]:           loadval ebx   
1075 [0x433]:           add ecx, ebx -> ebx   
1076 [0x434]:           rmov adx, ebx   
1077 [0x435]:           jmp @1097   
1078 [0x436]: line: 164 movl 1   
1079 [0x437]:           movn #0   
1081 [0x439]:           movi #0, adx   
1083 [0x43b]:           iaload ebx, adx   
1084 [0x43c]:           rstore ebx   
1085 [0x43d]:           pushl 1   
1086 [0x43e]:           invoke_delegate 3758 { static=0, args=0 }   
1088 [0x440]:           loadval ebx   
1089 [0x441]:           loadval ecx   
1090 [0x442]:           add ecx, ebx -> ebx   
1091 [0x443]:           movl 0   
1092 [0x444]:           movn #0   
1094 [0x446]:           movi #0, adx   
1096 [0x448]:           rmov adx, ebx   
1097 [0x449]:           nop   
1098 [0x44a]:           jmp @1120   
1099 [0x44b]: line: 167 movl 1   
1100 [0x44c]:           movn #0   
1102 [0x44e]:           movi #0, adx   
1104 [0x450]:           iaload ebx, adx   
1105 [0x451]:           rstore ebx   
1106 [0x452]:           movl 1   
1107 [0x453]:           movn #2   
1109 [0x455]:           movi #0, adx   
1111 [0x457]:           iaload ebx, adx   
1112 [0x458]:           loadval ecx   
1113 [0x459]:           add ecx, ebx -> ebx   
1114 [0x45a]:           movl 0   
1115 [0x45b]:           movn #0   
1117 [0x45d]:           movi #0, adx   
1119 [0x45f]:           rmov adx, ebx   
1120 [0x460]:           nop   
1121 [0x461]:           jmp @1141   
1122 [0x462]: line: 170 movl 1   
1123 [0x463]:           movn #0   
1125 [0x465]:           movi #0, adx   
1127 [0x467]:           iaload ebx, adx   
1128 [0x468]:           rstore ebx   
1129 [0x469]:           pushl 1   
1130 [0x46a]:           invoke_delegate 3758 { static=0, args=0 }   
1132 [0x46c]:           loadval ebx   
1133 [0x46d]:           loadval ecx   
1134 [0x46e]:           add ecx, ebx -> ebx   
1135 [0x46f]:           movl 0   
1136 [0x470]:           movn #0   
1138 [0x472]:           movi #0, adx   
1140 [0x474]:           rmov adx, ebx   
1141 [0x475]:           nop   
1142 [0x476]: line: 172 movl 1   
1143 [0x477]:           movn #4   
1145 [0x479]:           pushobj   
1146 [0x47a]:           pushnull    
1147 [0x47b]:           itest ebx   
1148 [0x47c]:           not ebx, ebx   
1149 [0x47d]:           movr cmt, ebx   
1150 [0x47e]:           jne 1169   
1151 [0x47f]: line: 173 movl 1   
1152 [0x480]:           movn #4   
1154 [0x482]:           movn #1   
1156 [0x484]:           movi #0, adx   
1158 [0x486]:           iaload ebx, adx   
1159 [0x487]:           rstore ebx   
1160 [0x488]:           movl 0   
1161 [0x489]:           movn #0   
1163 [0x48b]:           movi #0, adx   
1165 [0x48d]:           iaload ecx, adx   
1166 [0x48e]:           loadval ebx   
1167 [0x48f]:           sub ecx, ebx -> ebx   
1168 [0x490]:           rmov adx, ebx   
1169 [0x491]:           nop   
1170 [0x492]:           jmp @1216   
1171 [0x493]:           movl 0   
1172 [0x494]:           movn #12   
1174 [0x496]:           movi #0, adx   
1176 [0x498]:           iaload ebx, adx   
1177 [0x499]:           rstore ebx   
1178 [0x49a]:           ldc ebx // 1   
1179 [0x49b]:           loadval ecx   
1180 [0x49c]:           test ecx, ebx   
1181 [0x49d]:           jne 1216   
1182 [0x49e]: line: 176 movl 0   
1183 [0x49f]:           movn #7   
1185 [0x4a1]:           movi #0, adx   
1187 [0x4a3]:           iaload ebx, adx   
1188 [0x4a4]:           rstore ebx   
1189 [0x4a5]:           ldc ebx // 1   
1190 [0x4a6]:           loadval ecx   
1191 [0x4a7]:           gte ecx, ebx   
1192 [0x4a8]:           movr ebx, cmt   
1193 [0x4a9]:           movr cmt, ebx   
1194 [0x4aa]:           jne 1201   
1195 [0x4ab]: line: 177 new_class @0 // std#__srt_global   
1196 [0x4ac]:           loadval adx   
1197 [0x4ad]:           dup    
1198 [0x4ae]:           newstr @74 // cannot align view to right while also having left alignment   
1199 [0x4af]:           call @3551 // <std#illegal_state_exception.illegal_state_exception>   
1200 [0x4b0]:           throw    
1201 [0x4b1]:           nop   
1202 [0x4b2]: line: 178 istore 128   
1204 [0x4b4]:           pushl 0   
1205 [0x4b5]:           invoke_delegate 3758 { static=0, args=0 }   
1207 [0x4b7]:           loadval ebx   
1208 [0x4b8]:           loadval ecx   
1209 [0x4b9]:           sub ecx, ebx -> ebx   
1210 [0x4ba]:           movl 0   
1211 [0x4bb]:           movn #0   
1213 [0x4bd]:           movi #0, adx   
1215 [0x4bf]:           rmov adx, ebx   
1216 [0x4c0]:           nop   
1217 [0x4c1]: line: 181 movl 0   
1218 [0x4c2]:           movn #9   
1220 [0x4c4]:           movi #0, adx   
1222 [0x4c6]:           iaload ebx, adx   
1223 [0x4c7]:           rstore ebx   
1224 [0x4c8]:           ldc ebx // 1   
1225 [0x4c9]:           loadval ecx   
1226 [0x4ca]:           gt ecx, ebx   
1227 [0x4cb]:           movr ebx, cmt   
1228 [0x4cc]:           movr cmt, ebx   
1229 [0x4cd]:           jne 1592   
1230 [0x4ce]: line: 182 movl 0   
1231 [0x4cf]:           movn #7   
1233 [0x4d1]:           movi #0, adx   
1235 [0x4d3]:           iaload ebx, adx   
1236 [0x4d4]:           rstore ebx   
1237 [0x4d5]:           ldc ebx // 1   
1238 [0x4d6]:           loadval ecx   
1239 [0x4d7]:           gte ecx, ebx   
1240 [0x4d8]:           movr ebx, cmt   
1241 [0x4d9]:           movr cmt, ebx   
1242 [0x4da]:           jne 1263   
1243 [0x4db]: line: 183 new_class @0 // std#__srt_global   
1244 [0x4dc]:           loadval adx   
1245 [0x4dd]:           dup    
1246 [0x4de]:           new_class @0 // std#__srt_global   
1247 [0x4df]:           ret   
1248 [0x4e0]:           dup    
1249 [0x4e1]:           newstr @75 // cannot align view to end of view    
1250 [0x4e2]:           call @1959 // <std#string.string>   
1251 [0x4e3]:           movl 0   
1252 [0x4e4]:           movn #9   
1254 [0x4e6]:           movi #0, adx   
1256 [0x4e8]:           iaload ebx, adx   
1257 [0x4e9]:           rstore ebx   
1258 [0x4ea]:           call @1991 // <std#string.operator+>   
1259 [0x4eb]:           newstr @76 //  while also having left alignment   
1260 [0x4ec]:           call @1971 // <std#string.operator+>   
1261 [0x4ed]:           call @3552 // <std#illegal_state_exception.illegal_state_exception>   
1262 [0x4ee]:           throw    
1263 [0x4ef]:           nop   
1264 [0x4f0]: line: 184 movl 0   
1265 [0x4f1]:           movn #12   
1267 [0x4f3]:           movi #0, adx   
1269 [0x4f5]:           iaload ebx, adx   
1270 [0x4f6]:           rstore ebx   
1271 [0x4f7]:           ldc ebx // 1   
1272 [0x4f8]:           loadval ecx   
1273 [0x4f9]:           gte ecx, ebx   
1274 [0x4fa]:           movr ebx, cmt   
1275 [0x4fb]:           movr cmt, ebx   
1276 [0x4fc]:           jne 1297   
1277 [0x4fd]: line: 185 new_class @0 // std#__srt_global   
1278 [0x4fe]:           loadval adx   
1279 [0x4ff]:           dup    
1280 [0x500]:           new_class @0 // std#__srt_global   
1281 [0x501]:           ret   
1282 [0x502]:           dup    
1283 [0x503]:           newstr @75 // cannot align view to end of view    
1284 [0x504]:           call @1959 // <std#string.string>   
1285 [0x505]:           movl 0   
1286 [0x506]:           movn #9   
1288 [0x508]:           movi #0, adx   
1290 [0x50a]:           iaload ebx, adx   
1291 [0x50b]:           rstore ebx   
1292 [0x50c]:           call @1991 // <std#string.operator+>   
1293 [0x50d]:           newstr @77 //  while also having right alignment   
1294 [0x50e]:           call @1971 // <std#string.operator+>   
1295 [0x50f]:           call @3552 // <std#illegal_state_exception.illegal_state_exception>   
1296 [0x510]:           throw    
1297 [0x511]:           nop   
1298 [0x512]: line: 187 movl 1   
1299 [0x513]:           checknull   
1300 [0x514]:           skpe ebx // pc = 1321   
1301 [0x515]:           movl 1   
1302 [0x516]:           pushobj   
1303 [0x517]:           pushnull    
1304 [0x518]:           itest ebx   
1305 [0x519]:           not ebx, ebx   
1306 [0x51a]:           skne ebx // pc = 1321   
1307 [0x51b]:           movl 1   
1308 [0x51c]:           movn #6   
1310 [0x51e]:           movi #0, adx   
1312 [0x520]:           iaload ebx, adx   
1313 [0x521]:           rstore ebx   
1314 [0x522]:           movl 0   
1315 [0x523]:           movn #12   
1317 [0x525]:           movi #0, adx   
1319 [0x527]:           iaload ebx, adx   
1320 [0x528]:           loadval ecx   
1321 [0x529]:           tne ecx, ebx   
1322 [0x52a]:           jne 1337   
1323 [0x52b]: line: 188 movl 0   
1324 [0x52c]:           movn #18   
1326 [0x52e]:           pushobj   
1327 [0x52f]:           movl 0   
1328 [0x530]:           movn #12   
1330 [0x532]:           movi #0, adx   
1332 [0x534]:           iaload ebx, adx   
1333 [0x535]:           rstore ebx   
1334 [0x536]:           call @3725 // <ui.support#fragment.find_view_by_id>   
1335 [0x537]:           popobj2    
1336 [0x538]:           smovr_3 fp+1   
1337 [0x539]:           nop   
1338 [0x53a]: line: 189 pushl 1   
1339 [0x53b]:           call @3760 // <ui.support#view.invalidate>   
1340 [0x53c]: line: 190 movl 1   
1341 [0x53d]:           movn #2   
1343 [0x53f]:           movi #0, adx   
1345 [0x541]:           iaload ebx, adx   
1346 [0x542]:           rstore ebx   
1347 [0x543]:           movi #-1, ebx   
1349 [0x545]:           loadval ecx   
1350 [0x546]:           test ecx, ebx   
1351 [0x547]:           jne 1367   
1352 [0x548]: line: 191 istore 128   
1354 [0x54a]:           pushl 0   
1355 [0x54b]:           invoke_delegate 3758 { static=0, args=0 }   
1357 [0x54d]:           loadval ebx   
1358 [0x54e]:           loadval ecx   
1359 [0x54f]:           sub ecx, ebx -> ebx   
1360 [0x550]:           movl 0   
1361 [0x551]:           movn #0   
1363 [0x553]:           movi #0, adx   
1365 [0x555]:           rmov adx, ebx   
1366 [0x556]:           jmp @1590   
1367 [0x557]:           movl 1   
1368 [0x558]:           movn #2   
1370 [0x55a]:           movi #0, adx   
1372 [0x55c]:           iaload ebx, adx   
1373 [0x55d]:           rstore ebx   
1374 [0x55e]:           movi #-2, ebx   
1376 [0x560]:           loadval ecx   
1377 [0x561]:           tne ecx, ebx   
1378 [0x562]:           jne 1564   
1379 [0x563]: line: 193 movl 1   
1380 [0x564]:           movn #15   
1382 [0x566]:           movi #0, adx   
1384 [0x568]:           iaload ebx, adx   
1385 [0x569]:           rstore ebx   
1386 [0x56a]:           ldc ebx // 1   
1387 [0x56b]:           loadval ecx   
1388 [0x56c]:           test ecx, ebx   
1389 [0x56d]:           jne 1417   
1390 [0x56e]: line: 194 movl 1   
1391 [0x56f]:           movn #0   
1393 [0x571]:           movi #0, adx   
1395 [0x573]:           iaload ebx, adx   
1396 [0x574]:           rstore ebx   
1397 [0x575]:           pushl 1   
1398 [0x576]:           invoke_delegate 3758 { static=0, args=0 }   
1400 [0x578]:           loadval ebx   
1401 [0x579]:           loadval ecx   
1402 [0x57a]:           add ecx, ebx -> ebx   
1403 [0x57b]:           rstore ebx   
1404 [0x57c]:           pushl 0   
1405 [0x57d]:           invoke_delegate 3758 { static=0, args=0 }   
1407 [0x57f]:           loadval ebx   
1408 [0x580]:           loadval ecx   
1409 [0x581]:           sub ecx, ebx -> ebx   
1410 [0x582]:           movl 0   
1411 [0x583]:           movn #0   
1413 [0x585]:           movi #0, adx   
1415 [0x587]:           rmov adx, ebx   
1416 [0x588]:           jmp @1562   
1417 [0x589]:           movl 1   
1418 [0x58a]:           movn #15   
1420 [0x58c]:           movi #0, adx   
1422 [0x58e]:           iaload ebx, adx   
1423 [0x58f]:           rstore ebx   
1424 [0x590]:           movi #2, ebx   
1426 [0x592]:           loadval ecx   
1427 [0x593]:           test ecx, ebx   
1428 [0x594]:           jne 1534   
1429 [0x595]: line: 196 movl 1   
1430 [0x596]:           movn #2   
1432 [0x598]:           movi #0, adx   
1434 [0x59a]:           iaload ebx, adx   
1435 [0x59b]:           rstore ebx   
1436 [0x59c]:           movl 1   
1437 [0x59d]:           movn #0   
1439 [0x59f]:           movi #0, adx   
1441 [0x5a1]:           iaload ebx, adx   
1442 [0x5a2]:           rstore ebx   
1443 [0x5a3]:           pushl 1   
1444 [0x5a4]:           invoke_delegate 3758 { static=0, args=0 }   
1446 [0x5a6]:           loadval ebx   
1447 [0x5a7]:           loadval ecx   
1448 [0x5a8]:           add ecx, ebx -> ebx   
1449 [0x5a9]:           loadval ecx   
1450 [0x5aa]:           sub ecx, ebx -> ebx   
1451 [0x5ab]:           rstore ebx   
1452 [0x5ac]:           pushl 1   
1453 [0x5ad]:           invoke_delegate 3758 { static=0, args=0 }   
1455 [0x5af]:           loadval ebx   
1456 [0x5b0]:           loadval ecx   
1457 [0x5b1]:           sub ecx, ebx -> ebx   
1458 [0x5b2]:           smovr_2 ebx, fp+3   
1459 [0x5b3]: line: 197 ipushl #3   
1460 [0x5b4]:           movi #0, ebx   
1462 [0x5b6]:           loadval ecx   
1463 [0x5b7]:           gt ecx, ebx   
1464 [0x5b8]:           movr ebx, cmt   
1465 [0x5b9]:           skne ebx // pc = 1476   
1466 [0x5ba]:           ipushl #3   
1467 [0x5bb]:           movl 1   
1468 [0x5bc]:           movn #2   
1470 [0x5be]:           movi #0, adx   
1472 [0x5c0]:           iaload ebx, adx   
1473 [0x5c1]:           loadval ecx   
1474 [0x5c2]:           lt ecx, ebx   
1475 [0x5c3]:           movr ebx, cmt   
1476 [0x5c4]:           movr cmt, ebx   
1477 [0x5c5]:           jne 1506   
1478 [0x5c6]: line: 198 movl 1   
1479 [0x5c7]:           movn #0   
1481 [0x5c9]:           movi #0, adx   
1483 [0x5cb]:           iaload ebx, adx   
1484 [0x5cc]:           rstore ebx   
1485 [0x5cd]:           loadl ebx, fp+3   
1486 [0x5ce]:           loadval ecx   
1487 [0x5cf]:           add ecx, ebx -> ebx   
1488 [0x5d0]:           rstore ebx   
1489 [0x5d1]:           pushl 0   
1490 [0x5d2]:           invoke_delegate 3758 { static=0, args=0 }   
1492 [0x5d4]:           loadval ebx   
1493 [0x5d5]:           loadval ecx   
1494 [0x5d6]:           sub ecx, ebx -> ebx   
1495 [0x5d7]:           rstore ebx   
1496 [0x5d8]:           movl 0   
1497 [0x5d9]:           movn #0   
1499 [0x5db]:           movi #0, adx   
1501 [0x5dd]:           iaload ecx, adx   
1502 [0x5de]:           loadval ebx   
1503 [0x5df]:           add ecx, ebx -> ebx   
1504 [0x5e0]:           rmov adx, ebx   
1505 [0x5e1]:           jmp @1532   
1506 [0x5e2]: line: 200 movl 1   
1507 [0x5e3]:           movn #0   
1509 [0x5e5]:           movi #0, adx   
1511 [0x5e7]:           iaload ebx, adx   
1512 [0x5e8]:           rstore ebx   
1513 [0x5e9]:           pushl 1   
1514 [0x5ea]:           invoke_delegate 3758 { static=0, args=0 }   
1516 [0x5ec]:           loadval ebx   
1517 [0x5ed]:           loadval ecx   
1518 [0x5ee]:           sub ecx, ebx -> ebx   
1519 [0x5ef]:           rstore ebx   
1520 [0x5f0]:           pushl 0   
1521 [0x5f1]:           invoke_delegate 3758 { static=0, args=0 }   
1523 [0x5f3]:           loadval ebx   
1524 [0x5f4]:           loadval ecx   
1525 [0x5f5]:           sub ecx, ebx -> ebx   
1526 [0x5f6]:           movl 0   
1527 [0x5f7]:           movn #0   
1529 [0x5f9]:           movi #0, adx   
1531 [0x5fb]:           rmov adx, ebx   
1532 [0x5fc]:           nop   
1533 [0x5fd]:           jmp @1562   
1534 [0x5fe]: line: 203 movl 1   
1535 [0x5ff]:           movn #0   
1537 [0x601]:           movi #0, adx   
1539 [0x603]:           iaload ebx, adx   
1540 [0x604]:           rstore ebx   
1541 [0x605]:           movl 1   
1542 [0x606]:           movn #2   
1544 [0x608]:           movi #0, adx   
1546 [0x60a]:           iaload ebx, adx   
1547 [0x60b]:           loadval ecx   
1548 [0x60c]:           add ecx, ebx -> ebx   
1549 [0x60d]:           rstore ebx   
1550 [0x60e]:           pushl 0   
1551 [0x60f]:           invoke_delegate 3758 { static=0, args=0 }   
1553 [0x611]:           loadval ebx   
1554 [0x612]:           loadval ecx   
1555 [0x613]:           sub ecx, ebx -> ebx   
1556 [0x614]:           movl 0   
1557 [0x615]:           movn #0   
1559 [0x617]:           movi #0, adx   
1561 [0x619]:           rmov adx, ebx   
1562 [0x61a]:           nop   
1563 [0x61b]:           jmp @1590   
1564 [0x61c]: line: 206 movl 1   
1565 [0x61d]:           movn #0   
1567 [0x61f]:           movi #0, adx   
1569 [0x621]:           iaload ebx, adx   
1570 [0x622]:           rstore ebx   
1571 [0x623]:           pushl 1   
1572 [0x624]:           invoke_delegate 3758 { static=0, args=0 }   
1574 [0x626]:           loadval ebx   
1575 [0x627]:           loadval ecx   
1576 [0x628]:           add ecx, ebx -> ebx   
1577 [0x629]:           rstore ebx   
1578 [0x62a]:           pushl 0   
1579 [0x62b]:           invoke_delegate 3758 { static=0, args=0 }   
1581 [0x62d]:           loadval ebx   
1582 [0x62e]:           loadval ecx   
1583 [0x62f]:           sub ecx, ebx -> ebx   
1584 [0x630]:           movl 0   
1585 [0x631]:           movn #0   
1587 [0x633]:           movi #0, adx   
1589 [0x635]:           rmov adx, ebx   
1590 [0x636]:           nop   
1591 [0x637]:           jmp @1657   
1592 [0x638]:           movl 0   
1593 [0x639]:           movn #9   
1595 [0x63b]:           movi #0, adx   
1597 [0x63d]:           iaload ebx, adx   
1598 [0x63e]:           rstore ebx   
1599 [0x63f]:           ldc ebx // 1   
1600 [0x640]:           loadval ecx   
1601 [0x641]:           test ecx, ebx   
1602 [0x642]:           jne 1657   
1603 [0x643]: line: 208 movl 0   
1604 [0x644]:           movn #7   
1606 [0x646]:           movi #0, adx   
1608 [0x648]:           iaload ebx, adx   
1609 [0x649]:           rstore ebx   
1610 [0x64a]:           ldc ebx // 1   
1611 [0x64b]:           loadval ecx   
1612 [0x64c]:           gte ecx, ebx   
1613 [0x64d]:           movr ebx, cmt   
1614 [0x64e]:           movr cmt, ebx   
1615 [0x64f]:           jne 1622   
1616 [0x650]: line: 209 new_class @0 // std#__srt_global   
1617 [0x651]:           loadval adx   
1618 [0x652]:           dup    
1619 [0x653]:           newstr @78 // cannot align view to end of parent while also having left alignment   
1620 [0x654]:           call @3551 // <std#illegal_state_exception.illegal_state_exception>   
1621 [0x655]:           throw    
1622 [0x656]:           nop   
1623 [0x657]: line: 210 movl 0   
1624 [0x658]:           movn #12   
1626 [0x65a]:           movi #0, adx   
1628 [0x65c]:           iaload ebx, adx   
1629 [0x65d]:           rstore ebx   
1630 [0x65e]:           ldc ebx // 1   
1631 [0x65f]:           loadval ecx   
1632 [0x660]:           gte ecx, ebx   
1633 [0x661]:           movr ebx, cmt   
1634 [0x662]:           movr cmt, ebx   
1635 [0x663]:           jne 1642   
1636 [0x664]: line: 211 new_class @0 // std#__srt_global   
1637 [0x665]:           loadval adx   
1638 [0x666]:           dup    
1639 [0x667]:           newstr @78 // cannot align view to end of parent while also having left alignment   
1640 [0x668]:           call @3551 // <std#illegal_state_exception.illegal_state_exception>   
1641 [0x669]:           throw    
1642 [0x66a]:           nop   
1643 [0x66b]: line: 212 istore 128   
1645 [0x66d]:           pushl 0   
1646 [0x66e]:           invoke_delegate 3758 { static=0, args=0 }   
1648 [0x670]:           loadval ebx   
1649 [0x671]:           loadval ecx   
1650 [0x672]:           sub ecx, ebx -> ebx   
1651 [0x673]:           movl 0   
1652 [0x674]:           movn #0   
1654 [0x676]:           movi #0, adx   
1656 [0x678]:           rmov adx, ebx   
1657 [0x679]:           nop   
1658 [0x67a]: line: 215 movl 0   
1659 [0x67b]:           movn #15   
1661 [0x67d]:           movi #0, adx   
1663 [0x67f]:           iaload ebx, adx   
1664 [0x680]:           rstore ebx   
1665 [0x681]:           ldc ebx // 1   
1666 [0x682]:           loadval ecx   
1667 [0x683]:           test ecx, ebx   
1668 [0x684]:           jne 1750   
1669 [0x685]: line: 216 movl 0   
1670 [0x686]:           movn #2   
1672 [0x688]:           movi #0, adx   
1674 [0x68a]:           iaload ebx, adx   
1675 [0x68b]:           rstore ebx   
1676 [0x68c]:           movi #-1, ebx   
1678 [0x68e]:           loadval ecx   
1679 [0x68f]:           test ecx, ebx   
1680 [0x690]:           jne 1696   
1681 [0x691]: line: 217 istore 128   
1683 [0x693]:           pushl 0   
1684 [0x694]:           invoke_delegate 3758 { static=0, args=0 }   
1686 [0x696]:           loadval ebx   
1687 [0x697]:           loadval ecx   
1688 [0x698]:           sub ecx, ebx -> ebx   
1689 [0x699]:           movl 0   
1690 [0x69a]:           movn #0   
1692 [0x69c]:           movi #0, adx   
1694 [0x69e]:           rmov adx, ebx   
1695 [0x69f]:           jmp @1748   
1696 [0x6a0]:           movl 0   
1697 [0x6a1]:           movn #2   
1699 [0x6a3]:           movi #0, adx   
1701 [0x6a5]:           iaload ebx, adx   
1702 [0x6a6]:           rstore ebx   
1703 [0x6a7]:           movi #0, ebx   
1705 [0x6a9]:           loadval ecx   
1706 [0x6aa]:           gte ecx, ebx   
1707 [0x6ab]:           movr ebx, cmt   
1708 [0x6ac]:           movr cmt, ebx   
1709 [0x6ad]:           jne 1748   
1710 [0x6ae]: line: 219 movl 0   
1711 [0x6af]:           movn #0   
1713 [0x6b1]:           movi #0, adx   
1715 [0x6b3]:           iaload ebx, adx   
1716 [0x6b4]:           rstore ebx   
1717 [0x6b5]:           movl 0   
1718 [0x6b6]:           movn #2   
1720 [0x6b8]:           movi #0, adx   
1722 [0x6ba]:           iaload ebx, adx   
1723 [0x6bb]:           loadval ecx   
1724 [0x6bc]:           add ecx, ebx -> ebx   
1725 [0x6bd]:           smovr_2 ebx, fp+4   
1726 [0x6be]: line: 220 pushl 0   
1727 [0x6bf]:           invoke_delegate 3758 { static=0, args=0 }   
1729 [0x6c1]:           ipopl 5   
1730 [0x6c2]: line: 221 ipushl #5   
1731 [0x6c3]:           loadl ebx, fp+4   
1732 [0x6c4]:           loadval ecx   
1733 [0x6c5]:           lt ecx, ebx   
1734 [0x6c6]:           movr ebx, cmt   
1735 [0x6c7]:           movr cmt, ebx   
1736 [0x6c8]:           jne 1747   
1737 [0x6c9]: line: 222 ipushl #4   
1738 [0x6ca]:           loadl ebx, fp+5   
1739 [0x6cb]:           loadval ecx   
1740 [0x6cc]:           sub ecx, ebx -> ebx   
1741 [0x6cd]:           movl 0   
1742 [0x6ce]:           movn #0   
1744 [0x6d0]:           movi #0, adx   
1746 [0x6d2]:           rmov adx, ebx   
1747 [0x6d3]:           nop   
1748 [0x6d4]:           nop   
1749 [0x6d5]:           jmp @1892   
1750 [0x6d6]:           movl 0   
1751 [0x6d7]:           movn #15   
1753 [0x6d9]:           movi #0, adx   
1755 [0x6db]:           iaload ebx, adx   
1756 [0x6dc]:           rstore ebx   
1757 [0x6dd]:           movi #2, ebx   
1759 [0x6df]:           loadval ecx   
1760 [0x6e0]:           test ecx, ebx   
1761 [0x6e1]:           jne 1892   
1762 [0x6e2]: line: 228 movl 0   
1763 [0x6e3]:           movn #2   
1765 [0x6e5]:           movi #0, adx   
1767 [0x6e7]:           iaload ebx, adx   
1768 [0x6e8]:           rstore ebx   
1769 [0x6e9]:           movi #-1, ebx   
1771 [0x6eb]:           loadval ecx   
1772 [0x6ec]:           test ecx, ebx   
1773 [0x6ed]:           jne 1819   
1774 [0x6ee]: line: 229 istore 128   
1776 [0x6f0]:           movl 0   
1777 [0x6f1]:           movn #0   
1779 [0x6f3]:           movi #0, adx   
1781 [0x6f5]:           iaload ebx, adx   
1782 [0x6f6]:           loadval ecx   
1783 [0x6f7]:           sub ecx, ebx -> ebx   
1784 [0x6f8]:           smovr_2 ebx, fp+6   
1785 [0x6f9]: line: 230 ipushl #6   
1786 [0x6fa]:           pushl 0   
1787 [0x6fb]:           invoke_delegate 3758 { static=0, args=0 }   
1789 [0x6fd]:           loadval ebx   
1790 [0x6fe]:           loadval ecx   
1791 [0x6ff]:           sub ecx, ebx -> ebx   
1792 [0x700]:           smovr_2 ebx, fp+7   
1793 [0x701]: line: 232 ipushl #7   
1794 [0x702]:           movi #0, ebx   
1796 [0x704]:           loadval ecx   
1797 [0x705]:           gt ecx, ebx   
1798 [0x706]:           movr ebx, cmt   
1799 [0x707]:           movr cmt, ebx   
1800 [0x708]:           jne 1817   
1801 [0x709]: line: 233 ipushl #7   
1802 [0x70a]:           movi #2, ebx   
1804 [0x70c]:           loadval ecx   
1805 [0x70d]:           div ecx, ebx -> ebx   
1806 [0x70e]:           mov8 ebx, ebx   
1807 [0x70f]:           rstore ebx   
1808 [0x710]:           movl 0   
1809 [0x711]:           movn #0   
1811 [0x713]:           movi #0, adx   
1813 [0x715]:           iaload ecx, adx   
1814 [0x716]:           loadval ebx   
1815 [0x717]:           add ecx, ebx -> ebx   
1816 [0x718]:           rmov adx, ebx   
1817 [0x719]:           nop   
1818 [0x71a]:           jmp @1891   
1819 [0x71b]:           movl 0   
1820 [0x71c]:           movn #2   
1822 [0x71e]:           movi #0, adx   
1824 [0x720]:           iaload ebx, adx   
1825 [0x721]:           rstore ebx   
1826 [0x722]:           movi #0, ebx   
1828 [0x724]:           loadval ecx   
1829 [0x725]:           gte ecx, ebx   
1830 [0x726]:           movr ebx, cmt   
1831 [0x727]:           movr cmt, ebx   
1832 [0x728]:           jne 1891   
1833 [0x729]: line: 236 movl 0   
1834 [0x72a]:           movn #0   
1836 [0x72c]:           movi #0, adx   
1838 [0x72e]:           iaload ebx, adx   
1839 [0x72f]:           rstore ebx   
1840 [0x730]:           movl 0   
1841 [0x731]:           movn #2   
1843 [0x733]:           movi #0, adx   
1845 [0x735]:           iaload ebx, adx   
1846 [0x736]:           loadval ecx   
1847 [0x737]:           add ecx, ebx -> ebx   
1848 [0x738]:           rstore ebx   
1849 [0x739]:           movl 0   
1850 [0x73a]:           movn #0   
1852 [0x73c]:           movi #0, adx   
1854 [0x73e]:           iaload ebx, adx   
1855 [0x73f]:           loadval ecx   
1856 [0x740]:           sub ecx, ebx -> ebx   
1857 [0x741]:           smovr_2 ebx, fp+8   
1858 [0x742]: line: 237 ipushl #8   
1859 [0x743]:           pushl 0   
1860 [0x744]:           invoke_delegate 3758 { static=0, args=0 }   
1862 [0x746]:           loadval ebx   
1863 [0x747]:           loadval ecx   
1864 [0x748]:           sub ecx, ebx -> ebx   
1865 [0x749]:           smovr_2 ebx, fp+9   
1866 [0x74a]: line: 239 ipushl #9   
1867 [0x74b]:           movi #0, ebx   
1869 [0x74d]:           loadval ecx   
1870 [0x74e]:           gt ecx, ebx   
1871 [0x74f]:           movr ebx, cmt   
1872 [0x750]:           movr cmt, ebx   
1873 [0x751]:           jne 1890   
1874 [0x752]: line: 240 ipushl #9   
1875 [0x753]:           movi #2, ebx   
1877 [0x755]:           loadval ecx   
1878 [0x756]:           div ecx, ebx -> ebx   
1879 [0x757]:           mov8 ebx, ebx   
1880 [0x758]:           rstore ebx   
1881 [0x759]:           movl 0   
1882 [0x75a]:           movn #0   
1884 [0x75c]:           movi #0, adx   
1886 [0x75e]:           iaload ecx, adx   
1887 [0x75f]:           loadval ebx   
1888 [0x760]:           add ecx, ebx -> ebx   
1889 [0x761]:           rmov adx, ebx   
1890 [0x762]:           nop   
1891 [0x763]:           nop   
1892 [0x764]:           nop   
1893 [0x765]: line: 245 movl 0   
1894 [0x766]:           movn #4   
1896 [0x768]:           pushobj   
1897 [0x769]:           pushnull    
1898 [0x76a]:           itest ebx   
1899 [0x76b]:           not ebx, ebx   
1900 [0x76c]:           movr cmt, ebx   
1901 [0x76d]:           jne 1956   
1902 [0x76e]: line: 246 movl 0   
1903 [0x76f]:           movn #4   
1905 [0x771]:           movn #0   
1907 [0x773]:           movi #0, adx   
1909 [0x775]:           iaload ebx, adx   
1910 [0x776]:           rstore ebx   
1911 [0x777]:           movl 0   
1912 [0x778]:           movn #0   
1914 [0x77a]:           movi #0, adx   
1916 [0x77c]:           iaload ecx, adx   
1917 [0x77d]:           loadval ebx   
1918 [0x77e]:           add ecx, ebx -> ebx   
1919 [0x77f]:           rmov adx, ebx   
1920 [0x780]: line: 247 movl 0   
1921 [0x781]:           movn #4   
1923 [0x783]:           movn #2   
1925 [0x785]:           movi #0, adx   
1927 [0x787]:           iaload ebx, adx   
1928 [0x788]:           rstore ebx   
1929 [0x789]:           movl 0   
1930 [0x78a]:           movn #1   
1932 [0x78c]:           movi #0, adx   
1934 [0x78e]:           iaload ecx, adx   
1935 [0x78f]:           loadval ebx   
1936 [0x790]:           add ecx, ebx -> ebx   
1937 [0x791]:           rmov adx, ebx   
1938 [0x792]: line: 248 movl 0   
1939 [0x793]:           movn #4   
1941 [0x795]:           movn #1   
1943 [0x797]:           movi #0, adx   
1945 [0x799]:           iaload ebx, adx   
1946 [0x79a]:           rstore ebx   
1947 [0x79b]:           movl 0   
1948 [0x79c]:           movn #0   
1950 [0x79e]:           movi #0, adx   
1952 [0x7a0]:           iaload ecx, adx   
1953 [0x7a1]:           loadval ebx   
1954 [0x7a2]:           sub ecx, ebx -> ebx   
1955 [0x7a3]:           rmov adx, ebx   
1956 [0x7a4]:           nop   
1957 [0x7a5]: line: 251 movl 0   
1958 [0x7a6]:           movn #1   
1960 [0x7a8]:           movi #0, adx   
1962 [0x7aa]:           iaload ebx, adx   
1963 [0x7ab]:           rstore ebx   
1964 [0x7ac]:           movi #0, ebx   
1966 [0x7ae]:           loadval ecx   
1967 [0x7af]:           lt ecx, ebx   
1968 [0x7b0]:           movr ebx, cmt   
1969 [0x7b1]:           skpe ebx // pc = 2008   
1970 [0x7b2]:           movl 0   
1971 [0x7b3]:           movn #0   
1973 [0x7b5]:           movi #0, adx   
1975 [0x7b7]:           iaload ebx, adx   
1976 [0x7b8]:           rstore ebx   
1977 [0x7b9]:           movi #0, ebx   
1979 [0x7bb]:           loadval ecx   
1980 [0x7bc]:           lt ecx, ebx   
1981 [0x7bd]:           movr ebx, cmt   
1982 [0x7be]:           skpe ebx // pc = 2008   
1983 [0x7bf]:           movl 0   
1984 [0x7c0]:           movn #1   
1986 [0x7c2]:           movi #0, adx   
1988 [0x7c4]:           iaload ebx, adx   
1989 [0x7c5]:           rstore ebx   
1990 [0x7c6]:           movi #64, ebx   
1992 [0x7c8]:           loadval ecx   
1993 [0x7c9]:           gt ecx, ebx   
1994 [0x7ca]:           movr ebx, cmt   
1995 [0x7cb]:           skpe ebx // pc = 2008   
1996 [0x7cc]:           movl 0   
1997 [0x7cd]:           movn #0   
1999 [0x7cf]:           movi #0, adx   
2001 [0x7d1]:           iaload ebx, adx   
2002 [0x7d2]:           rstore ebx   
2003 [0x7d3]:           movi #128, ebx   
2005 [0x7d5]:           loadval ecx   
2006 [0x7d6]:           gt ecx, ebx   
2007 [0x7d7]:           movr ebx, cmt   
2008 [0x7d8]:           movr cmt, ebx   
2009 [0x7d9]:           jne 2018   
2010 [0x7da]: line: 252 ldc ebx // 1   
2011 [0x7db]:           movl 0   
2012 [0x7dc]:           movn #5   
2014 [0x7de]:           movi #0, adx   
2016 [0x7e0]:           rmov adx, ebx   
2017 [0x7e1]:           jmp @2025   
2018 [0x7e2]: line: 254 ldc ebx // 0   
2019 [0x7e3]:           movl 0   
2020 [0x7e4]:           movn #5   
2022 [0x7e6]:           movi #0, adx   
2024 [0x7e8]:           rmov adx, ebx   
2025 [0x7e9]:           nop   
2026 [0x7ea]: line: 255 movl 0   
2027 [0x7eb]:           movn #18   
2029 [0x7ed]:           pushobj   
2030 [0x7ee]:           movl 0   
2031 [0x7ef]:           movn #6   
2033 [0x7f1]:           movi #0, adx   
2035 [0x7f3]:           iaload ebx, adx   
2036 [0x7f4]:           rstore ebx   
2037 [0x7f5]:           call @3727 // <ui.support#fragment.invalidate_refrences>   
2038 [0x7f6]:           nop   
2039 [0x7f7]:           ret   


ui.support#view.draw[3761] params(0) in file: controller//ui//support//view.sharp:259:8: note:  
		    def draw();
		       ^



function: ui.support#view.set_height[3762] params(1) in file: controller//ui//support//view.sharp:261:8: note:  
		    def set_height(size: var) : view {
		       ^

0 [0x0]: line: 262 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #3   
4 [0x4]:           loadval ebx   
5 [0x5]:           movi #0, adx   
7 [0x7]:           rmov adx, ebx   
8 [0x8]: line: 263 movi #0, ebx   
10 [0xa]:           movl 0   
11 [0xb]:           movn #16   
13 [0xd]:           movi #0, adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]: line: 264 movl 0   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: ui.support#view.set_visibility[3763] params(1) in file: controller//ui//support//view.sharp:267:8: note:  
		    def set_visibility(visible: var) : view {
		       ^

0 [0x0]: line: 268 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #5   
4 [0x4]:           loadval ebx   
5 [0x5]:           movi #0, adx   
7 [0x7]:           rmov adx, ebx   
8 [0x8]: line: 269 movi #0, ebx   
10 [0xa]:           movl 0   
11 [0xb]:           movn #16   
13 [0xd]:           movi #0, adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]: line: 270 movl 0   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: ui.support#view.to_left_of[3764] params(1) in file: controller//ui//support//view.sharp:273:8: note:  
		    def to_left_of(id: var) : view {
		       ^

0 [0x0]: line: 274 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #7   
4 [0x4]:           loadval ebx   
5 [0x5]:           movi #0, adx   
7 [0x7]:           rmov adx, ebx   
8 [0x8]: line: 275 movi #0, ebx   
10 [0xa]:           movl 0   
11 [0xb]:           movn #16   
13 [0xd]:           movi #0, adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]: line: 276 movl 0   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: ui.support#view.to_start_of[3765] params(1) in file: controller//ui//support//view.sharp:279:8: note:  
		    def to_start_of(id: var) : view {
		       ^

0 [0x0]: line: 280 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #8   
4 [0x4]:           loadval ebx   
5 [0x5]:           movi #0, adx   
7 [0x7]:           rmov adx, ebx   
8 [0x8]: line: 281 movi #0, ebx   
10 [0xa]:           movl 0   
11 [0xb]:           movn #16   
13 [0xd]:           movi #0, adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]: line: 282 movl 0   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: ui.support#view.to_right_of[3766] params(1) in file: controller//ui//support//view.sharp:285:8: note:  
		    def to_right_of(id: var) : view {
		       ^

0 [0x0]: line: 286 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #12   
4 [0x4]:           loadval ebx   
5 [0x5]:           movi #0, adx   
7 [0x7]:           rmov adx, ebx   
8 [0x8]: line: 287 movi #0, ebx   
10 [0xa]:           movl 0   
11 [0xb]:           movn #16   
13 [0xd]:           movi #0, adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]: line: 288 movl 0   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: ui.support#view.to_end_of[3767] params(1) in file: controller//ui//support//view.sharp:291:8: note:  
		    def to_end_of(id: var) : view {
		       ^

0 [0x0]: line: 292 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #9   
4 [0x4]:           loadval ebx   
5 [0x5]:           movi #0, adx   
7 [0x7]:           rmov adx, ebx   
8 [0x8]: line: 293 movi #0, ebx   
10 [0xa]:           movl 0   
11 [0xb]:           movn #16   
13 [0xd]:           movi #0, adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]: line: 294 movl 0   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: ui.support#view.to_top_of[3768] params(1) in file: controller//ui//support//view.sharp:297:8: note:  
		    def to_top_of(id: var) : view {
		       ^

0 [0x0]: line: 298 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #10   
4 [0x4]:           loadval ebx   
5 [0x5]:           movi #0, adx   
7 [0x7]:           rmov adx, ebx   
8 [0x8]: line: 299 movi #0, ebx   
10 [0xa]:           movl 0   
11 [0xb]:           movn #16   
13 [0xd]:           movi #0, adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]: line: 300 movl 0   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: ui.support#view.to_bottom_of[3769] params(1) in file: controller//ui//support//view.sharp:303:8: note:  
		    def to_bottom_of(id: var) : view {
		       ^

0 [0x0]: line: 304 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #11   
4 [0x4]:           loadval ebx   
5 [0x5]:           movi #0, adx   
7 [0x7]:           rmov adx, ebx   
8 [0x8]: line: 305 movi #0, ebx   
10 [0xa]:           movl 0   
11 [0xb]:           movn #16   
13 [0xd]:           movi #0, adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]: line: 306 movl 0   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: ui.support#view.set_gravity[3770] params(1) in file: controller//ui//support//view.sharp:309:8: note:  
		    def set_gravity(grav: var) : view {
		       ^

0 [0x0]: line: 310 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #15   
4 [0x4]:           loadval ebx   
5 [0x5]:           movi #0, adx   
7 [0x7]:           rmov adx, ebx   
8 [0x8]: line: 311 movi #0, ebx   
10 [0xa]:           movl 0   
11 [0xb]:           movn #16   
13 [0xd]:           movi #0, adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]: line: 312 movl 0   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: ui.support#view.above[3771] params(1) in file: controller//ui//support//view.sharp:315:8: note:  
		    def above(id: var) : view {
		       ^

0 [0x0]: line: 316 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #13   
4 [0x4]:           loadval ebx   
5 [0x5]:           movi #0, adx   
7 [0x7]:           rmov adx, ebx   
8 [0x8]: line: 317 movi #0, ebx   
10 [0xa]:           movl 0   
11 [0xb]:           movn #16   
13 [0xd]:           movi #0, adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]: line: 318 movl 0   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: ui.support#view.below[3772] params(1) in file: controller//ui//support//view.sharp:321:8: note:  
		    def below(id: var) : view {
		       ^

0 [0x0]: line: 322 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #14   
4 [0x4]:           loadval ebx   
5 [0x5]:           movi #0, adx   
7 [0x7]:           rmov adx, ebx   
8 [0x8]: line: 323 movi #0, ebx   
10 [0xa]:           movl 0   
11 [0xb]:           movn #16   
13 [0xd]:           movi #0, adx   
15 [0xf]:           rmov adx, ebx   
16 [0x10]: line: 324 movl 0   
17 [0x11]:           returnobj   
18 [0x12]:           ret   


function: ui.support#view.set_margin_left[3773] params(1) in file: controller//ui//support//view.sharp:327:8: note:  
		    def set_margin_left(size: var) : view {
		       ^

0 [0x0]: line: 328 movl 0   
1 [0x1]:           movn #4   
3 [0x3]:           pushobj   
4 [0x4]:           pushnull    
5 [0x5]:           itest ebx   
6 [0x6]:           movr cmt, ebx   
7 [0x7]:           jne 16   
8 [0x8]: line: 329 new_class @0 // std#__srt_global   
9 [0x9]:           popobj2    
10 [0xa]:           dup    
11 [0xb]:           call @3710 // <ui.support#margin.margin>   
12 [0xc]:           movl 0   
13 [0xd]:           movn #4   
15 [0xf]:           popobj   
16 [0x10]:           nop   
17 [0x11]: line: 330 ipushl #1   
18 [0x12]:           movl 0   
19 [0x13]:           movn #4   
21 [0x15]:           movn #0   
23 [0x17]:           loadval ebx   
24 [0x18]:           movi #0, adx   
26 [0x1a]:           rmov adx, ebx   
27 [0x1b]: line: 331 movi #0, ebx   
29 [0x1d]:           movl 0   
30 [0x1e]:           movn #16   
32 [0x20]:           movi #0, adx   
34 [0x22]:           rmov adx, ebx   
35 [0x23]: line: 332 movl 0   
36 [0x24]:           returnobj   
37 [0x25]:           ret   


function: ui.support#view.set_margin_right[3774] params(1) in file: controller//ui//support//view.sharp:335:8: note:  
		    def set_margin_right(size: var) : view {
		       ^

0 [0x0]: line: 336 movl 0   
1 [0x1]:           movn #4   
3 [0x3]:           pushobj   
4 [0x4]:           pushnull    
5 [0x5]:           itest ebx   
6 [0x6]:           movr cmt, ebx   
7 [0x7]:           jne 16   
8 [0x8]: line: 337 new_class @0 // std#__srt_global   
9 [0x9]:           popobj2    
10 [0xa]:           dup    
11 [0xb]:           call @3710 // <ui.support#margin.margin>   
12 [0xc]:           movl 0   
13 [0xd]:           movn #4   
15 [0xf]:           popobj   
16 [0x10]:           nop   
17 [0x11]: line: 338 ipushl #1   
18 [0x12]:           movl 0   
19 [0x13]:           movn #4   
21 [0x15]:           movn #1   
23 [0x17]:           loadval ebx   
24 [0x18]:           movi #0, adx   
26 [0x1a]:           rmov adx, ebx   
27 [0x1b]: line: 339 movi #0, ebx   
29 [0x1d]:           movl 0   
30 [0x1e]:           movn #16   
32 [0x20]:           movi #0, adx   
34 [0x22]:           rmov adx, ebx   
35 [0x23]: line: 340 movl 0   
36 [0x24]:           returnobj   
37 [0x25]:           ret   


function: ui.support#view.set_margin_top[3775] params(1) in file: controller//ui//support//view.sharp:343:8: note:  
		    def set_margin_top(size: var) : view {
		       ^

0 [0x0]: line: 344 movl 0   
1 [0x1]:           movn #4   
3 [0x3]:           pushobj   
4 [0x4]:           pushnull    
5 [0x5]:           itest ebx   
6 [0x6]:           movr cmt, ebx   
7 [0x7]:           jne 16   
8 [0x8]: line: 345 new_class @0 // std#__srt_global   
9 [0x9]:           popobj2    
10 [0xa]:           dup    
11 [0xb]:           call @3710 // <ui.support#margin.margin>   
12 [0xc]:           movl 0   
13 [0xd]:           movn #4   
15 [0xf]:           popobj   
16 [0x10]:           nop   
17 [0x11]: line: 346 ipushl #1   
18 [0x12]:           movl 0   
19 [0x13]:           movn #4   
21 [0x15]:           movn #2   
23 [0x17]:           loadval ebx   
24 [0x18]:           movi #0, adx   
26 [0x1a]:           rmov adx, ebx   
27 [0x1b]: line: 347 movi #0, ebx   
29 [0x1d]:           movl 0   
30 [0x1e]:           movn #16   
32 [0x20]:           movi #0, adx   
34 [0x22]:           rmov adx, ebx   
35 [0x23]: line: 348 movl 0   
36 [0x24]:           returnobj   
37 [0x25]:           ret   


function: ui.support#view.set_margin_bottom[3776] params(1) in file: controller//ui//support//view.sharp:351:8: note:  
		    def set_margin_bottom(size: var) : view {
		       ^

0 [0x0]: line: 352 movl 0   
1 [0x1]:           movn #4   
3 [0x3]:           pushobj   
4 [0x4]:           pushnull    
5 [0x5]:           itest ebx   
6 [0x6]:           movr cmt, ebx   
7 [0x7]:           jne 16   
8 [0x8]: line: 353 new_class @0 // std#__srt_global   
9 [0x9]:           popobj2    
10 [0xa]:           dup    
11 [0xb]:           call @3710 // <ui.support#margin.margin>   
12 [0xc]:           movl 0   
13 [0xd]:           movn #4   
15 [0xf]:           popobj   
16 [0x10]:           nop   
17 [0x11]: line: 354 ipushl #1   
18 [0x12]:           movl 0   
19 [0x13]:           movn #4   
21 [0x15]:           movn #3   
23 [0x17]:           loadval ebx   
24 [0x18]:           movi #0, adx   
26 [0x1a]:           rmov adx, ebx   
27 [0x1b]: line: 355 movi #0, ebx   
29 [0x1d]:           movl 0   
30 [0x1e]:           movn #16   
32 [0x20]:           movi #0, adx   
34 [0x22]:           rmov adx, ebx   
35 [0x23]: line: 356 movl 0   
36 [0x24]:           returnobj   
37 [0x25]:           ret   


ui.driver#__srt_global.setup[3777] params(0) in file: controller//ui//driver//dev_interface.sharp:3:11: note:  
		native def setup();
		          ^



ui.driver#__srt_global.clear_display[3778] params(0) in file: controller//ui//driver//dev_interface.sharp:4:11: note:  
		native def clear_display();
		          ^



ui.driver#__srt_global.display[3779] params(0) in file: controller//ui//driver//dev_interface.sharp:5:11: note:  
		native def display();
		          ^



ui.driver#__srt_global.dim[3780] params(1) in file: controller//ui//driver//dev_interface.sharp:6:11: note:  
		native def dim(yes: var);
		          ^



ui.driver#__srt_global.move_cursor[3781] params(2) in file: controller//ui//driver//dev_interface.sharp:7:11: note:  
		native def move_cursor(x: var, y: var);
		          ^



ui.driver#__srt_global.draw_word[3782] params(3) in file: controller//ui//driver//dev_interface.sharp:8:11: note:  
		native def draw_word(str: _int8[], len: var, text_size: var);
		          ^



ui.driver#__srt_global.draw_img[3783] params(6) in file: controller//ui//driver//dev_interface.sharp:9:11: note:  
		native def draw_img(bytes: var[], width: var, height: var, x: var, y: var, skip_count: var);
		          ^



constructor: ui.driver#ssd1306.ssd1306[3784] params(0) in file: controller//ui//driver//ssd1306.sharp:9:12: note:  
		    ssd1306() {
		           ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 10 istore 25   
3 [0x3]:          ldc ebx // 1   
4 [0x4]:          rstore ebx   
5 [0x5]:          invoke_delegate 3599 { static=1, args=2 }   
7 [0x7]: line: 11 istore 25   
9 [0x9]:          ldc ebx // 1   
10 [0xa]:          rstore ebx   
11 [0xb]:          invoke_delegate 3600 { static=1, args=2 }   
13 [0xd]: line: 12 invoke_delegate 3777 { static=1, args=0 }   
15 [0xf]:          ret   


function: ui.driver#ssd1306.clear[3785] params(0) in file: controller//ui//driver//ssd1306.sharp:15:8: note:  
		    def clear() {
		       ^

0 [0x0]: line: 16 invoke_delegate 3778 { static=1, args=0 }   
2 [0x2]:          ret   


function: ui.driver#ssd1306.dim_display[3786] params(1) in file: controller//ui//driver//ssd1306.sharp:19:8: note:  
		    def dim_display(yes: var) {
		       ^

0 [0x0]: line: 20 ipushl #1   
1 [0x1]:          invoke_delegate 3780 { static=1, args=1 }   
3 [0x3]:          ret   


function: ui.driver#ssd1306.update_display[3787] params(0) in file: controller//ui//driver//ssd1306.sharp:23:8: note:  
		    def update_display() {
		       ^

0 [0x0]: line: 24 invoke_delegate 3779 { static=1, args=0 }   
2 [0x2]:          ret   


function: ui.driver#ssd1306.draw_img[3788] params(7) in file: controller//ui//driver//ssd1306.sharp:27:8: note:  
		    def draw_img(x: var, y: var, width: var, height: var, img_width: var, img_height: var, bytes: var[]) {
		       ^

0 [0x0]: line: 28 istorel 0, fp+8   
2 [0x2]: line: 30 ipushl #5   
3 [0x3]:          loadl ebx, fp+6   
4 [0x4]:          loadval ecx   
5 [0x5]:          mul ecx, ebx -> ebx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 7   
8 [0x8]:          sizeof ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          tne ecx, ebx   
11 [0xb]:          jne 34   
12 [0xc]: line: 31 new_class @0 // std#__srt_global   
13 [0xd]:          loadval adx   
14 [0xe]:          dup    
15 [0xf]:          new_class @0 // std#__srt_global   
16 [0x10]:          ret   
17 [0x11]:          dup    
18 [0x12]:          newstr @79 // image has invalid size:    
19 [0x13]:          call @1959 // <std#string.string>   
20 [0x14]:          ipushl #5   
21 [0x15]:          call @1991 // <std#string.operator+>   
22 [0x16]:          newstr @80 //  x    
23 [0x17]:          call @1971 // <std#string.operator+>   
24 [0x18]:          ipushl #6   
25 [0x19]:          call @1991 // <std#string.operator+>   
26 [0x1a]:          newstr @81 //  img size is:    
27 [0x1b]:          call @1971 // <std#string.operator+>   
28 [0x1c]:          movl 7   
29 [0x1d]:          sizeof ebx   
30 [0x1e]:          rstore ebx   
31 [0x1f]:          call @1991 // <std#string.operator+>   
32 [0x20]:          call @3552 // <std#illegal_state_exception.illegal_state_exception>   
33 [0x21]:          throw    
34 [0x22]:          nop   
35 [0x23]: line: 34 ipushl #3   
36 [0x24]:          movi #-2, ebx   
38 [0x26]:          loadval ecx   
39 [0x27]:          test ecx, ebx   
40 [0x28]:          jne 44   
41 [0x29]: line: 35 loadl ebx, fp+5   
42 [0x2a]:          smovr_2 ebx, fp+3   
43 [0x2b]:          jmp @94   
44 [0x2c]:          ipushl #3   
45 [0x2d]:          movi #-1, ebx   
47 [0x2f]:          loadval ecx   
48 [0x30]:          test ecx, ebx   
49 [0x31]:          jne 78   
50 [0x32]: line: 37 ipushl #1   
51 [0x33]:          loadl ebx, fp+5   
52 [0x34]:          loadval ecx   
53 [0x35]:          add ecx, ebx -> ebx   
54 [0x36]:          rstore ebx   
55 [0x37]:          movi #128, ebx   
57 [0x39]:          loadval ecx   
58 [0x3a]:          lte ecx, ebx   
59 [0x3b]:          movr ebx, cmt   
60 [0x3c]:          movr cmt, ebx   
61 [0x3d]:          jne 65   
62 [0x3e]: line: 38 loadl ebx, fp+5   
63 [0x3f]:          smovr_2 ebx, fp+3   
64 [0x40]:          jmp @76   
65 [0x41]: line: 40 istore 128   
67 [0x43]:          loadl ebx, fp+1   
68 [0x44]:          loadval ecx   
69 [0x45]:          sub ecx, ebx -> ebx   
70 [0x46]:          smovr_2 ebx, fp+3   
71 [0x47]: line: 41 ipushl #5   
72 [0x48]:          loadl ebx, fp+1   
73 [0x49]:          loadval ecx   
74 [0x4a]:          sub ecx, ebx -> ebx   
75 [0x4b]:          smovr_2 ebx, fp+8   
76 [0x4c]:          nop   
77 [0x4d]:          jmp @94   
78 [0x4e]: line: 44 ipushl #5   
79 [0x4f]:          loadl ebx, fp+3   
80 [0x50]:          loadval ecx   
81 [0x51]:          lt ecx, ebx   
82 [0x52]:          movr ebx, cmt   
83 [0x53]:          movr cmt, ebx   
84 [0x54]:          jne 88   
85 [0x55]: line: 45 loadl ebx, fp+5   
86 [0x56]:          smovr_2 ebx, fp+3   
87 [0x57]:          jmp @93   
88 [0x58]: line: 47 ipushl #5   
89 [0x59]:          loadl ebx, fp+3   
90 [0x5a]:          loadval ecx   
91 [0x5b]:          sub ecx, ebx -> ebx   
92 [0x5c]:          smovr_2 ebx, fp+8   
93 [0x5d]:          nop   
94 [0x5e]:          nop   
95 [0x5f]: line: 51 ipushl #4   
96 [0x60]:          movi #-2, ebx   
98 [0x62]:          loadval ecx   
99 [0x63]:          test ecx, ebx   
100 [0x64]:          jne 104   
101 [0x65]: line: 52 loadl ebx, fp+6   
102 [0x66]:          smovr_2 ebx, fp+4   
103 [0x67]:          jmp @143   
104 [0x68]:          ipushl #4   
105 [0x69]:          movi #-1, ebx   
107 [0x6b]:          loadval ecx   
108 [0x6c]:          test ecx, ebx   
109 [0x6d]:          jne 133   
110 [0x6e]: line: 54 ipushl #2   
111 [0x6f]:          loadl ebx, fp+6   
112 [0x70]:          loadval ecx   
113 [0x71]:          add ecx, ebx -> ebx   
114 [0x72]:          rstore ebx   
115 [0x73]:          movi #64, ebx   
117 [0x75]:          loadval ecx   
118 [0x76]:          lte ecx, ebx   
119 [0x77]:          movr ebx, cmt   
120 [0x78]:          movr cmt, ebx   
121 [0x79]:          jne 125   
122 [0x7a]: line: 55 loadl ebx, fp+6   
123 [0x7b]:          smovr_2 ebx, fp+4   
124 [0x7c]:          jmp @131   
125 [0x7d]: line: 57 istore 64   
127 [0x7f]:          loadl ebx, fp+2   
128 [0x80]:          loadval ecx   
129 [0x81]:          sub ecx, ebx -> ebx   
130 [0x82]:          smovr_2 ebx, fp+4   
131 [0x83]:          nop   
132 [0x84]:          jmp @143   
133 [0x85]: line: 60 ipushl #6   
134 [0x86]:          loadl ebx, fp+4   
135 [0x87]:          loadval ecx   
136 [0x88]:          lt ecx, ebx   
137 [0x89]:          movr ebx, cmt   
138 [0x8a]:          movr cmt, ebx   
139 [0x8b]:          jne 142   
140 [0x8c]: line: 61 loadl ebx, fp+6   
141 [0x8d]:          smovr_2 ebx, fp+4   
142 [0x8e]:          nop   
143 [0x8f]:          nop   
144 [0x90]: line: 64 loadl ecx, fp+8   
145 [0x91]:          movi #0, ebx   
147 [0x93]:          lt ecx, ebx   
148 [0x94]:          movr ebx, cmt   
149 [0x95]:          movr cmt, ebx   
150 [0x96]:          jne 163   
151 [0x97]: line: 65 new_class @0 // std#__srt_global   
152 [0x98]:          loadval adx   
153 [0x99]:          dup    
154 [0x9a]:          new_class @0 // std#__srt_global   
155 [0x9b]:          ret   
156 [0x9c]:          dup    
157 [0x9d]:          newstr @82 // skip count < 0:    
158 [0x9e]:          call @1959 // <std#string.string>   
159 [0x9f]:          ipushl #8   
160 [0xa0]:          call @1991 // <std#string.operator+>   
161 [0xa1]:          call @3552 // <std#illegal_state_exception.illegal_state_exception>   
162 [0xa2]:          throw    
163 [0xa3]:          nop   
164 [0xa4]: line: 68 pushl 7   
165 [0xa5]:          ipushl #3   
166 [0xa6]:          ipushl #4   
167 [0xa7]:          ipushl #1   
168 [0xa8]:          ipushl #2   
169 [0xa9]:          ipushl #8   
170 [0xaa]:          invoke_delegate 3783 { static=1, args=6 }   
172 [0xac]:          ret   
173 [0xad]:          ret   


function: ui.driver#ssd1306.draw_word[3789] params(6) in file: controller//ui//driver//ssd1306.sharp:71:8: note:  
		    def draw_word(x: var, y: var, text_size: var, width: var, transx : var, text: _int8[]) {
		       ^

0 [0x0]: line: 72 ipushl #1   
1 [0x1]:          ipushl #2   
2 [0x2]:          invoke_delegate 3781 { static=1, args=2 }   
4 [0x4]: line: 74 ipushl #1   
5 [0x5]:          loadl ebx, fp+5   
6 [0x6]:          loadval ecx   
7 [0x7]:          add ecx, ebx -> ebx   
8 [0x8]:          rstore ebx   
9 [0x9]:          movi #128, ebx   
11 [0xb]:          loadval ecx   
12 [0xc]:          gt ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          movr cmt, ebx   
15 [0xf]:          jne 73   
16 [0x10]: line: 75 ipushl #1   
17 [0x11]:          loadl ebx, fp+5   
18 [0x12]:          loadval ecx   
19 [0x13]:          add ecx, ebx -> ebx   
20 [0x14]:          rstore ebx   
21 [0x15]:          movi #128, ebx   
23 [0x17]:          loadval ecx   
24 [0x18]:          sub ecx, ebx -> ebx   
25 [0x19]:          smovr_2 ebx, fp+7   
26 [0x1a]: line: 76 ipushl #5   
27 [0x1b]:          loadl ebx, fp+7   
28 [0x1c]:          loadval ecx   
29 [0x1d]:          sub ecx, ebx -> ebx   
30 [0x1e]:          rstore ebx   
31 [0x1f]:          movi #6, ebx   
33 [0x21]:          loadval ecx   
34 [0x22]:          div ecx, ebx -> ebx   
35 [0x23]:          rstore ebx   
36 [0x24]:          movi #1, ebx   
38 [0x26]:          loadval ecx   
39 [0x27]:          sub ecx, ebx -> ebx   
40 [0x28]:          smovr_2 ebx, fp+8   
41 [0x29]: line: 77 ipushl #8   
42 [0x2a]:          movi #0, ebx   
44 [0x2c]:          loadval ecx   
45 [0x2d]:          gt ecx, ebx   
46 [0x2e]:          movr ebx, cmt   
47 [0x2f]:          movr cmt, ebx   
48 [0x30]:          jne 71   
49 [0x31]: line: 78 ipushl #8   
50 [0x32]:          movl 6   
51 [0x33]:          sizeof ebx   
52 [0x34]:          loadval ecx   
53 [0x35]:          gt ecx, ebx   
54 [0x36]:          movr ebx, cmt   
55 [0x37]:          movr cmt, ebx   
56 [0x38]:          jne 65   
57 [0x39]: line: 79 movl 6   
58 [0x3a]:          sizeof ebx   
59 [0x3b]:          rstore ebx   
60 [0x3c]:          movi #1, ebx   
62 [0x3e]:          loadval ecx   
63 [0x3f]:          sub ecx, ebx -> ebx   
64 [0x40]:          smovr_2 ebx, fp+8   
65 [0x41]:          nop   
66 [0x42]: line: 81 pushl 6   
67 [0x43]:          ipushl #8   
68 [0x44]:          ipushl #3   
69 [0x45]:          invoke_delegate 3782 { static=1, args=3 }   
71 [0x47]:          nop   
72 [0x48]:          jmp @149   
73 [0x49]: line: 84 ipushl #4   
74 [0x4a]:          movi #0, ebx   
76 [0x4c]:          loadval ecx   
77 [0x4d]:          gte ecx, ebx   
78 [0x4e]:          movr ebx, cmt   
79 [0x4f]:          movr cmt, ebx   
80 [0x50]:          jne 141   
81 [0x51]: line: 85 ipushl #5   
82 [0x52]:          loadl ebx, fp+4   
83 [0x53]:          loadval ecx   
84 [0x54]:          gt ecx, ebx   
85 [0x55]:          movr ebx, cmt   
86 [0x56]:          movr cmt, ebx   
87 [0x57]:          jne 140   
88 [0x58]: line: 86 ipushl #5   
89 [0x59]:          loadl ebx, fp+4   
90 [0x5a]:          loadval ecx   
91 [0x5b]:          sub ecx, ebx -> ebx   
92 [0x5c]:          smovr_2 ebx, fp+9   
93 [0x5d]: line: 87 ipushl #5   
94 [0x5e]:          loadl ebx, fp+9   
95 [0x5f]:          loadval ecx   
96 [0x60]:          sub ecx, ebx -> ebx   
97 [0x61]:          rstore ebx   
98 [0x62]:          movi #6, ebx   
100 [0x64]:          loadval ecx   
101 [0x65]:          div ecx, ebx -> ebx   
102 [0x66]:          rstore ebx   
103 [0x67]:          movi #1, ebx   
105 [0x69]:          loadval ecx   
106 [0x6a]:          sub ecx, ebx -> ebx   
107 [0x6b]:          smovr_2 ebx, fp+10   
108 [0x6c]: line: 88 ipushl #10   
109 [0x6d]:          movi #0, ebx   
111 [0x6f]:          loadval ecx   
112 [0x70]:          gt ecx, ebx   
113 [0x71]:          movr ebx, cmt   
114 [0x72]:          movr cmt, ebx   
115 [0x73]:          jne 139   
116 [0x74]: line: 89 ipushl #10   
117 [0x75]:          movl 6   
118 [0x76]:          sizeof ebx   
119 [0x77]:          loadval ecx   
120 [0x78]:          gt ecx, ebx   
121 [0x79]:          movr ebx, cmt   
122 [0x7a]:          movr cmt, ebx   
123 [0x7b]:          jne 132   
124 [0x7c]: line: 90 movl 6   
125 [0x7d]:          sizeof ebx   
126 [0x7e]:          rstore ebx   
127 [0x7f]:          movi #1, ebx   
129 [0x81]:          loadval ecx   
130 [0x82]:          sub ecx, ebx -> ebx   
131 [0x83]:          smovr_2 ebx, fp+10   
132 [0x84]:          nop   
133 [0x85]: line: 92 pushl 6   
134 [0x86]:          ipushl #10   
135 [0x87]:          ipushl #3   
136 [0x88]:          invoke_delegate 3782 { static=1, args=3 }   
138 [0x8a]:          ret   
139 [0x8b]:          nop   
140 [0x8c]:          nop   
141 [0x8d]:          nop   
142 [0x8e]: line: 97 pushl 6   
143 [0x8f]:          movl 6   
144 [0x90]:          sizeof ebx   
145 [0x91]:          rstore ebx   
146 [0x92]:          ipushl #3   
147 [0x93]:          invoke_delegate 3782 { static=1, args=3 }   
149 [0x95]:          nop   
150 [0x96]:          ret   


function: ui.driver#ssd1306.shutdown[3790] params(0) in file: controller//ui//driver//ssd1306.sharp:101:8: note:  
		    def shutdown() {
		       ^

0 [0x0]: line: 102 pushl 0   
1 [0x1]:           call @3785 // <ui.driver#ssd1306.clear>   
2 [0x2]: line: 103 istore 25   
4 [0x4]:           ldc ebx // 0   
5 [0x5]:           rstore ebx   
6 [0x6]:           invoke_delegate 3600 { static=1, args=2 }   
8 [0x8]:           ret   


constructor: ui.layout#splash_screen.splash_screen[3791] params(2) in file: controller//ui//layout//splash_screen.sharp:12:18: note:  
		    splash_screen(container : window, id: var) -> base(container, id) { }
		                 ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         ipushl #2   
3 [0x3]:         call @3723 // <ui.support#fragment.fragment>   
4 [0x4]:         ret   


function: ui.layout#splash_screen.configure[3792] params(0) in file: controller//ui//layout//splash_screen.sharp:14:8: note:  
		    def configure() {
		       ^

0 [0x0]: line: 15 pushl 0   
1 [0x1]:          new_class @0 // std#__srt_global   
2 [0x2]:          exp adx, adx -> adx   
3 [0x3]:          dup    
4 [0x4]:          istore 24   
6 [0x6]:          call @3736 // <ui.support#image_view.image_view>   
7 [0x7]:          istore 25   
9 [0x9]:          call @3739 // <ui.support#image_view.set_drawable>   
10 [0xa]:          istore 4294967294   
12 [0xc]:          call @3756 // <ui.support#view.set_width>   
13 [0xd]:          istore 4294967294   
15 [0xf]:          call @3762 // <ui.support#view.set_height>   
16 [0x10]:          ldc ebx // 1   
17 [0x11]:          rstore ebx   
18 [0x12]:          call @3765 // <ui.support#view.to_start_of>   
19 [0x13]:          ldc ebx // 1   
20 [0x14]:          rstore ebx   
21 [0x15]:          call @3768 // <ui.support#view.to_top_of>   
22 [0x16]:          istore 8   
24 [0x18]:          call @3773 // <ui.support#view.set_margin_left>   
25 [0x19]:          istore 10   
27 [0x1b]:          call @3775 // <ui.support#view.set_margin_top>   
28 [0x1c]:          call @3724 // <ui.support#fragment.add_view>   
29 [0x1d]: line: 24 pushl 0   
30 [0x1e]:          new_class @0 // std#__srt_global   
31 [0x1f]:          dup    
32 [0x20]:          dup    
33 [0x21]:          istore 22   
35 [0x23]:          call @3704 // <ui.support#text_view.text_view>   
36 [0x24]:          istore 4294967294   
38 [0x26]:          call @3756 // <ui.support#view.set_width>   
39 [0x27]:          istore 4294967294   
41 [0x29]:          call @3762 // <ui.support#view.set_height>   
42 [0x2a]:          ldc ebx // 1   
43 [0x2b]:          rstore ebx   
44 [0x2c]:          call @3767 // <ui.support#view.to_end_of>   
45 [0x2d]:          ldc ebx // 1   
46 [0x2e]:          rstore ebx   
47 [0x2f]:          call @3768 // <ui.support#view.to_top_of>   
48 [0x30]:          istore 8   
50 [0x32]:          call @3774 // <ui.support#view.set_margin_right>   
51 [0x33]:          istore 18   
53 [0x35]:          call @3775 // <ui.support#view.set_margin_top>   
54 [0x36]:          call @3724 // <ui.support#fragment.add_view>   
55 [0x37]: line: 32 pushl 0   
56 [0x38]:          new_class @0 // std#__srt_global   
57 [0x39]:          dup    
58 [0x3a]:          dup    
59 [0x3b]:          istore 23   
61 [0x3d]:          call @3704 // <ui.support#text_view.text_view>   
62 [0x3e]:          istore 4294967294   
64 [0x40]:          call @3756 // <ui.support#view.set_width>   
65 [0x41]:          istore 4294967294   
67 [0x43]:          call @3762 // <ui.support#view.set_height>   
68 [0x44]:          istore 22   
70 [0x46]:          call @3772 // <ui.support#view.below>   
71 [0x47]:          ldc ebx // 1   
72 [0x48]:          rstore ebx   
73 [0x49]:          call @3769 // <ui.support#view.to_bottom_of>   
74 [0x4a]:          ldc ebx // 1   
75 [0x4b]:          rstore ebx   
76 [0x4c]:          call @3767 // <ui.support#view.to_end_of>   
77 [0x4d]:          istore 18   
79 [0x4f]:          call @3774 // <ui.support#view.set_margin_right>   
80 [0x50]:          istore 5   
82 [0x52]:          call @3776 // <ui.support#view.set_margin_bottom>   
83 [0x53]:          call @3724 // <ui.support#fragment.add_view>   
84 [0x54]:          ret   


function: ui.layout#splash_screen.on_create[3793] params(0) in file: controller//ui//layout//splash_screen.sharp:43:8: note:  
		    def on_create() {
		       ^

0 [0x0]: line: 44 pushl 0   
1 [0x1]:          call @3726 // <ui.support#fragment.on_create>   
2 [0x2]: line: 46 pushl 0   
3 [0x3]:          istore 22   
5 [0x5]:          call @3725 // <ui.support#fragment.find_view_by_id>   
6 [0x6]:          popobj2    
7 [0x7]:          movi #112, cmt   
9 [0x9]:          cast cmt   
10 [0xa]:          smovr_3 fp+1   
11 [0xb]: line: 47 pushl 0   
12 [0xc]:          istore 23   
14 [0xe]:          call @3725 // <ui.support#fragment.find_view_by_id>   
15 [0xf]:          popobj2    
16 [0x10]:          movi #112, cmt   
18 [0x12]:          cast cmt   
19 [0x13]:          smovr_3 fp+2   
20 [0x14]: line: 49 pushl 1   
21 [0x15]:          istore 2   
23 [0x17]:          call @4010 // <ui.support#text_view.set_text_size>   
24 [0x18]: line: 50 pushl 2   
25 [0x19]:          istore 2   
27 [0x1b]:          call @4010 // <ui.support#text_view.set_text_size>   
28 [0x1c]: line: 52 pushl 1   
29 [0x1d]:          new_class @0 // std#__srt_global   
30 [0x1e]:          ret   
31 [0x1f]:          dup    
32 [0x20]:          newstr @83 // Project   
33 [0x21]:          call @1959 // <std#string.string>   
34 [0x22]:          call @4009 // <ui.support#text_view.set_text>   
35 [0x23]: line: 53 pushl 2   
36 [0x24]:          new_class @0 // std#__srt_global   
37 [0x25]:          ret   
38 [0x26]:          dup    
39 [0x27]:          newstr @84 // Dragonfly   
40 [0x28]:          call @1959 // <std#string.string>   
41 [0x29]:          call @4009 // <ui.support#text_view.set_text>   
42 [0x2a]: line: 55 call @2026 // <std.io.task#task.builder>   
43 [0x2b]:          istore 2000   
45 [0x2d]:          call @2043 // <std.io.task#job_builder.schedule>   
46 [0x2e]:          movi #1, ebx   
48 [0x30]:          newobj_arry ebx   
49 [0x31]:          pushl 0   
50 [0x32]:          movsl #-1   
51 [0x33]:          movn #0   
53 [0x35]:          popobj   
54 [0x36]:          call @2046 // <std.io.task#job_builder.with_args>   
55 [0x37]:          istore 4107   
57 [0x39]:          call @2050 // <std.io.task#job_builder.operator=>   
58 [0x3a]:          pop   
59 [0x3b]:          ret   


function: ui.layout#splash_screen.on_destroy[3794] params(0) in file: controller//ui//layout//splash_screen.sharp:64:8: note:  
		    def on_destroy() {
		       ^

0 [0x0]: line: 65 pushl 0   
1 [0x1]:          call @3728 // <ui.support#fragment.on_destroy>   
2 [0x2]:          ret   


constructor: ui.layout#splash_screen.splash_screen[3795] params(0) in file: controller//ui//layout//splash_screen.sharp:10:6: note:  
		class splash_screen base fragment {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3732 // <ui.support#fragment.fragment>   
2 [0x2]:         ret   


function: ui.layout.config#__srt_global.configure_layout[3796] params(0) in file: controller//ui//layout//config//layout_config.sharp:8:4: note:  
		def configure_layout() {
		   ^

0 [0x0]: line: 9 movg @134 // @ui.layout.config#__srt_global   
1 [0x1]:         movn #0   
3 [0x3]:         pushobj   
4 [0x4]:         pushnull    
5 [0x5]:         itest ebx   
6 [0x6]:         movr cmt, ebx   
7 [0x7]:         jne 17   
8 [0x8]: line: 10 new_class @0 // std#__srt_global   
9 [0x9]:          ldc adx // 2.71828   
10 [0xa]:          dup    
11 [0xb]:          newstr @85 // main-container   
12 [0xc]:          call @3713 // <ui.support#window.window>   
13 [0xd]:          movg @134 // @ui.layout.config#__srt_global   
14 [0xe]:          movn #0   
16 [0x10]:          popobj   
17 [0x11]:          nop   
18 [0x12]: line: 14 movg @134 // @ui.layout.config#__srt_global   
19 [0x13]:          movn #0   
21 [0x15]:          pushobj   
22 [0x16]:          new_class @0 // std#__srt_global   
23 [0x17]:          ? (135)   
24 [0x18]:          dup    
25 [0x19]:          movg @134 // @ui.layout.config#__srt_global   
26 [0x1a]:          movn #0   
28 [0x1c]:          pushobj   
29 [0x1d]:          ldc ebx // 0   
30 [0x1e]:          rstore ebx   
31 [0x1f]:          call @3798 // <ui.layout#home_screen.home_screen>   
32 [0x20]:          call @3720 // <ui.support#window.add_fragment>   
33 [0x21]: line: 15 movg @134 // @ui.layout.config#__srt_global   
34 [0x22]:          movn #0   
36 [0x24]:          pushobj   
37 [0x25]:          new_class @0 // std#__srt_global   
38 [0x26]:          ? (133)   
39 [0x27]:          dup    
40 [0x28]:          movg @134 // @ui.layout.config#__srt_global   
41 [0x29]:          movn #0   
43 [0x2b]:          pushobj   
44 [0x2c]:          ldc ebx // 1   
45 [0x2d]:          rstore ebx   
46 [0x2e]:          call @3791 // <ui.layout#splash_screen.splash_screen>   
47 [0x2f]:          call @3720 // <ui.support#window.add_fragment>   
48 [0x30]: line: 18 movg @134 // @ui.layout.config#__srt_global   
49 [0x31]:          movn #0   
51 [0x33]:          pushobj   
52 [0x34]:          ldc ebx // 1   
53 [0x35]:          rstore ebx   
54 [0x36]:          call @3716 // <ui.support#window.starter_fragment>   
55 [0x37]:          ret   


function: ui.layout.config#__srt_global.start[3797] params(0) in file: controller//ui//layout//config//layout_config.sharp:21:4: note:  
		def start() {
		   ^

0 [0x0]: line: 22 movg @134 // @ui.layout.config#__srt_global   
1 [0x1]:          movn #0   
3 [0x3]:          pushobj   
4 [0x4]:          call @3719 // <ui.support#window.show>   
5 [0x5]:          ret   


constructor: ui.layout#home_screen.home_screen[3798] params(2) in file: controller//ui//layout//home_screen.sharp:14:16: note:  
		    home_screen(container : window, id: var) -> base(container, id) { }
		               ^

0 [0x0]:         pushl 0   
1 [0x1]:         pushl 1   
2 [0x2]:         ipushl #2   
3 [0x3]:         call @3723 // <ui.support#fragment.fragment>   
4 [0x4]:         ret   


function: ui.layout#home_screen.configure[3799] params(0) in file: controller//ui//layout//home_screen.sharp:20:8: note:  
		    def configure() {
		       ^

0 [0x0]: line: 21 pushl 0   
1 [0x1]:          new_class @0 // std#__srt_global   
2 [0x2]:          exp adx, adx -> adx   
3 [0x3]:          dup    
4 [0x4]:          istore 3   
6 [0x6]:          call @3736 // <ui.support#image_view.image_view>   
7 [0x7]:          istore 10   
9 [0x9]:          call @3739 // <ui.support#image_view.set_drawable>   
10 [0xa]:          istore 4294967294   
12 [0xc]:          call @3756 // <ui.support#view.set_width>   
13 [0xd]:          istore 4294967294   
15 [0xf]:          call @3762 // <ui.support#view.set_height>   
16 [0x10]:          ldc ebx // 1   
17 [0x11]:          rstore ebx   
18 [0x12]:          call @3765 // <ui.support#view.to_start_of>   
19 [0x13]:          ldc ebx // 1   
20 [0x14]:          rstore ebx   
21 [0x15]:          call @3766 // <ui.support#view.to_right_of>   
22 [0x16]:          istore 4   
24 [0x18]:          call @3774 // <ui.support#view.set_margin_right>   
25 [0x19]:          istore 2   
27 [0x1b]:          call @3775 // <ui.support#view.set_margin_top>   
28 [0x1c]:          call @3724 // <ui.support#fragment.add_view>   
29 [0x1d]: line: 30 pushl 0   
30 [0x1e]:          new_class @0 // std#__srt_global   
31 [0x1f]:          exp adx, adx -> adx   
32 [0x20]:          dup    
33 [0x21]:          istore 4   
35 [0x23]:          call @3736 // <ui.support#image_view.image_view>   
36 [0x24]:          istore 4294967294   
38 [0x26]:          call @3756 // <ui.support#view.set_width>   
39 [0x27]:          istore 4294967294   
41 [0x29]:          call @3762 // <ui.support#view.set_height>   
42 [0x2a]:          istore 3   
44 [0x2c]:          call @3764 // <ui.support#view.to_left_of>   
45 [0x2d]:          ldc ebx // 1   
46 [0x2e]:          rstore ebx   
47 [0x2f]:          call @3768 // <ui.support#view.to_top_of>   
48 [0x30]:          istore 4   
50 [0x32]:          call @3774 // <ui.support#view.set_margin_right>   
51 [0x33]:          istore 1   
53 [0x35]:          call @3775 // <ui.support#view.set_margin_top>   
54 [0x36]:          call @3724 // <ui.support#fragment.add_view>   
55 [0x37]: line: 38 pushl 0   
56 [0x38]:          new_class @0 // std#__srt_global   
57 [0x39]:          dup    
58 [0x3a]:          dup    
59 [0x3b]:          istore 2   
61 [0x3d]:          call @3704 // <ui.support#text_view.text_view>   
62 [0x3e]:          istore 4294967295   
64 [0x40]:          call @3756 // <ui.support#view.set_width>   
65 [0x41]:          istore 4294967294   
67 [0x43]:          call @3762 // <ui.support#view.set_height>   
68 [0x44]:          ldc ebx // 1   
69 [0x45]:          rstore ebx   
70 [0x46]:          call @3765 // <ui.support#view.to_start_of>   
71 [0x47]:          istore 2   
73 [0x49]:          call @3770 // <ui.support#view.set_gravity>   
74 [0x4a]:          istore 5   
76 [0x4c]:          call @3775 // <ui.support#view.set_margin_top>   
77 [0x4d]:          call @3724 // <ui.support#fragment.add_view>   
78 [0x4e]: line: 45 pushl 0   
79 [0x4f]:          new_class @0 // std#__srt_global   
80 [0x50]:          exp adx, adx -> adx   
81 [0x51]:          dup    
82 [0x52]:          istore 12   
84 [0x54]:          call @3736 // <ui.support#image_view.image_view>   
85 [0x55]:          istore 17   
87 [0x57]:          call @3739 // <ui.support#image_view.set_drawable>   
88 [0x58]:          istore 4294967294   
90 [0x5a]:          call @3756 // <ui.support#view.set_width>   
91 [0x5b]:          istore 4294967294   
93 [0x5d]:          call @3762 // <ui.support#view.set_height>   
94 [0x5e]:          ldc ebx // 1   
95 [0x5f]:          rstore ebx   
96 [0x60]:          call @3765 // <ui.support#view.to_start_of>   
97 [0x61]:          istore 2   
99 [0x63]:          call @3775 // <ui.support#view.set_margin_top>   
100 [0x64]:          istore 4   
102 [0x66]:          call @3773 // <ui.support#view.set_margin_left>   
103 [0x67]:          call @3724 // <ui.support#fragment.add_view>   
104 [0x68]: line: 53 pushl 0   
105 [0x69]:          new_class @0 // std#__srt_global   
106 [0x6a]:          dup    
107 [0x6b]:          dup    
108 [0x6c]:          istore 18   
110 [0x6e]:          call @3704 // <ui.support#text_view.text_view>   
111 [0x6f]:          istore 30   
113 [0x71]:          call @3756 // <ui.support#view.set_width>   
114 [0x72]:          istore 4294967294   
116 [0x74]:          call @3762 // <ui.support#view.set_height>   
117 [0x75]:          istore 2   
119 [0x77]:          call @3770 // <ui.support#view.set_gravity>   
120 [0x78]:          istore 12   
122 [0x7a]:          call @3765 // <ui.support#view.to_start_of>   
123 [0x7b]:          istore 12   
125 [0x7d]:          call @3772 // <ui.support#view.below>   
126 [0x7e]:          istore 20   
128 [0x80]:          call @3775 // <ui.support#view.set_margin_top>   
129 [0x81]:          call @3724 // <ui.support#fragment.add_view>   
130 [0x82]: line: 61 pushl 0   
131 [0x83]:          new_class @0 // std#__srt_global   
132 [0x84]:          dup    
133 [0x85]:          dup    
134 [0x86]:          istore 19   
136 [0x88]:          call @3704 // <ui.support#text_view.text_view>   
137 [0x89]:          istore 30   
139 [0x8b]:          call @3756 // <ui.support#view.set_width>   
140 [0x8c]:          istore 4294967294   
142 [0x8e]:          call @3762 // <ui.support#view.set_height>   
143 [0x8f]:          istore 2   
145 [0x91]:          call @3770 // <ui.support#view.set_gravity>   
146 [0x92]:          istore 12   
148 [0x94]:          call @3765 // <ui.support#view.to_start_of>   
149 [0x95]:          istore 18   
151 [0x97]:          call @3772 // <ui.support#view.below>   
152 [0x98]:          istore 2   
154 [0x9a]:          call @3775 // <ui.support#view.set_margin_top>   
155 [0x9b]:          call @3724 // <ui.support#fragment.add_view>   
156 [0x9c]: line: 69 pushl 0   
157 [0x9d]:          new_class @0 // std#__srt_global   
158 [0x9e]:          dup    
159 [0x9f]:          dup    
160 [0xa0]:          istore 20   
162 [0xa2]:          call @3704 // <ui.support#text_view.text_view>   
163 [0xa3]:          istore 55   
165 [0xa5]:          call @3756 // <ui.support#view.set_width>   
166 [0xa6]:          istore 4294967294   
168 [0xa8]:          call @3762 // <ui.support#view.set_height>   
169 [0xa9]:          ldc ebx // 1   
170 [0xaa]:          rstore ebx   
171 [0xab]:          call @3770 // <ui.support#view.set_gravity>   
172 [0xac]:          ldc ebx // 1   
173 [0xad]:          rstore ebx   
174 [0xae]:          call @3765 // <ui.support#view.to_start_of>   
175 [0xaf]:          istore 12   
177 [0xb1]:          call @3772 // <ui.support#view.below>   
178 [0xb2]:          istore 18   
180 [0xb4]:          call @3775 // <ui.support#view.set_margin_top>   
181 [0xb5]:          istore 40   
183 [0xb7]:          call @3773 // <ui.support#view.set_margin_left>   
184 [0xb8]:          call @3724 // <ui.support#fragment.add_view>   
185 [0xb9]: line: 78 pushl 0   
186 [0xba]:          new_class @0 // std#__srt_global   
187 [0xbb]:          dup    
188 [0xbc]:          dup    
189 [0xbd]:          istore 21   
191 [0xbf]:          call @3704 // <ui.support#text_view.text_view>   
192 [0xc0]:          istore 4294967294   
194 [0xc2]:          call @3756 // <ui.support#view.set_width>   
195 [0xc3]:          istore 4294967294   
197 [0xc5]:          call @3762 // <ui.support#view.set_height>   
198 [0xc6]:          istore 20   
200 [0xc8]:          call @3766 // <ui.support#view.to_right_of>   
201 [0xc9]:          istore 20   
203 [0xcb]:          call @3769 // <ui.support#view.to_bottom_of>   
204 [0xcc]:          istore 2   
206 [0xce]:          call @3773 // <ui.support#view.set_margin_left>   
207 [0xcf]:          call @3724 // <ui.support#fragment.add_view>   
208 [0xd0]:          ret   


function: ui.layout#home_screen.on_create[3800] params(0) in file: controller//ui//layout//home_screen.sharp:87:8: note:  
		    def on_create() {
		       ^

0 [0x0]: line: 88 pushl 0   
1 [0x1]:          call @3726 // <ui.support#fragment.on_create>   
2 [0x2]: line: 90 pushl 0   
3 [0x3]:          istore 2   
5 [0x5]:          call @3725 // <ui.support#fragment.find_view_by_id>   
6 [0x6]:          popobj2    
7 [0x7]:          movi #112, cmt   
9 [0x9]:          cast cmt   
10 [0xa]:          smovr_3 fp+1   
11 [0xb]: line: 91 pushl 0   
12 [0xc]:          istore 20   
14 [0xe]:          call @3725 // <ui.support#fragment.find_view_by_id>   
15 [0xf]:          popobj2    
16 [0x10]:          movi #112, cmt   
18 [0x12]:          cast cmt   
19 [0x13]:          smovr_3 fp+2   
20 [0x14]: line: 92 pushl 0   
21 [0x15]:          istore 21   
23 [0x17]:          call @3725 // <ui.support#fragment.find_view_by_id>   
24 [0x18]:          popobj2    
25 [0x19]:          movi #112, cmt   
27 [0x1b]:          cast cmt   
28 [0x1c]:          smovr_3 fp+3   
29 [0x1d]: line: 93 pushl 0   
30 [0x1e]:          istore 18   
32 [0x20]:          call @3725 // <ui.support#fragment.find_view_by_id>   
33 [0x21]:          popobj2    
34 [0x22]:          movi #112, cmt   
36 [0x24]:          cast cmt   
37 [0x25]:          smovr_3 fp+4   
38 [0x26]: line: 94 pushl 0   
39 [0x27]:          istore 19   
41 [0x29]:          call @3725 // <ui.support#fragment.find_view_by_id>   
42 [0x2a]:          popobj2    
43 [0x2b]:          movi #112, cmt   
45 [0x2d]:          cast cmt   
46 [0x2e]:          smovr_3 fp+5   
47 [0x2f]: line: 95 pushl 0   
48 [0x30]:          istore 4   
50 [0x32]:          call @3725 // <ui.support#fragment.find_view_by_id>   
51 [0x33]:          popobj2    
52 [0x34]:          movi #118, cmt   
54 [0x36]:          cast cmt   
55 [0x37]:          smovr_3 fp+6   
56 [0x38]: line: 96 pushl 0   
57 [0x39]:          istore 12   
59 [0x3b]:          call @3725 // <ui.support#fragment.find_view_by_id>   
60 [0x3c]:          popobj2    
61 [0x3d]:          movi #118, cmt   
63 [0x3f]:          cast cmt   
64 [0x40]:          smovr_3 fp+7   
65 [0x41]: line: 98 pushl 4   
66 [0x42]:          new_class @0 // std#__srt_global   
67 [0x43]:          ret   
68 [0x44]:          dup    
69 [0x45]:          newstr @86 // ALT   
70 [0x46]:          call @1959 // <std#string.string>   
71 [0x47]:          call @4009 // <ui.support#text_view.set_text>   
72 [0x48]: line: 99 pushl 5   
73 [0x49]:          new_class @0 // std#__srt_global   
74 [0x4a]:          ret   
75 [0x4b]:          dup    
76 [0x4c]:          newstr @87 // 999M   
77 [0x4d]:          call @1959 // <std#string.string>   
78 [0x4e]:          call @4009 // <ui.support#text_view.set_text>   
79 [0x4f]: line: 100 pushl 2   
80 [0x50]:           new_class @0 // std#__srt_global   
81 [0x51]:           ret   
82 [0x52]:           dup    
83 [0x53]:           newstr @88 // 9   
84 [0x54]:           call @1959 // <std#string.string>   
85 [0x55]:           call @4009 // <ui.support#text_view.set_text>   
86 [0x56]: line: 101 pushl 3   
87 [0x57]:           new_class @0 // std#__srt_global   
88 [0x58]:           ret   
89 [0x59]:           dup    
90 [0x5a]:           newstr @89 // Kph   
91 [0x5b]:           call @1959 // <std#string.string>   
92 [0x5c]:           call @4009 // <ui.support#text_view.set_text>   
93 [0x5d]: line: 102 pushl 2   
94 [0x5e]:           istore 3   
96 [0x60]:           call @4010 // <ui.support#text_view.set_text_size>   
97 [0x61]: line: 104 call @2026 // <std.io.task#task.builder>   
98 [0x62]:           movg @135 // @ui.layout#home_screen   
99 [0x63]:           movn #2   
101 [0x65]:           pushobj   
102 [0x66]:           call @2045 // <std.io.task#job_builder.with_name>   
103 [0x67]:           istore 250   
105 [0x69]:           movg @55 // @std#time_unit   
106 [0x6a]:           movn #1   
108 [0x6c]:           pushobj   
109 [0x6d]:           call @2044 // <std.io.task#job_builder.recurring>   
110 [0x6e]:           movi #3, ebx   
112 [0x70]:           newobj_arry ebx   
113 [0x71]:           pushl 2   
114 [0x72]:           movsl #-1   
115 [0x73]:           movn #0   
117 [0x75]:           popobj   
118 [0x76]:           pushl 5   
119 [0x77]:           movsl #-1   
120 [0x78]:           movn #1   
122 [0x7a]:           popobj   
123 [0x7b]:           pushl 7   
124 [0x7c]:           movsl #-1   
125 [0x7d]:           movn #2   
127 [0x7f]:           popobj   
128 [0x80]:           call @2046 // <std.io.task#job_builder.with_args>   
129 [0x81]:           istore 4108   
131 [0x83]:           call @2050 // <std.io.task#job_builder.operator=>   
132 [0x84]:           pop   
133 [0x85]: line: 144 call @2026 // <std.io.task#task.builder>   
134 [0x86]:           movg @135 // @ui.layout#home_screen   
135 [0x87]:           movn #0   
137 [0x89]:           pushobj   
138 [0x8a]:           call @2045 // <std.io.task#job_builder.with_name>   
139 [0x8b]:           istore 1000   
141 [0x8d]:           movg @55 // @std#time_unit   
142 [0x8e]:           movn #1   
144 [0x90]:           pushobj   
145 [0x91]:           call @2044 // <std.io.task#job_builder.recurring>   
146 [0x92]:           movi #1, ebx   
148 [0x94]:           newobj_arry ebx   
149 [0x95]:           pushl 6   
150 [0x96]:           movsl #-1   
151 [0x97]:           movn #0   
153 [0x99]:           popobj   
154 [0x9a]:           call @2046 // <std.io.task#job_builder.with_args>   
155 [0x9b]:           istore 4109   
157 [0x9d]:           call @2050 // <std.io.task#job_builder.operator=>   
158 [0x9e]:           pop   
159 [0x9f]: line: 173 call @2026 // <std.io.task#task.builder>   
160 [0xa0]:           movg @135 // @ui.layout#home_screen   
161 [0xa1]:           movn #1   
163 [0xa3]:           pushobj   
164 [0xa4]:           call @2045 // <std.io.task#job_builder.with_name>   
165 [0xa5]:           istore 1000   
167 [0xa7]:           movg @55 // @std#time_unit   
168 [0xa8]:           movn #1   
170 [0xaa]:           pushobj   
171 [0xab]:           call @2044 // <std.io.task#job_builder.recurring>   
172 [0xac]:           movi #1, ebx   
174 [0xae]:           newobj_arry ebx   
175 [0xaf]:           pushl 1   
176 [0xb0]:           movsl #-1   
177 [0xb1]:           movn #0   
179 [0xb3]:           popobj   
180 [0xb4]:           call @2046 // <std.io.task#job_builder.with_args>   
181 [0xb5]:           istore 4110   
183 [0xb7]:           call @2050 // <std.io.task#job_builder.operator=>   
184 [0xb8]:           pop   
185 [0xb9]:           ret   


function: ui.layout#home_screen.on_destroy[3801] params(0) in file: controller//ui//layout//home_screen.sharp:202:8: note:  
		    def on_destroy() {
		       ^

0 [0x0]: line: 203 movg @135 // @ui.layout#home_screen   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           call @2027 // <std.io.task#task.cancel_all_jobs_by_name>   
5 [0x5]: line: 204 movg @135 // @ui.layout#home_screen   
6 [0x6]:           movn #1   
8 [0x8]:           pushobj   
9 [0x9]:           call @2027 // <std.io.task#task.cancel_all_jobs_by_name>   
10 [0xa]: line: 205 movg @135 // @ui.layout#home_screen   
11 [0xb]:           movn #2   
13 [0xd]:           pushobj   
14 [0xe]:           call @2027 // <std.io.task#task.cancel_all_jobs_by_name>   
15 [0xf]: line: 206 pushl 0   
16 [0x10]:           call @3728 // <ui.support#fragment.on_destroy>   
17 [0x11]:           ret   


constructor: ui.layout#home_screen.home_screen[3802] params(0) in file: controller//ui//layout//home_screen.sharp:12:6: note:  
		class home_screen base fragment {
		     ^

0 [0x0]:         pushl 0   
1 [0x1]:         call @3732 // <ui.support#fragment.fragment>   
2 [0x2]:         ret   


function: main#__srt_global.setup_conn_tracker[3803] params(0) in file: controller//connection_tracker.sharp:14:4: note:  
		def setup_conn_tracker() {
		   ^

0 [0x0]: line: 15 istore 26   
2 [0x2]:          ldc ebx // 1   
3 [0x3]:          rstore ebx   
4 [0x4]:          invoke_delegate 3599 { static=1, args=2 }   
6 [0x6]: line: 16 istore 26   
8 [0x8]:          ldc ebx // 0   
9 [0x9]:          rstore ebx   
10 [0xa]:          invoke_delegate 3600 { static=1, args=2 }   
12 [0xc]: line: 18 call @2026 // <std.io.task#task.builder>   
13 [0xd]:          istore 1000   
15 [0xf]:          movg @55 // @std#time_unit   
16 [0x10]:          movn #1   
18 [0x12]:          pushobj   
19 [0x13]:          call @2044 // <std.io.task#job_builder.recurring>   
20 [0x14]:          istore 4111   
22 [0x16]:          call @2049 // <std.io.task#job_builder.operator=>   
23 [0x17]:          pop   
24 [0x18]: line: 30 call @2026 // <std.io.task#task.builder>   
25 [0x19]:          call @2048 // <std.io.task#job_builder.long_term>   
26 [0x1a]:          istore 3000   
28 [0x1c]:          call @2043 // <std.io.task#job_builder.schedule>   
29 [0x1d]:          istore 250   
31 [0x1f]:          movg @55 // @std#time_unit   
32 [0x20]:          movn #1   
34 [0x22]:          pushobj   
35 [0x23]:          call @2044 // <std.io.task#job_builder.recurring>   
36 [0x24]:          istore 4112   
38 [0x26]:          call @2049 // <std.io.task#job_builder.operator=>   
39 [0x27]:          pop   
40 [0x28]:          ret   


constructor: std#hashtable<std.io#thread,std.io.task#job_controller>.hashtable[3804] params(1) in file: /usr/include/sharp//hashtable.sharp:10:21: note:  
		    public hashtable(initialCapacity: var) {
		                    ^

0 [0x0]:         ldc ebx // 0.75   
1 [0x1]:         movl 0   
2 [0x2]:         movn #1   
4 [0x4]:         movi #0, adx   
6 [0x6]:         rmov adx, ebx   
7 [0x7]:         movi #96, ebx   
9 [0x9]:         movl 0   
10 [0xa]:         movn #2   
12 [0xc]:         movi #0, adx   
14 [0xe]:         rmov adx, ebx   
15 [0xf]:         pushl 0   
16 [0x10]: line: 11 loadl ebx, fp+1   
17 [0x11]:          new_classarray ebx  // std.io.task#entry<std.io#thread,std.io.task#job_controller>[]   
19 [0x13]:          movl 0   
20 [0x14]:          movn #0   
22 [0x16]:          popobj   
23 [0x17]: line: 12 movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          sizeof ebx   
27 [0x1b]:          rstore ebx   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          movi #0, adx   
33 [0x21]:          iaload ebx, adx   
34 [0x22]:          loadval ecx   
35 [0x23]:          mul ecx, ebx -> ebx   
36 [0x24]:          movl 0   
37 [0x25]:          movn #2   
39 [0x27]:          movi #0, adx   
41 [0x29]:          rmov adx, ebx   
42 [0x2a]:          ret   


constructor: std#hashtable<std.io#thread,std.io.task#job_controller>.hashtable[3805] params(0) in file: /usr/include/sharp//hashtable.sharp:15:21: note:  
		    public hashtable() {
		                    ^

0 [0x0]:         ldc ebx // 0.75   
1 [0x1]:         movl 0   
2 [0x2]:         movn #1   
4 [0x4]:         movi #0, adx   
6 [0x6]:         rmov adx, ebx   
7 [0x7]:         movi #96, ebx   
9 [0x9]:         movl 0   
10 [0xa]:         movn #2   
12 [0xc]:         movi #0, adx   
14 [0xe]:         rmov adx, ebx   
15 [0xf]:         pushl 0   
16 [0x10]: line: 16 movi #128, ebx   
18 [0x12]:          new_classarray ebx  // std.io.task#entry<std.io#thread,std.io.task#job_controller>[]   
20 [0x14]:          movl 0   
21 [0x15]:          movn #0   
23 [0x17]:          popobj   
24 [0x18]:          ret   


function: std#hashtable<std.io#thread,std.io.task#job_controller>.set_threshold[3806] params(1) in file: /usr/include/sharp//hashtable.sharp:19:8: note:  
		    def set_threshold(threshold: var) {
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 21 ipushl #1   
3 [0x3]:          movl 0   
4 [0x4]:          movn #1   
6 [0x6]:          loadval ebx   
7 [0x7]:          movi #0, adx   
9 [0x9]:          rmov adx, ebx   
10 [0xa]: line: 22 movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          sizeof ebx   
14 [0xe]:          rstore ebx   
15 [0xf]:          loadl ebx, fp+1   
16 [0x10]:          loadval ecx   
17 [0x11]:          mul ecx, ebx -> ebx   
18 [0x12]:          movl 0   
19 [0x13]:          movn #2   
21 [0x15]:          movi #0, adx   
23 [0x17]:          rmov adx, ebx   
24 [0x18]:          movl 0   
25 [0x19]:          _ulck   
26 [0x1a]:          ret   


function: std#hashtable<std.io#thread,std.io.task#job_controller>.hash[3807] params(1) in file: /usr/include/sharp//hashtable.sharp:26:16: note:  
		    private def hash(key: k) : var {
		               ^

0 [0x0]: line: 27 pushl 1   
1 [0x1]:          call @2185 // <std.io#thread.hash>   
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          sizeof ebx   
6 [0x6]:          rstore ebx   
7 [0x7]:          call @317 // <std#integer<_int64>.operator%>   
8 [0x8]:          loadval ebx   
9 [0x9]:          return_val ebx   
10 [0xa]:          ret   


function: std#hashtable<std.io#thread,std.io.task#job_controller>.resize[3808] params(0) in file: /usr/include/sharp//hashtable.sharp:30:16: note:  
		    private def resize() {
		               ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          smovr_3 fp+1   
4 [0x4]: line: 32 movl 1   
5 [0x5]:          sizeof ebx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          sizeof ebx   
9 [0x9]:          rstore ebx   
10 [0xa]:          movi #1, ebx   
12 [0xc]:          loadval ecx   
13 [0xd]:          shr ecx, ebx -> ebx   
14 [0xe]:          loadval ecx   
15 [0xf]:          add ecx, ebx -> ebx   
16 [0x10]:          new_classarray ebx  // std.io.task#entry<std.io#thread,std.io.task#job_controller>[]   
18 [0x12]:          movl 0   
19 [0x13]:          movn #0   
21 [0x15]:          popobj   
22 [0x16]: line: 33 movl 0   
23 [0x17]:          movn #0   
25 [0x19]:          sizeof ebx   
26 [0x1a]:          rstore ebx   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          movi #0, adx   
32 [0x20]:          iaload ebx, adx   
33 [0x21]:          loadval ecx   
34 [0x22]:          mul ecx, ebx -> ebx   
35 [0x23]:          movl 0   
36 [0x24]:          movn #2   
38 [0x26]:          movi #0, adx   
40 [0x28]:          rmov adx, ebx   
41 [0x29]: line: 34 istorel -1, fp+3   
43 [0x2b]:          pushl 1   
44 [0x2c]:          popl 4   
45 [0x2d]:          iaddl 1, fp@3   
47 [0x2f]:          movl 4   
48 [0x30]:          sizeof ecx   
49 [0x31]:          loadl ebx, fp+3   
50 [0x32]:          lt ebx, ecx   
51 [0x33]:          jne 100   
52 [0x34]:          movnd ebx   
53 [0x35]:          pushobj   
54 [0x36]:          popl 2   
55 [0x37]: line: 36 movl 2   
56 [0x38]:          checknull   
57 [0x39]:          not ebx, ebx   
58 [0x3a]:          movr cmt, ebx   
59 [0x3b]:          jne 99   
60 [0x3c]: line: 38 movl 2   
61 [0x3d]:          movn #2   
63 [0x3f]:          smovr_3 fp+5   
64 [0x40]: line: 39 pushl 0   
65 [0x41]:          movl 2   
66 [0x42]:          movn #0   
68 [0x44]:          pushobj   
69 [0x45]:          call @3807 // <std#hashtable<std.io#thread,std.io.task#job_controller>.hash>   
70 [0x46]:          ipopl 6   
71 [0x47]: line: 40 movl 0   
72 [0x48]:          movn #0   
74 [0x4a]:          pushobj   
75 [0x4b]:          loadl ebx, fp+6   
76 [0x4c]:          popobj2    
77 [0x4d]:          movr adx, ebx   
78 [0x4e]:          chklen adx   
79 [0x4f]:          movnd adx   
80 [0x50]:          pushobj   
81 [0x51]:          movl 2   
82 [0x52]:          movn #2   
84 [0x54]:          popobj   
85 [0x55]: line: 41 pushl 2   
86 [0x56]:          movl 0   
87 [0x57]:          movn #0   
89 [0x59]:          pushobj   
90 [0x5a]:          loadl ebx, fp+6   
91 [0x5b]:          popobj2    
92 [0x5c]:          movr adx, ebx   
93 [0x5d]:          chklen adx   
94 [0x5e]:          movnd adx   
95 [0x5f]:          popobj   
96 [0x60]: line: 42 movl 5   
97 [0x61]:          smovr_3 fp+2   
98 [0x62]:          jmp @55   
99 [0x63]:          jmp @45   
100 [0x64]: line: 46 pushnull    
101 [0x65]:          popobj2    
102 [0x66]:          smovr_3 fp+1   
103 [0x67]:          ret   


function: std#hashtable<std.io#thread,std.io.task#job_controller>.at[3809] params(1) in file: /usr/include/sharp//hashtable.sharp:49:15: note:  
		    public def at(key: k) : v {
		              ^

0 [0x0]: line: 50 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 51 pushl 0   
3 [0x3]:          pushl 1   
4 [0x4]:          call @3807 // <std#hashtable<std.io#thread,std.io.task#job_controller>.hash>   
5 [0x5]:          ipopl 2   
6 [0x6]: line: 52 istorel -1, fp+3   
8 [0x8]: line: 53 movl 4   
9 [0x9]:          del   
10 [0xa]: line: 55 movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          pushobj   
14 [0xe]:          loadl ebx, fp+2   
15 [0xf]:          popobj2    
16 [0x10]:          movr adx, ebx   
17 [0x11]:          chklen adx   
18 [0x12]:          movnd adx   
19 [0x13]:          pushobj   
20 [0x14]:          pushnull    
21 [0x15]:          itest ebx   
22 [0x16]:          movr cmt, ebx   
23 [0x17]:          jne 31   
24 [0x18]: line: 56 pushl 4   
25 [0x19]:          movl 0   
26 [0x1a]:          _ulck   
27 [0x1b]:          popobj2    
28 [0x1c]:          returnobj   
29 [0x1d]:          ret   
30 [0x1e]:          jmp @88   
31 [0x1f]: line: 58 movl 0   
32 [0x20]:          movn #0   
34 [0x22]:          pushobj   
35 [0x23]:          loadl ebx, fp+2   
36 [0x24]:          popobj2    
37 [0x25]:          movr adx, ebx   
38 [0x26]:          chklen adx   
39 [0x27]:          movnd adx   
40 [0x28]:          smovr_3 fp+5   
41 [0x29]: line: 59 movl 5   
42 [0x2a]:          checknull   
43 [0x2b]:          not ebx, ebx   
44 [0x2c]:          skne ebx // pc = 60   
45 [0x2d]:          movl 5   
46 [0x2e]:          movn #0   
48 [0x30]:          pushobj   
49 [0x31]:          pushl 1   
50 [0x32]:          itest ebx   
51 [0x33]:          not ebx, ebx   
52 [0x34]:          skne ebx // pc = 60   
53 [0x35]:          movl 5   
54 [0x36]:          movn #2   
56 [0x38]:          pushobj   
57 [0x39]:          pushnull    
58 [0x3a]:          itest ebx   
59 [0x3b]:          not ebx, ebx   
60 [0x3c]:          movr cmt, ebx   
61 [0x3d]:          jne 67   
62 [0x3e]: line: 61 movl 5   
63 [0x3f]:          movn #2   
65 [0x41]:          smovr_3 fp+5   
66 [0x42]:          jmp @41   
67 [0x43]: line: 63 movl 5   
68 [0x44]:          checknull   
69 [0x45]:          movr cmt, ebx   
70 [0x46]:          jne 78   
71 [0x47]: line: 64 pushl 4   
72 [0x48]:          movl 0   
73 [0x49]:          _ulck   
74 [0x4a]:          popobj2    
75 [0x4b]:          returnobj   
76 [0x4c]:          ret   
77 [0x4d]:          jmp @87   
78 [0x4e]: line: 66 movl 5   
79 [0x4f]:          movn #1   
81 [0x51]:          pushobj   
82 [0x52]:          movl 0   
83 [0x53]:          _ulck   
84 [0x54]:          popobj2    
85 [0x55]:          returnobj   
86 [0x56]:          ret   
87 [0x57]:          nop   
88 [0x58]:          nop   
89 [0x59]:          movl 0   
90 [0x5a]:          _ulck   


function: std#hashtable<std.io#thread,std.io.task#job_controller>.put[3810] params(2) in file: /usr/include/sharp//hashtable.sharp:72:15: note:  
		    public def put(key: k, value: v) : var {
		              ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 74 pushl 0   
3 [0x3]:          pushl 1   
4 [0x4]:          call @3807 // <std#hashtable<std.io#thread,std.io.task#job_controller>.hash>   
5 [0x5]:          ipopl 3   
6 [0x6]: line: 75 movl 4   
7 [0x7]:          del   
8 [0x8]: line: 76 movl 0   
9 [0x9]:          movn #0   
11 [0xb]:          pushobj   
12 [0xc]:          loadl ebx, fp+3   
13 [0xd]:          popobj2    
14 [0xe]:          movr adx, ebx   
15 [0xf]:          chklen adx   
16 [0x10]:          movnd adx   
17 [0x11]:          smovr_3 fp+5   
18 [0x12]: line: 78 movl 5   
19 [0x13]:          checknull   
20 [0x14]:          not ebx, ebx   
21 [0x15]:          skne ebx // pc = 29   
22 [0x16]:          movl 5   
23 [0x17]:          movn #0   
25 [0x19]:          pushobj   
26 [0x1a]:          pushl 1   
27 [0x1b]:          itest ebx   
28 [0x1c]:          not ebx, ebx   
29 [0x1d]:          movr cmt, ebx   
30 [0x1e]:          jne 38   
31 [0x1f]: line: 79 movl 5   
32 [0x20]:          smovr_3 fp+4   
33 [0x21]: line: 80 movl 5   
34 [0x22]:          movn #2   
36 [0x24]:          smovr_3 fp+5   
37 [0x25]:          jmp @18   
38 [0x26]: line: 83 movl 5   
39 [0x27]:          checknull   
40 [0x28]:          movr cmt, ebx   
41 [0x29]:          jne 89   
42 [0x2a]: line: 84 movl 0   
43 [0x2b]:          movn #3   
45 [0x2d]:          movi #0, adx   
47 [0x2f]:          iaload ebx, adx   
48 [0x30]:          movr egx, ebx   
49 [0x31]:          inc ebx   
50 [0x32]:          movi #0, adx   
52 [0x34]:          rmov adx, ebx   
53 [0x35]: line: 85 new_class @0 // std#__srt_global   
54 [0x36]:          ? (164)   
55 [0x37]:          dup    
56 [0x38]:          pushl 1   
57 [0x39]:          pushl 2   
58 [0x3a]:          call @4071 // <std.io.task#entry<std.io#thread,std.io.task#job_controller>.entry>   
59 [0x3b]:          popobj2    
60 [0x3c]:          smovr_3 fp+5   
61 [0x3d]: line: 86 movl 4   
62 [0x3e]:          checknull   
63 [0x3f]:          movr cmt, ebx   
64 [0x40]:          jne 77   
65 [0x41]: line: 87 pushl 5   
66 [0x42]:          movl 0   
67 [0x43]:          movn #0   
69 [0x45]:          pushobj   
70 [0x46]:          loadl ebx, fp+3   
71 [0x47]:          popobj2    
72 [0x48]:          movr adx, ebx   
73 [0x49]:          chklen adx   
74 [0x4a]:          movnd adx   
75 [0x4b]:          popobj   
76 [0x4c]:          jmp @82   
77 [0x4d]: line: 89 pushl 5   
78 [0x4e]:          movl 4   
79 [0x4f]:          movn #2   
81 [0x51]:          popobj   
82 [0x52]:          nop   
83 [0x53]: line: 92 istorel 1, fp+0   
85 [0x55]:          movl 0   
86 [0x56]:          _ulck   
87 [0x57]:          ret   
88 [0x58]:          jmp @99   
89 [0x59]: line: 94 pushl 2   
90 [0x5a]:          movl 5   
91 [0x5b]:          movn #1   
93 [0x5d]:          popobj   
94 [0x5e]: line: 95 istorel 0, fp+0   
96 [0x60]:          movl 0   
97 [0x61]:          _ulck   
98 [0x62]:          ret   
99 [0x63]:          nop   
100 [0x64]:          movl 0   
101 [0x65]:          _ulck   


function: std#hashtable<std.io#thread,std.io.task#job_controller>.remove[3811] params(1) in file: /usr/include/sharp//hashtable.sharp:100:15: note:  
		    public def remove(key: k) : var {
		              ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 102 pushl 0   
3 [0x3]:           pushl 1   
4 [0x4]:           call @3807 // <std#hashtable<std.io#thread,std.io.task#job_controller>.hash>   
5 [0x5]:           ipopl 2   
6 [0x6]: line: 103 movl 0   
7 [0x7]:           movn #0   
9 [0x9]:           pushobj   
10 [0xa]:           loadl ebx, fp+2   
11 [0xb]:           popobj2    
12 [0xc]:           movr adx, ebx   
13 [0xd]:           chklen adx   
14 [0xe]:           movnd adx   
15 [0xf]:           pushobj   
16 [0x10]:           pushnull    
17 [0x11]:           itest ebx   
18 [0x12]:           movr cmt, ebx   
19 [0x13]:           jne 100   
20 [0x14]: line: 104 movl 3   
21 [0x15]:           del   
22 [0x16]: line: 105 movl 0   
23 [0x17]:           movn #0   
25 [0x19]:           pushobj   
26 [0x1a]:           loadl ebx, fp+2   
27 [0x1b]:           popobj2    
28 [0x1c]:           movr adx, ebx   
29 [0x1d]:           chklen adx   
30 [0x1e]:           movnd adx   
31 [0x1f]:           smovr_3 fp+4   
32 [0x20]: line: 106 movl 4   
33 [0x21]:           checknull   
34 [0x22]:           not ebx, ebx   
35 [0x23]:           skne ebx // pc = 43   
36 [0x24]:           movl 4   
37 [0x25]:           movn #0   
39 [0x27]:           pushobj   
40 [0x28]:           pushl 1   
41 [0x29]:           itest ebx   
42 [0x2a]:           not ebx, ebx   
43 [0x2b]:           movr cmt, ebx   
44 [0x2c]:           jne 52   
45 [0x2d]: line: 107 movl 4   
46 [0x2e]:           smovr_3 fp+3   
47 [0x2f]: line: 108 movl 4   
48 [0x30]:           movn #2   
50 [0x32]:           smovr_3 fp+4   
51 [0x33]:           jmp @32   
52 [0x34]: line: 111 movl 4   
53 [0x35]:           movn #0   
55 [0x37]:           pushobj   
56 [0x38]:           pushl 1   
57 [0x39]:           call @2202 // <std.io#thread.operator==>   
58 [0x3a]:           loadval ebx   
59 [0x3b]:           movr cmt, ebx   
60 [0x3c]:           jne 99   
61 [0x3d]: line: 112 movl 3   
62 [0x3e]:           checknull   
63 [0x3f]:           movr cmt, ebx   
64 [0x40]:           jne 81   
65 [0x41]: line: 113 movl 4   
66 [0x42]:           movn #2   
68 [0x44]:           smovr_3 fp+5   
69 [0x45]: line: 114 pushl 5   
70 [0x46]:           movl 0   
71 [0x47]:           movn #0   
73 [0x49]:           pushobj   
74 [0x4a]:           loadl ebx, fp+2   
75 [0x4b]:           popobj2    
76 [0x4c]:           movr adx, ebx   
77 [0x4d]:           chklen adx   
78 [0x4e]:           movnd adx   
79 [0x4f]:           popobj   
80 [0x50]:           jmp @93   
81 [0x51]: line: 116 movl 4   
82 [0x52]:           movn #2   
84 [0x54]:           smovr_3 fp+6   
85 [0x55]: line: 117 pushl 6   
86 [0x56]:           movl 3   
87 [0x57]:           movn #2   
89 [0x59]:           popobj   
90 [0x5a]: line: 118 pushnull    
91 [0x5b]:           popobj2    
92 [0x5c]:           smovr_3 fp+4   
93 [0x5d]:           nop   
94 [0x5e]: line: 121 istorel 1, fp+0   
96 [0x60]:           movl 0   
97 [0x61]:           _ulck   
98 [0x62]:           ret   
99 [0x63]:           nop   
100 [0x64]:           nop   
101 [0x65]: line: 125 istorel 0, fp+0   
103 [0x67]:           movl 0   
104 [0x68]:           _ulck   
105 [0x69]:           ret   
106 [0x6a]:           movl 0   
107 [0x6b]:           _ulck   


constructor: std#hashtable<std#int,std.io#thread>.hashtable[3812] params(1) in file: /usr/include/sharp//hashtable.sharp:10:21: note:  
		    public hashtable(initialCapacity: var) {
		                    ^

0 [0x0]:         ldc ebx // 0.75   
1 [0x1]:         movl 0   
2 [0x2]:         movn #1   
4 [0x4]:         movi #0, adx   
6 [0x6]:         rmov adx, ebx   
7 [0x7]:         movi #96, ebx   
9 [0x9]:         movl 0   
10 [0xa]:         movn #2   
12 [0xc]:         movi #0, adx   
14 [0xe]:         rmov adx, ebx   
15 [0xf]:         pushl 0   
16 [0x10]: line: 11 loadl ebx, fp+1   
17 [0x11]:          new_classarray ebx  // std.io#entry<std#int,std.io#thread>[]   
19 [0x13]:          movl 0   
20 [0x14]:          movn #0   
22 [0x16]:          popobj   
23 [0x17]: line: 12 movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          sizeof ebx   
27 [0x1b]:          rstore ebx   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          movi #0, adx   
33 [0x21]:          iaload ebx, adx   
34 [0x22]:          loadval ecx   
35 [0x23]:          mul ecx, ebx -> ebx   
36 [0x24]:          movl 0   
37 [0x25]:          movn #2   
39 [0x27]:          movi #0, adx   
41 [0x29]:          rmov adx, ebx   
42 [0x2a]:          ret   


constructor: std#hashtable<std#int,std.io#thread>.hashtable[3813] params(0) in file: /usr/include/sharp//hashtable.sharp:15:21: note:  
		    public hashtable() {
		                    ^

0 [0x0]:         ldc ebx // 0.75   
1 [0x1]:         movl 0   
2 [0x2]:         movn #1   
4 [0x4]:         movi #0, adx   
6 [0x6]:         rmov adx, ebx   
7 [0x7]:         movi #96, ebx   
9 [0x9]:         movl 0   
10 [0xa]:         movn #2   
12 [0xc]:         movi #0, adx   
14 [0xe]:         rmov adx, ebx   
15 [0xf]:         pushl 0   
16 [0x10]: line: 16 movi #128, ebx   
18 [0x12]:          new_classarray ebx  // std.io#entry<std#int,std.io#thread>[]   
20 [0x14]:          movl 0   
21 [0x15]:          movn #0   
23 [0x17]:          popobj   
24 [0x18]:          ret   


function: std#hashtable<std#int,std.io#thread>.set_threshold[3814] params(1) in file: /usr/include/sharp//hashtable.sharp:19:8: note:  
		    def set_threshold(threshold: var) {
		       ^

0 [0x0]: line: 20 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 21 ipushl #1   
3 [0x3]:          movl 0   
4 [0x4]:          movn #1   
6 [0x6]:          loadval ebx   
7 [0x7]:          movi #0, adx   
9 [0x9]:          rmov adx, ebx   
10 [0xa]: line: 22 movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          sizeof ebx   
14 [0xe]:          rstore ebx   
15 [0xf]:          loadl ebx, fp+1   
16 [0x10]:          loadval ecx   
17 [0x11]:          mul ecx, ebx -> ebx   
18 [0x12]:          movl 0   
19 [0x13]:          movn #2   
21 [0x15]:          movi #0, adx   
23 [0x17]:          rmov adx, ebx   
24 [0x18]:          movl 0   
25 [0x19]:          _ulck   
26 [0x1a]:          ret   


function: std#hashtable<std#int,std.io#thread>.hash[3815] params(1) in file: /usr/include/sharp//hashtable.sharp:26:16: note:  
		    private def hash(key: k) : var {
		               ^

0 [0x0]: line: 27 pushl 1   
1 [0x1]:          call @654 // <std#integer<_int32>.hash>   
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          sizeof ebx   
6 [0x6]:          rstore ebx   
7 [0x7]:          call @317 // <std#integer<_int64>.operator%>   
8 [0x8]:          loadval ebx   
9 [0x9]:          return_val ebx   
10 [0xa]:          ret   


function: std#hashtable<std#int,std.io#thread>.resize[3816] params(0) in file: /usr/include/sharp//hashtable.sharp:30:16: note:  
		    private def resize() {
		               ^

0 [0x0]: line: 31 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          smovr_3 fp+1   
4 [0x4]: line: 32 movl 1   
5 [0x5]:          sizeof ebx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          sizeof ebx   
9 [0x9]:          rstore ebx   
10 [0xa]:          movi #1, ebx   
12 [0xc]:          loadval ecx   
13 [0xd]:          shr ecx, ebx -> ebx   
14 [0xe]:          loadval ecx   
15 [0xf]:          add ecx, ebx -> ebx   
16 [0x10]:          new_classarray ebx  // std.io#entry<std#int,std.io#thread>[]   
18 [0x12]:          movl 0   
19 [0x13]:          movn #0   
21 [0x15]:          popobj   
22 [0x16]: line: 33 movl 0   
23 [0x17]:          movn #0   
25 [0x19]:          sizeof ebx   
26 [0x1a]:          rstore ebx   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          movi #0, adx   
32 [0x20]:          iaload ebx, adx   
33 [0x21]:          loadval ecx   
34 [0x22]:          mul ecx, ebx -> ebx   
35 [0x23]:          movl 0   
36 [0x24]:          movn #2   
38 [0x26]:          movi #0, adx   
40 [0x28]:          rmov adx, ebx   
41 [0x29]: line: 34 istorel -1, fp+3   
43 [0x2b]:          pushl 1   
44 [0x2c]:          popl 4   
45 [0x2d]:          iaddl 1, fp@3   
47 [0x2f]:          movl 4   
48 [0x30]:          sizeof ecx   
49 [0x31]:          loadl ebx, fp+3   
50 [0x32]:          lt ebx, ecx   
51 [0x33]:          jne 100   
52 [0x34]:          movnd ebx   
53 [0x35]:          pushobj   
54 [0x36]:          popl 2   
55 [0x37]: line: 36 movl 2   
56 [0x38]:          checknull   
57 [0x39]:          not ebx, ebx   
58 [0x3a]:          movr cmt, ebx   
59 [0x3b]:          jne 99   
60 [0x3c]: line: 38 movl 2   
61 [0x3d]:          movn #2   
63 [0x3f]:          smovr_3 fp+5   
64 [0x40]: line: 39 pushl 0   
65 [0x41]:          movl 2   
66 [0x42]:          movn #0   
68 [0x44]:          pushobj   
69 [0x45]:          call @3815 // <std#hashtable<std#int,std.io#thread>.hash>   
70 [0x46]:          ipopl 6   
71 [0x47]: line: 40 movl 0   
72 [0x48]:          movn #0   
74 [0x4a]:          pushobj   
75 [0x4b]:          loadl ebx, fp+6   
76 [0x4c]:          popobj2    
77 [0x4d]:          movr adx, ebx   
78 [0x4e]:          chklen adx   
79 [0x4f]:          movnd adx   
80 [0x50]:          pushobj   
81 [0x51]:          movl 2   
82 [0x52]:          movn #2   
84 [0x54]:          popobj   
85 [0x55]: line: 41 pushl 2   
86 [0x56]:          movl 0   
87 [0x57]:          movn #0   
89 [0x59]:          pushobj   
90 [0x5a]:          loadl ebx, fp+6   
91 [0x5b]:          popobj2    
92 [0x5c]:          movr adx, ebx   
93 [0x5d]:          chklen adx   
94 [0x5e]:          movnd adx   
95 [0x5f]:          popobj   
96 [0x60]: line: 42 movl 5   
97 [0x61]:          smovr_3 fp+2   
98 [0x62]:          jmp @55   
99 [0x63]:          jmp @45   
100 [0x64]: line: 46 pushnull    
101 [0x65]:          popobj2    
102 [0x66]:          smovr_3 fp+1   
103 [0x67]:          ret   


function: std#hashtable<std#int,std.io#thread>.at[3817] params(1) in file: /usr/include/sharp//hashtable.sharp:49:15: note:  
		    public def at(key: k) : v {
		              ^

0 [0x0]: line: 50 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 51 pushl 0   
3 [0x3]:          pushl 1   
4 [0x4]:          call @3815 // <std#hashtable<std#int,std.io#thread>.hash>   
5 [0x5]:          ipopl 2   
6 [0x6]: line: 52 istorel -1, fp+3   
8 [0x8]: line: 53 movl 4   
9 [0x9]:          del   
10 [0xa]: line: 55 movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          pushobj   
14 [0xe]:          loadl ebx, fp+2   
15 [0xf]:          popobj2    
16 [0x10]:          movr adx, ebx   
17 [0x11]:          chklen adx   
18 [0x12]:          movnd adx   
19 [0x13]:          pushobj   
20 [0x14]:          pushnull    
21 [0x15]:          itest ebx   
22 [0x16]:          movr cmt, ebx   
23 [0x17]:          jne 31   
24 [0x18]: line: 56 pushl 4   
25 [0x19]:          movl 0   
26 [0x1a]:          _ulck   
27 [0x1b]:          popobj2    
28 [0x1c]:          returnobj   
29 [0x1d]:          ret   
30 [0x1e]:          jmp @88   
31 [0x1f]: line: 58 movl 0   
32 [0x20]:          movn #0   
34 [0x22]:          pushobj   
35 [0x23]:          loadl ebx, fp+2   
36 [0x24]:          popobj2    
37 [0x25]:          movr adx, ebx   
38 [0x26]:          chklen adx   
39 [0x27]:          movnd adx   
40 [0x28]:          smovr_3 fp+5   
41 [0x29]: line: 59 movl 5   
42 [0x2a]:          checknull   
43 [0x2b]:          not ebx, ebx   
44 [0x2c]:          skne ebx // pc = 60   
45 [0x2d]:          movl 5   
46 [0x2e]:          movn #0   
48 [0x30]:          pushobj   
49 [0x31]:          pushl 1   
50 [0x32]:          call @661 // <std#integer<_int32>.operator!=>   
51 [0x33]:          loadval ebx   
52 [0x34]:          skne ebx // pc = 60   
53 [0x35]:          movl 5   
54 [0x36]:          movn #2   
56 [0x38]:          pushobj   
57 [0x39]:          pushnull    
58 [0x3a]:          itest ebx   
59 [0x3b]:          not ebx, ebx   
60 [0x3c]:          movr cmt, ebx   
61 [0x3d]:          jne 67   
62 [0x3e]: line: 61 movl 5   
63 [0x3f]:          movn #2   
65 [0x41]:          smovr_3 fp+5   
66 [0x42]:          jmp @41   
67 [0x43]: line: 63 movl 5   
68 [0x44]:          checknull   
69 [0x45]:          movr cmt, ebx   
70 [0x46]:          jne 78   
71 [0x47]: line: 64 pushl 4   
72 [0x48]:          movl 0   
73 [0x49]:          _ulck   
74 [0x4a]:          popobj2    
75 [0x4b]:          returnobj   
76 [0x4c]:          ret   
77 [0x4d]:          jmp @87   
78 [0x4e]: line: 66 movl 5   
79 [0x4f]:          movn #1   
81 [0x51]:          pushobj   
82 [0x52]:          movl 0   
83 [0x53]:          _ulck   
84 [0x54]:          popobj2    
85 [0x55]:          returnobj   
86 [0x56]:          ret   
87 [0x57]:          nop   
88 [0x58]:          nop   
89 [0x59]:          movl 0   
90 [0x5a]:          _ulck   


function: std#hashtable<std#int,std.io#thread>.put[3818] params(2) in file: /usr/include/sharp//hashtable.sharp:72:15: note:  
		    public def put(key: k, value: v) : var {
		              ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 74 pushl 0   
3 [0x3]:          pushl 1   
4 [0x4]:          call @3815 // <std#hashtable<std#int,std.io#thread>.hash>   
5 [0x5]:          ipopl 3   
6 [0x6]: line: 75 movl 4   
7 [0x7]:          del   
8 [0x8]: line: 76 movl 0   
9 [0x9]:          movn #0   
11 [0xb]:          pushobj   
12 [0xc]:          loadl ebx, fp+3   
13 [0xd]:          popobj2    
14 [0xe]:          movr adx, ebx   
15 [0xf]:          chklen adx   
16 [0x10]:          movnd adx   
17 [0x11]:          smovr_3 fp+5   
18 [0x12]: line: 78 movl 5   
19 [0x13]:          checknull   
20 [0x14]:          not ebx, ebx   
21 [0x15]:          skne ebx // pc = 29   
22 [0x16]:          movl 5   
23 [0x17]:          movn #0   
25 [0x19]:          pushobj   
26 [0x1a]:          pushl 1   
27 [0x1b]:          call @661 // <std#integer<_int32>.operator!=>   
28 [0x1c]:          loadval ebx   
29 [0x1d]:          movr cmt, ebx   
30 [0x1e]:          jne 38   
31 [0x1f]: line: 79 movl 5   
32 [0x20]:          smovr_3 fp+4   
33 [0x21]: line: 80 movl 5   
34 [0x22]:          movn #2   
36 [0x24]:          smovr_3 fp+5   
37 [0x25]:          jmp @18   
38 [0x26]: line: 83 movl 5   
39 [0x27]:          checknull   
40 [0x28]:          movr cmt, ebx   
41 [0x29]:          jne 89   
42 [0x2a]: line: 84 movl 0   
43 [0x2b]:          movn #3   
45 [0x2d]:          movi #0, adx   
47 [0x2f]:          iaload ebx, adx   
48 [0x30]:          movr egx, ebx   
49 [0x31]:          inc ebx   
50 [0x32]:          movi #0, adx   
52 [0x34]:          rmov adx, ebx   
53 [0x35]: line: 85 new_class @0 // std#__srt_global   
54 [0x36]:          ? (165)   
55 [0x37]:          dup    
56 [0x38]:          pushl 1   
57 [0x39]:          pushl 2   
58 [0x3a]:          call @4074 // <std.io#entry<std#int,std.io#thread>.entry>   
59 [0x3b]:          popobj2    
60 [0x3c]:          smovr_3 fp+5   
61 [0x3d]: line: 86 movl 4   
62 [0x3e]:          checknull   
63 [0x3f]:          movr cmt, ebx   
64 [0x40]:          jne 77   
65 [0x41]: line: 87 pushl 5   
66 [0x42]:          movl 0   
67 [0x43]:          movn #0   
69 [0x45]:          pushobj   
70 [0x46]:          loadl ebx, fp+3   
71 [0x47]:          popobj2    
72 [0x48]:          movr adx, ebx   
73 [0x49]:          chklen adx   
74 [0x4a]:          movnd adx   
75 [0x4b]:          popobj   
76 [0x4c]:          jmp @82   
77 [0x4d]: line: 89 pushl 5   
78 [0x4e]:          movl 4   
79 [0x4f]:          movn #2   
81 [0x51]:          popobj   
82 [0x52]:          nop   
83 [0x53]: line: 92 istorel 1, fp+0   
85 [0x55]:          movl 0   
86 [0x56]:          _ulck   
87 [0x57]:          ret   
88 [0x58]:          jmp @99   
89 [0x59]: line: 94 pushl 2   
90 [0x5a]:          movl 5   
91 [0x5b]:          movn #1   
93 [0x5d]:          popobj   
94 [0x5e]: line: 95 istorel 0, fp+0   
96 [0x60]:          movl 0   
97 [0x61]:          _ulck   
98 [0x62]:          ret   
99 [0x63]:          nop   
100 [0x64]:          movl 0   
101 [0x65]:          _ulck   


function: std#hashtable<std#int,std.io#thread>.remove[3819] params(1) in file: /usr/include/sharp//hashtable.sharp:100:15: note:  
		    public def remove(key: k) : var {
		              ^

0 [0x0]: line: 101 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 102 pushl 0   
3 [0x3]:           pushl 1   
4 [0x4]:           call @3815 // <std#hashtable<std#int,std.io#thread>.hash>   
5 [0x5]:           ipopl 2   
6 [0x6]: line: 103 movl 0   
7 [0x7]:           movn #0   
9 [0x9]:           pushobj   
10 [0xa]:           loadl ebx, fp+2   
11 [0xb]:           popobj2    
12 [0xc]:           movr adx, ebx   
13 [0xd]:           chklen adx   
14 [0xe]:           movnd adx   
15 [0xf]:           pushobj   
16 [0x10]:           pushnull    
17 [0x11]:           itest ebx   
18 [0x12]:           movr cmt, ebx   
19 [0x13]:           jne 100   
20 [0x14]: line: 104 movl 3   
21 [0x15]:           del   
22 [0x16]: line: 105 movl 0   
23 [0x17]:           movn #0   
25 [0x19]:           pushobj   
26 [0x1a]:           loadl ebx, fp+2   
27 [0x1b]:           popobj2    
28 [0x1c]:           movr adx, ebx   
29 [0x1d]:           chklen adx   
30 [0x1e]:           movnd adx   
31 [0x1f]:           smovr_3 fp+4   
32 [0x20]: line: 106 movl 4   
33 [0x21]:           checknull   
34 [0x22]:           not ebx, ebx   
35 [0x23]:           skne ebx // pc = 43   
36 [0x24]:           movl 4   
37 [0x25]:           movn #0   
39 [0x27]:           pushobj   
40 [0x28]:           pushl 1   
41 [0x29]:           call @661 // <std#integer<_int32>.operator!=>   
42 [0x2a]:           loadval ebx   
43 [0x2b]:           movr cmt, ebx   
44 [0x2c]:           jne 52   
45 [0x2d]: line: 107 movl 4   
46 [0x2e]:           smovr_3 fp+3   
47 [0x2f]: line: 108 movl 4   
48 [0x30]:           movn #2   
50 [0x32]:           smovr_3 fp+4   
51 [0x33]:           jmp @32   
52 [0x34]: line: 111 movl 4   
53 [0x35]:           movn #0   
55 [0x37]:           pushobj   
56 [0x38]:           pushl 1   
57 [0x39]:           call @662 // <std#integer<_int32>.operator==>   
58 [0x3a]:           loadval ebx   
59 [0x3b]:           movr cmt, ebx   
60 [0x3c]:           jne 99   
61 [0x3d]: line: 112 movl 3   
62 [0x3e]:           checknull   
63 [0x3f]:           movr cmt, ebx   
64 [0x40]:           jne 81   
65 [0x41]: line: 113 movl 4   
66 [0x42]:           movn #2   
68 [0x44]:           smovr_3 fp+5   
69 [0x45]: line: 114 pushl 5   
70 [0x46]:           movl 0   
71 [0x47]:           movn #0   
73 [0x49]:           pushobj   
74 [0x4a]:           loadl ebx, fp+2   
75 [0x4b]:           popobj2    
76 [0x4c]:           movr adx, ebx   
77 [0x4d]:           chklen adx   
78 [0x4e]:           movnd adx   
79 [0x4f]:           popobj   
80 [0x50]:           jmp @93   
81 [0x51]: line: 116 movl 4   
82 [0x52]:           movn #2   
84 [0x54]:           smovr_3 fp+6   
85 [0x55]: line: 117 pushl 6   
86 [0x56]:           movl 3   
87 [0x57]:           movn #2   
89 [0x59]:           popobj   
90 [0x5a]: line: 118 pushnull    
91 [0x5b]:           popobj2    
92 [0x5c]:           smovr_3 fp+4   
93 [0x5d]:           nop   
94 [0x5e]: line: 121 istorel 1, fp+0   
96 [0x60]:           movl 0   
97 [0x61]:           _ulck   
98 [0x62]:           ret   
99 [0x63]:           nop   
100 [0x64]:           nop   
101 [0x65]: line: 125 istorel 0, fp+0   
103 [0x67]:           movl 0   
104 [0x68]:           _ulck   
105 [0x69]:           ret   
106 [0x6a]:           movl 0   
107 [0x6b]:           _ulck   


std#loopable<std#string>.get_elements[3820] params(0) in file: /usr/include/sharp//loopable.sharp:4:8: note:  
		    def get_elements() : t[];
		       ^



constructor: std#loopable<std#string>.loopable[3821] params(0) in file: /usr/include/sharp//loopable.sharp:3:10: note:  
		interface loopable<t> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#list<std#string>.list[3822] params(0) in file: /usr/include/sharp//list.sharp:13:9: note:  
		    list() {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 14 movi #10, ebx   
3 [0x3]:          new_classarray ebx  // std#string[]   
5 [0x5]:          movl 0   
6 [0x6]:          movn #1   
8 [0x8]:          popobj   
9 [0x9]:          ret   


constructor: std#list<std#string>.list[3823] params(1) in file: /usr/include/sharp//list.sharp:17:9: note:  
		    list(starting_capacity: var) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 18 loadl ebx, fp+1   
2 [0x2]:          new_classarray ebx  // std#string[]   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]:          ret   


constructor: std#list<std#string>.list[3824] params(1) in file: /usr/include/sharp//list.sharp:21:9: note:  
		    list(initial_data: t[]) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 22 pushl 0   
2 [0x2]:          pushl 1   
3 [0x3]:          call @3835 // <std#list<std#string>.add_all>   
4 [0x4]:          ret   


function: std#list<std#string>.empty[3825] params(0) in file: /usr/include/sharp//list.sharp:25:8: note:  
		    def empty() := n_elements == 0;
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          return_val cmt   
12 [0xc]:          ret   


function: std#list<std#string>.set_compact[3826] params(1) in file: /usr/include/sharp//list.sharp:27:8: note:  
		    def set_compact(compact_array: var) {
		       ^

0 [0x0]: line: 28 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #2   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]:          ret   


function: std#list<std#string>.get_elements[3827] params(0) in file: /usr/include/sharp//list.sharp:31:8: note:  
		    def get_elements() : t[] {
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          jne 17   
12 [0xc]:          pushnull    
13 [0xd]:          popobj2    
14 [0xe]:          returnobj   
15 [0xf]:          ret   
16 [0x10]:          jmp @34   
17 [0x11]: line: 33 movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          pushobj   
21 [0x15]:          istore 0   
23 [0x17]:          movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          iaload ebx, adx   
29 [0x1d]:          rstore ebx   
30 [0x1e]:          call @2107 // <std.io#__srt_global.copy>   
31 [0x1f]:          popobj2    
32 [0x20]:          returnobj   
33 [0x21]:          ret   
34 [0x22]:          nop   


overload function: std#list<std#string>.operator[[3828] params(1) in file: /usr/include/sharp//list.sharp:36:8: note:  
		    def operator[](index: var): t {
		       ^

0 [0x0]: line: 37 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 38 new_class @0 // std#__srt_global   
19 [0x13]:          shl adx, adx -> adx   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3849 // <std#list<std#string>.out_of_bounds_msg>   
24 [0x18]:          call @3555 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 39 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          returnobj   
37 [0x25]:          ret   


function: std#list<std#string>.at[3829] params(1) in file: /usr/include/sharp//list.sharp:42:8: note:  
		    def at(index: var): t {
		       ^

0 [0x0]: line: 43 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 44 new_class @0 // std#__srt_global   
19 [0x13]:          shl adx, adx -> adx   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3849 // <std#list<std#string>.out_of_bounds_msg>   
24 [0x18]:          call @3555 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 45 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          returnobj   
37 [0x25]:          ret   


function: std#list<std#string>.last[3830] params(0) in file: /usr/include/sharp//list.sharp:48:8: note:  
		    def last(): t {
		       ^

0 [0x0]: line: 49 pushl 0   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movi #1, ebx   
10 [0xa]:          loadval ecx   
11 [0xb]:          sub ecx, ebx -> ebx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @3829 // <std#list<std#string>.at>   
14 [0xe]:          popobj2    
15 [0xf]:          returnobj   
16 [0x10]:          ret   


function: std#list<std#string>.put[3831] params(2) in file: /usr/include/sharp//list.sharp:52:8: note:  
		    def put(index: var, element: t) : t {
		       ^

0 [0x0]: line: 53 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 54 new_class @0 // std#__srt_global   
19 [0x13]:          shl adx, adx -> adx   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3849 // <std#list<std#string>.out_of_bounds_msg>   
24 [0x18]:          call @3555 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 56 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          smovr_3 fp+3   
37 [0x25]: line: 57 pushl 2   
38 [0x26]:          movl 0   
39 [0x27]:          movn #1   
41 [0x29]:          pushobj   
42 [0x2a]:          loadl ebx, fp+1   
43 [0x2b]:          popobj2    
44 [0x2c]:          movr adx, ebx   
45 [0x2d]:          chklen adx   
46 [0x2e]:          movnd adx   
47 [0x2f]:          popobj   
48 [0x30]: line: 58 movl 3   
49 [0x31]:          returnobj   
50 [0x32]:          ret   


function: std#list<std#string>.expand[3832] params(0) in file: /usr/include/sharp//list.sharp:61:16: note:  
		    private def expand() {
		               ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #2   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 24   
8 [0x8]: line: 63 movl 0   
9 [0x9]:          movn #1   
11 [0xb]:          pushobj   
12 [0xc]:          movl 0   
13 [0xd]:          movn #1   
15 [0xf]:          sizeof ebx   
16 [0x10]:          rstore ebx   
17 [0x11]:          movi #128, ebx   
19 [0x13]:          loadval ecx   
20 [0x14]:          add ecx, ebx -> ebx   
21 [0x15]:          rstore ebx   
22 [0x16]:          call @2087 // <std.io#__srt_global.realloc>   
23 [0x17]:          jmp @51   
24 [0x18]: line: 65 movl 0   
25 [0x19]:          movn #1   
27 [0x1b]:          pushobj   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          sizeof ebx   
32 [0x20]:          rstore ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #1   
36 [0x24]:          sizeof ebx   
37 [0x25]:          rstore ebx   
38 [0x26]:          movi #4, ebx   
40 [0x28]:          loadval ecx   
41 [0x29]:          shr ecx, ebx -> ebx   
42 [0x2a]:          loadval ecx   
43 [0x2b]:          add ecx, ebx -> ebx   
44 [0x2c]:          rstore ebx   
45 [0x2d]:          movi #128, ebx   
47 [0x2f]:          loadval ecx   
48 [0x30]:          add ecx, ebx -> ebx   
49 [0x31]:          rstore ebx   
50 [0x32]:          call @2087 // <std.io#__srt_global.realloc>   
51 [0x33]:          nop   
52 [0x34]:          ret   


function: std#list<std#string>.clear[3833] params(0) in file: /usr/include/sharp//list.sharp:68:8: note:  
		    def clear() {
		       ^

0 [0x0]: line: 69 movi #10, ebx   
2 [0x2]:          new_classarray ebx  // std#string[]   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]: line: 70 movi #0, ebx   
10 [0xa]:          movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          movi #0, adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          ret   


function: std#list<std#string>.add_all[3834] params(1) in file: /usr/include/sharp//list.sharp:73:8: note:  
		    def add_all(lst: list<t>) {
		       ^

0 [0x0]: line: 74 movl 1   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          istore 0   
6 [0x6]:          movl 1   
7 [0x7]:          movn #0   
9 [0x9]:          movi #0, adx   
11 [0xb]:          iaload ebx, adx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @2107 // <std.io#__srt_global.copy>   
14 [0xe]:          popobj2    
15 [0xf]:          movi #3, cmt   
17 [0x11]:          cast cmt   
18 [0x12]:          pushobj   
19 [0x13]:          movl 0   
20 [0x14]:          movn #1   
22 [0x16]:          popobj   
23 [0x17]: line: 75 movl 1   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          iaload ebx, adx   
29 [0x1d]:          movl 0   
30 [0x1e]:          movn #0   
32 [0x20]:          movi #0, adx   
34 [0x22]:          rmov adx, ebx   
35 [0x23]:          ret   


function: std#list<std#string>.add_all[3835] params(1) in file: /usr/include/sharp//list.sharp:78:8: note:  
		    def add_all(lst: t[]) {
		       ^

0 [0x0]: line: 79 movl 1   
1 [0x1]:          checknull   
2 [0x2]:          not ebx, ebx   
3 [0x3]:          movr cmt, ebx   
4 [0x4]:          jne 30   
5 [0x5]: line: 80 pushl 1   
6 [0x6]:          istore 0   
8 [0x8]:          movl 1   
9 [0x9]:          sizeof ebx   
10 [0xa]:          rstore ebx   
11 [0xb]:          call @2107 // <std.io#__srt_global.copy>   
12 [0xc]:          popobj2    
13 [0xd]:          movi #3, cmt   
15 [0xf]:          cast cmt   
16 [0x10]:          pushobj   
17 [0x11]:          movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          popobj   
21 [0x15]: line: 81 movl 1   
22 [0x16]:          sizeof ebx   
23 [0x17]:          movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          rmov adx, ebx   
29 [0x1d]:          jmp @46   
30 [0x1e]: line: 83 movi #0, ebx   
32 [0x20]:          movl 0   
33 [0x21]:          movn #0   
35 [0x23]:          movi #0, adx   
37 [0x25]:          rmov adx, ebx   
38 [0x26]: line: 84 movi #10, ebx   
40 [0x28]:          new_classarray ebx  // std#string[]   
42 [0x2a]:          movl 0   
43 [0x2b]:          movn #1   
45 [0x2d]:          popobj   
46 [0x2e]:          nop   
47 [0x2f]:          ret   


function: std#list<std#string>.add[3836] params(1) in file: /usr/include/sharp//list.sharp:88:8: note:  
		    def add(element: t) {
		       ^

0 [0x0]: line: 89 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 0   
8 [0x8]:          movn #1   
10 [0xa]:          sizeof ebx   
11 [0xb]:          loadval ecx   
12 [0xc]:          gte ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          movr cmt, ebx   
15 [0xf]:          jne 18   
16 [0x10]: line: 90 pushl 0   
17 [0x11]:          call @3832 // <std#list<std#string>.expand>   
18 [0x12]:          nop   
19 [0x13]: line: 91 pushl 1   
20 [0x14]:          movl 0   
21 [0x15]:          movn #1   
23 [0x17]:          pushobj   
24 [0x18]:          movl 0   
25 [0x19]:          movn #0   
27 [0x1b]:          movi #0, adx   
29 [0x1d]:          iaload ebx, adx   
30 [0x1e]:          movr egx, ebx   
31 [0x1f]:          inc ebx   
32 [0x20]:          movi #0, adx   
34 [0x22]:          rmov adx, ebx   
35 [0x23]:          movr ebx, egx   
36 [0x24]:          popobj2    
37 [0x25]:          movr adx, ebx   
38 [0x26]:          chklen adx   
39 [0x27]:          movnd adx   
40 [0x28]:          popobj   
41 [0x29]:          ret   


function: std#list<std#string>.indexof[3837] params(1) in file: /usr/include/sharp//list.sharp:94:8: note:  
		    def indexof(element: t) : var {
		       ^

0 [0x0]: line: 95 istorel 0, fp+2   
2 [0x2]:          ipushl #2   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          lt ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 36   
14 [0xe]: line: 96 pushl 1   
15 [0xf]:          movl 0   
16 [0x10]:          movn #1   
18 [0x12]:          pushobj   
19 [0x13]:          loadl ebx, fp+2   
20 [0x14]:          popobj2    
21 [0x15]:          movr adx, ebx   
22 [0x16]:          chklen adx   
23 [0x17]:          movnd adx   
24 [0x18]:          pushobj   
25 [0x19]:          call @1977 // <std#string.operator==>   
26 [0x1a]:          loadval ebx   
27 [0x1b]:          movr cmt, ebx   
28 [0x1c]:          jne 32   
29 [0x1d]: line: 97 loadl ebx, fp+2   
30 [0x1e]:          return_val ebx   
31 [0x1f]:          ret   
32 [0x20]:          nop   
33 [0x21]:          iaddl 1, fp@2   
35 [0x23]:          jmp @2   
36 [0x24]: line: 101 istorel -1, fp+0   
38 [0x26]:           ret   


function: std#list<std#string>.pop_back[3838] params(0) in file: /usr/include/sharp//list.sharp:104:8: note:  
		    def pop_back() {
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #0, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 38   
14 [0xe]: line: 106 movl 1   
15 [0xf]:           del   
16 [0x10]: line: 107 pushl 1   
17 [0x11]:           movl 0   
18 [0x12]:           movn #1   
20 [0x14]:           pushobj   
21 [0x15]:           movl 0   
22 [0x16]:           movn #0   
24 [0x18]:           movi #0, adx   
26 [0x1a]:           iaload ebx, adx   
27 [0x1b]:           movr egx, ebx   
28 [0x1c]:           dec ebx   
29 [0x1d]:           movi #0, adx   
31 [0x1f]:           rmov adx, ebx   
32 [0x20]:           movr ebx, egx   
33 [0x21]:           popobj2    
34 [0x22]:           movr adx, ebx   
35 [0x23]:           chklen adx   
36 [0x24]:           movnd adx   
37 [0x25]:           popobj   
38 [0x26]:           nop   
39 [0x27]:           ret   


function: std#list<std#string>.size[3839] params(0) in file: /usr/include/sharp//list.sharp:111:8: note:  
		    def size() := n_elements;
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std#list<std#string>.insert[3840] params(2) in file: /usr/include/sharp//list.sharp:113:8: note:  
		    def insert(index: var, element: t) {
		       ^

0 [0x0]: line: 114 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gt ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 16   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 26   
18 [0x12]: line: 115 new_class @0 // std#__srt_global   
19 [0x13]:           shl adx, adx -> adx   
20 [0x14]:           dup    
21 [0x15]:           pushl 0   
22 [0x16]:           ipushl #1   
23 [0x17]:           call @3849 // <std#list<std#string>.out_of_bounds_msg>   
24 [0x18]:           call @3555 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 117 movl 0   
28 [0x1c]:           movn #0   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movi #0, ebx   
36 [0x24]:           loadval ecx   
37 [0x25]:           test ecx, ebx   
38 [0x26]:           jne 43   
39 [0x27]: line: 118 pushl 0   
40 [0x28]:           pushl 2   
41 [0x29]:           call @3836 // <std#list<std#string>.add>   
42 [0x2a]:           jmp @132   
43 [0x2b]: line: 120 movl 0   
44 [0x2c]:           movn #0   
46 [0x2e]:           movi #0, adx   
48 [0x30]:           iaload ebx, adx   
49 [0x31]:           rstore ebx   
50 [0x32]:           movl 0   
51 [0x33]:           movn #1   
53 [0x35]:           sizeof ebx   
54 [0x36]:           loadval ecx   
55 [0x37]:           gte ecx, ebx   
56 [0x38]:           movr ebx, cmt   
57 [0x39]:           movr cmt, ebx   
58 [0x3a]:           jne 61   
59 [0x3b]: line: 121 pushl 0   
60 [0x3c]:           call @3832 // <std#list<std#string>.expand>   
61 [0x3d]:           nop   
62 [0x3e]: line: 122 movl 0   
63 [0x3f]:           movn #0   
65 [0x41]:           movi #0, adx   
67 [0x43]:           iaload ebx, adx   
68 [0x44]:           movr egx, ebx   
69 [0x45]:           inc ebx   
70 [0x46]:           movi #0, adx   
72 [0x48]:           rmov adx, ebx   
73 [0x49]: line: 123 movl 0   
74 [0x4a]:           movn #0   
76 [0x4c]:           movi #0, adx   
78 [0x4e]:           iaload ebx, adx   
79 [0x4f]:           rstore ebx   
80 [0x50]:           movi #1, ebx   
82 [0x52]:           loadval ecx   
83 [0x53]:           sub ecx, ebx -> ebx   
84 [0x54]:           smovr_2 ebx, fp+3   
85 [0x55]:           ipushl #3   
86 [0x56]:           loadl ebx, fp+1   
87 [0x57]:           loadval ecx   
88 [0x58]:           gt ecx, ebx   
89 [0x59]:           movr ebx, cmt   
90 [0x5a]:           movr cmt, ebx   
91 [0x5b]:           jne 121   
92 [0x5c]: line: 124 movl 0   
93 [0x5d]:           movn #1   
95 [0x5f]:           pushobj   
96 [0x60]:           ipushl #3   
97 [0x61]:           movi #1, ebx   
99 [0x63]:           loadval ecx   
100 [0x64]:           sub ecx, ebx -> ebx   
101 [0x65]:           popobj2    
102 [0x66]:           movr adx, ebx   
103 [0x67]:           chklen adx   
104 [0x68]:           movnd adx   
105 [0x69]:           pushobj   
106 [0x6a]:           movl 0   
107 [0x6b]:           movn #1   
109 [0x6d]:           pushobj   
110 [0x6e]:           loadl ebx, fp+3   
111 [0x6f]:           popobj2    
112 [0x70]:           movr adx, ebx   
113 [0x71]:           chklen adx   
114 [0x72]:           movnd adx   
115 [0x73]:           popobj   
116 [0x74]:           loadl ebx, fp+3   
117 [0x75]:           movr egx, ebx   
118 [0x76]:           dec ebx   
119 [0x77]:           smovr_2 ebx, fp+3   
120 [0x78]:           jmp @85   
121 [0x79]: line: 125 pushl 2   
122 [0x7a]:           movl 0   
123 [0x7b]:           movn #1   
125 [0x7d]:           pushobj   
126 [0x7e]:           loadl ebx, fp+1   
127 [0x7f]:           popobj2    
128 [0x80]:           movr adx, ebx   
129 [0x81]:           chklen adx   
130 [0x82]:           movnd adx   
131 [0x83]:           popobj   
132 [0x84]:           nop   
133 [0x85]:           ret   


function: std#list<std#string>.find[3841] params(2) in file: /usr/include/sharp//list.sharp:129:8: note:  
		    def find(comparer : t, find_func: (t, t)(var)) : t {
		       ^

0 [0x0]: line: 130 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 46   
14 [0xe]: line: 131 ipushl #2   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+3   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           pushl 1   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 42   
31 [0x1f]: line: 132 movl 0   
32 [0x20]:           movn #1   
34 [0x22]:           pushobj   
35 [0x23]:           loadl ebx, fp+3   
36 [0x24]:           popobj2    
37 [0x25]:           movr adx, ebx   
38 [0x26]:           chklen adx   
39 [0x27]:           movnd adx   
40 [0x28]:           returnobj   
41 [0x29]:           ret   
42 [0x2a]:           nop   
43 [0x2b]:           iaddl 1, fp@3   
45 [0x2d]:           jmp @2   
46 [0x2e]: line: 136 movl 4   
47 [0x2f]:           del   
48 [0x30]: line: 137 movl 4   
49 [0x31]:           returnobj   
50 [0x32]:           ret   


function: std#list<std#string>.remove[3842] params(1) in file: /usr/include/sharp//list.sharp:140:8: note:  
		    def remove(val: t) {
		       ^

0 [0x0]: line: 141 istorel 0, fp+2   
2 [0x2]:           ipushl #2   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 37   
14 [0xe]: line: 142 pushl 1   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+2   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           call @1977 // <std#string.operator==>   
26 [0x1a]:           loadval ebx   
27 [0x1b]:           movr cmt, ebx   
28 [0x1c]:           jne 33   
29 [0x1d]: line: 143 pushl 0   
30 [0x1e]:           ipushl #2   
31 [0x1f]:           call @3846 // <std#list<std#string>.remove_at>   
32 [0x20]: line: 144 ret   
33 [0x21]:           nop   
34 [0x22]:           iaddl 1, fp@2   
36 [0x24]:           jmp @2   
37 [0x25]:           ret   


function: std#list<std#string>.remove[3843] params(2) in file: /usr/include/sharp//list.sharp:149:8: note:  
		    def remove(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 150 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 39   
14 [0xe]: line: 151 ipushl #2   
15 [0xf]:           pushl 1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #1   
19 [0x13]:           pushobj   
20 [0x14]:           loadl ebx, fp+3   
21 [0x15]:           popobj2    
22 [0x16]:           movr adx, ebx   
23 [0x17]:           chklen adx   
24 [0x18]:           movnd adx   
25 [0x19]:           pushobj   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 35   
31 [0x1f]: line: 152 pushl 0   
32 [0x20]:           ipushl #3   
33 [0x21]:           call @3846 // <std#list<std#string>.remove_at>   
34 [0x22]: line: 153 ret   
35 [0x23]:           nop   
36 [0x24]:           iaddl 1, fp@3   
38 [0x26]:           jmp @2   
39 [0x27]:           ret   


function: std#list<std#string>.replace[3844] params(2) in file: /usr/include/sharp//list.sharp:158:8: note:  
		    def replace(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 159 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 47   
14 [0xe]: line: 160 ipushl #2   
15 [0xf]:           pushl 1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #1   
19 [0x13]:           pushobj   
20 [0x14]:           loadl ebx, fp+3   
21 [0x15]:           popobj2    
22 [0x16]:           movr adx, ebx   
23 [0x17]:           chklen adx   
24 [0x18]:           movnd adx   
25 [0x19]:           pushobj   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 43   
31 [0x1f]: line: 161 pushl 1   
32 [0x20]:           movl 0   
33 [0x21]:           movn #1   
35 [0x23]:           pushobj   
36 [0x24]:           loadl ebx, fp+3   
37 [0x25]:           popobj2    
38 [0x26]:           movr adx, ebx   
39 [0x27]:           chklen adx   
40 [0x28]:           movnd adx   
41 [0x29]:           popobj   
42 [0x2a]: line: 162 ret   
43 [0x2b]:           nop   
44 [0x2c]:           iaddl 1, fp@3   
46 [0x2e]:           jmp @2   
47 [0x2f]:           ret   


function: std#list<std#string>.linear_sort[3845] params(1) in file: /usr/include/sharp//list.sharp:167:8: note:  
		    def linear_sort(swap: (t, t)(var)) {
		       ^

0 [0x0]: line: 168 istorel 0, fp+2   
2 [0x2]:           ipushl #2   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 132   
14 [0xe]: line: 170 istorel 0, fp+3   
16 [0x10]:           ipushl #3   
17 [0x11]:           movl 0   
18 [0x12]:           movn #0   
20 [0x14]:           movi #0, adx   
22 [0x16]:           iaload ebx, adx   
23 [0x17]:           loadval ecx   
24 [0x18]:           lt ecx, ebx   
25 [0x19]:           movr ebx, cmt   
26 [0x1a]:           movr cmt, ebx   
27 [0x1b]:           jne 129   
28 [0x1c]: line: 171 ipushl #3   
29 [0x1d]:           movi #1, ebx   
31 [0x1f]:           loadval ecx   
32 [0x20]:           add ecx, ebx -> ebx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movl 0   
35 [0x23]:           movn #0   
37 [0x25]:           movi #0, adx   
39 [0x27]:           iaload ebx, adx   
40 [0x28]:           loadval ecx   
41 [0x29]:           lt ecx, ebx   
42 [0x2a]:           movr ebx, cmt   
43 [0x2b]:           movr cmt, ebx   
44 [0x2c]:           jne 125   
45 [0x2d]: line: 173 ipushl #1   
46 [0x2e]:           movl 0   
47 [0x2f]:           movn #1   
49 [0x31]:           pushobj   
50 [0x32]:           loadl ebx, fp+3   
51 [0x33]:           popobj2    
52 [0x34]:           movr adx, ebx   
53 [0x35]:           chklen adx   
54 [0x36]:           movnd adx   
55 [0x37]:           pushobj   
56 [0x38]:           movl 0   
57 [0x39]:           movn #1   
59 [0x3b]:           pushobj   
60 [0x3c]:           ipushl #3   
61 [0x3d]:           movi #1, ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           add ecx, ebx -> ebx   
65 [0x41]:           popobj2    
66 [0x42]:           movr adx, ebx   
67 [0x43]:           chklen adx   
68 [0x44]:           movnd adx   
69 [0x45]:           pushobj   
70 [0x46]:           smov ebx, sp+[-2]   
71 [0x47]:           calld ebx   
72 [0x48]:           loadval ebx   
73 [0x49]:           movr cmt, ebx   
74 [0x4a]:           jne 124   
75 [0x4b]: line: 174 movl 0   
76 [0x4c]:           movn #1   
78 [0x4e]:           pushobj   
79 [0x4f]:           loadl ebx, fp+3   
80 [0x50]:           popobj2    
81 [0x51]:           movr adx, ebx   
82 [0x52]:           chklen adx   
83 [0x53]:           movnd adx   
84 [0x54]:           smovr_3 fp+4   
85 [0x55]: line: 175 movl 0   
86 [0x56]:           movn #1   
88 [0x58]:           pushobj   
89 [0x59]:           ipushl #3   
90 [0x5a]:           movi #1, ebx   
92 [0x5c]:           loadval ecx   
93 [0x5d]:           add ecx, ebx -> ebx   
94 [0x5e]:           popobj2    
95 [0x5f]:           movr adx, ebx   
96 [0x60]:           chklen adx   
97 [0x61]:           movnd adx   
98 [0x62]:           pushobj   
99 [0x63]:           movl 0   
100 [0x64]:           movn #1   
102 [0x66]:           pushobj   
103 [0x67]:           loadl ebx, fp+3   
104 [0x68]:           popobj2    
105 [0x69]:           movr adx, ebx   
106 [0x6a]:           chklen adx   
107 [0x6b]:           movnd adx   
108 [0x6c]:           popobj   
109 [0x6d]: line: 176 pushl 4   
110 [0x6e]:           movl 0   
111 [0x6f]:           movn #1   
113 [0x71]:           pushobj   
114 [0x72]:           ipushl #3   
115 [0x73]:           movi #1, ebx   
117 [0x75]:           loadval ecx   
118 [0x76]:           add ecx, ebx -> ebx   
119 [0x77]:           popobj2    
120 [0x78]:           movr adx, ebx   
121 [0x79]:           chklen adx   
122 [0x7a]:           movnd adx   
123 [0x7b]:           popobj   
124 [0x7c]:           nop   
125 [0x7d]:           nop   
126 [0x7e]:           iaddl 1, fp@3   
128 [0x80]:           jmp @16   
129 [0x81]:           iaddl 1, fp@2   
131 [0x83]:           jmp @2   
132 [0x84]:           ret   


function: std#list<std#string>.remove_at[3846] params(1) in file: /usr/include/sharp//list.sharp:183:8: note:  
		    def remove_at(index: var) {
		       ^

0 [0x0]: line: 184 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gte ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 16   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 26   
18 [0x12]: line: 185 new_class @0 // std#__srt_global   
19 [0x13]:           shl adx, adx -> adx   
20 [0x14]:           dup    
21 [0x15]:           pushl 0   
22 [0x16]:           ipushl #1   
23 [0x17]:           call @3849 // <std#list<std#string>.out_of_bounds_msg>   
24 [0x18]:           call @3555 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 187 movl 0   
28 [0x1c]:           movn #0   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           rstore ebx   
34 [0x22]:           loadl ebx, fp+1   
35 [0x23]:           loadval ecx   
36 [0x24]:           sub ecx, ebx -> ebx   
37 [0x25]:           rstore ebx   
38 [0x26]:           movi #1, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           sub ecx, ebx -> ebx   
42 [0x2a]:           smovr_2 ebx, fp+2   
43 [0x2b]: line: 188 ipushl #2   
44 [0x2c]:           movi #0, ebx   
46 [0x2e]:           loadval ecx   
47 [0x2f]:           gt ecx, ebx   
48 [0x30]:           movr ebx, cmt   
49 [0x31]:           movr cmt, ebx   
50 [0x32]:           jne 74   
51 [0x33]: line: 189 movl 0   
52 [0x34]:           movn #1   
54 [0x36]:           pushobj   
55 [0x37]:           movl 0   
56 [0x38]:           movn #1   
58 [0x3a]:           pushobj   
59 [0x3b]:           ipushl #1   
60 [0x3c]:           ipushl #1   
61 [0x3d]:           movi #1, ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           add ecx, ebx -> ebx   
65 [0x41]:           rstore ebx   
66 [0x42]:           movl 0   
67 [0x43]:           movn #0   
69 [0x45]:           movi #0, adx   
71 [0x47]:           iaload ebx, adx   
72 [0x48]:           rstore ebx   
73 [0x49]:           call @2097 // <std.io#__srt_global.memcopy>   
74 [0x4a]:           nop   
75 [0x4b]: line: 191 pushl 0   
76 [0x4c]:           call @3838 // <std#list<std#string>.pop_back>   
77 [0x4d]:           ret   


function: std#list<std#string>.indexof[3847] params(2) in file: /usr/include/sharp//list.sharp:194:8: note:  
		    def indexof(comparer: t, find_func: (t, t)(var)) : var {
		       ^

0 [0x0]: line: 195 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 38   
14 [0xe]: line: 196 ipushl #2   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+3   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           pushl 1   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 34   
31 [0x1f]: line: 197 loadl ebx, fp+3   
32 [0x20]:           return_val ebx   
33 [0x21]:           ret   
34 [0x22]:           nop   
35 [0x23]:           iaddl 1, fp@3   
37 [0x25]:           jmp @2   
38 [0x26]: line: 201 istorel -1, fp+0   
40 [0x28]:           ret   


function: std#list<std#string>.to_string[3848] params(0) in file: /usr/include/sharp//list.sharp:204:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 205 new_class @0 // std#__srt_global   
1 [0x1]:           movi #112, adx   
3 [0x3]:           call @1958 // <std#string_builder.string_builder>   
4 [0x4]:           popobj2    
5 [0x5]:           smovr_3 fp+1   
6 [0x6]: line: 207 pushl 1   
7 [0x7]:           newstr @149 // [    
8 [0x8]:           call @1954 // <std#string_builder.operator+=>   
9 [0x9]:           pop   
10 [0xa]: line: 208 istorel 0, fp+2   
12 [0xc]:           ipushl #2   
13 [0xd]:           movl 0   
14 [0xe]:           movn #0   
16 [0x10]:           movi #0, adx   
18 [0x12]:           iaload ebx, adx   
19 [0x13]:           loadval ecx   
20 [0x14]:           lt ecx, ebx   
21 [0x15]:           movr ebx, cmt   
22 [0x16]:           movr cmt, ebx   
23 [0x17]:           jne 62   
24 [0x18]: line: 209 pushl 1   
25 [0x19]:           movl 0   
26 [0x1a]:           movn #1   
28 [0x1c]:           pushobj   
29 [0x1d]:           loadl ebx, fp+2   
30 [0x1e]:           popobj2    
31 [0x1f]:           movr adx, ebx   
32 [0x20]:           chklen adx   
33 [0x21]:           movnd adx   
34 [0x22]:           pushobj   
35 [0x23]:           call @1951 // <std#string_builder.operator+=>   
36 [0x24]:           pop   
37 [0x25]: line: 211 ipushl #2   
38 [0x26]:           movi #1, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           add ecx, ebx -> ebx   
42 [0x2a]:           rstore ebx   
43 [0x2b]:           movl 0   
44 [0x2c]:           movn #0   
46 [0x2e]:           movi #0, adx   
48 [0x30]:           iaload ebx, adx   
49 [0x31]:           loadval ecx   
50 [0x32]:           lt ecx, ebx   
51 [0x33]:           movr ebx, cmt   
52 [0x34]:           movr cmt, ebx   
53 [0x35]:           jne 58   
54 [0x36]: line: 212 pushl 1   
55 [0x37]:           newstr @150 // ,    
56 [0x38]:           call @1954 // <std#string_builder.operator+=>   
57 [0x39]:           pop   
58 [0x3a]:           nop   
59 [0x3b]:           iaddl 1, fp@2   
61 [0x3d]:           jmp @12   
62 [0x3e]: line: 216 pushl 1   
63 [0x3f]:           newstr @151 //  ]   
64 [0x40]:           call @1954 // <std#string_builder.operator+=>   
65 [0x41]:           pop   
66 [0x42]: line: 217 pushl 1   
67 [0x43]:           call @1931 // <std#string_builder.to_string>   
68 [0x44]:           popobj2    
69 [0x45]:           returnobj   
70 [0x46]:           ret   


function: std#list<std#string>.out_of_bounds_msg[3849] params(1) in file: /usr/include/sharp//list.sharp:220:16: note:  
		    private def out_of_bounds_msg(index: var) : string {
		               ^

0 [0x0]: line: 221 new_class @0 // std#__srt_global   
1 [0x1]:           ret   
2 [0x2]:           dup    
3 [0x3]:           newstr @152 // Index:    
4 [0x4]:           call @1959 // <std#string.string>   
5 [0x5]:           ipushl #1   
6 [0x6]:           call @1991 // <std#string.operator+>   
7 [0x7]:           newstr @153 // , size:    
8 [0x8]:           call @1971 // <std#string.operator+>   
9 [0x9]:           movl 0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           rstore ebx   
16 [0x10]:           call @1991 // <std#string.operator+>   
17 [0x11]:           popobj2    
18 [0x12]:           returnobj   
19 [0x13]:           ret   


std#loopable<std.io.task#job>.get_elements[3850] params(0) in file: /usr/include/sharp//loopable.sharp:4:8: note:  
		    def get_elements() : t[];
		       ^



constructor: std#loopable<std.io.task#job>.loopable[3851] params(0) in file: /usr/include/sharp//loopable.sharp:3:10: note:  
		interface loopable<t> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#synced_list<std.io.task#job>.synced_list[3852] params(0) in file: /usr/include/sharp//synced_list.sharp:13:16: note:  
		    synced_list() {
		               ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 14 movi #10, ebx   
3 [0x3]:          new_classarray ebx  // std.io.task#job[]   
5 [0x5]:          movl 0   
6 [0x6]:          movn #1   
8 [0x8]:          popobj   
9 [0x9]:          ret   


constructor: std#synced_list<std.io.task#job>.synced_list[3853] params(1) in file: /usr/include/sharp//synced_list.sharp:17:16: note:  
		    synced_list(starting_capacity: var) {
		               ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 18 loadl ebx, fp+1   
2 [0x2]:          new_classarray ebx  // std.io.task#job[]   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]:          ret   


function: std#synced_list<std.io.task#job>.set_compact[3854] params(1) in file: /usr/include/sharp//synced_list.sharp:21:8: note:  
		    def set_compact(compact_array: var) {
		       ^

0 [0x0]: line: 22 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 23 ipushl #1   
3 [0x3]:          movl 0   
4 [0x4]:          movn #2   
6 [0x6]:          loadval ebx   
7 [0x7]:          movi #0, adx   
9 [0x9]:          rmov adx, ebx   
10 [0xa]:          movl 0   
11 [0xb]:          _ulck   
12 [0xc]:          ret   


function: std#synced_list<std.io.task#job>.get_elements[3855] params(0) in file: /usr/include/sharp//synced_list.sharp:27:8: note:  
		    def get_elements() : t[] {
		       ^

0 [0x0]: line: 28 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 29 movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          rstore ebx   
9 [0x9]:          movi #0, ebx   
11 [0xb]:          loadval ecx   
12 [0xc]:          test ecx, ebx   
13 [0xd]:          jne 23   
14 [0xe]:          pushnull    
15 [0xf]:          popobj2    
16 [0x10]:          pushobj   
17 [0x11]:          movl 0   
18 [0x12]:          _ulck   
19 [0x13]:          popobj2    
20 [0x14]:          returnobj   
21 [0x15]:          ret   
22 [0x16]:          jmp @44   
23 [0x17]: line: 30 movl 0   
24 [0x18]:          movn #1   
26 [0x1a]:          pushobj   
27 [0x1b]:          istore 0   
29 [0x1d]:          movl 0   
30 [0x1e]:          movn #0   
32 [0x20]:          movi #0, adx   
34 [0x22]:          iaload ebx, adx   
35 [0x23]:          rstore ebx   
36 [0x24]:          call @2107 // <std.io#__srt_global.copy>   
37 [0x25]:          popobj2    
38 [0x26]:          pushobj   
39 [0x27]:          movl 0   
40 [0x28]:          _ulck   
41 [0x29]:          popobj2    
42 [0x2a]:          returnobj   
43 [0x2b]:          ret   
44 [0x2c]:          nop   
45 [0x2d]:          movl 0   
46 [0x2e]:          _ulck   


overload function: std#synced_list<std.io.task#job>.operator[[3856] params(1) in file: /usr/include/sharp//synced_list.sharp:34:8: note:  
		    def operator[](index: var): t {
		       ^

0 [0x0]: line: 35 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 36 ipushl #1   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          gte ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          skpe ebx // pc = 18   
13 [0xd]:          loadl ecx, fp+1   
14 [0xe]:          movi #0, ebx   
16 [0x10]:          lt ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          movr cmt, ebx   
19 [0x13]:          jne 28   
20 [0x14]: line: 37 new_class @0 // std#__srt_global   
21 [0x15]:          shl adx, adx -> adx   
22 [0x16]:          dup    
23 [0x17]:          pushl 0   
24 [0x18]:          ipushl #1   
25 [0x19]:          call @3905 // <std#synced_list<std.io.task#job>.out_of_bounds_msg>   
26 [0x1a]:          call @3555 // <std#out_of_bounds_exception.out_of_bounds_exception>   
27 [0x1b]:          throw    
28 [0x1c]:          nop   
29 [0x1d]: line: 38 movl 0   
30 [0x1e]:          movn #1   
32 [0x20]:          pushobj   
33 [0x21]:          loadl ebx, fp+1   
34 [0x22]:          popobj2    
35 [0x23]:          movr adx, ebx   
36 [0x24]:          chklen adx   
37 [0x25]:          movnd adx   
38 [0x26]:          pushobj   
39 [0x27]:          movl 0   
40 [0x28]:          _ulck   
41 [0x29]:          popobj2    
42 [0x2a]:          returnobj   
43 [0x2b]:          ret   
44 [0x2c]:          movl 0   
45 [0x2d]:          _ulck   


function: std#synced_list<std.io.task#job>.at[3857] params(1) in file: /usr/include/sharp//synced_list.sharp:42:8: note:  
		    def at(index: var): t {
		       ^

0 [0x0]: line: 43 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 44 ipushl #1   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          gte ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          skpe ebx // pc = 18   
13 [0xd]:          loadl ecx, fp+1   
14 [0xe]:          movi #0, ebx   
16 [0x10]:          lt ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          movr cmt, ebx   
19 [0x13]:          jne 28   
20 [0x14]: line: 45 new_class @0 // std#__srt_global   
21 [0x15]:          shl adx, adx -> adx   
22 [0x16]:          dup    
23 [0x17]:          pushl 0   
24 [0x18]:          ipushl #1   
25 [0x19]:          call @3905 // <std#synced_list<std.io.task#job>.out_of_bounds_msg>   
26 [0x1a]:          call @3555 // <std#out_of_bounds_exception.out_of_bounds_exception>   
27 [0x1b]:          throw    
28 [0x1c]:          nop   
29 [0x1d]: line: 46 movl 0   
30 [0x1e]:          movn #1   
32 [0x20]:          pushobj   
33 [0x21]:          loadl ebx, fp+1   
34 [0x22]:          popobj2    
35 [0x23]:          movr adx, ebx   
36 [0x24]:          chklen adx   
37 [0x25]:          movnd adx   
38 [0x26]:          pushobj   
39 [0x27]:          movl 0   
40 [0x28]:          _ulck   
41 [0x29]:          popobj2    
42 [0x2a]:          returnobj   
43 [0x2b]:          ret   
44 [0x2c]:          movl 0   
45 [0x2d]:          _ulck   


function: std#synced_list<std.io.task#job>.last[3858] params(0) in file: /usr/include/sharp//synced_list.sharp:50:8: note:  
		    def last(): t {
		       ^

0 [0x0]: line: 51 pushl 0   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movi #1, ebx   
10 [0xa]:          loadval ecx   
11 [0xb]:          sub ecx, ebx -> ebx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @3857 // <std#synced_list<std.io.task#job>.at>   
14 [0xe]:          popobj2    
15 [0xf]:          returnobj   
16 [0x10]:          ret   


function: std#synced_list<std.io.task#job>.put[3859] params(2) in file: /usr/include/sharp//synced_list.sharp:54:8: note:  
		    def put(index: var, element: t) : t {
		       ^

0 [0x0]: line: 55 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 56 ipushl #1   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          gte ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          skpe ebx // pc = 18   
13 [0xd]:          loadl ecx, fp+1   
14 [0xe]:          movi #0, ebx   
16 [0x10]:          lt ecx, ebx   
17 [0x11]:          movr ebx, cmt   
18 [0x12]:          movr cmt, ebx   
19 [0x13]:          jne 28   
20 [0x14]: line: 57 new_class @0 // std#__srt_global   
21 [0x15]:          shl adx, adx -> adx   
22 [0x16]:          dup    
23 [0x17]:          pushl 0   
24 [0x18]:          ipushl #1   
25 [0x19]:          call @3905 // <std#synced_list<std.io.task#job>.out_of_bounds_msg>   
26 [0x1a]:          call @3555 // <std#out_of_bounds_exception.out_of_bounds_exception>   
27 [0x1b]:          throw    
28 [0x1c]:          nop   
29 [0x1d]: line: 59 movl 0   
30 [0x1e]:          movn #1   
32 [0x20]:          pushobj   
33 [0x21]:          loadl ebx, fp+1   
34 [0x22]:          popobj2    
35 [0x23]:          movr adx, ebx   
36 [0x24]:          chklen adx   
37 [0x25]:          movnd adx   
38 [0x26]:          smovr_3 fp+3   
39 [0x27]: line: 60 pushl 2   
40 [0x28]:          movl 0   
41 [0x29]:          movn #1   
43 [0x2b]:          pushobj   
44 [0x2c]:          loadl ebx, fp+1   
45 [0x2d]:          popobj2    
46 [0x2e]:          movr adx, ebx   
47 [0x2f]:          chklen adx   
48 [0x30]:          movnd adx   
49 [0x31]:          popobj   
50 [0x32]: line: 61 pushl 3   
51 [0x33]:          movl 0   
52 [0x34]:          _ulck   
53 [0x35]:          popobj2    
54 [0x36]:          returnobj   
55 [0x37]:          ret   
56 [0x38]:          movl 0   
57 [0x39]:          _ulck   


function: std#synced_list<std.io.task#job>.expand[3860] params(0) in file: /usr/include/sharp//synced_list.sharp:65:16: note:  
		    private def expand() {
		               ^

0 [0x0]: line: 66 movl 0   
1 [0x1]:          movn #2   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 24   
8 [0x8]: line: 67 movl 0   
9 [0x9]:          movn #1   
11 [0xb]:          pushobj   
12 [0xc]:          movl 0   
13 [0xd]:          movn #1   
15 [0xf]:          sizeof ebx   
16 [0x10]:          rstore ebx   
17 [0x11]:          movi #128, ebx   
19 [0x13]:          loadval ecx   
20 [0x14]:          add ecx, ebx -> ebx   
21 [0x15]:          rstore ebx   
22 [0x16]:          call @2087 // <std.io#__srt_global.realloc>   
23 [0x17]:          jmp @51   
24 [0x18]: line: 69 movl 0   
25 [0x19]:          movn #1   
27 [0x1b]:          pushobj   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          sizeof ebx   
32 [0x20]:          rstore ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #1   
36 [0x24]:          sizeof ebx   
37 [0x25]:          rstore ebx   
38 [0x26]:          movi #4, ebx   
40 [0x28]:          loadval ecx   
41 [0x29]:          shr ecx, ebx -> ebx   
42 [0x2a]:          loadval ecx   
43 [0x2b]:          add ecx, ebx -> ebx   
44 [0x2c]:          rstore ebx   
45 [0x2d]:          movi #128, ebx   
47 [0x2f]:          loadval ecx   
48 [0x30]:          add ecx, ebx -> ebx   
49 [0x31]:          rstore ebx   
50 [0x32]:          call @2087 // <std.io#__srt_global.realloc>   
51 [0x33]:          nop   
52 [0x34]:          ret   


function: std#synced_list<std.io.task#job>.clear[3861] params(0) in file: /usr/include/sharp//synced_list.sharp:72:8: note:  
		    def clear() {
		       ^

0 [0x0]: line: 73 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 74 movi #10, ebx   
4 [0x4]:          new_classarray ebx  // std.io.task#job[]   
6 [0x6]:          movl 0   
7 [0x7]:          movn #1   
9 [0x9]:          popobj   
10 [0xa]: line: 75 movi #0, ebx   
12 [0xc]:          movl 0   
13 [0xd]:          movn #0   
15 [0xf]:          movi #0, adx   
17 [0x11]:          rmov adx, ebx   
18 [0x12]:          movl 0   
19 [0x13]:          _ulck   
20 [0x14]:          ret   


constructor: std#list<std.io.task#job>.list[3862] params(0) in file: /usr/include/sharp//list.sharp:13:9: note:  
		    list() {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 14 movi #10, ebx   
3 [0x3]:          new_classarray ebx  // std.io.task#job[]   
5 [0x5]:          movl 0   
6 [0x6]:          movn #1   
8 [0x8]:          popobj   
9 [0x9]:          ret   


constructor: std#list<std.io.task#job>.list[3863] params(1) in file: /usr/include/sharp//list.sharp:17:9: note:  
		    list(starting_capacity: var) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 18 loadl ebx, fp+1   
2 [0x2]:          new_classarray ebx  // std.io.task#job[]   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]:          ret   


constructor: std#list<std.io.task#job>.list[3864] params(1) in file: /usr/include/sharp//list.sharp:21:9: note:  
		    list(initial_data: t[]) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 22 pushl 0   
2 [0x2]:          pushl 1   
3 [0x3]:          call @3875 // <std#list<std.io.task#job>.add_all>   
4 [0x4]:          ret   


function: std#list<std.io.task#job>.empty[3865] params(0) in file: /usr/include/sharp//list.sharp:25:8: note:  
		    def empty() := n_elements == 0;
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          return_val cmt   
12 [0xc]:          ret   


function: std#list<std.io.task#job>.set_compact[3866] params(1) in file: /usr/include/sharp//list.sharp:27:8: note:  
		    def set_compact(compact_array: var) {
		       ^

0 [0x0]: line: 28 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #2   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]:          ret   


function: std#list<std.io.task#job>.get_elements[3867] params(0) in file: /usr/include/sharp//list.sharp:31:8: note:  
		    def get_elements() : t[] {
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          jne 17   
12 [0xc]:          pushnull    
13 [0xd]:          popobj2    
14 [0xe]:          returnobj   
15 [0xf]:          ret   
16 [0x10]:          jmp @34   
17 [0x11]: line: 33 movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          pushobj   
21 [0x15]:          istore 0   
23 [0x17]:          movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          iaload ebx, adx   
29 [0x1d]:          rstore ebx   
30 [0x1e]:          call @2107 // <std.io#__srt_global.copy>   
31 [0x1f]:          popobj2    
32 [0x20]:          returnobj   
33 [0x21]:          ret   
34 [0x22]:          nop   


overload function: std#list<std.io.task#job>.operator[[3868] params(1) in file: /usr/include/sharp//list.sharp:36:8: note:  
		    def operator[](index: var): t {
		       ^

0 [0x0]: line: 37 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 38 new_class @0 // std#__srt_global   
19 [0x13]:          shl adx, adx -> adx   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3889 // <std#list<std.io.task#job>.out_of_bounds_msg>   
24 [0x18]:          call @3555 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 39 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          returnobj   
37 [0x25]:          ret   


function: std#list<std.io.task#job>.at[3869] params(1) in file: /usr/include/sharp//list.sharp:42:8: note:  
		    def at(index: var): t {
		       ^

0 [0x0]: line: 43 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 44 new_class @0 // std#__srt_global   
19 [0x13]:          shl adx, adx -> adx   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3889 // <std#list<std.io.task#job>.out_of_bounds_msg>   
24 [0x18]:          call @3555 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 45 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          returnobj   
37 [0x25]:          ret   


function: std#list<std.io.task#job>.last[3870] params(0) in file: /usr/include/sharp//list.sharp:48:8: note:  
		    def last(): t {
		       ^

0 [0x0]: line: 49 pushl 0   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movi #1, ebx   
10 [0xa]:          loadval ecx   
11 [0xb]:          sub ecx, ebx -> ebx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @3869 // <std#list<std.io.task#job>.at>   
14 [0xe]:          popobj2    
15 [0xf]:          returnobj   
16 [0x10]:          ret   


function: std#list<std.io.task#job>.put[3871] params(2) in file: /usr/include/sharp//list.sharp:52:8: note:  
		    def put(index: var, element: t) : t {
		       ^

0 [0x0]: line: 53 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 54 new_class @0 // std#__srt_global   
19 [0x13]:          shl adx, adx -> adx   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3889 // <std#list<std.io.task#job>.out_of_bounds_msg>   
24 [0x18]:          call @3555 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 56 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          smovr_3 fp+3   
37 [0x25]: line: 57 pushl 2   
38 [0x26]:          movl 0   
39 [0x27]:          movn #1   
41 [0x29]:          pushobj   
42 [0x2a]:          loadl ebx, fp+1   
43 [0x2b]:          popobj2    
44 [0x2c]:          movr adx, ebx   
45 [0x2d]:          chklen adx   
46 [0x2e]:          movnd adx   
47 [0x2f]:          popobj   
48 [0x30]: line: 58 movl 3   
49 [0x31]:          returnobj   
50 [0x32]:          ret   


function: std#list<std.io.task#job>.expand[3872] params(0) in file: /usr/include/sharp//list.sharp:61:16: note:  
		    private def expand() {
		               ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #2   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 24   
8 [0x8]: line: 63 movl 0   
9 [0x9]:          movn #1   
11 [0xb]:          pushobj   
12 [0xc]:          movl 0   
13 [0xd]:          movn #1   
15 [0xf]:          sizeof ebx   
16 [0x10]:          rstore ebx   
17 [0x11]:          movi #128, ebx   
19 [0x13]:          loadval ecx   
20 [0x14]:          add ecx, ebx -> ebx   
21 [0x15]:          rstore ebx   
22 [0x16]:          call @2087 // <std.io#__srt_global.realloc>   
23 [0x17]:          jmp @51   
24 [0x18]: line: 65 movl 0   
25 [0x19]:          movn #1   
27 [0x1b]:          pushobj   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          sizeof ebx   
32 [0x20]:          rstore ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #1   
36 [0x24]:          sizeof ebx   
37 [0x25]:          rstore ebx   
38 [0x26]:          movi #4, ebx   
40 [0x28]:          loadval ecx   
41 [0x29]:          shr ecx, ebx -> ebx   
42 [0x2a]:          loadval ecx   
43 [0x2b]:          add ecx, ebx -> ebx   
44 [0x2c]:          rstore ebx   
45 [0x2d]:          movi #128, ebx   
47 [0x2f]:          loadval ecx   
48 [0x30]:          add ecx, ebx -> ebx   
49 [0x31]:          rstore ebx   
50 [0x32]:          call @2087 // <std.io#__srt_global.realloc>   
51 [0x33]:          nop   
52 [0x34]:          ret   


function: std#list<std.io.task#job>.clear[3873] params(0) in file: /usr/include/sharp//list.sharp:68:8: note:  
		    def clear() {
		       ^

0 [0x0]: line: 69 movi #10, ebx   
2 [0x2]:          new_classarray ebx  // std.io.task#job[]   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]: line: 70 movi #0, ebx   
10 [0xa]:          movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          movi #0, adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          ret   


function: std#list<std.io.task#job>.add_all[3874] params(1) in file: /usr/include/sharp//list.sharp:73:8: note:  
		    def add_all(lst: list<t>) {
		       ^

0 [0x0]: line: 74 movl 1   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          istore 0   
6 [0x6]:          movl 1   
7 [0x7]:          movn #0   
9 [0x9]:          movi #0, adx   
11 [0xb]:          iaload ebx, adx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @2107 // <std.io#__srt_global.copy>   
14 [0xe]:          popobj2    
15 [0xf]:          movi #11, cmt   
17 [0x11]:          cast cmt   
18 [0x12]:          pushobj   
19 [0x13]:          movl 0   
20 [0x14]:          movn #1   
22 [0x16]:          popobj   
23 [0x17]: line: 75 movl 1   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          iaload ebx, adx   
29 [0x1d]:          movl 0   
30 [0x1e]:          movn #0   
32 [0x20]:          movi #0, adx   
34 [0x22]:          rmov adx, ebx   
35 [0x23]:          ret   


function: std#list<std.io.task#job>.add_all[3875] params(1) in file: /usr/include/sharp//list.sharp:78:8: note:  
		    def add_all(lst: t[]) {
		       ^

0 [0x0]: line: 79 movl 1   
1 [0x1]:          checknull   
2 [0x2]:          not ebx, ebx   
3 [0x3]:          movr cmt, ebx   
4 [0x4]:          jne 30   
5 [0x5]: line: 80 pushl 1   
6 [0x6]:          istore 0   
8 [0x8]:          movl 1   
9 [0x9]:          sizeof ebx   
10 [0xa]:          rstore ebx   
11 [0xb]:          call @2107 // <std.io#__srt_global.copy>   
12 [0xc]:          popobj2    
13 [0xd]:          movi #11, cmt   
15 [0xf]:          cast cmt   
16 [0x10]:          pushobj   
17 [0x11]:          movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          popobj   
21 [0x15]: line: 81 movl 1   
22 [0x16]:          sizeof ebx   
23 [0x17]:          movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          rmov adx, ebx   
29 [0x1d]:          jmp @46   
30 [0x1e]: line: 83 movi #0, ebx   
32 [0x20]:          movl 0   
33 [0x21]:          movn #0   
35 [0x23]:          movi #0, adx   
37 [0x25]:          rmov adx, ebx   
38 [0x26]: line: 84 movi #10, ebx   
40 [0x28]:          new_classarray ebx  // std.io.task#job[]   
42 [0x2a]:          movl 0   
43 [0x2b]:          movn #1   
45 [0x2d]:          popobj   
46 [0x2e]:          nop   
47 [0x2f]:          ret   


function: std#list<std.io.task#job>.add[3876] params(1) in file: /usr/include/sharp//list.sharp:88:8: note:  
		    def add(element: t) {
		       ^

0 [0x0]: line: 89 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 0   
8 [0x8]:          movn #1   
10 [0xa]:          sizeof ebx   
11 [0xb]:          loadval ecx   
12 [0xc]:          gte ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          movr cmt, ebx   
15 [0xf]:          jne 18   
16 [0x10]: line: 90 pushl 0   
17 [0x11]:          call @3872 // <std#list<std.io.task#job>.expand>   
18 [0x12]:          nop   
19 [0x13]: line: 91 pushl 1   
20 [0x14]:          movl 0   
21 [0x15]:          movn #1   
23 [0x17]:          pushobj   
24 [0x18]:          movl 0   
25 [0x19]:          movn #0   
27 [0x1b]:          movi #0, adx   
29 [0x1d]:          iaload ebx, adx   
30 [0x1e]:          movr egx, ebx   
31 [0x1f]:          inc ebx   
32 [0x20]:          movi #0, adx   
34 [0x22]:          rmov adx, ebx   
35 [0x23]:          movr ebx, egx   
36 [0x24]:          popobj2    
37 [0x25]:          movr adx, ebx   
38 [0x26]:          chklen adx   
39 [0x27]:          movnd adx   
40 [0x28]:          popobj   
41 [0x29]:          ret   


function: std#list<std.io.task#job>.indexof[3877] params(1) in file: /usr/include/sharp//list.sharp:94:8: note:  
		    def indexof(element: t) : var {
		       ^

0 [0x0]: line: 95 istorel 0, fp+2   
2 [0x2]:          ipushl #2   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          lt ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 35   
14 [0xe]: line: 96 pushl 1   
15 [0xf]:          movl 0   
16 [0x10]:          movn #1   
18 [0x12]:          pushobj   
19 [0x13]:          loadl ebx, fp+2   
20 [0x14]:          popobj2    
21 [0x15]:          movr adx, ebx   
22 [0x16]:          chklen adx   
23 [0x17]:          movnd adx   
24 [0x18]:          pushobj   
25 [0x19]:          itest ebx   
26 [0x1a]:          movr cmt, ebx   
27 [0x1b]:          jne 31   
28 [0x1c]: line: 97 loadl ebx, fp+2   
29 [0x1d]:          return_val ebx   
30 [0x1e]:          ret   
31 [0x1f]:          nop   
32 [0x20]:          iaddl 1, fp@2   
34 [0x22]:          jmp @2   
35 [0x23]: line: 101 istorel -1, fp+0   
37 [0x25]:           ret   


function: std#list<std.io.task#job>.pop_back[3878] params(0) in file: /usr/include/sharp//list.sharp:104:8: note:  
		    def pop_back() {
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #0, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 38   
14 [0xe]: line: 106 movl 1   
15 [0xf]:           del   
16 [0x10]: line: 107 pushl 1   
17 [0x11]:           movl 0   
18 [0x12]:           movn #1   
20 [0x14]:           pushobj   
21 [0x15]:           movl 0   
22 [0x16]:           movn #0   
24 [0x18]:           movi #0, adx   
26 [0x1a]:           iaload ebx, adx   
27 [0x1b]:           movr egx, ebx   
28 [0x1c]:           dec ebx   
29 [0x1d]:           movi #0, adx   
31 [0x1f]:           rmov adx, ebx   
32 [0x20]:           movr ebx, egx   
33 [0x21]:           popobj2    
34 [0x22]:           movr adx, ebx   
35 [0x23]:           chklen adx   
36 [0x24]:           movnd adx   
37 [0x25]:           popobj   
38 [0x26]:           nop   
39 [0x27]:           ret   


function: std#list<std.io.task#job>.size[3879] params(0) in file: /usr/include/sharp//list.sharp:111:8: note:  
		    def size() := n_elements;
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std#list<std.io.task#job>.insert[3880] params(2) in file: /usr/include/sharp//list.sharp:113:8: note:  
		    def insert(index: var, element: t) {
		       ^

0 [0x0]: line: 114 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gt ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 16   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 26   
18 [0x12]: line: 115 new_class @0 // std#__srt_global   
19 [0x13]:           shl adx, adx -> adx   
20 [0x14]:           dup    
21 [0x15]:           pushl 0   
22 [0x16]:           ipushl #1   
23 [0x17]:           call @3889 // <std#list<std.io.task#job>.out_of_bounds_msg>   
24 [0x18]:           call @3555 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 117 movl 0   
28 [0x1c]:           movn #0   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movi #0, ebx   
36 [0x24]:           loadval ecx   
37 [0x25]:           test ecx, ebx   
38 [0x26]:           jne 43   
39 [0x27]: line: 118 pushl 0   
40 [0x28]:           pushl 2   
41 [0x29]:           call @3876 // <std#list<std.io.task#job>.add>   
42 [0x2a]:           jmp @132   
43 [0x2b]: line: 120 movl 0   
44 [0x2c]:           movn #0   
46 [0x2e]:           movi #0, adx   
48 [0x30]:           iaload ebx, adx   
49 [0x31]:           rstore ebx   
50 [0x32]:           movl 0   
51 [0x33]:           movn #1   
53 [0x35]:           sizeof ebx   
54 [0x36]:           loadval ecx   
55 [0x37]:           gte ecx, ebx   
56 [0x38]:           movr ebx, cmt   
57 [0x39]:           movr cmt, ebx   
58 [0x3a]:           jne 61   
59 [0x3b]: line: 121 pushl 0   
60 [0x3c]:           call @3872 // <std#list<std.io.task#job>.expand>   
61 [0x3d]:           nop   
62 [0x3e]: line: 122 movl 0   
63 [0x3f]:           movn #0   
65 [0x41]:           movi #0, adx   
67 [0x43]:           iaload ebx, adx   
68 [0x44]:           movr egx, ebx   
69 [0x45]:           inc ebx   
70 [0x46]:           movi #0, adx   
72 [0x48]:           rmov adx, ebx   
73 [0x49]: line: 123 movl 0   
74 [0x4a]:           movn #0   
76 [0x4c]:           movi #0, adx   
78 [0x4e]:           iaload ebx, adx   
79 [0x4f]:           rstore ebx   
80 [0x50]:           movi #1, ebx   
82 [0x52]:           loadval ecx   
83 [0x53]:           sub ecx, ebx -> ebx   
84 [0x54]:           smovr_2 ebx, fp+3   
85 [0x55]:           ipushl #3   
86 [0x56]:           loadl ebx, fp+1   
87 [0x57]:           loadval ecx   
88 [0x58]:           gt ecx, ebx   
89 [0x59]:           movr ebx, cmt   
90 [0x5a]:           movr cmt, ebx   
91 [0x5b]:           jne 121   
92 [0x5c]: line: 124 movl 0   
93 [0x5d]:           movn #1   
95 [0x5f]:           pushobj   
96 [0x60]:           ipushl #3   
97 [0x61]:           movi #1, ebx   
99 [0x63]:           loadval ecx   
100 [0x64]:           sub ecx, ebx -> ebx   
101 [0x65]:           popobj2    
102 [0x66]:           movr adx, ebx   
103 [0x67]:           chklen adx   
104 [0x68]:           movnd adx   
105 [0x69]:           pushobj   
106 [0x6a]:           movl 0   
107 [0x6b]:           movn #1   
109 [0x6d]:           pushobj   
110 [0x6e]:           loadl ebx, fp+3   
111 [0x6f]:           popobj2    
112 [0x70]:           movr adx, ebx   
113 [0x71]:           chklen adx   
114 [0x72]:           movnd adx   
115 [0x73]:           popobj   
116 [0x74]:           loadl ebx, fp+3   
117 [0x75]:           movr egx, ebx   
118 [0x76]:           dec ebx   
119 [0x77]:           smovr_2 ebx, fp+3   
120 [0x78]:           jmp @85   
121 [0x79]: line: 125 pushl 2   
122 [0x7a]:           movl 0   
123 [0x7b]:           movn #1   
125 [0x7d]:           pushobj   
126 [0x7e]:           loadl ebx, fp+1   
127 [0x7f]:           popobj2    
128 [0x80]:           movr adx, ebx   
129 [0x81]:           chklen adx   
130 [0x82]:           movnd adx   
131 [0x83]:           popobj   
132 [0x84]:           nop   
133 [0x85]:           ret   


function: std#list<std.io.task#job>.find[3881] params(2) in file: /usr/include/sharp//list.sharp:129:8: note:  
		    def find(comparer : t, find_func: (t, t)(var)) : t {
		       ^

0 [0x0]: line: 130 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 46   
14 [0xe]: line: 131 ipushl #2   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+3   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           pushl 1   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 42   
31 [0x1f]: line: 132 movl 0   
32 [0x20]:           movn #1   
34 [0x22]:           pushobj   
35 [0x23]:           loadl ebx, fp+3   
36 [0x24]:           popobj2    
37 [0x25]:           movr adx, ebx   
38 [0x26]:           chklen adx   
39 [0x27]:           movnd adx   
40 [0x28]:           returnobj   
41 [0x29]:           ret   
42 [0x2a]:           nop   
43 [0x2b]:           iaddl 1, fp@3   
45 [0x2d]:           jmp @2   
46 [0x2e]: line: 136 movl 4   
47 [0x2f]:           del   
48 [0x30]: line: 137 movl 4   
49 [0x31]:           returnobj   
50 [0x32]:           ret   


function: std#list<std.io.task#job>.remove[3882] params(1) in file: /usr/include/sharp//list.sharp:140:8: note:  
		    def remove(val: t) {
		       ^

0 [0x0]: line: 141 istorel 0, fp+2   
2 [0x2]:           ipushl #2   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 36   
14 [0xe]: line: 142 pushl 1   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+2   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           itest ebx   
26 [0x1a]:           movr cmt, ebx   
27 [0x1b]:           jne 32   
28 [0x1c]: line: 143 pushl 0   
29 [0x1d]:           ipushl #2   
30 [0x1e]:           call @3886 // <std#list<std.io.task#job>.remove_at>   
31 [0x1f]: line: 144 ret   
32 [0x20]:           nop   
33 [0x21]:           iaddl 1, fp@2   
35 [0x23]:           jmp @2   
36 [0x24]:           ret   


function: std#list<std.io.task#job>.remove[3883] params(2) in file: /usr/include/sharp//list.sharp:149:8: note:  
		    def remove(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 150 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 39   
14 [0xe]: line: 151 ipushl #2   
15 [0xf]:           pushl 1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #1   
19 [0x13]:           pushobj   
20 [0x14]:           loadl ebx, fp+3   
21 [0x15]:           popobj2    
22 [0x16]:           movr adx, ebx   
23 [0x17]:           chklen adx   
24 [0x18]:           movnd adx   
25 [0x19]:           pushobj   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 35   
31 [0x1f]: line: 152 pushl 0   
32 [0x20]:           ipushl #3   
33 [0x21]:           call @3886 // <std#list<std.io.task#job>.remove_at>   
34 [0x22]: line: 153 ret   
35 [0x23]:           nop   
36 [0x24]:           iaddl 1, fp@3   
38 [0x26]:           jmp @2   
39 [0x27]:           ret   


function: std#list<std.io.task#job>.replace[3884] params(2) in file: /usr/include/sharp//list.sharp:158:8: note:  
		    def replace(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 159 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 47   
14 [0xe]: line: 160 ipushl #2   
15 [0xf]:           pushl 1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #1   
19 [0x13]:           pushobj   
20 [0x14]:           loadl ebx, fp+3   
21 [0x15]:           popobj2    
22 [0x16]:           movr adx, ebx   
23 [0x17]:           chklen adx   
24 [0x18]:           movnd adx   
25 [0x19]:           pushobj   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 43   
31 [0x1f]: line: 161 pushl 1   
32 [0x20]:           movl 0   
33 [0x21]:           movn #1   
35 [0x23]:           pushobj   
36 [0x24]:           loadl ebx, fp+3   
37 [0x25]:           popobj2    
38 [0x26]:           movr adx, ebx   
39 [0x27]:           chklen adx   
40 [0x28]:           movnd adx   
41 [0x29]:           popobj   
42 [0x2a]: line: 162 ret   
43 [0x2b]:           nop   
44 [0x2c]:           iaddl 1, fp@3   
46 [0x2e]:           jmp @2   
47 [0x2f]:           ret   


function: std#list<std.io.task#job>.linear_sort[3885] params(1) in file: /usr/include/sharp//list.sharp:167:8: note:  
		    def linear_sort(swap: (t, t)(var)) {
		       ^

0 [0x0]: line: 168 istorel 0, fp+2   
2 [0x2]:           ipushl #2   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 132   
14 [0xe]: line: 170 istorel 0, fp+3   
16 [0x10]:           ipushl #3   
17 [0x11]:           movl 0   
18 [0x12]:           movn #0   
20 [0x14]:           movi #0, adx   
22 [0x16]:           iaload ebx, adx   
23 [0x17]:           loadval ecx   
24 [0x18]:           lt ecx, ebx   
25 [0x19]:           movr ebx, cmt   
26 [0x1a]:           movr cmt, ebx   
27 [0x1b]:           jne 129   
28 [0x1c]: line: 171 ipushl #3   
29 [0x1d]:           movi #1, ebx   
31 [0x1f]:           loadval ecx   
32 [0x20]:           add ecx, ebx -> ebx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movl 0   
35 [0x23]:           movn #0   
37 [0x25]:           movi #0, adx   
39 [0x27]:           iaload ebx, adx   
40 [0x28]:           loadval ecx   
41 [0x29]:           lt ecx, ebx   
42 [0x2a]:           movr ebx, cmt   
43 [0x2b]:           movr cmt, ebx   
44 [0x2c]:           jne 125   
45 [0x2d]: line: 173 ipushl #1   
46 [0x2e]:           movl 0   
47 [0x2f]:           movn #1   
49 [0x31]:           pushobj   
50 [0x32]:           loadl ebx, fp+3   
51 [0x33]:           popobj2    
52 [0x34]:           movr adx, ebx   
53 [0x35]:           chklen adx   
54 [0x36]:           movnd adx   
55 [0x37]:           pushobj   
56 [0x38]:           movl 0   
57 [0x39]:           movn #1   
59 [0x3b]:           pushobj   
60 [0x3c]:           ipushl #3   
61 [0x3d]:           movi #1, ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           add ecx, ebx -> ebx   
65 [0x41]:           popobj2    
66 [0x42]:           movr adx, ebx   
67 [0x43]:           chklen adx   
68 [0x44]:           movnd adx   
69 [0x45]:           pushobj   
70 [0x46]:           smov ebx, sp+[-2]   
71 [0x47]:           calld ebx   
72 [0x48]:           loadval ebx   
73 [0x49]:           movr cmt, ebx   
74 [0x4a]:           jne 124   
75 [0x4b]: line: 174 movl 0   
76 [0x4c]:           movn #1   
78 [0x4e]:           pushobj   
79 [0x4f]:           loadl ebx, fp+3   
80 [0x50]:           popobj2    
81 [0x51]:           movr adx, ebx   
82 [0x52]:           chklen adx   
83 [0x53]:           movnd adx   
84 [0x54]:           smovr_3 fp+4   
85 [0x55]: line: 175 movl 0   
86 [0x56]:           movn #1   
88 [0x58]:           pushobj   
89 [0x59]:           ipushl #3   
90 [0x5a]:           movi #1, ebx   
92 [0x5c]:           loadval ecx   
93 [0x5d]:           add ecx, ebx -> ebx   
94 [0x5e]:           popobj2    
95 [0x5f]:           movr adx, ebx   
96 [0x60]:           chklen adx   
97 [0x61]:           movnd adx   
98 [0x62]:           pushobj   
99 [0x63]:           movl 0   
100 [0x64]:           movn #1   
102 [0x66]:           pushobj   
103 [0x67]:           loadl ebx, fp+3   
104 [0x68]:           popobj2    
105 [0x69]:           movr adx, ebx   
106 [0x6a]:           chklen adx   
107 [0x6b]:           movnd adx   
108 [0x6c]:           popobj   
109 [0x6d]: line: 176 pushl 4   
110 [0x6e]:           movl 0   
111 [0x6f]:           movn #1   
113 [0x71]:           pushobj   
114 [0x72]:           ipushl #3   
115 [0x73]:           movi #1, ebx   
117 [0x75]:           loadval ecx   
118 [0x76]:           add ecx, ebx -> ebx   
119 [0x77]:           popobj2    
120 [0x78]:           movr adx, ebx   
121 [0x79]:           chklen adx   
122 [0x7a]:           movnd adx   
123 [0x7b]:           popobj   
124 [0x7c]:           nop   
125 [0x7d]:           nop   
126 [0x7e]:           iaddl 1, fp@3   
128 [0x80]:           jmp @16   
129 [0x81]:           iaddl 1, fp@2   
131 [0x83]:           jmp @2   
132 [0x84]:           ret   


function: std#list<std.io.task#job>.remove_at[3886] params(1) in file: /usr/include/sharp//list.sharp:183:8: note:  
		    def remove_at(index: var) {
		       ^

0 [0x0]: line: 184 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gte ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 16   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 26   
18 [0x12]: line: 185 new_class @0 // std#__srt_global   
19 [0x13]:           shl adx, adx -> adx   
20 [0x14]:           dup    
21 [0x15]:           pushl 0   
22 [0x16]:           ipushl #1   
23 [0x17]:           call @3889 // <std#list<std.io.task#job>.out_of_bounds_msg>   
24 [0x18]:           call @3555 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 187 movl 0   
28 [0x1c]:           movn #0   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           rstore ebx   
34 [0x22]:           loadl ebx, fp+1   
35 [0x23]:           loadval ecx   
36 [0x24]:           sub ecx, ebx -> ebx   
37 [0x25]:           rstore ebx   
38 [0x26]:           movi #1, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           sub ecx, ebx -> ebx   
42 [0x2a]:           smovr_2 ebx, fp+2   
43 [0x2b]: line: 188 ipushl #2   
44 [0x2c]:           movi #0, ebx   
46 [0x2e]:           loadval ecx   
47 [0x2f]:           gt ecx, ebx   
48 [0x30]:           movr ebx, cmt   
49 [0x31]:           movr cmt, ebx   
50 [0x32]:           jne 74   
51 [0x33]: line: 189 movl 0   
52 [0x34]:           movn #1   
54 [0x36]:           pushobj   
55 [0x37]:           movl 0   
56 [0x38]:           movn #1   
58 [0x3a]:           pushobj   
59 [0x3b]:           ipushl #1   
60 [0x3c]:           ipushl #1   
61 [0x3d]:           movi #1, ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           add ecx, ebx -> ebx   
65 [0x41]:           rstore ebx   
66 [0x42]:           movl 0   
67 [0x43]:           movn #0   
69 [0x45]:           movi #0, adx   
71 [0x47]:           iaload ebx, adx   
72 [0x48]:           rstore ebx   
73 [0x49]:           call @2097 // <std.io#__srt_global.memcopy>   
74 [0x4a]:           nop   
75 [0x4b]: line: 191 pushl 0   
76 [0x4c]:           call @3878 // <std#list<std.io.task#job>.pop_back>   
77 [0x4d]:           ret   


function: std#list<std.io.task#job>.indexof[3887] params(2) in file: /usr/include/sharp//list.sharp:194:8: note:  
		    def indexof(comparer: t, find_func: (t, t)(var)) : var {
		       ^

0 [0x0]: line: 195 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 38   
14 [0xe]: line: 196 ipushl #2   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+3   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           pushl 1   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 34   
31 [0x1f]: line: 197 loadl ebx, fp+3   
32 [0x20]:           return_val ebx   
33 [0x21]:           ret   
34 [0x22]:           nop   
35 [0x23]:           iaddl 1, fp@3   
37 [0x25]:           jmp @2   
38 [0x26]: line: 201 istorel -1, fp+0   
40 [0x28]:           ret   


function: std#list<std.io.task#job>.to_string[3888] params(0) in file: /usr/include/sharp//list.sharp:204:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 205 new_class @0 // std#__srt_global   
1 [0x1]:           movi #112, adx   
3 [0x3]:           call @1958 // <std#string_builder.string_builder>   
4 [0x4]:           popobj2    
5 [0x5]:           smovr_3 fp+1   
6 [0x6]: line: 207 pushl 1   
7 [0x7]:           newstr @149 // [    
8 [0x8]:           call @1954 // <std#string_builder.operator+=>   
9 [0x9]:           pop   
10 [0xa]: line: 208 istorel 0, fp+2   
12 [0xc]:           ipushl #2   
13 [0xd]:           movl 0   
14 [0xe]:           movn #0   
16 [0x10]:           movi #0, adx   
18 [0x12]:           iaload ebx, adx   
19 [0x13]:           loadval ecx   
20 [0x14]:           lt ecx, ebx   
21 [0x15]:           movr ebx, cmt   
22 [0x16]:           movr cmt, ebx   
23 [0x17]:           jne 62   
24 [0x18]: line: 209 pushl 1   
25 [0x19]:           movl 0   
26 [0x1a]:           movn #1   
28 [0x1c]:           pushobj   
29 [0x1d]:           loadl ebx, fp+2   
30 [0x1e]:           popobj2    
31 [0x1f]:           movr adx, ebx   
32 [0x20]:           chklen adx   
33 [0x21]:           movnd adx   
34 [0x22]:           pushobj   
35 [0x23]:           call @1950 // <std#string_builder.operator+=>   
36 [0x24]:           pop   
37 [0x25]: line: 211 ipushl #2   
38 [0x26]:           movi #1, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           add ecx, ebx -> ebx   
42 [0x2a]:           rstore ebx   
43 [0x2b]:           movl 0   
44 [0x2c]:           movn #0   
46 [0x2e]:           movi #0, adx   
48 [0x30]:           iaload ebx, adx   
49 [0x31]:           loadval ecx   
50 [0x32]:           lt ecx, ebx   
51 [0x33]:           movr ebx, cmt   
52 [0x34]:           movr cmt, ebx   
53 [0x35]:           jne 58   
54 [0x36]: line: 212 pushl 1   
55 [0x37]:           newstr @150 // ,    
56 [0x38]:           call @1954 // <std#string_builder.operator+=>   
57 [0x39]:           pop   
58 [0x3a]:           nop   
59 [0x3b]:           iaddl 1, fp@2   
61 [0x3d]:           jmp @12   
62 [0x3e]: line: 216 pushl 1   
63 [0x3f]:           newstr @151 //  ]   
64 [0x40]:           call @1954 // <std#string_builder.operator+=>   
65 [0x41]:           pop   
66 [0x42]: line: 217 pushl 1   
67 [0x43]:           call @1931 // <std#string_builder.to_string>   
68 [0x44]:           popobj2    
69 [0x45]:           returnobj   
70 [0x46]:           ret   


function: std#list<std.io.task#job>.out_of_bounds_msg[3889] params(1) in file: /usr/include/sharp//list.sharp:220:16: note:  
		    private def out_of_bounds_msg(index: var) : string {
		               ^

0 [0x0]: line: 221 new_class @0 // std#__srt_global   
1 [0x1]:           ret   
2 [0x2]:           dup    
3 [0x3]:           newstr @152 // Index:    
4 [0x4]:           call @1959 // <std#string.string>   
5 [0x5]:           ipushl #1   
6 [0x6]:           call @1991 // <std#string.operator+>   
7 [0x7]:           newstr @153 // , size:    
8 [0x8]:           call @1971 // <std#string.operator+>   
9 [0x9]:           movl 0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           rstore ebx   
16 [0x10]:           call @1991 // <std#string.operator+>   
17 [0x11]:           popobj2    
18 [0x12]:           returnobj   
19 [0x13]:           ret   


function: std#synced_list<std.io.task#job>.add_all[3890] params(1) in file: /usr/include/sharp//synced_list.sharp:79:8: note:  
		    def add_all(lst: list<t>) {
		       ^

0 [0x0]: line: 80 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 81 movl 1   
3 [0x3]:          movn #1   
5 [0x5]:          pushobj   
6 [0x6]:          istore 0   
8 [0x8]:          movl 1   
9 [0x9]:          movn #0   
11 [0xb]:          movi #0, adx   
13 [0xd]:          iaload ebx, adx   
14 [0xe]:          rstore ebx   
15 [0xf]:          call @2107 // <std.io#__srt_global.copy>   
16 [0x10]:          popobj2    
17 [0x11]:          movi #11, cmt   
19 [0x13]:          cast cmt   
20 [0x14]:          pushobj   
21 [0x15]:          movl 0   
22 [0x16]:          movn #1   
24 [0x18]:          popobj   
25 [0x19]: line: 82 movl 1   
26 [0x1a]:          movn #0   
28 [0x1c]:          movi #0, adx   
30 [0x1e]:          iaload ebx, adx   
31 [0x1f]:          movl 0   
32 [0x20]:          movn #0   
34 [0x22]:          movi #0, adx   
36 [0x24]:          rmov adx, ebx   
37 [0x25]:          movl 0   
38 [0x26]:          _ulck   
39 [0x27]:          ret   


function: std#synced_list<std.io.task#job>.add[3891] params(1) in file: /usr/include/sharp//synced_list.sharp:86:8: note:  
		    def add(element: t) {
		       ^

0 [0x0]: line: 87 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 88 movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          movi #0, adx   
7 [0x7]:          iaload ebx, adx   
8 [0x8]:          rstore ebx   
9 [0x9]:          movl 0   
10 [0xa]:          movn #1   
12 [0xc]:          sizeof ebx   
13 [0xd]:          loadval ecx   
14 [0xe]:          gte ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 20   
18 [0x12]: line: 89 pushl 0   
19 [0x13]:          call @3860 // <std#synced_list<std.io.task#job>.expand>   
20 [0x14]:          nop   
21 [0x15]: line: 90 pushl 1   
22 [0x16]:          movl 0   
23 [0x17]:          movn #1   
25 [0x19]:          pushobj   
26 [0x1a]:          movl 0   
27 [0x1b]:          movn #0   
29 [0x1d]:          movi #0, adx   
31 [0x1f]:          iaload ebx, adx   
32 [0x20]:          movr egx, ebx   
33 [0x21]:          inc ebx   
34 [0x22]:          movi #0, adx   
36 [0x24]:          rmov adx, ebx   
37 [0x25]:          movr ebx, egx   
38 [0x26]:          popobj2    
39 [0x27]:          movr adx, ebx   
40 [0x28]:          chklen adx   
41 [0x29]:          movnd adx   
42 [0x2a]:          popobj   
43 [0x2b]:          movl 0   
44 [0x2c]:          _ulck   
45 [0x2d]:          ret   


function: std#synced_list<std.io.task#job>.indexof[3892] params(1) in file: /usr/include/sharp//synced_list.sharp:94:8: note:  
		    def indexof(element: t) : var {
		       ^

0 [0x0]: line: 95 movl 0   
1 [0x1]:          _lck    
2 [0x2]: line: 96 istorel 0, fp+2   
4 [0x4]:          ipushl #2   
5 [0x5]:          movl 0   
6 [0x6]:          movn #0   
8 [0x8]:          movi #0, adx   
10 [0xa]:          iaload ebx, adx   
11 [0xb]:          loadval ecx   
12 [0xc]:          lt ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          movr cmt, ebx   
15 [0xf]:          jne 39   
16 [0x10]: line: 97 pushl 1   
17 [0x11]:          movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          pushobj   
21 [0x15]:          loadl ebx, fp+2   
22 [0x16]:          popobj2    
23 [0x17]:          movr adx, ebx   
24 [0x18]:          chklen adx   
25 [0x19]:          movnd adx   
26 [0x1a]:          pushobj   
27 [0x1b]:          itest ebx   
28 [0x1c]:          movr cmt, ebx   
29 [0x1d]:          jne 35   
30 [0x1e]: line: 98 loadl ebx, fp+2   
31 [0x1f]:          return_val ebx   
32 [0x20]:          movl 0   
33 [0x21]:          _ulck   
34 [0x22]:          ret   
35 [0x23]:          nop   
36 [0x24]:          iaddl 1, fp@2   
38 [0x26]:          jmp @4   
39 [0x27]: line: 102 istorel -1, fp+0   
41 [0x29]:           movl 0   
42 [0x2a]:           _ulck   
43 [0x2b]:           ret   
44 [0x2c]:           movl 0   
45 [0x2d]:           _ulck   


function: std#synced_list<std.io.task#job>.pop_back[3893] params(0) in file: /usr/include/sharp//synced_list.sharp:106:8: note:  
		    def pop_back() {
		       ^

0 [0x0]: line: 107 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #0, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 38   
14 [0xe]: line: 108 movl 1   
15 [0xf]:           del   
16 [0x10]: line: 109 pushl 1   
17 [0x11]:           movl 0   
18 [0x12]:           movn #1   
20 [0x14]:           pushobj   
21 [0x15]:           movl 0   
22 [0x16]:           movn #0   
24 [0x18]:           movi #0, adx   
26 [0x1a]:           iaload ebx, adx   
27 [0x1b]:           movr egx, ebx   
28 [0x1c]:           dec ebx   
29 [0x1d]:           movi #0, adx   
31 [0x1f]:           rmov adx, ebx   
32 [0x20]:           movr ebx, egx   
33 [0x21]:           popobj2    
34 [0x22]:           movr adx, ebx   
35 [0x23]:           chklen adx   
36 [0x24]:           movnd adx   
37 [0x25]:           popobj   
38 [0x26]:           nop   
39 [0x27]:           ret   


function: std#synced_list<std.io.task#job>.size[3894] params(0) in file: /usr/include/sharp//synced_list.sharp:113:8: note:  
		    def size() : var {
		       ^

0 [0x0]: line: 114 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 115 movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           return_val ebx   
9 [0x9]:           movl 0   
10 [0xa]:           _ulck   
11 [0xb]:           ret   
12 [0xc]:           movl 0   
13 [0xd]:           _ulck   


function: std#synced_list<std.io.task#job>.empty[3895] params(0) in file: /usr/include/sharp//synced_list.sharp:119:8: note:  
		    def empty() : var {
		       ^

0 [0x0]: line: 120 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 121 movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           movi #0, adx   
7 [0x7]:           iaload ebx, adx   
8 [0x8]:           rstore ebx   
9 [0x9]:           movi #0, ebx   
11 [0xb]:           loadval ecx   
12 [0xc]:           test ecx, ebx   
13 [0xd]:           return_val cmt   
14 [0xe]:           movl 0   
15 [0xf]:           _ulck   
16 [0x10]:           ret   
17 [0x11]:           movl 0   
18 [0x12]:           _ulck   


function: std#synced_list<std.io.task#job>.insert[3896] params(2) in file: /usr/include/sharp//synced_list.sharp:125:8: note:  
		    def insert(index: var, element: t) {
		       ^

0 [0x0]: line: 126 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 127 ipushl #1   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           skpe ebx // pc = 18   
13 [0xd]:           loadl ecx, fp+1   
14 [0xe]:           movi #0, ebx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           movr cmt, ebx   
19 [0x13]:           jne 28   
20 [0x14]: line: 128 new_class @0 // std#__srt_global   
21 [0x15]:           shl adx, adx -> adx   
22 [0x16]:           dup    
23 [0x17]:           pushl 0   
24 [0x18]:           ipushl #1   
25 [0x19]:           call @3905 // <std#synced_list<std.io.task#job>.out_of_bounds_msg>   
26 [0x1a]:           call @3555 // <std#out_of_bounds_exception.out_of_bounds_exception>   
27 [0x1b]:           throw    
28 [0x1c]:           nop   
29 [0x1d]: line: 130 movl 0   
30 [0x1e]:           movn #0   
32 [0x20]:           movi #0, adx   
34 [0x22]:           iaload ebx, adx   
35 [0x23]:           rstore ebx   
36 [0x24]:           movi #0, ebx   
38 [0x26]:           loadval ecx   
39 [0x27]:           test ecx, ebx   
40 [0x28]:           jne 45   
41 [0x29]: line: 131 pushl 0   
42 [0x2a]:           pushl 2   
43 [0x2b]:           call @3891 // <std#synced_list<std.io.task#job>.add>   
44 [0x2c]:           jmp @134   
45 [0x2d]: line: 133 movl 0   
46 [0x2e]:           movn #0   
48 [0x30]:           movi #0, adx   
50 [0x32]:           iaload ebx, adx   
51 [0x33]:           rstore ebx   
52 [0x34]:           movl 0   
53 [0x35]:           movn #1   
55 [0x37]:           sizeof ebx   
56 [0x38]:           loadval ecx   
57 [0x39]:           gte ecx, ebx   
58 [0x3a]:           movr ebx, cmt   
59 [0x3b]:           movr cmt, ebx   
60 [0x3c]:           jne 63   
61 [0x3d]: line: 134 pushl 0   
62 [0x3e]:           call @3860 // <std#synced_list<std.io.task#job>.expand>   
63 [0x3f]:           nop   
64 [0x40]: line: 135 movl 0   
65 [0x41]:           movn #0   
67 [0x43]:           movi #0, adx   
69 [0x45]:           iaload ebx, adx   
70 [0x46]:           movr egx, ebx   
71 [0x47]:           inc ebx   
72 [0x48]:           movi #0, adx   
74 [0x4a]:           rmov adx, ebx   
75 [0x4b]: line: 136 movl 0   
76 [0x4c]:           movn #0   
78 [0x4e]:           movi #0, adx   
80 [0x50]:           iaload ebx, adx   
81 [0x51]:           rstore ebx   
82 [0x52]:           movi #1, ebx   
84 [0x54]:           loadval ecx   
85 [0x55]:           sub ecx, ebx -> ebx   
86 [0x56]:           smovr_2 ebx, fp+3   
87 [0x57]:           ipushl #3   
88 [0x58]:           loadl ebx, fp+1   
89 [0x59]:           loadval ecx   
90 [0x5a]:           gt ecx, ebx   
91 [0x5b]:           movr ebx, cmt   
92 [0x5c]:           movr cmt, ebx   
93 [0x5d]:           jne 123   
94 [0x5e]: line: 137 movl 0   
95 [0x5f]:           movn #1   
97 [0x61]:           pushobj   
98 [0x62]:           ipushl #3   
99 [0x63]:           movi #1, ebx   
101 [0x65]:           loadval ecx   
102 [0x66]:           sub ecx, ebx -> ebx   
103 [0x67]:           popobj2    
104 [0x68]:           movr adx, ebx   
105 [0x69]:           chklen adx   
106 [0x6a]:           movnd adx   
107 [0x6b]:           pushobj   
108 [0x6c]:           movl 0   
109 [0x6d]:           movn #1   
111 [0x6f]:           pushobj   
112 [0x70]:           loadl ebx, fp+3   
113 [0x71]:           popobj2    
114 [0x72]:           movr adx, ebx   
115 [0x73]:           chklen adx   
116 [0x74]:           movnd adx   
117 [0x75]:           popobj   
118 [0x76]:           loadl ebx, fp+3   
119 [0x77]:           movr egx, ebx   
120 [0x78]:           dec ebx   
121 [0x79]:           smovr_2 ebx, fp+3   
122 [0x7a]:           jmp @87   
123 [0x7b]: line: 138 pushl 2   
124 [0x7c]:           movl 0   
125 [0x7d]:           movn #1   
127 [0x7f]:           pushobj   
128 [0x80]:           loadl ebx, fp+1   
129 [0x81]:           popobj2    
130 [0x82]:           movr adx, ebx   
131 [0x83]:           chklen adx   
132 [0x84]:           movnd adx   
133 [0x85]:           popobj   
134 [0x86]:           nop   
135 [0x87]:           movl 0   
136 [0x88]:           _ulck   
137 [0x89]:           ret   


function: std#synced_list<std.io.task#job>.remove[3897] params(1) in file: /usr/include/sharp//synced_list.sharp:144:8: note:  
		    def remove(val: t) {
		       ^

0 [0x0]: line: 145 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 146 istorel 0, fp+2   
4 [0x4]:           ipushl #2   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           loadval ecx   
12 [0xc]:           lt ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 40   
16 [0x10]: line: 147 pushl 1   
17 [0x11]:           movl 0   
18 [0x12]:           movn #1   
20 [0x14]:           pushobj   
21 [0x15]:           loadl ebx, fp+2   
22 [0x16]:           popobj2    
23 [0x17]:           movr adx, ebx   
24 [0x18]:           chklen adx   
25 [0x19]:           movnd adx   
26 [0x1a]:           pushobj   
27 [0x1b]:           itest ebx   
28 [0x1c]:           movr cmt, ebx   
29 [0x1d]:           jne 36   
30 [0x1e]: line: 148 pushl 0   
31 [0x1f]:           ipushl #2   
32 [0x20]:           call @3899 // <std#synced_list<std.io.task#job>.remove_at>   
33 [0x21]: line: 149 movl 0   
34 [0x22]:           _ulck   
35 [0x23]:           ret   
36 [0x24]:           nop   
37 [0x25]:           iaddl 1, fp@2   
39 [0x27]:           jmp @4   
40 [0x28]:           movl 0   
41 [0x29]:           _ulck   
42 [0x2a]:           ret   


function: std#synced_list<std.io.task#job>.remove[3898] params(2) in file: /usr/include/sharp//synced_list.sharp:155:8: note:  
		    def remove(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 156 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 157 istorel 0, fp+3   
4 [0x4]:           ipushl #3   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           loadval ecx   
12 [0xc]:           lt ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 43   
16 [0x10]: line: 158 ipushl #2   
17 [0x11]:           pushl 1   
18 [0x12]:           movl 0   
19 [0x13]:           movn #1   
21 [0x15]:           pushobj   
22 [0x16]:           loadl ebx, fp+3   
23 [0x17]:           popobj2    
24 [0x18]:           movr adx, ebx   
25 [0x19]:           chklen adx   
26 [0x1a]:           movnd adx   
27 [0x1b]:           pushobj   
28 [0x1c]:           smov ebx, sp+[-2]   
29 [0x1d]:           calld ebx   
30 [0x1e]:           loadval ebx   
31 [0x1f]:           movr cmt, ebx   
32 [0x20]:           jne 39   
33 [0x21]: line: 159 pushl 0   
34 [0x22]:           ipushl #3   
35 [0x23]:           call @3899 // <std#synced_list<std.io.task#job>.remove_at>   
36 [0x24]: line: 160 movl 0   
37 [0x25]:           _ulck   
38 [0x26]:           ret   
39 [0x27]:           nop   
40 [0x28]:           iaddl 1, fp@3   
42 [0x2a]:           jmp @4   
43 [0x2b]:           movl 0   
44 [0x2c]:           _ulck   
45 [0x2d]:           ret   


function: std#synced_list<std.io.task#job>.remove_at[3899] params(1) in file: /usr/include/sharp//synced_list.sharp:166:8: note:  
		    def remove_at(index: var) {
		       ^

0 [0x0]: line: 167 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 168 ipushl #1   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gte ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           skpe ebx // pc = 18   
13 [0xd]:           loadl ecx, fp+1   
14 [0xe]:           movi #0, ebx   
16 [0x10]:           lt ecx, ebx   
17 [0x11]:           movr ebx, cmt   
18 [0x12]:           movr cmt, ebx   
19 [0x13]:           jne 28   
20 [0x14]: line: 169 new_class @0 // std#__srt_global   
21 [0x15]:           shl adx, adx -> adx   
22 [0x16]:           dup    
23 [0x17]:           pushl 0   
24 [0x18]:           ipushl #1   
25 [0x19]:           call @3905 // <std#synced_list<std.io.task#job>.out_of_bounds_msg>   
26 [0x1a]:           call @3555 // <std#out_of_bounds_exception.out_of_bounds_exception>   
27 [0x1b]:           throw    
28 [0x1c]:           nop   
29 [0x1d]: line: 171 movl 0   
30 [0x1e]:           movn #0   
32 [0x20]:           movi #0, adx   
34 [0x22]:           iaload ebx, adx   
35 [0x23]:           rstore ebx   
36 [0x24]:           loadl ebx, fp+1   
37 [0x25]:           loadval ecx   
38 [0x26]:           sub ecx, ebx -> ebx   
39 [0x27]:           rstore ebx   
40 [0x28]:           movi #1, ebx   
42 [0x2a]:           loadval ecx   
43 [0x2b]:           sub ecx, ebx -> ebx   
44 [0x2c]:           smovr_2 ebx, fp+2   
45 [0x2d]: line: 172 ipushl #2   
46 [0x2e]:           movi #0, ebx   
48 [0x30]:           loadval ecx   
49 [0x31]:           gt ecx, ebx   
50 [0x32]:           movr ebx, cmt   
51 [0x33]:           movr cmt, ebx   
52 [0x34]:           jne 76   
53 [0x35]: line: 173 movl 0   
54 [0x36]:           movn #1   
56 [0x38]:           pushobj   
57 [0x39]:           movl 0   
58 [0x3a]:           movn #1   
60 [0x3c]:           pushobj   
61 [0x3d]:           ipushl #1   
62 [0x3e]:           ipushl #1   
63 [0x3f]:           movi #1, ebx   
65 [0x41]:           loadval ecx   
66 [0x42]:           add ecx, ebx -> ebx   
67 [0x43]:           rstore ebx   
68 [0x44]:           movl 0   
69 [0x45]:           movn #0   
71 [0x47]:           movi #0, adx   
73 [0x49]:           iaload ebx, adx   
74 [0x4a]:           rstore ebx   
75 [0x4b]:           call @2097 // <std.io#__srt_global.memcopy>   
76 [0x4c]:           nop   
77 [0x4d]: line: 175 pushl 0   
78 [0x4e]:           call @3893 // <std#synced_list<std.io.task#job>.pop_back>   
79 [0x4f]:           movl 0   
80 [0x50]:           _ulck   
81 [0x51]:           ret   


function: std#synced_list<std.io.task#job>.indexof[3900] params(2) in file: /usr/include/sharp//synced_list.sharp:179:8: note:  
		    def indexof(comparer: t, find_func: (t, t)(var)) : var {
		       ^

0 [0x0]: line: 180 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 181 istorel 0, fp+3   
4 [0x4]:           ipushl #3   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           loadval ecx   
12 [0xc]:           lt ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 42   
16 [0x10]: line: 182 ipushl #2   
17 [0x11]:           movl 0   
18 [0x12]:           movn #1   
20 [0x14]:           pushobj   
21 [0x15]:           loadl ebx, fp+3   
22 [0x16]:           popobj2    
23 [0x17]:           movr adx, ebx   
24 [0x18]:           chklen adx   
25 [0x19]:           movnd adx   
26 [0x1a]:           pushobj   
27 [0x1b]:           pushl 1   
28 [0x1c]:           smov ebx, sp+[-2]   
29 [0x1d]:           calld ebx   
30 [0x1e]:           loadval ebx   
31 [0x1f]:           movr cmt, ebx   
32 [0x20]:           jne 38   
33 [0x21]: line: 183 loadl ebx, fp+3   
34 [0x22]:           return_val ebx   
35 [0x23]:           movl 0   
36 [0x24]:           _ulck   
37 [0x25]:           ret   
38 [0x26]:           nop   
39 [0x27]:           iaddl 1, fp@3   
41 [0x29]:           jmp @4   
42 [0x2a]: line: 187 istorel -1, fp+0   
44 [0x2c]:           movl 0   
45 [0x2d]:           _ulck   
46 [0x2e]:           ret   
47 [0x2f]:           movl 0   
48 [0x30]:           _ulck   


function: std#synced_list<std.io.task#job>.linear_sort[3901] params(1) in file: /usr/include/sharp//synced_list.sharp:191:8: note:  
		    def linear_sort(swap: (t, t)(var)) {
		       ^

0 [0x0]: line: 192 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 193 istorel 0, fp+2   
4 [0x4]:           ipushl #2   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           loadval ecx   
12 [0xc]:           lt ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 134   
16 [0x10]: line: 195 istorel 0, fp+3   
18 [0x12]:           ipushl #3   
19 [0x13]:           movl 0   
20 [0x14]:           movn #0   
22 [0x16]:           movi #0, adx   
24 [0x18]:           iaload ebx, adx   
25 [0x19]:           loadval ecx   
26 [0x1a]:           lt ecx, ebx   
27 [0x1b]:           movr ebx, cmt   
28 [0x1c]:           movr cmt, ebx   
29 [0x1d]:           jne 131   
30 [0x1e]: line: 196 ipushl #3   
31 [0x1f]:           movi #1, ebx   
33 [0x21]:           loadval ecx   
34 [0x22]:           add ecx, ebx -> ebx   
35 [0x23]:           rstore ebx   
36 [0x24]:           movl 0   
37 [0x25]:           movn #0   
39 [0x27]:           movi #0, adx   
41 [0x29]:           iaload ebx, adx   
42 [0x2a]:           loadval ecx   
43 [0x2b]:           lt ecx, ebx   
44 [0x2c]:           movr ebx, cmt   
45 [0x2d]:           movr cmt, ebx   
46 [0x2e]:           jne 127   
47 [0x2f]: line: 198 ipushl #1   
48 [0x30]:           movl 0   
49 [0x31]:           movn #1   
51 [0x33]:           pushobj   
52 [0x34]:           loadl ebx, fp+3   
53 [0x35]:           popobj2    
54 [0x36]:           movr adx, ebx   
55 [0x37]:           chklen adx   
56 [0x38]:           movnd adx   
57 [0x39]:           pushobj   
58 [0x3a]:           movl 0   
59 [0x3b]:           movn #1   
61 [0x3d]:           pushobj   
62 [0x3e]:           ipushl #3   
63 [0x3f]:           movi #1, ebx   
65 [0x41]:           loadval ecx   
66 [0x42]:           add ecx, ebx -> ebx   
67 [0x43]:           popobj2    
68 [0x44]:           movr adx, ebx   
69 [0x45]:           chklen adx   
70 [0x46]:           movnd adx   
71 [0x47]:           pushobj   
72 [0x48]:           smov ebx, sp+[-2]   
73 [0x49]:           calld ebx   
74 [0x4a]:           loadval ebx   
75 [0x4b]:           movr cmt, ebx   
76 [0x4c]:           jne 126   
77 [0x4d]: line: 199 movl 0   
78 [0x4e]:           movn #1   
80 [0x50]:           pushobj   
81 [0x51]:           loadl ebx, fp+3   
82 [0x52]:           popobj2    
83 [0x53]:           movr adx, ebx   
84 [0x54]:           chklen adx   
85 [0x55]:           movnd adx   
86 [0x56]:           smovr_3 fp+4   
87 [0x57]: line: 200 movl 0   
88 [0x58]:           movn #1   
90 [0x5a]:           pushobj   
91 [0x5b]:           ipushl #3   
92 [0x5c]:           movi #1, ebx   
94 [0x5e]:           loadval ecx   
95 [0x5f]:           add ecx, ebx -> ebx   
96 [0x60]:           popobj2    
97 [0x61]:           movr adx, ebx   
98 [0x62]:           chklen adx   
99 [0x63]:           movnd adx   
100 [0x64]:           pushobj   
101 [0x65]:           movl 0   
102 [0x66]:           movn #1   
104 [0x68]:           pushobj   
105 [0x69]:           loadl ebx, fp+3   
106 [0x6a]:           popobj2    
107 [0x6b]:           movr adx, ebx   
108 [0x6c]:           chklen adx   
109 [0x6d]:           movnd adx   
110 [0x6e]:           popobj   
111 [0x6f]: line: 201 pushl 4   
112 [0x70]:           movl 0   
113 [0x71]:           movn #1   
115 [0x73]:           pushobj   
116 [0x74]:           ipushl #3   
117 [0x75]:           movi #1, ebx   
119 [0x77]:           loadval ecx   
120 [0x78]:           add ecx, ebx -> ebx   
121 [0x79]:           popobj2    
122 [0x7a]:           movr adx, ebx   
123 [0x7b]:           chklen adx   
124 [0x7c]:           movnd adx   
125 [0x7d]:           popobj   
126 [0x7e]:           nop   
127 [0x7f]:           nop   
128 [0x80]:           iaddl 1, fp@3   
130 [0x82]:           jmp @18   
131 [0x83]:           iaddl 1, fp@2   
133 [0x85]:           jmp @4   
134 [0x86]:           movl 0   
135 [0x87]:           _ulck   
136 [0x88]:           ret   


function: std#synced_list<std.io.task#job>.find[3902] params(2) in file: /usr/include/sharp//synced_list.sharp:209:8: note:  
		    def find(comparer : t, find_func: (t, t)(var)) : t {
		       ^

0 [0x0]: line: 210 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 211 istorel 0, fp+3   
4 [0x4]:           ipushl #3   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           loadval ecx   
12 [0xc]:           lt ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 52   
16 [0x10]: line: 212 ipushl #2   
17 [0x11]:           movl 0   
18 [0x12]:           movn #1   
20 [0x14]:           pushobj   
21 [0x15]:           loadl ebx, fp+3   
22 [0x16]:           popobj2    
23 [0x17]:           movr adx, ebx   
24 [0x18]:           chklen adx   
25 [0x19]:           movnd adx   
26 [0x1a]:           pushobj   
27 [0x1b]:           pushl 1   
28 [0x1c]:           smov ebx, sp+[-2]   
29 [0x1d]:           calld ebx   
30 [0x1e]:           loadval ebx   
31 [0x1f]:           movr cmt, ebx   
32 [0x20]:           jne 48   
33 [0x21]: line: 213 movl 0   
34 [0x22]:           movn #1   
36 [0x24]:           pushobj   
37 [0x25]:           loadl ebx, fp+3   
38 [0x26]:           popobj2    
39 [0x27]:           movr adx, ebx   
40 [0x28]:           chklen adx   
41 [0x29]:           movnd adx   
42 [0x2a]:           pushobj   
43 [0x2b]:           movl 0   
44 [0x2c]:           _ulck   
45 [0x2d]:           popobj2    
46 [0x2e]:           returnobj   
47 [0x2f]:           ret   
48 [0x30]:           nop   
49 [0x31]:           iaddl 1, fp@3   
51 [0x33]:           jmp @4   
52 [0x34]: line: 217 movl 4   
53 [0x35]:           del   
54 [0x36]: line: 218 pushl 4   
55 [0x37]:           movl 0   
56 [0x38]:           _ulck   
57 [0x39]:           popobj2    
58 [0x3a]:           returnobj   
59 [0x3b]:           ret   
60 [0x3c]:           movl 0   
61 [0x3d]:           _ulck   


function: std#synced_list<std.io.task#job>.replace[3903] params(2) in file: /usr/include/sharp//synced_list.sharp:222:8: note:  
		    def replace(val: t, compare_fun: (t, t)(var)) : var {
		       ^

0 [0x0]: line: 223 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 224 istorel 0, fp+3   
4 [0x4]:           ipushl #3   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           movi #0, adx   
10 [0xa]:           iaload ebx, adx   
11 [0xb]:           loadval ecx   
12 [0xc]:           lt ecx, ebx   
13 [0xd]:           movr ebx, cmt   
14 [0xe]:           movr cmt, ebx   
15 [0xf]:           jne 53   
16 [0x10]: line: 225 ipushl #2   
17 [0x11]:           pushl 1   
18 [0x12]:           movl 0   
19 [0x13]:           movn #1   
21 [0x15]:           pushobj   
22 [0x16]:           loadl ebx, fp+3   
23 [0x17]:           popobj2    
24 [0x18]:           movr adx, ebx   
25 [0x19]:           chklen adx   
26 [0x1a]:           movnd adx   
27 [0x1b]:           pushobj   
28 [0x1c]:           smov ebx, sp+[-2]   
29 [0x1d]:           calld ebx   
30 [0x1e]:           loadval ebx   
31 [0x1f]:           movr cmt, ebx   
32 [0x20]:           jne 49   
33 [0x21]: line: 226 pushl 1   
34 [0x22]:           movl 0   
35 [0x23]:           movn #1   
37 [0x25]:           pushobj   
38 [0x26]:           loadl ebx, fp+3   
39 [0x27]:           popobj2    
40 [0x28]:           movr adx, ebx   
41 [0x29]:           chklen adx   
42 [0x2a]:           movnd adx   
43 [0x2b]:           popobj   
44 [0x2c]: line: 227 istorel 1, fp+0   
46 [0x2e]:           movl 0   
47 [0x2f]:           _ulck   
48 [0x30]:           ret   
49 [0x31]:           nop   
50 [0x32]:           iaddl 1, fp@3   
52 [0x34]:           jmp @4   
53 [0x35]: line: 231 istorel 0, fp+0   
55 [0x37]:           movl 0   
56 [0x38]:           _ulck   
57 [0x39]:           ret   
58 [0x3a]:           movl 0   
59 [0x3b]:           _ulck   


function: std#synced_list<std.io.task#job>.to_string[3904] params(0) in file: /usr/include/sharp//synced_list.sharp:235:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 236 movl 0   
1 [0x1]:           _lck    
2 [0x2]: line: 237 new_class @0 // std#__srt_global   
3 [0x3]:           movi #112, adx   
5 [0x5]:           call @1958 // <std#string_builder.string_builder>   
6 [0x6]:           popobj2    
7 [0x7]:           smovr_3 fp+1   
8 [0x8]: line: 239 pushl 1   
9 [0x9]:           newstr @149 // [    
10 [0xa]:           call @1954 // <std#string_builder.operator+=>   
11 [0xb]:           pop   
12 [0xc]: line: 240 istorel 0, fp+2   
14 [0xe]:           ipushl #2   
15 [0xf]:           movl 0   
16 [0x10]:           movn #0   
18 [0x12]:           movi #0, adx   
20 [0x14]:           iaload ebx, adx   
21 [0x15]:           loadval ecx   
22 [0x16]:           lt ecx, ebx   
23 [0x17]:           movr ebx, cmt   
24 [0x18]:           movr cmt, ebx   
25 [0x19]:           jne 64   
26 [0x1a]: line: 241 pushl 1   
27 [0x1b]:           movl 0   
28 [0x1c]:           movn #1   
30 [0x1e]:           pushobj   
31 [0x1f]:           loadl ebx, fp+2   
32 [0x20]:           popobj2    
33 [0x21]:           movr adx, ebx   
34 [0x22]:           chklen adx   
35 [0x23]:           movnd adx   
36 [0x24]:           pushobj   
37 [0x25]:           call @1950 // <std#string_builder.operator+=>   
38 [0x26]:           pop   
39 [0x27]: line: 243 ipushl #2   
40 [0x28]:           movi #1, ebx   
42 [0x2a]:           loadval ecx   
43 [0x2b]:           add ecx, ebx -> ebx   
44 [0x2c]:           rstore ebx   
45 [0x2d]:           movl 0   
46 [0x2e]:           movn #0   
48 [0x30]:           movi #0, adx   
50 [0x32]:           iaload ebx, adx   
51 [0x33]:           loadval ecx   
52 [0x34]:           lt ecx, ebx   
53 [0x35]:           movr ebx, cmt   
54 [0x36]:           movr cmt, ebx   
55 [0x37]:           jne 60   
56 [0x38]: line: 244 pushl 1   
57 [0x39]:           newstr @150 // ,    
58 [0x3a]:           call @1954 // <std#string_builder.operator+=>   
59 [0x3b]:           pop   
60 [0x3c]:           nop   
61 [0x3d]:           iaddl 1, fp@2   
63 [0x3f]:           jmp @14   
64 [0x40]: line: 248 pushl 1   
65 [0x41]:           newstr @151 //  ]   
66 [0x42]:           call @1954 // <std#string_builder.operator+=>   
67 [0x43]:           pop   
68 [0x44]: line: 249 pushl 1   
69 [0x45]:           call @1931 // <std#string_builder.to_string>   
70 [0x46]:           popobj2    
71 [0x47]:           pushobj   
72 [0x48]:           movl 0   
73 [0x49]:           _ulck   
74 [0x4a]:           popobj2    
75 [0x4b]:           returnobj   
76 [0x4c]:           ret   
77 [0x4d]:           movl 0   
78 [0x4e]:           _ulck   


function: std#synced_list<std.io.task#job>.out_of_bounds_msg[3905] params(1) in file: /usr/include/sharp//synced_list.sharp:253:16: note:  
		    private def out_of_bounds_msg(index: var) : string {
		               ^

0 [0x0]: line: 254 new_class @0 // std#__srt_global   
1 [0x1]:           ret   
2 [0x2]:           dup    
3 [0x3]:           newstr @152 // Index:    
4 [0x4]:           call @1959 // <std#string.string>   
5 [0x5]:           ipushl #1   
6 [0x6]:           call @1991 // <std#string.operator+>   
7 [0x7]:           newstr @153 // , size:    
8 [0x8]:           call @1971 // <std#string.operator+>   
9 [0x9]:           movl 0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           rstore ebx   
16 [0x10]:           call @1991 // <std#string.operator+>   
17 [0x11]:           popobj2    
18 [0x12]:           returnobj   
19 [0x13]:           ret   


constructor: std#list<std.io#thread>.list[3906] params(0) in file: /usr/include/sharp//list.sharp:13:9: note:  
		    list() {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 14 movi #10, ebx   
3 [0x3]:          new_classarray ebx  // std.io#thread[]   
5 [0x5]:          movl 0   
6 [0x6]:          movn #1   
8 [0x8]:          popobj   
9 [0x9]:          ret   


constructor: std#list<std.io#thread>.list[3907] params(1) in file: /usr/include/sharp//list.sharp:17:9: note:  
		    list(starting_capacity: var) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 18 loadl ebx, fp+1   
2 [0x2]:          new_classarray ebx  // std.io#thread[]   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]:          ret   


constructor: std#list<std.io#thread>.list[3908] params(1) in file: /usr/include/sharp//list.sharp:21:9: note:  
		    list(initial_data: t[]) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 22 pushl 0   
2 [0x2]:          pushl 1   
3 [0x3]:          call @3919 // <std#list<std.io#thread>.add_all>   
4 [0x4]:          ret   


function: std#list<std.io#thread>.empty[3909] params(0) in file: /usr/include/sharp//list.sharp:25:8: note:  
		    def empty() := n_elements == 0;
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          return_val cmt   
12 [0xc]:          ret   


function: std#list<std.io#thread>.set_compact[3910] params(1) in file: /usr/include/sharp//list.sharp:27:8: note:  
		    def set_compact(compact_array: var) {
		       ^

0 [0x0]: line: 28 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #2   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]:          ret   


function: std#list<std.io#thread>.get_elements[3911] params(0) in file: /usr/include/sharp//list.sharp:31:8: note:  
		    def get_elements() : t[] {
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          jne 17   
12 [0xc]:          pushnull    
13 [0xd]:          popobj2    
14 [0xe]:          returnobj   
15 [0xf]:          ret   
16 [0x10]:          jmp @34   
17 [0x11]: line: 33 movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          pushobj   
21 [0x15]:          istore 0   
23 [0x17]:          movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          iaload ebx, adx   
29 [0x1d]:          rstore ebx   
30 [0x1e]:          call @2107 // <std.io#__srt_global.copy>   
31 [0x1f]:          popobj2    
32 [0x20]:          returnobj   
33 [0x21]:          ret   
34 [0x22]:          nop   


overload function: std#list<std.io#thread>.operator[[3912] params(1) in file: /usr/include/sharp//list.sharp:36:8: note:  
		    def operator[](index: var): t {
		       ^

0 [0x0]: line: 37 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 38 new_class @0 // std#__srt_global   
19 [0x13]:          shl adx, adx -> adx   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3933 // <std#list<std.io#thread>.out_of_bounds_msg>   
24 [0x18]:          call @3555 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 39 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          returnobj   
37 [0x25]:          ret   


function: std#list<std.io#thread>.at[3913] params(1) in file: /usr/include/sharp//list.sharp:42:8: note:  
		    def at(index: var): t {
		       ^

0 [0x0]: line: 43 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 44 new_class @0 // std#__srt_global   
19 [0x13]:          shl adx, adx -> adx   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3933 // <std#list<std.io#thread>.out_of_bounds_msg>   
24 [0x18]:          call @3555 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 45 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          returnobj   
37 [0x25]:          ret   


function: std#list<std.io#thread>.last[3914] params(0) in file: /usr/include/sharp//list.sharp:48:8: note:  
		    def last(): t {
		       ^

0 [0x0]: line: 49 pushl 0   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movi #1, ebx   
10 [0xa]:          loadval ecx   
11 [0xb]:          sub ecx, ebx -> ebx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @3913 // <std#list<std.io#thread>.at>   
14 [0xe]:          popobj2    
15 [0xf]:          returnobj   
16 [0x10]:          ret   


function: std#list<std.io#thread>.put[3915] params(2) in file: /usr/include/sharp//list.sharp:52:8: note:  
		    def put(index: var, element: t) : t {
		       ^

0 [0x0]: line: 53 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 54 new_class @0 // std#__srt_global   
19 [0x13]:          shl adx, adx -> adx   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3933 // <std#list<std.io#thread>.out_of_bounds_msg>   
24 [0x18]:          call @3555 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 56 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          smovr_3 fp+3   
37 [0x25]: line: 57 pushl 2   
38 [0x26]:          movl 0   
39 [0x27]:          movn #1   
41 [0x29]:          pushobj   
42 [0x2a]:          loadl ebx, fp+1   
43 [0x2b]:          popobj2    
44 [0x2c]:          movr adx, ebx   
45 [0x2d]:          chklen adx   
46 [0x2e]:          movnd adx   
47 [0x2f]:          popobj   
48 [0x30]: line: 58 movl 3   
49 [0x31]:          returnobj   
50 [0x32]:          ret   


function: std#list<std.io#thread>.expand[3916] params(0) in file: /usr/include/sharp//list.sharp:61:16: note:  
		    private def expand() {
		               ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #2   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 24   
8 [0x8]: line: 63 movl 0   
9 [0x9]:          movn #1   
11 [0xb]:          pushobj   
12 [0xc]:          movl 0   
13 [0xd]:          movn #1   
15 [0xf]:          sizeof ebx   
16 [0x10]:          rstore ebx   
17 [0x11]:          movi #128, ebx   
19 [0x13]:          loadval ecx   
20 [0x14]:          add ecx, ebx -> ebx   
21 [0x15]:          rstore ebx   
22 [0x16]:          call @2087 // <std.io#__srt_global.realloc>   
23 [0x17]:          jmp @51   
24 [0x18]: line: 65 movl 0   
25 [0x19]:          movn #1   
27 [0x1b]:          pushobj   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          sizeof ebx   
32 [0x20]:          rstore ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #1   
36 [0x24]:          sizeof ebx   
37 [0x25]:          rstore ebx   
38 [0x26]:          movi #4, ebx   
40 [0x28]:          loadval ecx   
41 [0x29]:          shr ecx, ebx -> ebx   
42 [0x2a]:          loadval ecx   
43 [0x2b]:          add ecx, ebx -> ebx   
44 [0x2c]:          rstore ebx   
45 [0x2d]:          movi #128, ebx   
47 [0x2f]:          loadval ecx   
48 [0x30]:          add ecx, ebx -> ebx   
49 [0x31]:          rstore ebx   
50 [0x32]:          call @2087 // <std.io#__srt_global.realloc>   
51 [0x33]:          nop   
52 [0x34]:          ret   


function: std#list<std.io#thread>.clear[3917] params(0) in file: /usr/include/sharp//list.sharp:68:8: note:  
		    def clear() {
		       ^

0 [0x0]: line: 69 movi #10, ebx   
2 [0x2]:          new_classarray ebx  // std.io#thread[]   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]: line: 70 movi #0, ebx   
10 [0xa]:          movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          movi #0, adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          ret   


function: std#list<std.io#thread>.add_all[3918] params(1) in file: /usr/include/sharp//list.sharp:73:8: note:  
		    def add_all(lst: list<t>) {
		       ^

0 [0x0]: line: 74 movl 1   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          istore 0   
6 [0x6]:          movl 1   
7 [0x7]:          movn #0   
9 [0x9]:          movi #0, adx   
11 [0xb]:          iaload ebx, adx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @2107 // <std.io#__srt_global.copy>   
14 [0xe]:          popobj2    
15 [0xf]:          movi #19, cmt   
17 [0x11]:          cast cmt   
18 [0x12]:          pushobj   
19 [0x13]:          movl 0   
20 [0x14]:          movn #1   
22 [0x16]:          popobj   
23 [0x17]: line: 75 movl 1   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          iaload ebx, adx   
29 [0x1d]:          movl 0   
30 [0x1e]:          movn #0   
32 [0x20]:          movi #0, adx   
34 [0x22]:          rmov adx, ebx   
35 [0x23]:          ret   


function: std#list<std.io#thread>.add_all[3919] params(1) in file: /usr/include/sharp//list.sharp:78:8: note:  
		    def add_all(lst: t[]) {
		       ^

0 [0x0]: line: 79 movl 1   
1 [0x1]:          checknull   
2 [0x2]:          not ebx, ebx   
3 [0x3]:          movr cmt, ebx   
4 [0x4]:          jne 30   
5 [0x5]: line: 80 pushl 1   
6 [0x6]:          istore 0   
8 [0x8]:          movl 1   
9 [0x9]:          sizeof ebx   
10 [0xa]:          rstore ebx   
11 [0xb]:          call @2107 // <std.io#__srt_global.copy>   
12 [0xc]:          popobj2    
13 [0xd]:          movi #19, cmt   
15 [0xf]:          cast cmt   
16 [0x10]:          pushobj   
17 [0x11]:          movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          popobj   
21 [0x15]: line: 81 movl 1   
22 [0x16]:          sizeof ebx   
23 [0x17]:          movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          rmov adx, ebx   
29 [0x1d]:          jmp @46   
30 [0x1e]: line: 83 movi #0, ebx   
32 [0x20]:          movl 0   
33 [0x21]:          movn #0   
35 [0x23]:          movi #0, adx   
37 [0x25]:          rmov adx, ebx   
38 [0x26]: line: 84 movi #10, ebx   
40 [0x28]:          new_classarray ebx  // std.io#thread[]   
42 [0x2a]:          movl 0   
43 [0x2b]:          movn #1   
45 [0x2d]:          popobj   
46 [0x2e]:          nop   
47 [0x2f]:          ret   


function: std#list<std.io#thread>.add[3920] params(1) in file: /usr/include/sharp//list.sharp:88:8: note:  
		    def add(element: t) {
		       ^

0 [0x0]: line: 89 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 0   
8 [0x8]:          movn #1   
10 [0xa]:          sizeof ebx   
11 [0xb]:          loadval ecx   
12 [0xc]:          gte ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          movr cmt, ebx   
15 [0xf]:          jne 18   
16 [0x10]: line: 90 pushl 0   
17 [0x11]:          call @3916 // <std#list<std.io#thread>.expand>   
18 [0x12]:          nop   
19 [0x13]: line: 91 pushl 1   
20 [0x14]:          movl 0   
21 [0x15]:          movn #1   
23 [0x17]:          pushobj   
24 [0x18]:          movl 0   
25 [0x19]:          movn #0   
27 [0x1b]:          movi #0, adx   
29 [0x1d]:          iaload ebx, adx   
30 [0x1e]:          movr egx, ebx   
31 [0x1f]:          inc ebx   
32 [0x20]:          movi #0, adx   
34 [0x22]:          rmov adx, ebx   
35 [0x23]:          movr ebx, egx   
36 [0x24]:          popobj2    
37 [0x25]:          movr adx, ebx   
38 [0x26]:          chklen adx   
39 [0x27]:          movnd adx   
40 [0x28]:          popobj   
41 [0x29]:          ret   


function: std#list<std.io#thread>.indexof[3921] params(1) in file: /usr/include/sharp//list.sharp:94:8: note:  
		    def indexof(element: t) : var {
		       ^

0 [0x0]: line: 95 istorel 0, fp+2   
2 [0x2]:          ipushl #2   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          lt ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 36   
14 [0xe]: line: 96 pushl 1   
15 [0xf]:          movl 0   
16 [0x10]:          movn #1   
18 [0x12]:          pushobj   
19 [0x13]:          loadl ebx, fp+2   
20 [0x14]:          popobj2    
21 [0x15]:          movr adx, ebx   
22 [0x16]:          chklen adx   
23 [0x17]:          movnd adx   
24 [0x18]:          pushobj   
25 [0x19]:          call @2202 // <std.io#thread.operator==>   
26 [0x1a]:          loadval ebx   
27 [0x1b]:          movr cmt, ebx   
28 [0x1c]:          jne 32   
29 [0x1d]: line: 97 loadl ebx, fp+2   
30 [0x1e]:          return_val ebx   
31 [0x1f]:          ret   
32 [0x20]:          nop   
33 [0x21]:          iaddl 1, fp@2   
35 [0x23]:          jmp @2   
36 [0x24]: line: 101 istorel -1, fp+0   
38 [0x26]:           ret   


function: std#list<std.io#thread>.pop_back[3922] params(0) in file: /usr/include/sharp//list.sharp:104:8: note:  
		    def pop_back() {
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #0, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 38   
14 [0xe]: line: 106 movl 1   
15 [0xf]:           del   
16 [0x10]: line: 107 pushl 1   
17 [0x11]:           movl 0   
18 [0x12]:           movn #1   
20 [0x14]:           pushobj   
21 [0x15]:           movl 0   
22 [0x16]:           movn #0   
24 [0x18]:           movi #0, adx   
26 [0x1a]:           iaload ebx, adx   
27 [0x1b]:           movr egx, ebx   
28 [0x1c]:           dec ebx   
29 [0x1d]:           movi #0, adx   
31 [0x1f]:           rmov adx, ebx   
32 [0x20]:           movr ebx, egx   
33 [0x21]:           popobj2    
34 [0x22]:           movr adx, ebx   
35 [0x23]:           chklen adx   
36 [0x24]:           movnd adx   
37 [0x25]:           popobj   
38 [0x26]:           nop   
39 [0x27]:           ret   


function: std#list<std.io#thread>.size[3923] params(0) in file: /usr/include/sharp//list.sharp:111:8: note:  
		    def size() := n_elements;
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std#list<std.io#thread>.insert[3924] params(2) in file: /usr/include/sharp//list.sharp:113:8: note:  
		    def insert(index: var, element: t) {
		       ^

0 [0x0]: line: 114 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gt ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 16   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 26   
18 [0x12]: line: 115 new_class @0 // std#__srt_global   
19 [0x13]:           shl adx, adx -> adx   
20 [0x14]:           dup    
21 [0x15]:           pushl 0   
22 [0x16]:           ipushl #1   
23 [0x17]:           call @3933 // <std#list<std.io#thread>.out_of_bounds_msg>   
24 [0x18]:           call @3555 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 117 movl 0   
28 [0x1c]:           movn #0   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movi #0, ebx   
36 [0x24]:           loadval ecx   
37 [0x25]:           test ecx, ebx   
38 [0x26]:           jne 43   
39 [0x27]: line: 118 pushl 0   
40 [0x28]:           pushl 2   
41 [0x29]:           call @3920 // <std#list<std.io#thread>.add>   
42 [0x2a]:           jmp @132   
43 [0x2b]: line: 120 movl 0   
44 [0x2c]:           movn #0   
46 [0x2e]:           movi #0, adx   
48 [0x30]:           iaload ebx, adx   
49 [0x31]:           rstore ebx   
50 [0x32]:           movl 0   
51 [0x33]:           movn #1   
53 [0x35]:           sizeof ebx   
54 [0x36]:           loadval ecx   
55 [0x37]:           gte ecx, ebx   
56 [0x38]:           movr ebx, cmt   
57 [0x39]:           movr cmt, ebx   
58 [0x3a]:           jne 61   
59 [0x3b]: line: 121 pushl 0   
60 [0x3c]:           call @3916 // <std#list<std.io#thread>.expand>   
61 [0x3d]:           nop   
62 [0x3e]: line: 122 movl 0   
63 [0x3f]:           movn #0   
65 [0x41]:           movi #0, adx   
67 [0x43]:           iaload ebx, adx   
68 [0x44]:           movr egx, ebx   
69 [0x45]:           inc ebx   
70 [0x46]:           movi #0, adx   
72 [0x48]:           rmov adx, ebx   
73 [0x49]: line: 123 movl 0   
74 [0x4a]:           movn #0   
76 [0x4c]:           movi #0, adx   
78 [0x4e]:           iaload ebx, adx   
79 [0x4f]:           rstore ebx   
80 [0x50]:           movi #1, ebx   
82 [0x52]:           loadval ecx   
83 [0x53]:           sub ecx, ebx -> ebx   
84 [0x54]:           smovr_2 ebx, fp+3   
85 [0x55]:           ipushl #3   
86 [0x56]:           loadl ebx, fp+1   
87 [0x57]:           loadval ecx   
88 [0x58]:           gt ecx, ebx   
89 [0x59]:           movr ebx, cmt   
90 [0x5a]:           movr cmt, ebx   
91 [0x5b]:           jne 121   
92 [0x5c]: line: 124 movl 0   
93 [0x5d]:           movn #1   
95 [0x5f]:           pushobj   
96 [0x60]:           ipushl #3   
97 [0x61]:           movi #1, ebx   
99 [0x63]:           loadval ecx   
100 [0x64]:           sub ecx, ebx -> ebx   
101 [0x65]:           popobj2    
102 [0x66]:           movr adx, ebx   
103 [0x67]:           chklen adx   
104 [0x68]:           movnd adx   
105 [0x69]:           pushobj   
106 [0x6a]:           movl 0   
107 [0x6b]:           movn #1   
109 [0x6d]:           pushobj   
110 [0x6e]:           loadl ebx, fp+3   
111 [0x6f]:           popobj2    
112 [0x70]:           movr adx, ebx   
113 [0x71]:           chklen adx   
114 [0x72]:           movnd adx   
115 [0x73]:           popobj   
116 [0x74]:           loadl ebx, fp+3   
117 [0x75]:           movr egx, ebx   
118 [0x76]:           dec ebx   
119 [0x77]:           smovr_2 ebx, fp+3   
120 [0x78]:           jmp @85   
121 [0x79]: line: 125 pushl 2   
122 [0x7a]:           movl 0   
123 [0x7b]:           movn #1   
125 [0x7d]:           pushobj   
126 [0x7e]:           loadl ebx, fp+1   
127 [0x7f]:           popobj2    
128 [0x80]:           movr adx, ebx   
129 [0x81]:           chklen adx   
130 [0x82]:           movnd adx   
131 [0x83]:           popobj   
132 [0x84]:           nop   
133 [0x85]:           ret   


function: std#list<std.io#thread>.find[3925] params(2) in file: /usr/include/sharp//list.sharp:129:8: note:  
		    def find(comparer : t, find_func: (t, t)(var)) : t {
		       ^

0 [0x0]: line: 130 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 46   
14 [0xe]: line: 131 ipushl #2   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+3   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           pushl 1   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 42   
31 [0x1f]: line: 132 movl 0   
32 [0x20]:           movn #1   
34 [0x22]:           pushobj   
35 [0x23]:           loadl ebx, fp+3   
36 [0x24]:           popobj2    
37 [0x25]:           movr adx, ebx   
38 [0x26]:           chklen adx   
39 [0x27]:           movnd adx   
40 [0x28]:           returnobj   
41 [0x29]:           ret   
42 [0x2a]:           nop   
43 [0x2b]:           iaddl 1, fp@3   
45 [0x2d]:           jmp @2   
46 [0x2e]: line: 136 movl 4   
47 [0x2f]:           del   
48 [0x30]: line: 137 movl 4   
49 [0x31]:           returnobj   
50 [0x32]:           ret   


function: std#list<std.io#thread>.remove[3926] params(1) in file: /usr/include/sharp//list.sharp:140:8: note:  
		    def remove(val: t) {
		       ^

0 [0x0]: line: 141 istorel 0, fp+2   
2 [0x2]:           ipushl #2   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 37   
14 [0xe]: line: 142 pushl 1   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+2   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           call @2202 // <std.io#thread.operator==>   
26 [0x1a]:           loadval ebx   
27 [0x1b]:           movr cmt, ebx   
28 [0x1c]:           jne 33   
29 [0x1d]: line: 143 pushl 0   
30 [0x1e]:           ipushl #2   
31 [0x1f]:           call @3930 // <std#list<std.io#thread>.remove_at>   
32 [0x20]: line: 144 ret   
33 [0x21]:           nop   
34 [0x22]:           iaddl 1, fp@2   
36 [0x24]:           jmp @2   
37 [0x25]:           ret   


function: std#list<std.io#thread>.remove[3927] params(2) in file: /usr/include/sharp//list.sharp:149:8: note:  
		    def remove(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 150 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 39   
14 [0xe]: line: 151 ipushl #2   
15 [0xf]:           pushl 1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #1   
19 [0x13]:           pushobj   
20 [0x14]:           loadl ebx, fp+3   
21 [0x15]:           popobj2    
22 [0x16]:           movr adx, ebx   
23 [0x17]:           chklen adx   
24 [0x18]:           movnd adx   
25 [0x19]:           pushobj   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 35   
31 [0x1f]: line: 152 pushl 0   
32 [0x20]:           ipushl #3   
33 [0x21]:           call @3930 // <std#list<std.io#thread>.remove_at>   
34 [0x22]: line: 153 ret   
35 [0x23]:           nop   
36 [0x24]:           iaddl 1, fp@3   
38 [0x26]:           jmp @2   
39 [0x27]:           ret   


function: std#list<std.io#thread>.replace[3928] params(2) in file: /usr/include/sharp//list.sharp:158:8: note:  
		    def replace(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 159 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 47   
14 [0xe]: line: 160 ipushl #2   
15 [0xf]:           pushl 1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #1   
19 [0x13]:           pushobj   
20 [0x14]:           loadl ebx, fp+3   
21 [0x15]:           popobj2    
22 [0x16]:           movr adx, ebx   
23 [0x17]:           chklen adx   
24 [0x18]:           movnd adx   
25 [0x19]:           pushobj   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 43   
31 [0x1f]: line: 161 pushl 1   
32 [0x20]:           movl 0   
33 [0x21]:           movn #1   
35 [0x23]:           pushobj   
36 [0x24]:           loadl ebx, fp+3   
37 [0x25]:           popobj2    
38 [0x26]:           movr adx, ebx   
39 [0x27]:           chklen adx   
40 [0x28]:           movnd adx   
41 [0x29]:           popobj   
42 [0x2a]: line: 162 ret   
43 [0x2b]:           nop   
44 [0x2c]:           iaddl 1, fp@3   
46 [0x2e]:           jmp @2   
47 [0x2f]:           ret   


function: std#list<std.io#thread>.linear_sort[3929] params(1) in file: /usr/include/sharp//list.sharp:167:8: note:  
		    def linear_sort(swap: (t, t)(var)) {
		       ^

0 [0x0]: line: 168 istorel 0, fp+2   
2 [0x2]:           ipushl #2   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 132   
14 [0xe]: line: 170 istorel 0, fp+3   
16 [0x10]:           ipushl #3   
17 [0x11]:           movl 0   
18 [0x12]:           movn #0   
20 [0x14]:           movi #0, adx   
22 [0x16]:           iaload ebx, adx   
23 [0x17]:           loadval ecx   
24 [0x18]:           lt ecx, ebx   
25 [0x19]:           movr ebx, cmt   
26 [0x1a]:           movr cmt, ebx   
27 [0x1b]:           jne 129   
28 [0x1c]: line: 171 ipushl #3   
29 [0x1d]:           movi #1, ebx   
31 [0x1f]:           loadval ecx   
32 [0x20]:           add ecx, ebx -> ebx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movl 0   
35 [0x23]:           movn #0   
37 [0x25]:           movi #0, adx   
39 [0x27]:           iaload ebx, adx   
40 [0x28]:           loadval ecx   
41 [0x29]:           lt ecx, ebx   
42 [0x2a]:           movr ebx, cmt   
43 [0x2b]:           movr cmt, ebx   
44 [0x2c]:           jne 125   
45 [0x2d]: line: 173 ipushl #1   
46 [0x2e]:           movl 0   
47 [0x2f]:           movn #1   
49 [0x31]:           pushobj   
50 [0x32]:           loadl ebx, fp+3   
51 [0x33]:           popobj2    
52 [0x34]:           movr adx, ebx   
53 [0x35]:           chklen adx   
54 [0x36]:           movnd adx   
55 [0x37]:           pushobj   
56 [0x38]:           movl 0   
57 [0x39]:           movn #1   
59 [0x3b]:           pushobj   
60 [0x3c]:           ipushl #3   
61 [0x3d]:           movi #1, ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           add ecx, ebx -> ebx   
65 [0x41]:           popobj2    
66 [0x42]:           movr adx, ebx   
67 [0x43]:           chklen adx   
68 [0x44]:           movnd adx   
69 [0x45]:           pushobj   
70 [0x46]:           smov ebx, sp+[-2]   
71 [0x47]:           calld ebx   
72 [0x48]:           loadval ebx   
73 [0x49]:           movr cmt, ebx   
74 [0x4a]:           jne 124   
75 [0x4b]: line: 174 movl 0   
76 [0x4c]:           movn #1   
78 [0x4e]:           pushobj   
79 [0x4f]:           loadl ebx, fp+3   
80 [0x50]:           popobj2    
81 [0x51]:           movr adx, ebx   
82 [0x52]:           chklen adx   
83 [0x53]:           movnd adx   
84 [0x54]:           smovr_3 fp+4   
85 [0x55]: line: 175 movl 0   
86 [0x56]:           movn #1   
88 [0x58]:           pushobj   
89 [0x59]:           ipushl #3   
90 [0x5a]:           movi #1, ebx   
92 [0x5c]:           loadval ecx   
93 [0x5d]:           add ecx, ebx -> ebx   
94 [0x5e]:           popobj2    
95 [0x5f]:           movr adx, ebx   
96 [0x60]:           chklen adx   
97 [0x61]:           movnd adx   
98 [0x62]:           pushobj   
99 [0x63]:           movl 0   
100 [0x64]:           movn #1   
102 [0x66]:           pushobj   
103 [0x67]:           loadl ebx, fp+3   
104 [0x68]:           popobj2    
105 [0x69]:           movr adx, ebx   
106 [0x6a]:           chklen adx   
107 [0x6b]:           movnd adx   
108 [0x6c]:           popobj   
109 [0x6d]: line: 176 pushl 4   
110 [0x6e]:           movl 0   
111 [0x6f]:           movn #1   
113 [0x71]:           pushobj   
114 [0x72]:           ipushl #3   
115 [0x73]:           movi #1, ebx   
117 [0x75]:           loadval ecx   
118 [0x76]:           add ecx, ebx -> ebx   
119 [0x77]:           popobj2    
120 [0x78]:           movr adx, ebx   
121 [0x79]:           chklen adx   
122 [0x7a]:           movnd adx   
123 [0x7b]:           popobj   
124 [0x7c]:           nop   
125 [0x7d]:           nop   
126 [0x7e]:           iaddl 1, fp@3   
128 [0x80]:           jmp @16   
129 [0x81]:           iaddl 1, fp@2   
131 [0x83]:           jmp @2   
132 [0x84]:           ret   


function: std#list<std.io#thread>.remove_at[3930] params(1) in file: /usr/include/sharp//list.sharp:183:8: note:  
		    def remove_at(index: var) {
		       ^

0 [0x0]: line: 184 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gte ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 16   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 26   
18 [0x12]: line: 185 new_class @0 // std#__srt_global   
19 [0x13]:           shl adx, adx -> adx   
20 [0x14]:           dup    
21 [0x15]:           pushl 0   
22 [0x16]:           ipushl #1   
23 [0x17]:           call @3933 // <std#list<std.io#thread>.out_of_bounds_msg>   
24 [0x18]:           call @3555 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 187 movl 0   
28 [0x1c]:           movn #0   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           rstore ebx   
34 [0x22]:           loadl ebx, fp+1   
35 [0x23]:           loadval ecx   
36 [0x24]:           sub ecx, ebx -> ebx   
37 [0x25]:           rstore ebx   
38 [0x26]:           movi #1, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           sub ecx, ebx -> ebx   
42 [0x2a]:           smovr_2 ebx, fp+2   
43 [0x2b]: line: 188 ipushl #2   
44 [0x2c]:           movi #0, ebx   
46 [0x2e]:           loadval ecx   
47 [0x2f]:           gt ecx, ebx   
48 [0x30]:           movr ebx, cmt   
49 [0x31]:           movr cmt, ebx   
50 [0x32]:           jne 74   
51 [0x33]: line: 189 movl 0   
52 [0x34]:           movn #1   
54 [0x36]:           pushobj   
55 [0x37]:           movl 0   
56 [0x38]:           movn #1   
58 [0x3a]:           pushobj   
59 [0x3b]:           ipushl #1   
60 [0x3c]:           ipushl #1   
61 [0x3d]:           movi #1, ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           add ecx, ebx -> ebx   
65 [0x41]:           rstore ebx   
66 [0x42]:           movl 0   
67 [0x43]:           movn #0   
69 [0x45]:           movi #0, adx   
71 [0x47]:           iaload ebx, adx   
72 [0x48]:           rstore ebx   
73 [0x49]:           call @2097 // <std.io#__srt_global.memcopy>   
74 [0x4a]:           nop   
75 [0x4b]: line: 191 pushl 0   
76 [0x4c]:           call @3922 // <std#list<std.io#thread>.pop_back>   
77 [0x4d]:           ret   


function: std#list<std.io#thread>.indexof[3931] params(2) in file: /usr/include/sharp//list.sharp:194:8: note:  
		    def indexof(comparer: t, find_func: (t, t)(var)) : var {
		       ^

0 [0x0]: line: 195 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 38   
14 [0xe]: line: 196 ipushl #2   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+3   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           pushl 1   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 34   
31 [0x1f]: line: 197 loadl ebx, fp+3   
32 [0x20]:           return_val ebx   
33 [0x21]:           ret   
34 [0x22]:           nop   
35 [0x23]:           iaddl 1, fp@3   
37 [0x25]:           jmp @2   
38 [0x26]: line: 201 istorel -1, fp+0   
40 [0x28]:           ret   


function: std#list<std.io#thread>.to_string[3932] params(0) in file: /usr/include/sharp//list.sharp:204:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 205 new_class @0 // std#__srt_global   
1 [0x1]:           movi #112, adx   
3 [0x3]:           call @1958 // <std#string_builder.string_builder>   
4 [0x4]:           popobj2    
5 [0x5]:           smovr_3 fp+1   
6 [0x6]: line: 207 pushl 1   
7 [0x7]:           newstr @149 // [    
8 [0x8]:           call @1954 // <std#string_builder.operator+=>   
9 [0x9]:           pop   
10 [0xa]: line: 208 istorel 0, fp+2   
12 [0xc]:           ipushl #2   
13 [0xd]:           movl 0   
14 [0xe]:           movn #0   
16 [0x10]:           movi #0, adx   
18 [0x12]:           iaload ebx, adx   
19 [0x13]:           loadval ecx   
20 [0x14]:           lt ecx, ebx   
21 [0x15]:           movr ebx, cmt   
22 [0x16]:           movr cmt, ebx   
23 [0x17]:           jne 62   
24 [0x18]: line: 209 pushl 1   
25 [0x19]:           movl 0   
26 [0x1a]:           movn #1   
28 [0x1c]:           pushobj   
29 [0x1d]:           loadl ebx, fp+2   
30 [0x1e]:           popobj2    
31 [0x1f]:           movr adx, ebx   
32 [0x20]:           chklen adx   
33 [0x21]:           movnd adx   
34 [0x22]:           pushobj   
35 [0x23]:           call @1950 // <std#string_builder.operator+=>   
36 [0x24]:           pop   
37 [0x25]: line: 211 ipushl #2   
38 [0x26]:           movi #1, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           add ecx, ebx -> ebx   
42 [0x2a]:           rstore ebx   
43 [0x2b]:           movl 0   
44 [0x2c]:           movn #0   
46 [0x2e]:           movi #0, adx   
48 [0x30]:           iaload ebx, adx   
49 [0x31]:           loadval ecx   
50 [0x32]:           lt ecx, ebx   
51 [0x33]:           movr ebx, cmt   
52 [0x34]:           movr cmt, ebx   
53 [0x35]:           jne 58   
54 [0x36]: line: 212 pushl 1   
55 [0x37]:           newstr @150 // ,    
56 [0x38]:           call @1954 // <std#string_builder.operator+=>   
57 [0x39]:           pop   
58 [0x3a]:           nop   
59 [0x3b]:           iaddl 1, fp@2   
61 [0x3d]:           jmp @12   
62 [0x3e]: line: 216 pushl 1   
63 [0x3f]:           newstr @151 //  ]   
64 [0x40]:           call @1954 // <std#string_builder.operator+=>   
65 [0x41]:           pop   
66 [0x42]: line: 217 pushl 1   
67 [0x43]:           call @1931 // <std#string_builder.to_string>   
68 [0x44]:           popobj2    
69 [0x45]:           returnobj   
70 [0x46]:           ret   


function: std#list<std.io#thread>.out_of_bounds_msg[3933] params(1) in file: /usr/include/sharp//list.sharp:220:16: note:  
		    private def out_of_bounds_msg(index: var) : string {
		               ^

0 [0x0]: line: 221 new_class @0 // std#__srt_global   
1 [0x1]:           ret   
2 [0x2]:           dup    
3 [0x3]:           newstr @152 // Index:    
4 [0x4]:           call @1959 // <std#string.string>   
5 [0x5]:           ipushl #1   
6 [0x6]:           call @1991 // <std#string.operator+>   
7 [0x7]:           newstr @153 // , size:    
8 [0x8]:           call @1971 // <std#string.operator+>   
9 [0x9]:           movl 0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           rstore ebx   
16 [0x10]:           call @1991 // <std#string.operator+>   
17 [0x11]:           popobj2    
18 [0x12]:           returnobj   
19 [0x13]:           ret   


std#loopable<var>.get_elements[3934] params(0) in file: /usr/include/sharp//loopable.sharp:4:8: note:  
		    def get_elements() : t[];
		       ^



constructor: std#loopable<var>.loopable[3935] params(0) in file: /usr/include/sharp//loopable.sharp:3:10: note:  
		interface loopable<t> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#list<var>.list[3936] params(0) in file: /usr/include/sharp//list.sharp:13:9: note:  
		    list() {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 14 movi #10, ebx   
3 [0x3]:          newarry ebx: 8   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]:          ret   


constructor: std#list<var>.list[3937] params(1) in file: /usr/include/sharp//list.sharp:17:9: note:  
		    list(starting_capacity: var) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 18 loadl ebx, fp+1   
2 [0x2]:          newarry ebx: 8   
3 [0x3]:          movl 0   
4 [0x4]:          movn #1   
6 [0x6]:          popobj   
7 [0x7]:          ret   


constructor: std#list<var>.list[3938] params(1) in file: /usr/include/sharp//list.sharp:21:9: note:  
		    list(initial_data: t[]) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 22 pushl 0   
2 [0x2]:          pushl 1   
3 [0x3]:          call @3949 // <std#list<var>.add_all>   
4 [0x4]:          ret   


function: std#list<var>.empty[3939] params(0) in file: /usr/include/sharp//list.sharp:25:8: note:  
		    def empty() := n_elements == 0;
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          return_val cmt   
12 [0xc]:          ret   


function: std#list<var>.set_compact[3940] params(1) in file: /usr/include/sharp//list.sharp:27:8: note:  
		    def set_compact(compact_array: var) {
		       ^

0 [0x0]: line: 28 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #2   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]:          ret   


function: std#list<var>.get_elements[3941] params(0) in file: /usr/include/sharp//list.sharp:31:8: note:  
		    def get_elements() : t[] {
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          jne 17   
12 [0xc]:          pushnull    
13 [0xd]:          popobj2    
14 [0xe]:          returnobj   
15 [0xf]:          ret   
16 [0x10]:          jmp @34   
17 [0x11]: line: 33 movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          pushobj   
21 [0x15]:          istore 0   
23 [0x17]:          movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          iaload ebx, adx   
29 [0x1d]:          rstore ebx   
30 [0x1e]:          call @2108 // <std.io#__srt_global.copy>   
31 [0x1f]:          popobj2    
32 [0x20]:          returnobj   
33 [0x21]:          ret   
34 [0x22]:          nop   


overload function: std#list<var>.operator[[3942] params(1) in file: /usr/include/sharp//list.sharp:36:8: note:  
		    def operator[](index: var): t {
		       ^

0 [0x0]: line: 37 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 38 new_class @0 // std#__srt_global   
19 [0x13]:          shl adx, adx -> adx   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3963 // <std#list<var>.out_of_bounds_msg>   
24 [0x18]:          call @3555 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 39 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          iaload ebx, adx   
36 [0x24]:          return_val ebx   
37 [0x25]:          ret   


function: std#list<var>.at[3943] params(1) in file: /usr/include/sharp//list.sharp:42:8: note:  
		    def at(index: var): t {
		       ^

0 [0x0]: line: 43 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 44 new_class @0 // std#__srt_global   
19 [0x13]:          shl adx, adx -> adx   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3963 // <std#list<var>.out_of_bounds_msg>   
24 [0x18]:          call @3555 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 45 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          iaload ebx, adx   
36 [0x24]:          return_val ebx   
37 [0x25]:          ret   


function: std#list<var>.last[3944] params(0) in file: /usr/include/sharp//list.sharp:48:8: note:  
		    def last(): t {
		       ^

0 [0x0]: line: 49 pushl 0   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movi #1, ebx   
10 [0xa]:          loadval ecx   
11 [0xb]:          sub ecx, ebx -> ebx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @3943 // <std#list<var>.at>   
14 [0xe]:          loadval ebx   
15 [0xf]:          return_val ebx   
16 [0x10]:          ret   


function: std#list<var>.put[3945] params(2) in file: /usr/include/sharp//list.sharp:52:8: note:  
		    def put(index: var, element: t) : t {
		       ^

0 [0x0]: line: 53 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 54 new_class @0 // std#__srt_global   
19 [0x13]:          shl adx, adx -> adx   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3963 // <std#list<var>.out_of_bounds_msg>   
24 [0x18]:          call @3555 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 56 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          iaload ebx, adx   
36 [0x24]:          smovr_2 ebx, fp+3   
37 [0x25]: line: 57 ipushl #2   
38 [0x26]:          movl 0   
39 [0x27]:          movn #1   
41 [0x29]:          pushobj   
42 [0x2a]:          loadl ebx, fp+1   
43 [0x2b]:          popobj2    
44 [0x2c]:          movr adx, ebx   
45 [0x2d]:          chklen adx   
46 [0x2e]:          loadval ebx   
47 [0x2f]:          rmov adx, ebx   
48 [0x30]: line: 58 loadl ebx, fp+3   
49 [0x31]:          return_val ebx   
50 [0x32]:          ret   


function: std#list<var>.expand[3946] params(0) in file: /usr/include/sharp//list.sharp:61:16: note:  
		    private def expand() {
		               ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #2   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 24   
8 [0x8]: line: 63 movl 0   
9 [0x9]:          movn #1   
11 [0xb]:          pushobj   
12 [0xc]:          movl 0   
13 [0xd]:          movn #1   
15 [0xf]:          sizeof ebx   
16 [0x10]:          rstore ebx   
17 [0x11]:          movi #128, ebx   
19 [0x13]:          loadval ecx   
20 [0x14]:          add ecx, ebx -> ebx   
21 [0x15]:          rstore ebx   
22 [0x16]:          call @2088 // <std.io#__srt_global.realloc>   
23 [0x17]:          jmp @51   
24 [0x18]: line: 65 movl 0   
25 [0x19]:          movn #1   
27 [0x1b]:          pushobj   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          sizeof ebx   
32 [0x20]:          rstore ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #1   
36 [0x24]:          sizeof ebx   
37 [0x25]:          rstore ebx   
38 [0x26]:          movi #4, ebx   
40 [0x28]:          loadval ecx   
41 [0x29]:          shr ecx, ebx -> ebx   
42 [0x2a]:          loadval ecx   
43 [0x2b]:          add ecx, ebx -> ebx   
44 [0x2c]:          rstore ebx   
45 [0x2d]:          movi #128, ebx   
47 [0x2f]:          loadval ecx   
48 [0x30]:          add ecx, ebx -> ebx   
49 [0x31]:          rstore ebx   
50 [0x32]:          call @2088 // <std.io#__srt_global.realloc>   
51 [0x33]:          nop   
52 [0x34]:          ret   


function: std#list<var>.clear[3947] params(0) in file: /usr/include/sharp//list.sharp:68:8: note:  
		    def clear() {
		       ^

0 [0x0]: line: 69 movi #10, ebx   
2 [0x2]:          newarry ebx: 8   
3 [0x3]:          movl 0   
4 [0x4]:          movn #1   
6 [0x6]:          popobj   
7 [0x7]: line: 70 movi #0, ebx   
9 [0x9]:          movl 0   
10 [0xa]:          movn #0   
12 [0xc]:          movi #0, adx   
14 [0xe]:          rmov adx, ebx   
15 [0xf]:          ret   


function: std#list<var>.add_all[3948] params(1) in file: /usr/include/sharp//list.sharp:73:8: note:  
		    def add_all(lst: list<t>) {
		       ^

0 [0x0]: line: 74 movl 1   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          istore 0   
6 [0x6]:          movl 1   
7 [0x7]:          movn #0   
9 [0x9]:          movi #0, adx   
11 [0xb]:          iaload ebx, adx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @2108 // <std.io#__srt_global.copy>   
14 [0xe]:          movl 0   
15 [0xf]:          movn #1   
17 [0x11]:          popobj   
18 [0x12]: line: 75 movl 1   
19 [0x13]:          movn #0   
21 [0x15]:          movi #0, adx   
23 [0x17]:          iaload ebx, adx   
24 [0x18]:          movl 0   
25 [0x19]:          movn #0   
27 [0x1b]:          movi #0, adx   
29 [0x1d]:          rmov adx, ebx   
30 [0x1e]:          ret   


function: std#list<var>.add_all[3949] params(1) in file: /usr/include/sharp//list.sharp:78:8: note:  
		    def add_all(lst: t[]) {
		       ^

0 [0x0]: line: 79 movl 1   
1 [0x1]:          checknull   
2 [0x2]:          not ebx, ebx   
3 [0x3]:          movr cmt, ebx   
4 [0x4]:          jne 25   
5 [0x5]: line: 80 pushl 1   
6 [0x6]:          istore 0   
8 [0x8]:          movl 1   
9 [0x9]:          sizeof ebx   
10 [0xa]:          rstore ebx   
11 [0xb]:          call @2108 // <std.io#__srt_global.copy>   
12 [0xc]:          movl 0   
13 [0xd]:          movn #1   
15 [0xf]:          popobj   
16 [0x10]: line: 81 movl 1   
17 [0x11]:          sizeof ebx   
18 [0x12]:          movl 0   
19 [0x13]:          movn #0   
21 [0x15]:          movi #0, adx   
23 [0x17]:          rmov adx, ebx   
24 [0x18]:          jmp @40   
25 [0x19]: line: 83 movi #0, ebx   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #0   
30 [0x1e]:          movi #0, adx   
32 [0x20]:          rmov adx, ebx   
33 [0x21]: line: 84 movi #10, ebx   
35 [0x23]:          newarry ebx: 8   
36 [0x24]:          movl 0   
37 [0x25]:          movn #1   
39 [0x27]:          popobj   
40 [0x28]:          nop   
41 [0x29]:          ret   


function: std#list<var>.add[3950] params(1) in file: /usr/include/sharp//list.sharp:88:8: note:  
		    def add(element: t) {
		       ^

0 [0x0]: line: 89 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 0   
8 [0x8]:          movn #1   
10 [0xa]:          sizeof ebx   
11 [0xb]:          loadval ecx   
12 [0xc]:          gte ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          movr cmt, ebx   
15 [0xf]:          jne 18   
16 [0x10]: line: 90 pushl 0   
17 [0x11]:          call @3946 // <std#list<var>.expand>   
18 [0x12]:          nop   
19 [0x13]: line: 91 ipushl #1   
20 [0x14]:          movl 0   
21 [0x15]:          movn #1   
23 [0x17]:          pushobj   
24 [0x18]:          movl 0   
25 [0x19]:          movn #0   
27 [0x1b]:          movi #0, adx   
29 [0x1d]:          iaload ebx, adx   
30 [0x1e]:          movr egx, ebx   
31 [0x1f]:          inc ebx   
32 [0x20]:          movi #0, adx   
34 [0x22]:          rmov adx, ebx   
35 [0x23]:          movr ebx, egx   
36 [0x24]:          popobj2    
37 [0x25]:          movr adx, ebx   
38 [0x26]:          chklen adx   
39 [0x27]:          loadval ebx   
40 [0x28]:          rmov adx, ebx   
41 [0x29]:          ret   


function: std#list<var>.indexof[3951] params(1) in file: /usr/include/sharp//list.sharp:94:8: note:  
		    def indexof(element: t) : var {
		       ^

0 [0x0]: line: 95 istorel 0, fp+2   
2 [0x2]:          ipushl #2   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          lt ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 34   
14 [0xe]: line: 96 ipushl #1   
15 [0xf]:          movl 0   
16 [0x10]:          movn #1   
18 [0x12]:          pushobj   
19 [0x13]:          loadl ebx, fp+2   
20 [0x14]:          popobj2    
21 [0x15]:          movr adx, ebx   
22 [0x16]:          chklen adx   
23 [0x17]:          iaload ebx, adx   
24 [0x18]:          loadval ecx   
25 [0x19]:          test ecx, ebx   
26 [0x1a]:          jne 30   
27 [0x1b]: line: 97 loadl ebx, fp+2   
28 [0x1c]:          return_val ebx   
29 [0x1d]:          ret   
30 [0x1e]:          nop   
31 [0x1f]:          iaddl 1, fp@2   
33 [0x21]:          jmp @2   
34 [0x22]: line: 101 istorel -1, fp+0   
36 [0x24]:           ret   


function: std#list<var>.pop_back[3952] params(0) in file: /usr/include/sharp//list.sharp:104:8: note:  
		    def pop_back() {
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #0, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 38   
14 [0xe]: line: 106 istorel 0, fp+1   
16 [0x10]: line: 107 ipushl #1   
17 [0x11]:           movl 0   
18 [0x12]:           movn #1   
20 [0x14]:           pushobj   
21 [0x15]:           movl 0   
22 [0x16]:           movn #0   
24 [0x18]:           movi #0, adx   
26 [0x1a]:           iaload ebx, adx   
27 [0x1b]:           movr egx, ebx   
28 [0x1c]:           dec ebx   
29 [0x1d]:           movi #0, adx   
31 [0x1f]:           rmov adx, ebx   
32 [0x20]:           movr ebx, egx   
33 [0x21]:           popobj2    
34 [0x22]:           movr adx, ebx   
35 [0x23]:           chklen adx   
36 [0x24]:           loadval ebx   
37 [0x25]:           rmov adx, ebx   
38 [0x26]:           nop   
39 [0x27]:           ret   


function: std#list<var>.size[3953] params(0) in file: /usr/include/sharp//list.sharp:111:8: note:  
		    def size() := n_elements;
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std#list<var>.insert[3954] params(2) in file: /usr/include/sharp//list.sharp:113:8: note:  
		    def insert(index: var, element: t) {
		       ^

0 [0x0]: line: 114 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gt ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 16   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 26   
18 [0x12]: line: 115 new_class @0 // std#__srt_global   
19 [0x13]:           shl adx, adx -> adx   
20 [0x14]:           dup    
21 [0x15]:           pushl 0   
22 [0x16]:           ipushl #1   
23 [0x17]:           call @3963 // <std#list<var>.out_of_bounds_msg>   
24 [0x18]:           call @3555 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 117 movl 0   
28 [0x1c]:           movn #0   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movi #0, ebx   
36 [0x24]:           loadval ecx   
37 [0x25]:           test ecx, ebx   
38 [0x26]:           jne 43   
39 [0x27]: line: 118 pushl 0   
40 [0x28]:           ipushl #2   
41 [0x29]:           call @3950 // <std#list<var>.add>   
42 [0x2a]:           jmp @132   
43 [0x2b]: line: 120 movl 0   
44 [0x2c]:           movn #0   
46 [0x2e]:           movi #0, adx   
48 [0x30]:           iaload ebx, adx   
49 [0x31]:           rstore ebx   
50 [0x32]:           movl 0   
51 [0x33]:           movn #1   
53 [0x35]:           sizeof ebx   
54 [0x36]:           loadval ecx   
55 [0x37]:           gte ecx, ebx   
56 [0x38]:           movr ebx, cmt   
57 [0x39]:           movr cmt, ebx   
58 [0x3a]:           jne 61   
59 [0x3b]: line: 121 pushl 0   
60 [0x3c]:           call @3946 // <std#list<var>.expand>   
61 [0x3d]:           nop   
62 [0x3e]: line: 122 movl 0   
63 [0x3f]:           movn #0   
65 [0x41]:           movi #0, adx   
67 [0x43]:           iaload ebx, adx   
68 [0x44]:           movr egx, ebx   
69 [0x45]:           inc ebx   
70 [0x46]:           movi #0, adx   
72 [0x48]:           rmov adx, ebx   
73 [0x49]: line: 123 movl 0   
74 [0x4a]:           movn #0   
76 [0x4c]:           movi #0, adx   
78 [0x4e]:           iaload ebx, adx   
79 [0x4f]:           rstore ebx   
80 [0x50]:           movi #1, ebx   
82 [0x52]:           loadval ecx   
83 [0x53]:           sub ecx, ebx -> ebx   
84 [0x54]:           smovr_2 ebx, fp+3   
85 [0x55]:           ipushl #3   
86 [0x56]:           loadl ebx, fp+1   
87 [0x57]:           loadval ecx   
88 [0x58]:           gt ecx, ebx   
89 [0x59]:           movr ebx, cmt   
90 [0x5a]:           movr cmt, ebx   
91 [0x5b]:           jne 121   
92 [0x5c]: line: 124 movl 0   
93 [0x5d]:           movn #1   
95 [0x5f]:           pushobj   
96 [0x60]:           ipushl #3   
97 [0x61]:           movi #1, ebx   
99 [0x63]:           loadval ecx   
100 [0x64]:           sub ecx, ebx -> ebx   
101 [0x65]:           popobj2    
102 [0x66]:           movr adx, ebx   
103 [0x67]:           chklen adx   
104 [0x68]:           iaload ebx, adx   
105 [0x69]:           rstore ebx   
106 [0x6a]:           movl 0   
107 [0x6b]:           movn #1   
109 [0x6d]:           pushobj   
110 [0x6e]:           loadl ebx, fp+3   
111 [0x6f]:           popobj2    
112 [0x70]:           movr adx, ebx   
113 [0x71]:           chklen adx   
114 [0x72]:           loadval ebx   
115 [0x73]:           rmov adx, ebx   
116 [0x74]:           loadl ebx, fp+3   
117 [0x75]:           movr egx, ebx   
118 [0x76]:           dec ebx   
119 [0x77]:           smovr_2 ebx, fp+3   
120 [0x78]:           jmp @85   
121 [0x79]: line: 125 ipushl #2   
122 [0x7a]:           movl 0   
123 [0x7b]:           movn #1   
125 [0x7d]:           pushobj   
126 [0x7e]:           loadl ebx, fp+1   
127 [0x7f]:           popobj2    
128 [0x80]:           movr adx, ebx   
129 [0x81]:           chklen adx   
130 [0x82]:           loadval ebx   
131 [0x83]:           rmov adx, ebx   
132 [0x84]:           nop   
133 [0x85]:           ret   


function: std#list<var>.find[3955] params(2) in file: /usr/include/sharp//list.sharp:129:8: note:  
		    def find(comparer : t, find_func: (t, t)(var)) : t {
		       ^

0 [0x0]: line: 130 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 46   
14 [0xe]: line: 131 ipushl #2   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+3   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           iaload ebx, adx   
24 [0x18]:           rstore ebx   
25 [0x19]:           ipushl #1   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 42   
31 [0x1f]: line: 132 movl 0   
32 [0x20]:           movn #1   
34 [0x22]:           pushobj   
35 [0x23]:           loadl ebx, fp+3   
36 [0x24]:           popobj2    
37 [0x25]:           movr adx, ebx   
38 [0x26]:           chklen adx   
39 [0x27]:           iaload ebx, adx   
40 [0x28]:           return_val ebx   
41 [0x29]:           ret   
42 [0x2a]:           nop   
43 [0x2b]:           iaddl 1, fp@3   
45 [0x2d]:           jmp @2   
46 [0x2e]: line: 136 istorel 0, fp+4   
48 [0x30]: line: 137 loadl ebx, fp+4   
49 [0x31]:           return_val ebx   
50 [0x32]:           ret   


function: std#list<var>.remove[3956] params(1) in file: /usr/include/sharp//list.sharp:140:8: note:  
		    def remove(val: t) {
		       ^

0 [0x0]: line: 141 istorel 0, fp+2   
2 [0x2]:           ipushl #2   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 35   
14 [0xe]: line: 142 ipushl #1   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+2   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           iaload ebx, adx   
24 [0x18]:           loadval ecx   
25 [0x19]:           test ecx, ebx   
26 [0x1a]:           jne 31   
27 [0x1b]: line: 143 pushl 0   
28 [0x1c]:           ipushl #2   
29 [0x1d]:           call @3960 // <std#list<var>.remove_at>   
30 [0x1e]: line: 144 ret   
31 [0x1f]:           nop   
32 [0x20]:           iaddl 1, fp@2   
34 [0x22]:           jmp @2   
35 [0x23]:           ret   


function: std#list<var>.remove[3957] params(2) in file: /usr/include/sharp//list.sharp:149:8: note:  
		    def remove(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 150 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 39   
14 [0xe]: line: 151 ipushl #2   
15 [0xf]:           ipushl #1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #1   
19 [0x13]:           pushobj   
20 [0x14]:           loadl ebx, fp+3   
21 [0x15]:           popobj2    
22 [0x16]:           movr adx, ebx   
23 [0x17]:           chklen adx   
24 [0x18]:           iaload ebx, adx   
25 [0x19]:           rstore ebx   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 35   
31 [0x1f]: line: 152 pushl 0   
32 [0x20]:           ipushl #3   
33 [0x21]:           call @3960 // <std#list<var>.remove_at>   
34 [0x22]: line: 153 ret   
35 [0x23]:           nop   
36 [0x24]:           iaddl 1, fp@3   
38 [0x26]:           jmp @2   
39 [0x27]:           ret   


function: std#list<var>.replace[3958] params(2) in file: /usr/include/sharp//list.sharp:158:8: note:  
		    def replace(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 159 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 47   
14 [0xe]: line: 160 ipushl #2   
15 [0xf]:           ipushl #1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #1   
19 [0x13]:           pushobj   
20 [0x14]:           loadl ebx, fp+3   
21 [0x15]:           popobj2    
22 [0x16]:           movr adx, ebx   
23 [0x17]:           chklen adx   
24 [0x18]:           iaload ebx, adx   
25 [0x19]:           rstore ebx   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 43   
31 [0x1f]: line: 161 ipushl #1   
32 [0x20]:           movl 0   
33 [0x21]:           movn #1   
35 [0x23]:           pushobj   
36 [0x24]:           loadl ebx, fp+3   
37 [0x25]:           popobj2    
38 [0x26]:           movr adx, ebx   
39 [0x27]:           chklen adx   
40 [0x28]:           loadval ebx   
41 [0x29]:           rmov adx, ebx   
42 [0x2a]: line: 162 ret   
43 [0x2b]:           nop   
44 [0x2c]:           iaddl 1, fp@3   
46 [0x2e]:           jmp @2   
47 [0x2f]:           ret   


function: std#list<var>.linear_sort[3959] params(1) in file: /usr/include/sharp//list.sharp:167:8: note:  
		    def linear_sort(swap: (t, t)(var)) {
		       ^

0 [0x0]: line: 168 istorel 0, fp+2   
2 [0x2]:           ipushl #2   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 132   
14 [0xe]: line: 170 istorel 0, fp+3   
16 [0x10]:           ipushl #3   
17 [0x11]:           movl 0   
18 [0x12]:           movn #0   
20 [0x14]:           movi #0, adx   
22 [0x16]:           iaload ebx, adx   
23 [0x17]:           loadval ecx   
24 [0x18]:           lt ecx, ebx   
25 [0x19]:           movr ebx, cmt   
26 [0x1a]:           movr cmt, ebx   
27 [0x1b]:           jne 129   
28 [0x1c]: line: 171 ipushl #3   
29 [0x1d]:           movi #1, ebx   
31 [0x1f]:           loadval ecx   
32 [0x20]:           add ecx, ebx -> ebx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movl 0   
35 [0x23]:           movn #0   
37 [0x25]:           movi #0, adx   
39 [0x27]:           iaload ebx, adx   
40 [0x28]:           loadval ecx   
41 [0x29]:           lt ecx, ebx   
42 [0x2a]:           movr ebx, cmt   
43 [0x2b]:           movr cmt, ebx   
44 [0x2c]:           jne 125   
45 [0x2d]: line: 173 ipushl #1   
46 [0x2e]:           movl 0   
47 [0x2f]:           movn #1   
49 [0x31]:           pushobj   
50 [0x32]:           loadl ebx, fp+3   
51 [0x33]:           popobj2    
52 [0x34]:           movr adx, ebx   
53 [0x35]:           chklen adx   
54 [0x36]:           iaload ebx, adx   
55 [0x37]:           rstore ebx   
56 [0x38]:           movl 0   
57 [0x39]:           movn #1   
59 [0x3b]:           pushobj   
60 [0x3c]:           ipushl #3   
61 [0x3d]:           movi #1, ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           add ecx, ebx -> ebx   
65 [0x41]:           popobj2    
66 [0x42]:           movr adx, ebx   
67 [0x43]:           chklen adx   
68 [0x44]:           iaload ebx, adx   
69 [0x45]:           rstore ebx   
70 [0x46]:           smov ebx, sp+[-2]   
71 [0x47]:           calld ebx   
72 [0x48]:           loadval ebx   
73 [0x49]:           movr cmt, ebx   
74 [0x4a]:           jne 124   
75 [0x4b]: line: 174 movl 0   
76 [0x4c]:           movn #1   
78 [0x4e]:           pushobj   
79 [0x4f]:           loadl ebx, fp+3   
80 [0x50]:           popobj2    
81 [0x51]:           movr adx, ebx   
82 [0x52]:           chklen adx   
83 [0x53]:           iaload ebx, adx   
84 [0x54]:           smovr_2 ebx, fp+4   
85 [0x55]: line: 175 movl 0   
86 [0x56]:           movn #1   
88 [0x58]:           pushobj   
89 [0x59]:           ipushl #3   
90 [0x5a]:           movi #1, ebx   
92 [0x5c]:           loadval ecx   
93 [0x5d]:           add ecx, ebx -> ebx   
94 [0x5e]:           popobj2    
95 [0x5f]:           movr adx, ebx   
96 [0x60]:           chklen adx   
97 [0x61]:           iaload ebx, adx   
98 [0x62]:           rstore ebx   
99 [0x63]:           movl 0   
100 [0x64]:           movn #1   
102 [0x66]:           pushobj   
103 [0x67]:           loadl ebx, fp+3   
104 [0x68]:           popobj2    
105 [0x69]:           movr adx, ebx   
106 [0x6a]:           chklen adx   
107 [0x6b]:           loadval ebx   
108 [0x6c]:           rmov adx, ebx   
109 [0x6d]: line: 176 ipushl #4   
110 [0x6e]:           movl 0   
111 [0x6f]:           movn #1   
113 [0x71]:           pushobj   
114 [0x72]:           ipushl #3   
115 [0x73]:           movi #1, ebx   
117 [0x75]:           loadval ecx   
118 [0x76]:           add ecx, ebx -> ebx   
119 [0x77]:           popobj2    
120 [0x78]:           movr adx, ebx   
121 [0x79]:           chklen adx   
122 [0x7a]:           loadval ebx   
123 [0x7b]:           rmov adx, ebx   
124 [0x7c]:           nop   
125 [0x7d]:           nop   
126 [0x7e]:           iaddl 1, fp@3   
128 [0x80]:           jmp @16   
129 [0x81]:           iaddl 1, fp@2   
131 [0x83]:           jmp @2   
132 [0x84]:           ret   


function: std#list<var>.remove_at[3960] params(1) in file: /usr/include/sharp//list.sharp:183:8: note:  
		    def remove_at(index: var) {
		       ^

0 [0x0]: line: 184 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gte ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 16   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 26   
18 [0x12]: line: 185 new_class @0 // std#__srt_global   
19 [0x13]:           shl adx, adx -> adx   
20 [0x14]:           dup    
21 [0x15]:           pushl 0   
22 [0x16]:           ipushl #1   
23 [0x17]:           call @3963 // <std#list<var>.out_of_bounds_msg>   
24 [0x18]:           call @3555 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 187 movl 0   
28 [0x1c]:           movn #0   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           rstore ebx   
34 [0x22]:           loadl ebx, fp+1   
35 [0x23]:           loadval ecx   
36 [0x24]:           sub ecx, ebx -> ebx   
37 [0x25]:           rstore ebx   
38 [0x26]:           movi #1, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           sub ecx, ebx -> ebx   
42 [0x2a]:           smovr_2 ebx, fp+2   
43 [0x2b]: line: 188 ipushl #2   
44 [0x2c]:           movi #0, ebx   
46 [0x2e]:           loadval ecx   
47 [0x2f]:           gt ecx, ebx   
48 [0x30]:           movr ebx, cmt   
49 [0x31]:           movr cmt, ebx   
50 [0x32]:           jne 74   
51 [0x33]: line: 189 movl 0   
52 [0x34]:           movn #1   
54 [0x36]:           pushobj   
55 [0x37]:           movl 0   
56 [0x38]:           movn #1   
58 [0x3a]:           pushobj   
59 [0x3b]:           ipushl #1   
60 [0x3c]:           ipushl #1   
61 [0x3d]:           movi #1, ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           add ecx, ebx -> ebx   
65 [0x41]:           rstore ebx   
66 [0x42]:           movl 0   
67 [0x43]:           movn #0   
69 [0x45]:           movi #0, adx   
71 [0x47]:           iaload ebx, adx   
72 [0x48]:           rstore ebx   
73 [0x49]:           call @2098 // <std.io#__srt_global.memcopy>   
74 [0x4a]:           nop   
75 [0x4b]: line: 191 pushl 0   
76 [0x4c]:           call @3952 // <std#list<var>.pop_back>   
77 [0x4d]:           ret   


function: std#list<var>.indexof[3961] params(2) in file: /usr/include/sharp//list.sharp:194:8: note:  
		    def indexof(comparer: t, find_func: (t, t)(var)) : var {
		       ^

0 [0x0]: line: 195 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 38   
14 [0xe]: line: 196 ipushl #2   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+3   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           iaload ebx, adx   
24 [0x18]:           rstore ebx   
25 [0x19]:           ipushl #1   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 34   
31 [0x1f]: line: 197 loadl ebx, fp+3   
32 [0x20]:           return_val ebx   
33 [0x21]:           ret   
34 [0x22]:           nop   
35 [0x23]:           iaddl 1, fp@3   
37 [0x25]:           jmp @2   
38 [0x26]: line: 201 istorel -1, fp+0   
40 [0x28]:           ret   


function: std#list<var>.to_string[3962] params(0) in file: /usr/include/sharp//list.sharp:204:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 205 new_class @0 // std#__srt_global   
1 [0x1]:           movi #112, adx   
3 [0x3]:           call @1958 // <std#string_builder.string_builder>   
4 [0x4]:           popobj2    
5 [0x5]:           smovr_3 fp+1   
6 [0x6]: line: 207 pushl 1   
7 [0x7]:           newstr @149 // [    
8 [0x8]:           call @1954 // <std#string_builder.operator+=>   
9 [0x9]:           pop   
10 [0xa]: line: 208 istorel 0, fp+2   
12 [0xc]:           ipushl #2   
13 [0xd]:           movl 0   
14 [0xe]:           movn #0   
16 [0x10]:           movi #0, adx   
18 [0x12]:           iaload ebx, adx   
19 [0x13]:           loadval ecx   
20 [0x14]:           lt ecx, ebx   
21 [0x15]:           movr ebx, cmt   
22 [0x16]:           movr cmt, ebx   
23 [0x17]:           jne 62   
24 [0x18]: line: 209 pushl 1   
25 [0x19]:           movl 0   
26 [0x1a]:           movn #1   
28 [0x1c]:           pushobj   
29 [0x1d]:           loadl ebx, fp+2   
30 [0x1e]:           popobj2    
31 [0x1f]:           movr adx, ebx   
32 [0x20]:           chklen adx   
33 [0x21]:           iaload ebx, adx   
34 [0x22]:           rstore ebx   
35 [0x23]:           call @1949 // <std#string_builder.operator+=>   
36 [0x24]:           pop   
37 [0x25]: line: 211 ipushl #2   
38 [0x26]:           movi #1, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           add ecx, ebx -> ebx   
42 [0x2a]:           rstore ebx   
43 [0x2b]:           movl 0   
44 [0x2c]:           movn #0   
46 [0x2e]:           movi #0, adx   
48 [0x30]:           iaload ebx, adx   
49 [0x31]:           loadval ecx   
50 [0x32]:           lt ecx, ebx   
51 [0x33]:           movr ebx, cmt   
52 [0x34]:           movr cmt, ebx   
53 [0x35]:           jne 58   
54 [0x36]: line: 212 pushl 1   
55 [0x37]:           newstr @150 // ,    
56 [0x38]:           call @1954 // <std#string_builder.operator+=>   
57 [0x39]:           pop   
58 [0x3a]:           nop   
59 [0x3b]:           iaddl 1, fp@2   
61 [0x3d]:           jmp @12   
62 [0x3e]: line: 216 pushl 1   
63 [0x3f]:           newstr @151 //  ]   
64 [0x40]:           call @1954 // <std#string_builder.operator+=>   
65 [0x41]:           pop   
66 [0x42]: line: 217 pushl 1   
67 [0x43]:           call @1931 // <std#string_builder.to_string>   
68 [0x44]:           popobj2    
69 [0x45]:           returnobj   
70 [0x46]:           ret   


function: std#list<var>.out_of_bounds_msg[3963] params(1) in file: /usr/include/sharp//list.sharp:220:16: note:  
		    private def out_of_bounds_msg(index: var) : string {
		               ^

0 [0x0]: line: 221 new_class @0 // std#__srt_global   
1 [0x1]:           ret   
2 [0x2]:           dup    
3 [0x3]:           newstr @152 // Index:    
4 [0x4]:           call @1959 // <std#string.string>   
5 [0x5]:           ipushl #1   
6 [0x6]:           call @1991 // <std#string.operator+>   
7 [0x7]:           newstr @153 // , size:    
8 [0x8]:           call @1971 // <std#string.operator+>   
9 [0x9]:           movl 0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           rstore ebx   
16 [0x10]:           call @1991 // <std#string.operator+>   
17 [0x11]:           popobj2    
18 [0x12]:           returnobj   
19 [0x13]:           ret   


function: std.reflect#reflect.set_reflect_obj[3964] params(1) in file: /usr/include/sharp//reflect//reflection.sharp:5:35: note:  
		        get { return reflect_obj; }
		                                  ^

0 [0x0]:         ret   


function: std.reflect#reflect.get_reflect_obj[3965] params(0) in file: /usr/include/sharp//reflect//reflection.sharp:4:25: note:  
		    reflect_obj : object;
		                        ^

0 [0x0]: line: 5 movl 0   
1 [0x1]:         movn #0   
3 [0x3]:         returnobj   
4 [0x4]:         ret   


function: std#_nil_.set_instance[3966] params(1) in file: /usr/include/sharp//nil.sharp:11:44: note:  
		    static instance : _nil_ = new _nil_ { };
		                                           ^

0 [0x0]:         ret   


function: std#throwable.get_stack_trace[3967] params(0) in file: /usr/include/sharp//exceptions.sharp:13:25: note:  
		    stack_trace : string;
		                        ^

0 [0x0]: line: 15 movl 0   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          pushnull    
5 [0x5]:          itest ebx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 17   
8 [0x8]: line: 16 movl 0   
9 [0x9]:          movn #2   
11 [0xb]:          pushobj   
12 [0xc]:          call @3466 // <platform.kernel#vm.get_stack_trace>   
13 [0xd]:          movl 0   
14 [0xe]:          movn #1   
16 [0x10]:          popobj   
17 [0x11]:          nop   
18 [0x12]: line: 20 movl 0   
19 [0x13]:          movn #1   
21 [0x15]:          returnobj   
22 [0x16]:          ret   


std#loopable<common.network.core#request_data.request_item>.get_elements[3968] params(0) in file: /usr/include/sharp//loopable.sharp:4:8: note:  
		    def get_elements() : t[];
		       ^



constructor: std#loopable<common.network.core#request_data.request_item>.loopable[3969] params(0) in file: /usr/include/sharp//loopable.sharp:3:10: note:  
		interface loopable<t> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#list<common.network.core#request_data.request_item>.list[3970] params(0) in file: /usr/include/sharp//list.sharp:13:9: note:  
		    list() {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 14 movi #10, ebx   
3 [0x3]:          new_classarray ebx  // common.network.core#request_data.request_item[]   
5 [0x5]:          movl 0   
6 [0x6]:          movn #1   
8 [0x8]:          popobj   
9 [0x9]:          ret   


constructor: std#list<common.network.core#request_data.request_item>.list[3971] params(1) in file: /usr/include/sharp//list.sharp:17:9: note:  
		    list(starting_capacity: var) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 18 loadl ebx, fp+1   
2 [0x2]:          new_classarray ebx  // common.network.core#request_data.request_item[]   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]:          ret   


constructor: std#list<common.network.core#request_data.request_item>.list[3972] params(1) in file: /usr/include/sharp//list.sharp:21:9: note:  
		    list(initial_data: t[]) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 22 pushl 0   
2 [0x2]:          pushl 1   
3 [0x3]:          call @3983 // <std#list<common.network.core#request_data.request_item>.add_all>   
4 [0x4]:          ret   


function: std#list<common.network.core#request_data.request_item>.empty[3973] params(0) in file: /usr/include/sharp//list.sharp:25:8: note:  
		    def empty() := n_elements == 0;
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          return_val cmt   
12 [0xc]:          ret   


function: std#list<common.network.core#request_data.request_item>.set_compact[3974] params(1) in file: /usr/include/sharp//list.sharp:27:8: note:  
		    def set_compact(compact_array: var) {
		       ^

0 [0x0]: line: 28 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #2   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]:          ret   


function: std#list<common.network.core#request_data.request_item>.get_elements[3975] params(0) in file: /usr/include/sharp//list.sharp:31:8: note:  
		    def get_elements() : t[] {
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          jne 17   
12 [0xc]:          pushnull    
13 [0xd]:          popobj2    
14 [0xe]:          returnobj   
15 [0xf]:          ret   
16 [0x10]:          jmp @34   
17 [0x11]: line: 33 movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          pushobj   
21 [0x15]:          istore 0   
23 [0x17]:          movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          iaload ebx, adx   
29 [0x1d]:          rstore ebx   
30 [0x1e]:          call @2107 // <std.io#__srt_global.copy>   
31 [0x1f]:          popobj2    
32 [0x20]:          returnobj   
33 [0x21]:          ret   
34 [0x22]:          nop   


overload function: std#list<common.network.core#request_data.request_item>.operator[[3976] params(1) in file: /usr/include/sharp//list.sharp:36:8: note:  
		    def operator[](index: var): t {
		       ^

0 [0x0]: line: 37 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 38 new_class @0 // std#__srt_global   
19 [0x13]:          shl adx, adx -> adx   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3997 // <std#list<common.network.core#request_data.request_item>.out_of_bounds_msg>   
24 [0x18]:          call @3555 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 39 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          returnobj   
37 [0x25]:          ret   


function: std#list<common.network.core#request_data.request_item>.at[3977] params(1) in file: /usr/include/sharp//list.sharp:42:8: note:  
		    def at(index: var): t {
		       ^

0 [0x0]: line: 43 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 44 new_class @0 // std#__srt_global   
19 [0x13]:          shl adx, adx -> adx   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3997 // <std#list<common.network.core#request_data.request_item>.out_of_bounds_msg>   
24 [0x18]:          call @3555 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 45 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          returnobj   
37 [0x25]:          ret   


function: std#list<common.network.core#request_data.request_item>.last[3978] params(0) in file: /usr/include/sharp//list.sharp:48:8: note:  
		    def last(): t {
		       ^

0 [0x0]: line: 49 pushl 0   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movi #1, ebx   
10 [0xa]:          loadval ecx   
11 [0xb]:          sub ecx, ebx -> ebx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @3977 // <std#list<common.network.core#request_data.request_item>.at>   
14 [0xe]:          popobj2    
15 [0xf]:          returnobj   
16 [0x10]:          ret   


function: std#list<common.network.core#request_data.request_item>.put[3979] params(2) in file: /usr/include/sharp//list.sharp:52:8: note:  
		    def put(index: var, element: t) : t {
		       ^

0 [0x0]: line: 53 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 54 new_class @0 // std#__srt_global   
19 [0x13]:          shl adx, adx -> adx   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @3997 // <std#list<common.network.core#request_data.request_item>.out_of_bounds_msg>   
24 [0x18]:          call @3555 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 56 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          smovr_3 fp+3   
37 [0x25]: line: 57 pushl 2   
38 [0x26]:          movl 0   
39 [0x27]:          movn #1   
41 [0x29]:          pushobj   
42 [0x2a]:          loadl ebx, fp+1   
43 [0x2b]:          popobj2    
44 [0x2c]:          movr adx, ebx   
45 [0x2d]:          chklen adx   
46 [0x2e]:          movnd adx   
47 [0x2f]:          popobj   
48 [0x30]: line: 58 movl 3   
49 [0x31]:          returnobj   
50 [0x32]:          ret   


function: std#list<common.network.core#request_data.request_item>.expand[3980] params(0) in file: /usr/include/sharp//list.sharp:61:16: note:  
		    private def expand() {
		               ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #2   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 24   
8 [0x8]: line: 63 movl 0   
9 [0x9]:          movn #1   
11 [0xb]:          pushobj   
12 [0xc]:          movl 0   
13 [0xd]:          movn #1   
15 [0xf]:          sizeof ebx   
16 [0x10]:          rstore ebx   
17 [0x11]:          movi #128, ebx   
19 [0x13]:          loadval ecx   
20 [0x14]:          add ecx, ebx -> ebx   
21 [0x15]:          rstore ebx   
22 [0x16]:          call @2087 // <std.io#__srt_global.realloc>   
23 [0x17]:          jmp @51   
24 [0x18]: line: 65 movl 0   
25 [0x19]:          movn #1   
27 [0x1b]:          pushobj   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          sizeof ebx   
32 [0x20]:          rstore ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #1   
36 [0x24]:          sizeof ebx   
37 [0x25]:          rstore ebx   
38 [0x26]:          movi #4, ebx   
40 [0x28]:          loadval ecx   
41 [0x29]:          shr ecx, ebx -> ebx   
42 [0x2a]:          loadval ecx   
43 [0x2b]:          add ecx, ebx -> ebx   
44 [0x2c]:          rstore ebx   
45 [0x2d]:          movi #128, ebx   
47 [0x2f]:          loadval ecx   
48 [0x30]:          add ecx, ebx -> ebx   
49 [0x31]:          rstore ebx   
50 [0x32]:          call @2087 // <std.io#__srt_global.realloc>   
51 [0x33]:          nop   
52 [0x34]:          ret   


function: std#list<common.network.core#request_data.request_item>.clear[3981] params(0) in file: /usr/include/sharp//list.sharp:68:8: note:  
		    def clear() {
		       ^

0 [0x0]: line: 69 movi #10, ebx   
2 [0x2]:          new_classarray ebx  // common.network.core#request_data.request_item[]   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]: line: 70 movi #0, ebx   
10 [0xa]:          movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          movi #0, adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          ret   


function: std#list<common.network.core#request_data.request_item>.add_all[3982] params(1) in file: /usr/include/sharp//list.sharp:73:8: note:  
		    def add_all(lst: list<t>) {
		       ^

0 [0x0]: line: 74 movl 1   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          istore 0   
6 [0x6]:          movl 1   
7 [0x7]:          movn #0   
9 [0x9]:          movi #0, adx   
11 [0xb]:          iaload ebx, adx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @2107 // <std.io#__srt_global.copy>   
14 [0xe]:          popobj2    
15 [0xf]:          movi #80, cmt   
17 [0x11]:          cast cmt   
18 [0x12]:          pushobj   
19 [0x13]:          movl 0   
20 [0x14]:          movn #1   
22 [0x16]:          popobj   
23 [0x17]: line: 75 movl 1   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          iaload ebx, adx   
29 [0x1d]:          movl 0   
30 [0x1e]:          movn #0   
32 [0x20]:          movi #0, adx   
34 [0x22]:          rmov adx, ebx   
35 [0x23]:          ret   


function: std#list<common.network.core#request_data.request_item>.add_all[3983] params(1) in file: /usr/include/sharp//list.sharp:78:8: note:  
		    def add_all(lst: t[]) {
		       ^

0 [0x0]: line: 79 movl 1   
1 [0x1]:          checknull   
2 [0x2]:          not ebx, ebx   
3 [0x3]:          movr cmt, ebx   
4 [0x4]:          jne 30   
5 [0x5]: line: 80 pushl 1   
6 [0x6]:          istore 0   
8 [0x8]:          movl 1   
9 [0x9]:          sizeof ebx   
10 [0xa]:          rstore ebx   
11 [0xb]:          call @2107 // <std.io#__srt_global.copy>   
12 [0xc]:          popobj2    
13 [0xd]:          movi #80, cmt   
15 [0xf]:          cast cmt   
16 [0x10]:          pushobj   
17 [0x11]:          movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          popobj   
21 [0x15]: line: 81 movl 1   
22 [0x16]:          sizeof ebx   
23 [0x17]:          movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          rmov adx, ebx   
29 [0x1d]:          jmp @46   
30 [0x1e]: line: 83 movi #0, ebx   
32 [0x20]:          movl 0   
33 [0x21]:          movn #0   
35 [0x23]:          movi #0, adx   
37 [0x25]:          rmov adx, ebx   
38 [0x26]: line: 84 movi #10, ebx   
40 [0x28]:          new_classarray ebx  // common.network.core#request_data.request_item[]   
42 [0x2a]:          movl 0   
43 [0x2b]:          movn #1   
45 [0x2d]:          popobj   
46 [0x2e]:          nop   
47 [0x2f]:          ret   


function: std#list<common.network.core#request_data.request_item>.add[3984] params(1) in file: /usr/include/sharp//list.sharp:88:8: note:  
		    def add(element: t) {
		       ^

0 [0x0]: line: 89 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 0   
8 [0x8]:          movn #1   
10 [0xa]:          sizeof ebx   
11 [0xb]:          loadval ecx   
12 [0xc]:          gte ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          movr cmt, ebx   
15 [0xf]:          jne 18   
16 [0x10]: line: 90 pushl 0   
17 [0x11]:          call @3980 // <std#list<common.network.core#request_data.request_item>.expand>   
18 [0x12]:          nop   
19 [0x13]: line: 91 pushl 1   
20 [0x14]:          movl 0   
21 [0x15]:          movn #1   
23 [0x17]:          pushobj   
24 [0x18]:          movl 0   
25 [0x19]:          movn #0   
27 [0x1b]:          movi #0, adx   
29 [0x1d]:          iaload ebx, adx   
30 [0x1e]:          movr egx, ebx   
31 [0x1f]:          inc ebx   
32 [0x20]:          movi #0, adx   
34 [0x22]:          rmov adx, ebx   
35 [0x23]:          movr ebx, egx   
36 [0x24]:          popobj2    
37 [0x25]:          movr adx, ebx   
38 [0x26]:          chklen adx   
39 [0x27]:          movnd adx   
40 [0x28]:          popobj   
41 [0x29]:          ret   


function: std#list<common.network.core#request_data.request_item>.indexof[3985] params(1) in file: /usr/include/sharp//list.sharp:94:8: note:  
		    def indexof(element: t) : var {
		       ^

0 [0x0]: line: 95 istorel 0, fp+2   
2 [0x2]:          ipushl #2   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          lt ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 35   
14 [0xe]: line: 96 pushl 1   
15 [0xf]:          movl 0   
16 [0x10]:          movn #1   
18 [0x12]:          pushobj   
19 [0x13]:          loadl ebx, fp+2   
20 [0x14]:          popobj2    
21 [0x15]:          movr adx, ebx   
22 [0x16]:          chklen adx   
23 [0x17]:          movnd adx   
24 [0x18]:          pushobj   
25 [0x19]:          itest ebx   
26 [0x1a]:          movr cmt, ebx   
27 [0x1b]:          jne 31   
28 [0x1c]: line: 97 loadl ebx, fp+2   
29 [0x1d]:          return_val ebx   
30 [0x1e]:          ret   
31 [0x1f]:          nop   
32 [0x20]:          iaddl 1, fp@2   
34 [0x22]:          jmp @2   
35 [0x23]: line: 101 istorel -1, fp+0   
37 [0x25]:           ret   


function: std#list<common.network.core#request_data.request_item>.pop_back[3986] params(0) in file: /usr/include/sharp//list.sharp:104:8: note:  
		    def pop_back() {
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #0, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 38   
14 [0xe]: line: 106 movl 1   
15 [0xf]:           del   
16 [0x10]: line: 107 pushl 1   
17 [0x11]:           movl 0   
18 [0x12]:           movn #1   
20 [0x14]:           pushobj   
21 [0x15]:           movl 0   
22 [0x16]:           movn #0   
24 [0x18]:           movi #0, adx   
26 [0x1a]:           iaload ebx, adx   
27 [0x1b]:           movr egx, ebx   
28 [0x1c]:           dec ebx   
29 [0x1d]:           movi #0, adx   
31 [0x1f]:           rmov adx, ebx   
32 [0x20]:           movr ebx, egx   
33 [0x21]:           popobj2    
34 [0x22]:           movr adx, ebx   
35 [0x23]:           chklen adx   
36 [0x24]:           movnd adx   
37 [0x25]:           popobj   
38 [0x26]:           nop   
39 [0x27]:           ret   


function: std#list<common.network.core#request_data.request_item>.size[3987] params(0) in file: /usr/include/sharp//list.sharp:111:8: note:  
		    def size() := n_elements;
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std#list<common.network.core#request_data.request_item>.insert[3988] params(2) in file: /usr/include/sharp//list.sharp:113:8: note:  
		    def insert(index: var, element: t) {
		       ^

0 [0x0]: line: 114 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gt ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 16   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 26   
18 [0x12]: line: 115 new_class @0 // std#__srt_global   
19 [0x13]:           shl adx, adx -> adx   
20 [0x14]:           dup    
21 [0x15]:           pushl 0   
22 [0x16]:           ipushl #1   
23 [0x17]:           call @3997 // <std#list<common.network.core#request_data.request_item>.out_of_bounds_msg>   
24 [0x18]:           call @3555 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 117 movl 0   
28 [0x1c]:           movn #0   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movi #0, ebx   
36 [0x24]:           loadval ecx   
37 [0x25]:           test ecx, ebx   
38 [0x26]:           jne 43   
39 [0x27]: line: 118 pushl 0   
40 [0x28]:           pushl 2   
41 [0x29]:           call @3984 // <std#list<common.network.core#request_data.request_item>.add>   
42 [0x2a]:           jmp @132   
43 [0x2b]: line: 120 movl 0   
44 [0x2c]:           movn #0   
46 [0x2e]:           movi #0, adx   
48 [0x30]:           iaload ebx, adx   
49 [0x31]:           rstore ebx   
50 [0x32]:           movl 0   
51 [0x33]:           movn #1   
53 [0x35]:           sizeof ebx   
54 [0x36]:           loadval ecx   
55 [0x37]:           gte ecx, ebx   
56 [0x38]:           movr ebx, cmt   
57 [0x39]:           movr cmt, ebx   
58 [0x3a]:           jne 61   
59 [0x3b]: line: 121 pushl 0   
60 [0x3c]:           call @3980 // <std#list<common.network.core#request_data.request_item>.expand>   
61 [0x3d]:           nop   
62 [0x3e]: line: 122 movl 0   
63 [0x3f]:           movn #0   
65 [0x41]:           movi #0, adx   
67 [0x43]:           iaload ebx, adx   
68 [0x44]:           movr egx, ebx   
69 [0x45]:           inc ebx   
70 [0x46]:           movi #0, adx   
72 [0x48]:           rmov adx, ebx   
73 [0x49]: line: 123 movl 0   
74 [0x4a]:           movn #0   
76 [0x4c]:           movi #0, adx   
78 [0x4e]:           iaload ebx, adx   
79 [0x4f]:           rstore ebx   
80 [0x50]:           movi #1, ebx   
82 [0x52]:           loadval ecx   
83 [0x53]:           sub ecx, ebx -> ebx   
84 [0x54]:           smovr_2 ebx, fp+3   
85 [0x55]:           ipushl #3   
86 [0x56]:           loadl ebx, fp+1   
87 [0x57]:           loadval ecx   
88 [0x58]:           gt ecx, ebx   
89 [0x59]:           movr ebx, cmt   
90 [0x5a]:           movr cmt, ebx   
91 [0x5b]:           jne 121   
92 [0x5c]: line: 124 movl 0   
93 [0x5d]:           movn #1   
95 [0x5f]:           pushobj   
96 [0x60]:           ipushl #3   
97 [0x61]:           movi #1, ebx   
99 [0x63]:           loadval ecx   
100 [0x64]:           sub ecx, ebx -> ebx   
101 [0x65]:           popobj2    
102 [0x66]:           movr adx, ebx   
103 [0x67]:           chklen adx   
104 [0x68]:           movnd adx   
105 [0x69]:           pushobj   
106 [0x6a]:           movl 0   
107 [0x6b]:           movn #1   
109 [0x6d]:           pushobj   
110 [0x6e]:           loadl ebx, fp+3   
111 [0x6f]:           popobj2    
112 [0x70]:           movr adx, ebx   
113 [0x71]:           chklen adx   
114 [0x72]:           movnd adx   
115 [0x73]:           popobj   
116 [0x74]:           loadl ebx, fp+3   
117 [0x75]:           movr egx, ebx   
118 [0x76]:           dec ebx   
119 [0x77]:           smovr_2 ebx, fp+3   
120 [0x78]:           jmp @85   
121 [0x79]: line: 125 pushl 2   
122 [0x7a]:           movl 0   
123 [0x7b]:           movn #1   
125 [0x7d]:           pushobj   
126 [0x7e]:           loadl ebx, fp+1   
127 [0x7f]:           popobj2    
128 [0x80]:           movr adx, ebx   
129 [0x81]:           chklen adx   
130 [0x82]:           movnd adx   
131 [0x83]:           popobj   
132 [0x84]:           nop   
133 [0x85]:           ret   


function: std#list<common.network.core#request_data.request_item>.find[3989] params(2) in file: /usr/include/sharp//list.sharp:129:8: note:  
		    def find(comparer : t, find_func: (t, t)(var)) : t {
		       ^

0 [0x0]: line: 130 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 46   
14 [0xe]: line: 131 ipushl #2   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+3   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           pushl 1   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 42   
31 [0x1f]: line: 132 movl 0   
32 [0x20]:           movn #1   
34 [0x22]:           pushobj   
35 [0x23]:           loadl ebx, fp+3   
36 [0x24]:           popobj2    
37 [0x25]:           movr adx, ebx   
38 [0x26]:           chklen adx   
39 [0x27]:           movnd adx   
40 [0x28]:           returnobj   
41 [0x29]:           ret   
42 [0x2a]:           nop   
43 [0x2b]:           iaddl 1, fp@3   
45 [0x2d]:           jmp @2   
46 [0x2e]: line: 136 movl 4   
47 [0x2f]:           del   
48 [0x30]: line: 137 movl 4   
49 [0x31]:           returnobj   
50 [0x32]:           ret   


function: std#list<common.network.core#request_data.request_item>.remove[3990] params(1) in file: /usr/include/sharp//list.sharp:140:8: note:  
		    def remove(val: t) {
		       ^

0 [0x0]: line: 141 istorel 0, fp+2   
2 [0x2]:           ipushl #2   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 36   
14 [0xe]: line: 142 pushl 1   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+2   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           itest ebx   
26 [0x1a]:           movr cmt, ebx   
27 [0x1b]:           jne 32   
28 [0x1c]: line: 143 pushl 0   
29 [0x1d]:           ipushl #2   
30 [0x1e]:           call @3994 // <std#list<common.network.core#request_data.request_item>.remove_at>   
31 [0x1f]: line: 144 ret   
32 [0x20]:           nop   
33 [0x21]:           iaddl 1, fp@2   
35 [0x23]:           jmp @2   
36 [0x24]:           ret   


function: std#list<common.network.core#request_data.request_item>.remove[3991] params(2) in file: /usr/include/sharp//list.sharp:149:8: note:  
		    def remove(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 150 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 39   
14 [0xe]: line: 151 ipushl #2   
15 [0xf]:           pushl 1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #1   
19 [0x13]:           pushobj   
20 [0x14]:           loadl ebx, fp+3   
21 [0x15]:           popobj2    
22 [0x16]:           movr adx, ebx   
23 [0x17]:           chklen adx   
24 [0x18]:           movnd adx   
25 [0x19]:           pushobj   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 35   
31 [0x1f]: line: 152 pushl 0   
32 [0x20]:           ipushl #3   
33 [0x21]:           call @3994 // <std#list<common.network.core#request_data.request_item>.remove_at>   
34 [0x22]: line: 153 ret   
35 [0x23]:           nop   
36 [0x24]:           iaddl 1, fp@3   
38 [0x26]:           jmp @2   
39 [0x27]:           ret   


function: std#list<common.network.core#request_data.request_item>.replace[3992] params(2) in file: /usr/include/sharp//list.sharp:158:8: note:  
		    def replace(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 159 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 47   
14 [0xe]: line: 160 ipushl #2   
15 [0xf]:           pushl 1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #1   
19 [0x13]:           pushobj   
20 [0x14]:           loadl ebx, fp+3   
21 [0x15]:           popobj2    
22 [0x16]:           movr adx, ebx   
23 [0x17]:           chklen adx   
24 [0x18]:           movnd adx   
25 [0x19]:           pushobj   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 43   
31 [0x1f]: line: 161 pushl 1   
32 [0x20]:           movl 0   
33 [0x21]:           movn #1   
35 [0x23]:           pushobj   
36 [0x24]:           loadl ebx, fp+3   
37 [0x25]:           popobj2    
38 [0x26]:           movr adx, ebx   
39 [0x27]:           chklen adx   
40 [0x28]:           movnd adx   
41 [0x29]:           popobj   
42 [0x2a]: line: 162 ret   
43 [0x2b]:           nop   
44 [0x2c]:           iaddl 1, fp@3   
46 [0x2e]:           jmp @2   
47 [0x2f]:           ret   


function: std#list<common.network.core#request_data.request_item>.linear_sort[3993] params(1) in file: /usr/include/sharp//list.sharp:167:8: note:  
		    def linear_sort(swap: (t, t)(var)) {
		       ^

0 [0x0]: line: 168 istorel 0, fp+2   
2 [0x2]:           ipushl #2   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 132   
14 [0xe]: line: 170 istorel 0, fp+3   
16 [0x10]:           ipushl #3   
17 [0x11]:           movl 0   
18 [0x12]:           movn #0   
20 [0x14]:           movi #0, adx   
22 [0x16]:           iaload ebx, adx   
23 [0x17]:           loadval ecx   
24 [0x18]:           lt ecx, ebx   
25 [0x19]:           movr ebx, cmt   
26 [0x1a]:           movr cmt, ebx   
27 [0x1b]:           jne 129   
28 [0x1c]: line: 171 ipushl #3   
29 [0x1d]:           movi #1, ebx   
31 [0x1f]:           loadval ecx   
32 [0x20]:           add ecx, ebx -> ebx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movl 0   
35 [0x23]:           movn #0   
37 [0x25]:           movi #0, adx   
39 [0x27]:           iaload ebx, adx   
40 [0x28]:           loadval ecx   
41 [0x29]:           lt ecx, ebx   
42 [0x2a]:           movr ebx, cmt   
43 [0x2b]:           movr cmt, ebx   
44 [0x2c]:           jne 125   
45 [0x2d]: line: 173 ipushl #1   
46 [0x2e]:           movl 0   
47 [0x2f]:           movn #1   
49 [0x31]:           pushobj   
50 [0x32]:           loadl ebx, fp+3   
51 [0x33]:           popobj2    
52 [0x34]:           movr adx, ebx   
53 [0x35]:           chklen adx   
54 [0x36]:           movnd adx   
55 [0x37]:           pushobj   
56 [0x38]:           movl 0   
57 [0x39]:           movn #1   
59 [0x3b]:           pushobj   
60 [0x3c]:           ipushl #3   
61 [0x3d]:           movi #1, ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           add ecx, ebx -> ebx   
65 [0x41]:           popobj2    
66 [0x42]:           movr adx, ebx   
67 [0x43]:           chklen adx   
68 [0x44]:           movnd adx   
69 [0x45]:           pushobj   
70 [0x46]:           smov ebx, sp+[-2]   
71 [0x47]:           calld ebx   
72 [0x48]:           loadval ebx   
73 [0x49]:           movr cmt, ebx   
74 [0x4a]:           jne 124   
75 [0x4b]: line: 174 movl 0   
76 [0x4c]:           movn #1   
78 [0x4e]:           pushobj   
79 [0x4f]:           loadl ebx, fp+3   
80 [0x50]:           popobj2    
81 [0x51]:           movr adx, ebx   
82 [0x52]:           chklen adx   
83 [0x53]:           movnd adx   
84 [0x54]:           smovr_3 fp+4   
85 [0x55]: line: 175 movl 0   
86 [0x56]:           movn #1   
88 [0x58]:           pushobj   
89 [0x59]:           ipushl #3   
90 [0x5a]:           movi #1, ebx   
92 [0x5c]:           loadval ecx   
93 [0x5d]:           add ecx, ebx -> ebx   
94 [0x5e]:           popobj2    
95 [0x5f]:           movr adx, ebx   
96 [0x60]:           chklen adx   
97 [0x61]:           movnd adx   
98 [0x62]:           pushobj   
99 [0x63]:           movl 0   
100 [0x64]:           movn #1   
102 [0x66]:           pushobj   
103 [0x67]:           loadl ebx, fp+3   
104 [0x68]:           popobj2    
105 [0x69]:           movr adx, ebx   
106 [0x6a]:           chklen adx   
107 [0x6b]:           movnd adx   
108 [0x6c]:           popobj   
109 [0x6d]: line: 176 pushl 4   
110 [0x6e]:           movl 0   
111 [0x6f]:           movn #1   
113 [0x71]:           pushobj   
114 [0x72]:           ipushl #3   
115 [0x73]:           movi #1, ebx   
117 [0x75]:           loadval ecx   
118 [0x76]:           add ecx, ebx -> ebx   
119 [0x77]:           popobj2    
120 [0x78]:           movr adx, ebx   
121 [0x79]:           chklen adx   
122 [0x7a]:           movnd adx   
123 [0x7b]:           popobj   
124 [0x7c]:           nop   
125 [0x7d]:           nop   
126 [0x7e]:           iaddl 1, fp@3   
128 [0x80]:           jmp @16   
129 [0x81]:           iaddl 1, fp@2   
131 [0x83]:           jmp @2   
132 [0x84]:           ret   


function: std#list<common.network.core#request_data.request_item>.remove_at[3994] params(1) in file: /usr/include/sharp//list.sharp:183:8: note:  
		    def remove_at(index: var) {
		       ^

0 [0x0]: line: 184 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gte ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 16   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 26   
18 [0x12]: line: 185 new_class @0 // std#__srt_global   
19 [0x13]:           shl adx, adx -> adx   
20 [0x14]:           dup    
21 [0x15]:           pushl 0   
22 [0x16]:           ipushl #1   
23 [0x17]:           call @3997 // <std#list<common.network.core#request_data.request_item>.out_of_bounds_msg>   
24 [0x18]:           call @3555 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 187 movl 0   
28 [0x1c]:           movn #0   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           rstore ebx   
34 [0x22]:           loadl ebx, fp+1   
35 [0x23]:           loadval ecx   
36 [0x24]:           sub ecx, ebx -> ebx   
37 [0x25]:           rstore ebx   
38 [0x26]:           movi #1, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           sub ecx, ebx -> ebx   
42 [0x2a]:           smovr_2 ebx, fp+2   
43 [0x2b]: line: 188 ipushl #2   
44 [0x2c]:           movi #0, ebx   
46 [0x2e]:           loadval ecx   
47 [0x2f]:           gt ecx, ebx   
48 [0x30]:           movr ebx, cmt   
49 [0x31]:           movr cmt, ebx   
50 [0x32]:           jne 74   
51 [0x33]: line: 189 movl 0   
52 [0x34]:           movn #1   
54 [0x36]:           pushobj   
55 [0x37]:           movl 0   
56 [0x38]:           movn #1   
58 [0x3a]:           pushobj   
59 [0x3b]:           ipushl #1   
60 [0x3c]:           ipushl #1   
61 [0x3d]:           movi #1, ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           add ecx, ebx -> ebx   
65 [0x41]:           rstore ebx   
66 [0x42]:           movl 0   
67 [0x43]:           movn #0   
69 [0x45]:           movi #0, adx   
71 [0x47]:           iaload ebx, adx   
72 [0x48]:           rstore ebx   
73 [0x49]:           call @2097 // <std.io#__srt_global.memcopy>   
74 [0x4a]:           nop   
75 [0x4b]: line: 191 pushl 0   
76 [0x4c]:           call @3986 // <std#list<common.network.core#request_data.request_item>.pop_back>   
77 [0x4d]:           ret   


function: std#list<common.network.core#request_data.request_item>.indexof[3995] params(2) in file: /usr/include/sharp//list.sharp:194:8: note:  
		    def indexof(comparer: t, find_func: (t, t)(var)) : var {
		       ^

0 [0x0]: line: 195 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 38   
14 [0xe]: line: 196 ipushl #2   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+3   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           pushl 1   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 34   
31 [0x1f]: line: 197 loadl ebx, fp+3   
32 [0x20]:           return_val ebx   
33 [0x21]:           ret   
34 [0x22]:           nop   
35 [0x23]:           iaddl 1, fp@3   
37 [0x25]:           jmp @2   
38 [0x26]: line: 201 istorel -1, fp+0   
40 [0x28]:           ret   


function: std#list<common.network.core#request_data.request_item>.to_string[3996] params(0) in file: /usr/include/sharp//list.sharp:204:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 205 new_class @0 // std#__srt_global   
1 [0x1]:           movi #112, adx   
3 [0x3]:           call @1958 // <std#string_builder.string_builder>   
4 [0x4]:           popobj2    
5 [0x5]:           smovr_3 fp+1   
6 [0x6]: line: 207 pushl 1   
7 [0x7]:           newstr @149 // [    
8 [0x8]:           call @1954 // <std#string_builder.operator+=>   
9 [0x9]:           pop   
10 [0xa]: line: 208 istorel 0, fp+2   
12 [0xc]:           ipushl #2   
13 [0xd]:           movl 0   
14 [0xe]:           movn #0   
16 [0x10]:           movi #0, adx   
18 [0x12]:           iaload ebx, adx   
19 [0x13]:           loadval ecx   
20 [0x14]:           lt ecx, ebx   
21 [0x15]:           movr ebx, cmt   
22 [0x16]:           movr cmt, ebx   
23 [0x17]:           jne 62   
24 [0x18]: line: 209 pushl 1   
25 [0x19]:           movl 0   
26 [0x1a]:           movn #1   
28 [0x1c]:           pushobj   
29 [0x1d]:           loadl ebx, fp+2   
30 [0x1e]:           popobj2    
31 [0x1f]:           movr adx, ebx   
32 [0x20]:           chklen adx   
33 [0x21]:           movnd adx   
34 [0x22]:           pushobj   
35 [0x23]:           call @1950 // <std#string_builder.operator+=>   
36 [0x24]:           pop   
37 [0x25]: line: 211 ipushl #2   
38 [0x26]:           movi #1, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           add ecx, ebx -> ebx   
42 [0x2a]:           rstore ebx   
43 [0x2b]:           movl 0   
44 [0x2c]:           movn #0   
46 [0x2e]:           movi #0, adx   
48 [0x30]:           iaload ebx, adx   
49 [0x31]:           loadval ecx   
50 [0x32]:           lt ecx, ebx   
51 [0x33]:           movr ebx, cmt   
52 [0x34]:           movr cmt, ebx   
53 [0x35]:           jne 58   
54 [0x36]: line: 212 pushl 1   
55 [0x37]:           newstr @150 // ,    
56 [0x38]:           call @1954 // <std#string_builder.operator+=>   
57 [0x39]:           pop   
58 [0x3a]:           nop   
59 [0x3b]:           iaddl 1, fp@2   
61 [0x3d]:           jmp @12   
62 [0x3e]: line: 216 pushl 1   
63 [0x3f]:           newstr @151 //  ]   
64 [0x40]:           call @1954 // <std#string_builder.operator+=>   
65 [0x41]:           pop   
66 [0x42]: line: 217 pushl 1   
67 [0x43]:           call @1931 // <std#string_builder.to_string>   
68 [0x44]:           popobj2    
69 [0x45]:           returnobj   
70 [0x46]:           ret   


function: std#list<common.network.core#request_data.request_item>.out_of_bounds_msg[3997] params(1) in file: /usr/include/sharp//list.sharp:220:16: note:  
		    private def out_of_bounds_msg(index: var) : string {
		               ^

0 [0x0]: line: 221 new_class @0 // std#__srt_global   
1 [0x1]:           ret   
2 [0x2]:           dup    
3 [0x3]:           newstr @152 // Index:    
4 [0x4]:           call @1959 // <std#string.string>   
5 [0x5]:           ipushl #1   
6 [0x6]:           call @1991 // <std#string.operator+>   
7 [0x7]:           newstr @153 // , size:    
8 [0x8]:           call @1971 // <std#string.operator+>   
9 [0x9]:           movl 0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           rstore ebx   
16 [0x10]:           call @1991 // <std#string.operator+>   
17 [0x11]:           popobj2    
18 [0x12]:           returnobj   
19 [0x13]:           ret   


function: common.network.core#request_data.get_request_string[3998] params(0) in file: common//network//core//request_data.sharp:9:28: note:  
		    request_string : string;
		                           ^

0 [0x0]: line: 11 movl 0   
1 [0x1]:          movn #2   
3 [0x3]:          pushobj   
4 [0x4]:          pushnull    
5 [0x5]:          itest ebx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 91   
8 [0x8]: line: 12 new_class @0 // std#__srt_global   
9 [0x9]:          movi #112, adx   
11 [0xb]:          call @1958 // <std#string_builder.string_builder>   
12 [0xc]:          popobj2    
13 [0xd]:          smovr_3 fp+1   
14 [0xe]: line: 13 istorel 0, fp+2   
16 [0x10]:          ipushl #2   
17 [0x11]:          movl 0   
18 [0x12]:          movn #0   
20 [0x14]:          pushobj   
21 [0x15]:          call @3987 // <std#list<common.network.core#request_data.request_item>.size>   
22 [0x16]:          loadval ebx   
23 [0x17]:          loadval ecx   
24 [0x18]:          lt ecx, ebx   
25 [0x19]:          movr ebx, cmt   
26 [0x1a]:          movr cmt, ebx   
27 [0x1b]:          jne 85   
28 [0x1c]: line: 14 pushl 1   
29 [0x1d]:          movl 0   
30 [0x1e]:          movn #0   
32 [0x20]:          pushobj   
33 [0x21]:          ipushl #2   
34 [0x22]:          call @3976 // <std#list<common.network.core#request_data.request_item>.operator[>   
35 [0x23]:          popobj2    
36 [0x24]:          movn #0   
38 [0x26]:          pushobj   
39 [0x27]:          call @1951 // <std#string_builder.operator+=>   
40 [0x28]:          pop   
41 [0x29]: line: 15 pushl 1   
42 [0x2a]:          new_class @0 // std#__srt_global   
43 [0x2b]:          ret   
44 [0x2c]:          dup    
45 [0x2d]:          newstr @156 // =   
46 [0x2e]:          call @1959 // <std#string.string>   
47 [0x2f]:          movl 0   
48 [0x30]:          movn #0   
50 [0x32]:          pushobj   
51 [0x33]:          ipushl #2   
52 [0x34]:          call @3976 // <std#list<common.network.core#request_data.request_item>.operator[>   
53 [0x35]:          popobj2    
54 [0x36]:          movn #1   
56 [0x38]:          pushobj   
57 [0x39]:          call @1974 // <std#string.operator+>   
58 [0x3a]:          call @1951 // <std#string_builder.operator+=>   
59 [0x3b]:          pop   
60 [0x3c]: line: 17 ipushl #2   
61 [0x3d]:          movi #1, ebx   
63 [0x3f]:          loadval ecx   
64 [0x40]:          add ecx, ebx -> ebx   
65 [0x41]:          rstore ebx   
66 [0x42]:          movl 0   
67 [0x43]:          movn #0   
69 [0x45]:          pushobj   
70 [0x46]:          call @3987 // <std#list<common.network.core#request_data.request_item>.size>   
71 [0x47]:          loadval ebx   
72 [0x48]:          loadval ecx   
73 [0x49]:          lt ecx, ebx   
74 [0x4a]:          movr ebx, cmt   
75 [0x4b]:          movr cmt, ebx   
76 [0x4c]:          jne 81   
77 [0x4d]: line: 18 pushl 1   
78 [0x4e]:          newstr @157 // ,   
79 [0x4f]:          call @1954 // <std#string_builder.operator+=>   
80 [0x50]:          pop   
81 [0x51]:          nop   
82 [0x52]:          iaddl 1, fp@2   
84 [0x54]:          jmp @16   
85 [0x55]: line: 22 pushl 1   
86 [0x56]:          call @1931 // <std#string_builder.to_string>   
87 [0x57]:          movl 0   
88 [0x58]:          movn #2   
90 [0x5a]:          popobj   
91 [0x5b]:          nop   
92 [0x5c]: line: 25 movl 0   
93 [0x5d]:          movn #2   
95 [0x5f]:          returnobj   
96 [0x60]:          ret   


function: common.network#network.get_INSTANCE[3999] params(0) in file: common//network//network.sharp:6:38: note:  
		    private static INSTANCE : network;
		                                     ^

0 [0x0]: line: 8 movg @91 // @common.network#network   
1 [0x1]:         movn #0   
3 [0x3]:         pushobj   
4 [0x4]:         pushnull    
5 [0x5]:         itest ebx   
6 [0x6]:         movr cmt, ebx   
7 [0x7]:         jne 21   
8 [0x8]: line: 9 new_class @0 // std#__srt_global   
9 [0x9]:         rmov adx, adx   
10 [0xa]:         dup    
11 [0xb]:         call @3674 // <common.network#network.network>   
12 [0xc]:         movg @91 // @common.network#network   
13 [0xd]:         movn #0   
15 [0xf]:         popobj   
16 [0x10]: line: 10 movg @91 // @common.network#network   
17 [0x11]:          movn #0   
19 [0x13]:          pushobj   
20 [0x14]:          call @3649 // <common.network.remote#__srt_global.initialize>   
21 [0x15]:          nop   
22 [0x16]: line: 13 movg @91 // @common.network#network   
23 [0x17]:          movn #0   
25 [0x19]:          returnobj   
26 [0x1a]:          ret   


function: ui.res#resources.get_res[4000] params(0) in file: controller//ui//res//resource.sharp:7:27: note:  
		    static res : resources;
		                          ^

0 [0x0]: line: 9 movg @110 // @ui.res#resources   
1 [0x1]:         movn #0   
3 [0x3]:         pushobj   
4 [0x4]:         pushnull    
5 [0x5]:         itest ebx   
6 [0x6]:         movr cmt, ebx   
7 [0x7]:         jne 16   
8 [0x8]: line: 10 new_class @0 // std#__srt_global   
9 [0x9]:          vcast 0 ->    
10 [0xa]:          dup    
11 [0xb]:          call @3703 // <ui.res#resources.resources>   
12 [0xc]:          movg @110 // @ui.res#resources   
13 [0xd]:          movn #0   
15 [0xf]:          popobj   
16 [0x10]:          nop   
17 [0x11]: line: 13 movg @110 // @ui.res#resources   
18 [0x12]:          movn #0   
20 [0x14]:          returnobj   
21 [0x15]:          ret   


constructor: std#hashmap<std#int,ui.support#drawable>.hashmap[4001] params(1) in file: /usr/include/sharp//hashmap.sharp:10:19: note:  
		    public hashmap(initialCapacity: var) {
		                  ^

0 [0x0]:         ldc ebx // 0.75   
1 [0x1]:         movl 0   
2 [0x2]:         movn #1   
4 [0x4]:         movi #0, adx   
6 [0x6]:         rmov adx, ebx   
7 [0x7]:         pushl 0   
8 [0x8]: line: 11 loadl ebx, fp+1   
9 [0x9]:          new_classarray ebx  // ui.res#entry<std#int,ui.support#drawable>[]   
11 [0xb]:          movl 0   
12 [0xc]:          movn #0   
14 [0xe]:          popobj   
15 [0xf]: line: 12 movl 0   
16 [0x10]:          movn #0   
18 [0x12]:          sizeof ebx   
19 [0x13]:          rstore ebx   
20 [0x14]:          movl 0   
21 [0x15]:          movn #1   
23 [0x17]:          movi #0, adx   
25 [0x19]:          iaload ebx, adx   
26 [0x1a]:          loadval ecx   
27 [0x1b]:          mul ecx, ebx -> ebx   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #2   
31 [0x1f]:          movi #0, adx   
33 [0x21]:          rmov adx, ebx   
34 [0x22]:          ret   


constructor: std#hashmap<std#int,ui.support#drawable>.hashmap[4002] params(0) in file: /usr/include/sharp//hashmap.sharp:15:19: note:  
		    public hashmap() {
		                  ^

0 [0x0]:         ldc ebx // 0.75   
1 [0x1]:         movl 0   
2 [0x2]:         movn #1   
4 [0x4]:         movi #0, adx   
6 [0x6]:         rmov adx, ebx   
7 [0x7]:         pushl 0   
8 [0x8]: line: 16 movi #128, ebx   
10 [0xa]:          new_classarray ebx  // ui.res#entry<std#int,ui.support#drawable>[]   
12 [0xc]:          movl 0   
13 [0xd]:          movn #0   
15 [0xf]:          popobj   
16 [0x10]: line: 17 movi #96, ebx   
18 [0x12]:          movl 0   
19 [0x13]:          movn #2   
21 [0x15]:          movi #0, adx   
23 [0x17]:          rmov adx, ebx   
24 [0x18]:          ret   


function: std#hashmap<std#int,ui.support#drawable>.set_threshold[4003] params(1) in file: /usr/include/sharp//hashmap.sharp:20:8: note:  
		    def set_threshold(threshold: var) {
		       ^

0 [0x0]: line: 21 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #1   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]: line: 22 movl 0   
9 [0x9]:          movn #0   
11 [0xb]:          sizeof ebx   
12 [0xc]:          rstore ebx   
13 [0xd]:          loadl ebx, fp+1   
14 [0xe]:          loadval ecx   
15 [0xf]:          mul ecx, ebx -> ebx   
16 [0x10]:          movl 0   
17 [0x11]:          movn #2   
19 [0x13]:          movi #0, adx   
21 [0x15]:          rmov adx, ebx   
22 [0x16]:          ret   


function: std#hashmap<std#int,ui.support#drawable>.hash[4004] params(1) in file: /usr/include/sharp//hashmap.sharp:25:8: note:  
		    def hash(key: k) : var {
		       ^

0 [0x0]: line: 26 pushl 1   
1 [0x1]:          call @654 // <std#integer<_int32>.hash>   
2 [0x2]:          movl 0   
3 [0x3]:          movn #0   
5 [0x5]:          sizeof ebx   
6 [0x6]:          rstore ebx   
7 [0x7]:          call @317 // <std#integer<_int64>.operator%>   
8 [0x8]:          loadval ebx   
9 [0x9]:          return_val ebx   
10 [0xa]:          ret   


function: std#hashmap<std#int,ui.support#drawable>.resize[4005] params(0) in file: /usr/include/sharp//hashmap.sharp:29:8: note:  
		    def resize() {
		       ^

0 [0x0]: line: 30 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          smovr_3 fp+1   
4 [0x4]: line: 31 movl 1   
5 [0x5]:          sizeof ebx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          sizeof ebx   
9 [0x9]:          rstore ebx   
10 [0xa]:          movi #1, ebx   
12 [0xc]:          loadval ecx   
13 [0xd]:          shr ecx, ebx -> ebx   
14 [0xe]:          loadval ecx   
15 [0xf]:          add ecx, ebx -> ebx   
16 [0x10]:          new_classarray ebx  // ui.res#entry<std#int,ui.support#drawable>[]   
18 [0x12]:          movl 0   
19 [0x13]:          movn #0   
21 [0x15]:          popobj   
22 [0x16]: line: 32 movl 0   
23 [0x17]:          movn #0   
25 [0x19]:          sizeof ebx   
26 [0x1a]:          rstore ebx   
27 [0x1b]:          movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          movi #0, adx   
32 [0x20]:          iaload ebx, adx   
33 [0x21]:          loadval ecx   
34 [0x22]:          mul ecx, ebx -> ebx   
35 [0x23]:          movl 0   
36 [0x24]:          movn #2   
38 [0x26]:          movi #0, adx   
40 [0x28]:          rmov adx, ebx   
41 [0x29]: line: 33 istorel -1, fp+3   
43 [0x2b]:          pushl 1   
44 [0x2c]:          popl 4   
45 [0x2d]:          iaddl 1, fp@3   
47 [0x2f]:          movl 4   
48 [0x30]:          sizeof ecx   
49 [0x31]:          loadl ebx, fp+3   
50 [0x32]:          lt ebx, ecx   
51 [0x33]:          jne 100   
52 [0x34]:          movnd ebx   
53 [0x35]:          pushobj   
54 [0x36]:          popl 2   
55 [0x37]: line: 35 movl 2   
56 [0x38]:          checknull   
57 [0x39]:          not ebx, ebx   
58 [0x3a]:          movr cmt, ebx   
59 [0x3b]:          jne 99   
60 [0x3c]: line: 37 movl 2   
61 [0x3d]:          movn #2   
63 [0x3f]:          smovr_3 fp+5   
64 [0x40]: line: 38 pushl 0   
65 [0x41]:          movl 2   
66 [0x42]:          movn #0   
68 [0x44]:          pushobj   
69 [0x45]:          call @4004 // <std#hashmap<std#int,ui.support#drawable>.hash>   
70 [0x46]:          ipopl 6   
71 [0x47]: line: 39 movl 0   
72 [0x48]:          movn #0   
74 [0x4a]:          pushobj   
75 [0x4b]:          loadl ebx, fp+6   
76 [0x4c]:          popobj2    
77 [0x4d]:          movr adx, ebx   
78 [0x4e]:          chklen adx   
79 [0x4f]:          movnd adx   
80 [0x50]:          pushobj   
81 [0x51]:          movl 2   
82 [0x52]:          movn #2   
84 [0x54]:          popobj   
85 [0x55]: line: 40 pushl 2   
86 [0x56]:          movl 0   
87 [0x57]:          movn #0   
89 [0x59]:          pushobj   
90 [0x5a]:          loadl ebx, fp+6   
91 [0x5b]:          popobj2    
92 [0x5c]:          movr adx, ebx   
93 [0x5d]:          chklen adx   
94 [0x5e]:          movnd adx   
95 [0x5f]:          popobj   
96 [0x60]: line: 41 movl 5   
97 [0x61]:          smovr_3 fp+2   
98 [0x62]:          jmp @55   
99 [0x63]:          jmp @45   
100 [0x64]: line: 45 pushnull    
101 [0x65]:          popobj2    
102 [0x66]:          smovr_3 fp+1   
103 [0x67]:          ret   


function: std#hashmap<std#int,ui.support#drawable>.at[4006] params(1) in file: /usr/include/sharp//hashmap.sharp:48:15: note:  
		    public def at(key: k) : v {
		              ^

0 [0x0]: line: 49 pushl 0   
1 [0x1]:          pushl 1   
2 [0x2]:          call @4004 // <std#hashmap<std#int,ui.support#drawable>.hash>   
3 [0x3]:          ipopl 2   
4 [0x4]: line: 50 istorel -1, fp+3   
6 [0x6]: line: 51 movl 4   
7 [0x7]:          del   
8 [0x8]: line: 53 movl 0   
9 [0x9]:          movn #0   
11 [0xb]:          pushobj   
12 [0xc]:          loadl ebx, fp+2   
13 [0xd]:          popobj2    
14 [0xe]:          movr adx, ebx   
15 [0xf]:          chklen adx   
16 [0x10]:          movnd adx   
17 [0x11]:          pushobj   
18 [0x12]:          pushnull    
19 [0x13]:          itest ebx   
20 [0x14]:          movr cmt, ebx   
21 [0x15]:          jne 26   
22 [0x16]: line: 54 movl 4   
23 [0x17]:          returnobj   
24 [0x18]:          ret   
25 [0x19]:          jmp @64   
26 [0x1a]: line: 56 movl 0   
27 [0x1b]:          movn #0   
29 [0x1d]:          pushobj   
30 [0x1e]:          loadl ebx, fp+2   
31 [0x1f]:          popobj2    
32 [0x20]:          movr adx, ebx   
33 [0x21]:          chklen adx   
34 [0x22]:          movnd adx   
35 [0x23]:          smovr_3 fp+5   
36 [0x24]: line: 57 movl 5   
37 [0x25]:          checknull   
38 [0x26]:          not ebx, ebx   
39 [0x27]:          movr cmt, ebx   
40 [0x28]:          jne 61   
41 [0x29]: line: 58 movl 5   
42 [0x2a]:          movn #0   
44 [0x2c]:          pushobj   
45 [0x2d]:          pushl 1   
46 [0x2e]:          call @662 // <std#integer<_int32>.operator==>   
47 [0x2f]:          loadval ebx   
48 [0x30]:          movr cmt, ebx   
49 [0x31]:          jne 55   
50 [0x32]: line: 59 movl 5   
51 [0x33]:          movn #1   
53 [0x35]:          returnobj   
54 [0x36]:          ret   
55 [0x37]:          nop   
56 [0x38]: line: 61 movl 5   
57 [0x39]:          movn #2   
59 [0x3b]:          smovr_3 fp+5   
60 [0x3c]:          jmp @36   
61 [0x3d]: line: 64 movl 4   
62 [0x3e]:          returnobj   
63 [0x3f]:          ret   
64 [0x40]:          nop   


function: std#hashmap<std#int,ui.support#drawable>.put[4007] params(2) in file: /usr/include/sharp//hashmap.sharp:68:15: note:  
		    public def put(key: k, value: v) : var {
		              ^

0 [0x0]: line: 69 pushl 0   
1 [0x1]:          pushl 1   
2 [0x2]:          call @4004 // <std#hashmap<std#int,ui.support#drawable>.hash>   
3 [0x3]:          ipopl 3   
4 [0x4]: line: 70 movl 4   
5 [0x5]:          del   
6 [0x6]: line: 71 movl 0   
7 [0x7]:          movn #0   
9 [0x9]:          pushobj   
10 [0xa]:          loadl ebx, fp+3   
11 [0xb]:          popobj2    
12 [0xc]:          movr adx, ebx   
13 [0xd]:          chklen adx   
14 [0xe]:          movnd adx   
15 [0xf]:          smovr_3 fp+5   
16 [0x10]: line: 73 movl 5   
17 [0x11]:          checknull   
18 [0x12]:          not ebx, ebx   
19 [0x13]:          skne ebx // pc = 27   
20 [0x14]:          movl 5   
21 [0x15]:          movn #0   
23 [0x17]:          pushobj   
24 [0x18]:          pushl 1   
25 [0x19]:          call @661 // <std#integer<_int32>.operator!=>   
26 [0x1a]:          loadval ebx   
27 [0x1b]:          movr cmt, ebx   
28 [0x1c]:          jne 36   
29 [0x1d]: line: 74 movl 5   
30 [0x1e]:          smovr_3 fp+4   
31 [0x1f]: line: 75 movl 5   
32 [0x20]:          movn #2   
34 [0x22]:          smovr_3 fp+5   
35 [0x23]:          jmp @16   
36 [0x24]: line: 78 movl 5   
37 [0x25]:          checknull   
38 [0x26]:          movr cmt, ebx   
39 [0x27]:          jne 85   
40 [0x28]: line: 79 movl 0   
41 [0x29]:          movn #3   
43 [0x2b]:          movi #0, adx   
45 [0x2d]:          iaload ebx, adx   
46 [0x2e]:          movr egx, ebx   
47 [0x2f]:          inc ebx   
48 [0x30]:          movi #0, adx   
50 [0x32]:          rmov adx, ebx   
51 [0x33]: line: 80 new_class @0 // std#__srt_global   
52 [0x34]:          ? (166)   
53 [0x35]:          dup    
54 [0x36]:          pushl 1   
55 [0x37]:          pushl 2   
56 [0x38]:          call @4077 // <ui.res#entry<std#int,ui.support#drawable>.entry>   
57 [0x39]:          popobj2    
58 [0x3a]:          smovr_3 fp+5   
59 [0x3b]: line: 81 movl 4   
60 [0x3c]:          checknull   
61 [0x3d]:          movr cmt, ebx   
62 [0x3e]:          jne 75   
63 [0x3f]: line: 82 pushl 5   
64 [0x40]:          movl 0   
65 [0x41]:          movn #0   
67 [0x43]:          pushobj   
68 [0x44]:          loadl ebx, fp+3   
69 [0x45]:          popobj2    
70 [0x46]:          movr adx, ebx   
71 [0x47]:          chklen adx   
72 [0x48]:          movnd adx   
73 [0x49]:          popobj   
74 [0x4a]:          jmp @80   
75 [0x4b]: line: 84 pushl 5   
76 [0x4c]:          movl 4   
77 [0x4d]:          movn #2   
79 [0x4f]:          popobj   
80 [0x50]:          nop   
81 [0x51]: line: 87 istorel 1, fp+0   
83 [0x53]:          ret   
84 [0x54]:          jmp @93   
85 [0x55]: line: 89 pushl 2   
86 [0x56]:          movl 5   
87 [0x57]:          movn #1   
89 [0x59]:          popobj   
90 [0x5a]: line: 90 istorel 0, fp+0   
92 [0x5c]:          ret   
93 [0x5d]:          nop   


function: std#hashmap<std#int,ui.support#drawable>.remove[4008] params(1) in file: /usr/include/sharp//hashmap.sharp:94:15: note:  
		    public def remove(key: k) : var {
		              ^

0 [0x0]: line: 95 pushl 0   
1 [0x1]:          pushl 1   
2 [0x2]:          call @4004 // <std#hashmap<std#int,ui.support#drawable>.hash>   
3 [0x3]:          ipopl 2   
4 [0x4]: line: 96 movl 0   
5 [0x5]:          movn #0   
7 [0x7]:          pushobj   
8 [0x8]:          loadl ebx, fp+2   
9 [0x9]:          popobj2    
10 [0xa]:          movr adx, ebx   
11 [0xb]:          chklen adx   
12 [0xc]:          movnd adx   
13 [0xd]:          pushobj   
14 [0xe]:          pushnull    
15 [0xf]:          itest ebx   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 96   
18 [0x12]: line: 97 movl 3   
19 [0x13]:          del   
20 [0x14]: line: 98 movl 0   
21 [0x15]:          movn #0   
23 [0x17]:          pushobj   
24 [0x18]:          loadl ebx, fp+2   
25 [0x19]:          popobj2    
26 [0x1a]:          movr adx, ebx   
27 [0x1b]:          chklen adx   
28 [0x1c]:          movnd adx   
29 [0x1d]:          smovr_3 fp+4   
30 [0x1e]: line: 99 movl 4   
31 [0x1f]:          checknull   
32 [0x20]:          not ebx, ebx   
33 [0x21]:          skne ebx // pc = 41   
34 [0x22]:          movl 4   
35 [0x23]:          movn #0   
37 [0x25]:          pushobj   
38 [0x26]:          pushl 1   
39 [0x27]:          call @661 // <std#integer<_int32>.operator!=>   
40 [0x28]:          loadval ebx   
41 [0x29]:          movr cmt, ebx   
42 [0x2a]:          jne 50   
43 [0x2b]: line: 100 movl 4   
44 [0x2c]:           smovr_3 fp+3   
45 [0x2d]: line: 101 movl 4   
46 [0x2e]:           movn #2   
48 [0x30]:           smovr_3 fp+4   
49 [0x31]:           jmp @30   
50 [0x32]: line: 104 movl 4   
51 [0x33]:           movn #0   
53 [0x35]:           pushobj   
54 [0x36]:           pushl 1   
55 [0x37]:           call @662 // <std#integer<_int32>.operator==>   
56 [0x38]:           loadval ebx   
57 [0x39]:           movr cmt, ebx   
58 [0x3a]:           jne 95   
59 [0x3b]: line: 105 movl 3   
60 [0x3c]:           checknull   
61 [0x3d]:           movr cmt, ebx   
62 [0x3e]:           jne 79   
63 [0x3f]: line: 106 movl 4   
64 [0x40]:           movn #2   
66 [0x42]:           smovr_3 fp+5   
67 [0x43]: line: 107 pushl 5   
68 [0x44]:           movl 0   
69 [0x45]:           movn #0   
71 [0x47]:           pushobj   
72 [0x48]:           loadl ebx, fp+2   
73 [0x49]:           popobj2    
74 [0x4a]:           movr adx, ebx   
75 [0x4b]:           chklen adx   
76 [0x4c]:           movnd adx   
77 [0x4d]:           popobj   
78 [0x4e]:           jmp @91   
79 [0x4f]: line: 109 movl 4   
80 [0x50]:           movn #2   
82 [0x52]:           smovr_3 fp+6   
83 [0x53]: line: 110 pushl 6   
84 [0x54]:           movl 3   
85 [0x55]:           movn #2   
87 [0x57]:           popobj   
88 [0x58]: line: 111 pushnull    
89 [0x59]:           popobj2    
90 [0x5a]:           smovr_3 fp+4   
91 [0x5b]:           nop   
92 [0x5c]: line: 114 istorel 1, fp+0   
94 [0x5e]:           ret   
95 [0x5f]:           nop   
96 [0x60]:           nop   
97 [0x61]: line: 118 istorel 0, fp+0   
99 [0x63]:           ret   


function: ui.support#text_view.set_text[4009] params(1) in file: controller//ui//support//text_view.sharp:4:23: note:  
		    text : string = "";
		                      ^

0 [0x0]: line: 6 pushl 1   
1 [0x1]:         movl 0   
2 [0x2]:         movn #19   
4 [0x4]:         popobj   
5 [0x5]: line: 7 movi #0, ebx   
7 [0x7]:         movl 0   
8 [0x8]:         movn #16   
10 [0xa]:         movi #0, adx   
12 [0xc]:         rmov adx, ebx   
13 [0xd]:         ret   


function: ui.support#text_view.set_text_size[4010] params(1) in file: controller//ui//support//text_view.sharp:10:24: note:  
		    text_size : var = 1;
		                       ^

0 [0x0]: line: 12 ipushl #1   
1 [0x1]:          movi #0, ebx   
3 [0x3]:          loadval ecx   
4 [0x4]:          gt ecx, ebx   
5 [0x5]:          movr ebx, cmt   
6 [0x6]:          skne ebx // pc = 9   
7 [0x7]:          loadl ebx, fp+1   
8 [0x8]:          skip @2 // pc = 10   
9 [0x9]:          movi #1, ebx   
11 [0xb]:          movl 0   
12 [0xc]:          movn #20   
14 [0xe]:          movi #0, adx   
16 [0x10]:          rmov adx, ebx   
17 [0x11]: line: 13 movi #0, ebx   
19 [0x13]:          movl 0   
20 [0x14]:          movn #16   
22 [0x16]:          movi #0, adx   
24 [0x18]:          rmov adx, ebx   
25 [0x19]: line: 15 movl 0   
26 [0x1a]:          movn #3   
28 [0x1c]:          movi #0, adx   
30 [0x1e]:          iaload ebx, adx   
31 [0x1f]:          rstore ebx   
32 [0x20]:          movi #0, ebx   
34 [0x22]:          loadval ecx   
35 [0x23]:          gte ecx, ebx   
36 [0x24]:          movr ebx, cmt   
37 [0x25]:          skne ebx // pc = 52   
38 [0x26]:          movl 0   
39 [0x27]:          pushobj   
40 [0x28]:          call @3705 // <ui.support#text_view.transform_height>   
41 [0x29]:          loadval ebx   
42 [0x2a]:          rstore ebx   
43 [0x2b]:          movl 0   
44 [0x2c]:          movn #3   
46 [0x2e]:          movi #0, adx   
48 [0x30]:          iaload ebx, adx   
49 [0x31]:          loadval ecx   
50 [0x32]:          gt ecx, ebx   
51 [0x33]:          movr ebx, cmt   
52 [0x34]:          movr cmt, ebx   
53 [0x35]:          jne 87   
54 [0x36]: line: 16 new_class @0 // std#__srt_global   
55 [0x37]:          loadval adx   
56 [0x38]:          dup    
57 [0x39]:          new_class @0 // std#__srt_global   
58 [0x3a]:          ret   
59 [0x3b]:          dup    
60 [0x3c]:          newstr @158 // text size too large for view height:    
61 [0x3d]:          call @1959 // <std#string.string>   
62 [0x3e]:          movl 0   
63 [0x3f]:          movn #3   
65 [0x41]:          movi #0, adx   
67 [0x43]:          iaload ebx, adx   
68 [0x44]:          rstore ebx   
69 [0x45]:          call @1991 // <std#string.operator+>   
70 [0x46]:          newstr @159 //  txt size:    
71 [0x47]:          call @1971 // <std#string.operator+>   
72 [0x48]:          movl 0   
73 [0x49]:          movn #20   
75 [0x4b]:          movi #0, adx   
77 [0x4d]:          iaload ebx, adx   
78 [0x4e]:          rstore ebx   
79 [0x4f]:          call @1991 // <std#string.operator+>   
80 [0x50]:          newstr @160 //  calc height:    
81 [0x51]:          call @1971 // <std#string.operator+>   
82 [0x52]:          pushl 0   
83 [0x53]:          call @3705 // <ui.support#text_view.transform_height>   
84 [0x54]:          call @1991 // <std#string.operator+>   
85 [0x55]:          call @3552 // <std#illegal_state_exception.illegal_state_exception>   
86 [0x56]:          throw    
87 [0x57]:          nop   
88 [0x58]:          ret   


std#loopable<ui.support#fragment>.get_elements[4011] params(0) in file: /usr/include/sharp//loopable.sharp:4:8: note:  
		    def get_elements() : t[];
		       ^



constructor: std#loopable<ui.support#fragment>.loopable[4012] params(0) in file: /usr/include/sharp//loopable.sharp:3:10: note:  
		interface loopable<t> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#list<ui.support#fragment>.list[4013] params(0) in file: /usr/include/sharp//list.sharp:13:9: note:  
		    list() {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 14 movi #10, ebx   
3 [0x3]:          new_classarray ebx  // ui.support#fragment[]   
5 [0x5]:          movl 0   
6 [0x6]:          movn #1   
8 [0x8]:          popobj   
9 [0x9]:          ret   


constructor: std#list<ui.support#fragment>.list[4014] params(1) in file: /usr/include/sharp//list.sharp:17:9: note:  
		    list(starting_capacity: var) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 18 loadl ebx, fp+1   
2 [0x2]:          new_classarray ebx  // ui.support#fragment[]   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]:          ret   


constructor: std#list<ui.support#fragment>.list[4015] params(1) in file: /usr/include/sharp//list.sharp:21:9: note:  
		    list(initial_data: t[]) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 22 pushl 0   
2 [0x2]:          pushl 1   
3 [0x3]:          call @4026 // <std#list<ui.support#fragment>.add_all>   
4 [0x4]:          ret   


function: std#list<ui.support#fragment>.empty[4016] params(0) in file: /usr/include/sharp//list.sharp:25:8: note:  
		    def empty() := n_elements == 0;
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          return_val cmt   
12 [0xc]:          ret   


function: std#list<ui.support#fragment>.set_compact[4017] params(1) in file: /usr/include/sharp//list.sharp:27:8: note:  
		    def set_compact(compact_array: var) {
		       ^

0 [0x0]: line: 28 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #2   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]:          ret   


function: std#list<ui.support#fragment>.get_elements[4018] params(0) in file: /usr/include/sharp//list.sharp:31:8: note:  
		    def get_elements() : t[] {
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          jne 17   
12 [0xc]:          pushnull    
13 [0xd]:          popobj2    
14 [0xe]:          returnobj   
15 [0xf]:          ret   
16 [0x10]:          jmp @34   
17 [0x11]: line: 33 movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          pushobj   
21 [0x15]:          istore 0   
23 [0x17]:          movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          iaload ebx, adx   
29 [0x1d]:          rstore ebx   
30 [0x1e]:          call @2107 // <std.io#__srt_global.copy>   
31 [0x1f]:          popobj2    
32 [0x20]:          returnobj   
33 [0x21]:          ret   
34 [0x22]:          nop   


overload function: std#list<ui.support#fragment>.operator[[4019] params(1) in file: /usr/include/sharp//list.sharp:36:8: note:  
		    def operator[](index: var): t {
		       ^

0 [0x0]: line: 37 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 38 new_class @0 // std#__srt_global   
19 [0x13]:          shl adx, adx -> adx   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @4040 // <std#list<ui.support#fragment>.out_of_bounds_msg>   
24 [0x18]:          call @3555 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 39 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          returnobj   
37 [0x25]:          ret   


function: std#list<ui.support#fragment>.at[4020] params(1) in file: /usr/include/sharp//list.sharp:42:8: note:  
		    def at(index: var): t {
		       ^

0 [0x0]: line: 43 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 44 new_class @0 // std#__srt_global   
19 [0x13]:          shl adx, adx -> adx   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @4040 // <std#list<ui.support#fragment>.out_of_bounds_msg>   
24 [0x18]:          call @3555 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 45 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          returnobj   
37 [0x25]:          ret   


function: std#list<ui.support#fragment>.last[4021] params(0) in file: /usr/include/sharp//list.sharp:48:8: note:  
		    def last(): t {
		       ^

0 [0x0]: line: 49 pushl 0   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movi #1, ebx   
10 [0xa]:          loadval ecx   
11 [0xb]:          sub ecx, ebx -> ebx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @4020 // <std#list<ui.support#fragment>.at>   
14 [0xe]:          popobj2    
15 [0xf]:          returnobj   
16 [0x10]:          ret   


function: std#list<ui.support#fragment>.put[4022] params(2) in file: /usr/include/sharp//list.sharp:52:8: note:  
		    def put(index: var, element: t) : t {
		       ^

0 [0x0]: line: 53 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 54 new_class @0 // std#__srt_global   
19 [0x13]:          shl adx, adx -> adx   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @4040 // <std#list<ui.support#fragment>.out_of_bounds_msg>   
24 [0x18]:          call @3555 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 56 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          smovr_3 fp+3   
37 [0x25]: line: 57 pushl 2   
38 [0x26]:          movl 0   
39 [0x27]:          movn #1   
41 [0x29]:          pushobj   
42 [0x2a]:          loadl ebx, fp+1   
43 [0x2b]:          popobj2    
44 [0x2c]:          movr adx, ebx   
45 [0x2d]:          chklen adx   
46 [0x2e]:          movnd adx   
47 [0x2f]:          popobj   
48 [0x30]: line: 58 movl 3   
49 [0x31]:          returnobj   
50 [0x32]:          ret   


function: std#list<ui.support#fragment>.expand[4023] params(0) in file: /usr/include/sharp//list.sharp:61:16: note:  
		    private def expand() {
		               ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #2   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 24   
8 [0x8]: line: 63 movl 0   
9 [0x9]:          movn #1   
11 [0xb]:          pushobj   
12 [0xc]:          movl 0   
13 [0xd]:          movn #1   
15 [0xf]:          sizeof ebx   
16 [0x10]:          rstore ebx   
17 [0x11]:          movi #128, ebx   
19 [0x13]:          loadval ecx   
20 [0x14]:          add ecx, ebx -> ebx   
21 [0x15]:          rstore ebx   
22 [0x16]:          call @2087 // <std.io#__srt_global.realloc>   
23 [0x17]:          jmp @51   
24 [0x18]: line: 65 movl 0   
25 [0x19]:          movn #1   
27 [0x1b]:          pushobj   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          sizeof ebx   
32 [0x20]:          rstore ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #1   
36 [0x24]:          sizeof ebx   
37 [0x25]:          rstore ebx   
38 [0x26]:          movi #4, ebx   
40 [0x28]:          loadval ecx   
41 [0x29]:          shr ecx, ebx -> ebx   
42 [0x2a]:          loadval ecx   
43 [0x2b]:          add ecx, ebx -> ebx   
44 [0x2c]:          rstore ebx   
45 [0x2d]:          movi #128, ebx   
47 [0x2f]:          loadval ecx   
48 [0x30]:          add ecx, ebx -> ebx   
49 [0x31]:          rstore ebx   
50 [0x32]:          call @2087 // <std.io#__srt_global.realloc>   
51 [0x33]:          nop   
52 [0x34]:          ret   


function: std#list<ui.support#fragment>.clear[4024] params(0) in file: /usr/include/sharp//list.sharp:68:8: note:  
		    def clear() {
		       ^

0 [0x0]: line: 69 movi #10, ebx   
2 [0x2]:          new_classarray ebx  // ui.support#fragment[]   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]: line: 70 movi #0, ebx   
10 [0xa]:          movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          movi #0, adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          ret   


function: std#list<ui.support#fragment>.add_all[4025] params(1) in file: /usr/include/sharp//list.sharp:73:8: note:  
		    def add_all(lst: list<t>) {
		       ^

0 [0x0]: line: 74 movl 1   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          istore 0   
6 [0x6]:          movl 1   
7 [0x7]:          movn #0   
9 [0x9]:          movi #0, adx   
11 [0xb]:          iaload ebx, adx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @2107 // <std.io#__srt_global.copy>   
14 [0xe]:          popobj2    
15 [0xf]:          movi #116, cmt   
17 [0x11]:          cast cmt   
18 [0x12]:          pushobj   
19 [0x13]:          movl 0   
20 [0x14]:          movn #1   
22 [0x16]:          popobj   
23 [0x17]: line: 75 movl 1   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          iaload ebx, adx   
29 [0x1d]:          movl 0   
30 [0x1e]:          movn #0   
32 [0x20]:          movi #0, adx   
34 [0x22]:          rmov adx, ebx   
35 [0x23]:          ret   


function: std#list<ui.support#fragment>.add_all[4026] params(1) in file: /usr/include/sharp//list.sharp:78:8: note:  
		    def add_all(lst: t[]) {
		       ^

0 [0x0]: line: 79 movl 1   
1 [0x1]:          checknull   
2 [0x2]:          not ebx, ebx   
3 [0x3]:          movr cmt, ebx   
4 [0x4]:          jne 30   
5 [0x5]: line: 80 pushl 1   
6 [0x6]:          istore 0   
8 [0x8]:          movl 1   
9 [0x9]:          sizeof ebx   
10 [0xa]:          rstore ebx   
11 [0xb]:          call @2107 // <std.io#__srt_global.copy>   
12 [0xc]:          popobj2    
13 [0xd]:          movi #116, cmt   
15 [0xf]:          cast cmt   
16 [0x10]:          pushobj   
17 [0x11]:          movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          popobj   
21 [0x15]: line: 81 movl 1   
22 [0x16]:          sizeof ebx   
23 [0x17]:          movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          rmov adx, ebx   
29 [0x1d]:          jmp @46   
30 [0x1e]: line: 83 movi #0, ebx   
32 [0x20]:          movl 0   
33 [0x21]:          movn #0   
35 [0x23]:          movi #0, adx   
37 [0x25]:          rmov adx, ebx   
38 [0x26]: line: 84 movi #10, ebx   
40 [0x28]:          new_classarray ebx  // ui.support#fragment[]   
42 [0x2a]:          movl 0   
43 [0x2b]:          movn #1   
45 [0x2d]:          popobj   
46 [0x2e]:          nop   
47 [0x2f]:          ret   


function: std#list<ui.support#fragment>.add[4027] params(1) in file: /usr/include/sharp//list.sharp:88:8: note:  
		    def add(element: t) {
		       ^

0 [0x0]: line: 89 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 0   
8 [0x8]:          movn #1   
10 [0xa]:          sizeof ebx   
11 [0xb]:          loadval ecx   
12 [0xc]:          gte ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          movr cmt, ebx   
15 [0xf]:          jne 18   
16 [0x10]: line: 90 pushl 0   
17 [0x11]:          call @4023 // <std#list<ui.support#fragment>.expand>   
18 [0x12]:          nop   
19 [0x13]: line: 91 pushl 1   
20 [0x14]:          movl 0   
21 [0x15]:          movn #1   
23 [0x17]:          pushobj   
24 [0x18]:          movl 0   
25 [0x19]:          movn #0   
27 [0x1b]:          movi #0, adx   
29 [0x1d]:          iaload ebx, adx   
30 [0x1e]:          movr egx, ebx   
31 [0x1f]:          inc ebx   
32 [0x20]:          movi #0, adx   
34 [0x22]:          rmov adx, ebx   
35 [0x23]:          movr ebx, egx   
36 [0x24]:          popobj2    
37 [0x25]:          movr adx, ebx   
38 [0x26]:          chklen adx   
39 [0x27]:          movnd adx   
40 [0x28]:          popobj   
41 [0x29]:          ret   


function: std#list<ui.support#fragment>.indexof[4028] params(1) in file: /usr/include/sharp//list.sharp:94:8: note:  
		    def indexof(element: t) : var {
		       ^

0 [0x0]: line: 95 istorel 0, fp+2   
2 [0x2]:          ipushl #2   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          lt ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 35   
14 [0xe]: line: 96 pushl 1   
15 [0xf]:          movl 0   
16 [0x10]:          movn #1   
18 [0x12]:          pushobj   
19 [0x13]:          loadl ebx, fp+2   
20 [0x14]:          popobj2    
21 [0x15]:          movr adx, ebx   
22 [0x16]:          chklen adx   
23 [0x17]:          movnd adx   
24 [0x18]:          pushobj   
25 [0x19]:          itest ebx   
26 [0x1a]:          movr cmt, ebx   
27 [0x1b]:          jne 31   
28 [0x1c]: line: 97 loadl ebx, fp+2   
29 [0x1d]:          return_val ebx   
30 [0x1e]:          ret   
31 [0x1f]:          nop   
32 [0x20]:          iaddl 1, fp@2   
34 [0x22]:          jmp @2   
35 [0x23]: line: 101 istorel -1, fp+0   
37 [0x25]:           ret   


function: std#list<ui.support#fragment>.pop_back[4029] params(0) in file: /usr/include/sharp//list.sharp:104:8: note:  
		    def pop_back() {
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #0, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 38   
14 [0xe]: line: 106 movl 1   
15 [0xf]:           del   
16 [0x10]: line: 107 pushl 1   
17 [0x11]:           movl 0   
18 [0x12]:           movn #1   
20 [0x14]:           pushobj   
21 [0x15]:           movl 0   
22 [0x16]:           movn #0   
24 [0x18]:           movi #0, adx   
26 [0x1a]:           iaload ebx, adx   
27 [0x1b]:           movr egx, ebx   
28 [0x1c]:           dec ebx   
29 [0x1d]:           movi #0, adx   
31 [0x1f]:           rmov adx, ebx   
32 [0x20]:           movr ebx, egx   
33 [0x21]:           popobj2    
34 [0x22]:           movr adx, ebx   
35 [0x23]:           chklen adx   
36 [0x24]:           movnd adx   
37 [0x25]:           popobj   
38 [0x26]:           nop   
39 [0x27]:           ret   


function: std#list<ui.support#fragment>.size[4030] params(0) in file: /usr/include/sharp//list.sharp:111:8: note:  
		    def size() := n_elements;
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std#list<ui.support#fragment>.insert[4031] params(2) in file: /usr/include/sharp//list.sharp:113:8: note:  
		    def insert(index: var, element: t) {
		       ^

0 [0x0]: line: 114 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gt ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 16   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 26   
18 [0x12]: line: 115 new_class @0 // std#__srt_global   
19 [0x13]:           shl adx, adx -> adx   
20 [0x14]:           dup    
21 [0x15]:           pushl 0   
22 [0x16]:           ipushl #1   
23 [0x17]:           call @4040 // <std#list<ui.support#fragment>.out_of_bounds_msg>   
24 [0x18]:           call @3555 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 117 movl 0   
28 [0x1c]:           movn #0   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movi #0, ebx   
36 [0x24]:           loadval ecx   
37 [0x25]:           test ecx, ebx   
38 [0x26]:           jne 43   
39 [0x27]: line: 118 pushl 0   
40 [0x28]:           pushl 2   
41 [0x29]:           call @4027 // <std#list<ui.support#fragment>.add>   
42 [0x2a]:           jmp @132   
43 [0x2b]: line: 120 movl 0   
44 [0x2c]:           movn #0   
46 [0x2e]:           movi #0, adx   
48 [0x30]:           iaload ebx, adx   
49 [0x31]:           rstore ebx   
50 [0x32]:           movl 0   
51 [0x33]:           movn #1   
53 [0x35]:           sizeof ebx   
54 [0x36]:           loadval ecx   
55 [0x37]:           gte ecx, ebx   
56 [0x38]:           movr ebx, cmt   
57 [0x39]:           movr cmt, ebx   
58 [0x3a]:           jne 61   
59 [0x3b]: line: 121 pushl 0   
60 [0x3c]:           call @4023 // <std#list<ui.support#fragment>.expand>   
61 [0x3d]:           nop   
62 [0x3e]: line: 122 movl 0   
63 [0x3f]:           movn #0   
65 [0x41]:           movi #0, adx   
67 [0x43]:           iaload ebx, adx   
68 [0x44]:           movr egx, ebx   
69 [0x45]:           inc ebx   
70 [0x46]:           movi #0, adx   
72 [0x48]:           rmov adx, ebx   
73 [0x49]: line: 123 movl 0   
74 [0x4a]:           movn #0   
76 [0x4c]:           movi #0, adx   
78 [0x4e]:           iaload ebx, adx   
79 [0x4f]:           rstore ebx   
80 [0x50]:           movi #1, ebx   
82 [0x52]:           loadval ecx   
83 [0x53]:           sub ecx, ebx -> ebx   
84 [0x54]:           smovr_2 ebx, fp+3   
85 [0x55]:           ipushl #3   
86 [0x56]:           loadl ebx, fp+1   
87 [0x57]:           loadval ecx   
88 [0x58]:           gt ecx, ebx   
89 [0x59]:           movr ebx, cmt   
90 [0x5a]:           movr cmt, ebx   
91 [0x5b]:           jne 121   
92 [0x5c]: line: 124 movl 0   
93 [0x5d]:           movn #1   
95 [0x5f]:           pushobj   
96 [0x60]:           ipushl #3   
97 [0x61]:           movi #1, ebx   
99 [0x63]:           loadval ecx   
100 [0x64]:           sub ecx, ebx -> ebx   
101 [0x65]:           popobj2    
102 [0x66]:           movr adx, ebx   
103 [0x67]:           chklen adx   
104 [0x68]:           movnd adx   
105 [0x69]:           pushobj   
106 [0x6a]:           movl 0   
107 [0x6b]:           movn #1   
109 [0x6d]:           pushobj   
110 [0x6e]:           loadl ebx, fp+3   
111 [0x6f]:           popobj2    
112 [0x70]:           movr adx, ebx   
113 [0x71]:           chklen adx   
114 [0x72]:           movnd adx   
115 [0x73]:           popobj   
116 [0x74]:           loadl ebx, fp+3   
117 [0x75]:           movr egx, ebx   
118 [0x76]:           dec ebx   
119 [0x77]:           smovr_2 ebx, fp+3   
120 [0x78]:           jmp @85   
121 [0x79]: line: 125 pushl 2   
122 [0x7a]:           movl 0   
123 [0x7b]:           movn #1   
125 [0x7d]:           pushobj   
126 [0x7e]:           loadl ebx, fp+1   
127 [0x7f]:           popobj2    
128 [0x80]:           movr adx, ebx   
129 [0x81]:           chklen adx   
130 [0x82]:           movnd adx   
131 [0x83]:           popobj   
132 [0x84]:           nop   
133 [0x85]:           ret   


function: std#list<ui.support#fragment>.find[4032] params(2) in file: /usr/include/sharp//list.sharp:129:8: note:  
		    def find(comparer : t, find_func: (t, t)(var)) : t {
		       ^

0 [0x0]: line: 130 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 46   
14 [0xe]: line: 131 ipushl #2   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+3   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           pushl 1   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 42   
31 [0x1f]: line: 132 movl 0   
32 [0x20]:           movn #1   
34 [0x22]:           pushobj   
35 [0x23]:           loadl ebx, fp+3   
36 [0x24]:           popobj2    
37 [0x25]:           movr adx, ebx   
38 [0x26]:           chklen adx   
39 [0x27]:           movnd adx   
40 [0x28]:           returnobj   
41 [0x29]:           ret   
42 [0x2a]:           nop   
43 [0x2b]:           iaddl 1, fp@3   
45 [0x2d]:           jmp @2   
46 [0x2e]: line: 136 movl 4   
47 [0x2f]:           del   
48 [0x30]: line: 137 movl 4   
49 [0x31]:           returnobj   
50 [0x32]:           ret   


function: std#list<ui.support#fragment>.remove[4033] params(1) in file: /usr/include/sharp//list.sharp:140:8: note:  
		    def remove(val: t) {
		       ^

0 [0x0]: line: 141 istorel 0, fp+2   
2 [0x2]:           ipushl #2   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 36   
14 [0xe]: line: 142 pushl 1   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+2   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           itest ebx   
26 [0x1a]:           movr cmt, ebx   
27 [0x1b]:           jne 32   
28 [0x1c]: line: 143 pushl 0   
29 [0x1d]:           ipushl #2   
30 [0x1e]:           call @4037 // <std#list<ui.support#fragment>.remove_at>   
31 [0x1f]: line: 144 ret   
32 [0x20]:           nop   
33 [0x21]:           iaddl 1, fp@2   
35 [0x23]:           jmp @2   
36 [0x24]:           ret   


function: std#list<ui.support#fragment>.remove[4034] params(2) in file: /usr/include/sharp//list.sharp:149:8: note:  
		    def remove(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 150 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 39   
14 [0xe]: line: 151 ipushl #2   
15 [0xf]:           pushl 1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #1   
19 [0x13]:           pushobj   
20 [0x14]:           loadl ebx, fp+3   
21 [0x15]:           popobj2    
22 [0x16]:           movr adx, ebx   
23 [0x17]:           chklen adx   
24 [0x18]:           movnd adx   
25 [0x19]:           pushobj   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 35   
31 [0x1f]: line: 152 pushl 0   
32 [0x20]:           ipushl #3   
33 [0x21]:           call @4037 // <std#list<ui.support#fragment>.remove_at>   
34 [0x22]: line: 153 ret   
35 [0x23]:           nop   
36 [0x24]:           iaddl 1, fp@3   
38 [0x26]:           jmp @2   
39 [0x27]:           ret   


function: std#list<ui.support#fragment>.replace[4035] params(2) in file: /usr/include/sharp//list.sharp:158:8: note:  
		    def replace(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 159 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 47   
14 [0xe]: line: 160 ipushl #2   
15 [0xf]:           pushl 1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #1   
19 [0x13]:           pushobj   
20 [0x14]:           loadl ebx, fp+3   
21 [0x15]:           popobj2    
22 [0x16]:           movr adx, ebx   
23 [0x17]:           chklen adx   
24 [0x18]:           movnd adx   
25 [0x19]:           pushobj   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 43   
31 [0x1f]: line: 161 pushl 1   
32 [0x20]:           movl 0   
33 [0x21]:           movn #1   
35 [0x23]:           pushobj   
36 [0x24]:           loadl ebx, fp+3   
37 [0x25]:           popobj2    
38 [0x26]:           movr adx, ebx   
39 [0x27]:           chklen adx   
40 [0x28]:           movnd adx   
41 [0x29]:           popobj   
42 [0x2a]: line: 162 ret   
43 [0x2b]:           nop   
44 [0x2c]:           iaddl 1, fp@3   
46 [0x2e]:           jmp @2   
47 [0x2f]:           ret   


function: std#list<ui.support#fragment>.linear_sort[4036] params(1) in file: /usr/include/sharp//list.sharp:167:8: note:  
		    def linear_sort(swap: (t, t)(var)) {
		       ^

0 [0x0]: line: 168 istorel 0, fp+2   
2 [0x2]:           ipushl #2   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 132   
14 [0xe]: line: 170 istorel 0, fp+3   
16 [0x10]:           ipushl #3   
17 [0x11]:           movl 0   
18 [0x12]:           movn #0   
20 [0x14]:           movi #0, adx   
22 [0x16]:           iaload ebx, adx   
23 [0x17]:           loadval ecx   
24 [0x18]:           lt ecx, ebx   
25 [0x19]:           movr ebx, cmt   
26 [0x1a]:           movr cmt, ebx   
27 [0x1b]:           jne 129   
28 [0x1c]: line: 171 ipushl #3   
29 [0x1d]:           movi #1, ebx   
31 [0x1f]:           loadval ecx   
32 [0x20]:           add ecx, ebx -> ebx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movl 0   
35 [0x23]:           movn #0   
37 [0x25]:           movi #0, adx   
39 [0x27]:           iaload ebx, adx   
40 [0x28]:           loadval ecx   
41 [0x29]:           lt ecx, ebx   
42 [0x2a]:           movr ebx, cmt   
43 [0x2b]:           movr cmt, ebx   
44 [0x2c]:           jne 125   
45 [0x2d]: line: 173 ipushl #1   
46 [0x2e]:           movl 0   
47 [0x2f]:           movn #1   
49 [0x31]:           pushobj   
50 [0x32]:           loadl ebx, fp+3   
51 [0x33]:           popobj2    
52 [0x34]:           movr adx, ebx   
53 [0x35]:           chklen adx   
54 [0x36]:           movnd adx   
55 [0x37]:           pushobj   
56 [0x38]:           movl 0   
57 [0x39]:           movn #1   
59 [0x3b]:           pushobj   
60 [0x3c]:           ipushl #3   
61 [0x3d]:           movi #1, ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           add ecx, ebx -> ebx   
65 [0x41]:           popobj2    
66 [0x42]:           movr adx, ebx   
67 [0x43]:           chklen adx   
68 [0x44]:           movnd adx   
69 [0x45]:           pushobj   
70 [0x46]:           smov ebx, sp+[-2]   
71 [0x47]:           calld ebx   
72 [0x48]:           loadval ebx   
73 [0x49]:           movr cmt, ebx   
74 [0x4a]:           jne 124   
75 [0x4b]: line: 174 movl 0   
76 [0x4c]:           movn #1   
78 [0x4e]:           pushobj   
79 [0x4f]:           loadl ebx, fp+3   
80 [0x50]:           popobj2    
81 [0x51]:           movr adx, ebx   
82 [0x52]:           chklen adx   
83 [0x53]:           movnd adx   
84 [0x54]:           smovr_3 fp+4   
85 [0x55]: line: 175 movl 0   
86 [0x56]:           movn #1   
88 [0x58]:           pushobj   
89 [0x59]:           ipushl #3   
90 [0x5a]:           movi #1, ebx   
92 [0x5c]:           loadval ecx   
93 [0x5d]:           add ecx, ebx -> ebx   
94 [0x5e]:           popobj2    
95 [0x5f]:           movr adx, ebx   
96 [0x60]:           chklen adx   
97 [0x61]:           movnd adx   
98 [0x62]:           pushobj   
99 [0x63]:           movl 0   
100 [0x64]:           movn #1   
102 [0x66]:           pushobj   
103 [0x67]:           loadl ebx, fp+3   
104 [0x68]:           popobj2    
105 [0x69]:           movr adx, ebx   
106 [0x6a]:           chklen adx   
107 [0x6b]:           movnd adx   
108 [0x6c]:           popobj   
109 [0x6d]: line: 176 pushl 4   
110 [0x6e]:           movl 0   
111 [0x6f]:           movn #1   
113 [0x71]:           pushobj   
114 [0x72]:           ipushl #3   
115 [0x73]:           movi #1, ebx   
117 [0x75]:           loadval ecx   
118 [0x76]:           add ecx, ebx -> ebx   
119 [0x77]:           popobj2    
120 [0x78]:           movr adx, ebx   
121 [0x79]:           chklen adx   
122 [0x7a]:           movnd adx   
123 [0x7b]:           popobj   
124 [0x7c]:           nop   
125 [0x7d]:           nop   
126 [0x7e]:           iaddl 1, fp@3   
128 [0x80]:           jmp @16   
129 [0x81]:           iaddl 1, fp@2   
131 [0x83]:           jmp @2   
132 [0x84]:           ret   


function: std#list<ui.support#fragment>.remove_at[4037] params(1) in file: /usr/include/sharp//list.sharp:183:8: note:  
		    def remove_at(index: var) {
		       ^

0 [0x0]: line: 184 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gte ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 16   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 26   
18 [0x12]: line: 185 new_class @0 // std#__srt_global   
19 [0x13]:           shl adx, adx -> adx   
20 [0x14]:           dup    
21 [0x15]:           pushl 0   
22 [0x16]:           ipushl #1   
23 [0x17]:           call @4040 // <std#list<ui.support#fragment>.out_of_bounds_msg>   
24 [0x18]:           call @3555 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 187 movl 0   
28 [0x1c]:           movn #0   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           rstore ebx   
34 [0x22]:           loadl ebx, fp+1   
35 [0x23]:           loadval ecx   
36 [0x24]:           sub ecx, ebx -> ebx   
37 [0x25]:           rstore ebx   
38 [0x26]:           movi #1, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           sub ecx, ebx -> ebx   
42 [0x2a]:           smovr_2 ebx, fp+2   
43 [0x2b]: line: 188 ipushl #2   
44 [0x2c]:           movi #0, ebx   
46 [0x2e]:           loadval ecx   
47 [0x2f]:           gt ecx, ebx   
48 [0x30]:           movr ebx, cmt   
49 [0x31]:           movr cmt, ebx   
50 [0x32]:           jne 74   
51 [0x33]: line: 189 movl 0   
52 [0x34]:           movn #1   
54 [0x36]:           pushobj   
55 [0x37]:           movl 0   
56 [0x38]:           movn #1   
58 [0x3a]:           pushobj   
59 [0x3b]:           ipushl #1   
60 [0x3c]:           ipushl #1   
61 [0x3d]:           movi #1, ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           add ecx, ebx -> ebx   
65 [0x41]:           rstore ebx   
66 [0x42]:           movl 0   
67 [0x43]:           movn #0   
69 [0x45]:           movi #0, adx   
71 [0x47]:           iaload ebx, adx   
72 [0x48]:           rstore ebx   
73 [0x49]:           call @2097 // <std.io#__srt_global.memcopy>   
74 [0x4a]:           nop   
75 [0x4b]: line: 191 pushl 0   
76 [0x4c]:           call @4029 // <std#list<ui.support#fragment>.pop_back>   
77 [0x4d]:           ret   


function: std#list<ui.support#fragment>.indexof[4038] params(2) in file: /usr/include/sharp//list.sharp:194:8: note:  
		    def indexof(comparer: t, find_func: (t, t)(var)) : var {
		       ^

0 [0x0]: line: 195 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 38   
14 [0xe]: line: 196 ipushl #2   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+3   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           pushl 1   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 34   
31 [0x1f]: line: 197 loadl ebx, fp+3   
32 [0x20]:           return_val ebx   
33 [0x21]:           ret   
34 [0x22]:           nop   
35 [0x23]:           iaddl 1, fp@3   
37 [0x25]:           jmp @2   
38 [0x26]: line: 201 istorel -1, fp+0   
40 [0x28]:           ret   


function: std#list<ui.support#fragment>.to_string[4039] params(0) in file: /usr/include/sharp//list.sharp:204:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 205 new_class @0 // std#__srt_global   
1 [0x1]:           movi #112, adx   
3 [0x3]:           call @1958 // <std#string_builder.string_builder>   
4 [0x4]:           popobj2    
5 [0x5]:           smovr_3 fp+1   
6 [0x6]: line: 207 pushl 1   
7 [0x7]:           newstr @149 // [    
8 [0x8]:           call @1954 // <std#string_builder.operator+=>   
9 [0x9]:           pop   
10 [0xa]: line: 208 istorel 0, fp+2   
12 [0xc]:           ipushl #2   
13 [0xd]:           movl 0   
14 [0xe]:           movn #0   
16 [0x10]:           movi #0, adx   
18 [0x12]:           iaload ebx, adx   
19 [0x13]:           loadval ecx   
20 [0x14]:           lt ecx, ebx   
21 [0x15]:           movr ebx, cmt   
22 [0x16]:           movr cmt, ebx   
23 [0x17]:           jne 62   
24 [0x18]: line: 209 pushl 1   
25 [0x19]:           movl 0   
26 [0x1a]:           movn #1   
28 [0x1c]:           pushobj   
29 [0x1d]:           loadl ebx, fp+2   
30 [0x1e]:           popobj2    
31 [0x1f]:           movr adx, ebx   
32 [0x20]:           chklen adx   
33 [0x21]:           movnd adx   
34 [0x22]:           pushobj   
35 [0x23]:           call @1950 // <std#string_builder.operator+=>   
36 [0x24]:           pop   
37 [0x25]: line: 211 ipushl #2   
38 [0x26]:           movi #1, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           add ecx, ebx -> ebx   
42 [0x2a]:           rstore ebx   
43 [0x2b]:           movl 0   
44 [0x2c]:           movn #0   
46 [0x2e]:           movi #0, adx   
48 [0x30]:           iaload ebx, adx   
49 [0x31]:           loadval ecx   
50 [0x32]:           lt ecx, ebx   
51 [0x33]:           movr ebx, cmt   
52 [0x34]:           movr cmt, ebx   
53 [0x35]:           jne 58   
54 [0x36]: line: 212 pushl 1   
55 [0x37]:           newstr @150 // ,    
56 [0x38]:           call @1954 // <std#string_builder.operator+=>   
57 [0x39]:           pop   
58 [0x3a]:           nop   
59 [0x3b]:           iaddl 1, fp@2   
61 [0x3d]:           jmp @12   
62 [0x3e]: line: 216 pushl 1   
63 [0x3f]:           newstr @151 //  ]   
64 [0x40]:           call @1954 // <std#string_builder.operator+=>   
65 [0x41]:           pop   
66 [0x42]: line: 217 pushl 1   
67 [0x43]:           call @1931 // <std#string_builder.to_string>   
68 [0x44]:           popobj2    
69 [0x45]:           returnobj   
70 [0x46]:           ret   


function: std#list<ui.support#fragment>.out_of_bounds_msg[4040] params(1) in file: /usr/include/sharp//list.sharp:220:16: note:  
		    private def out_of_bounds_msg(index: var) : string {
		               ^

0 [0x0]: line: 221 new_class @0 // std#__srt_global   
1 [0x1]:           ret   
2 [0x2]:           dup    
3 [0x3]:           newstr @152 // Index:    
4 [0x4]:           call @1959 // <std#string.string>   
5 [0x5]:           ipushl #1   
6 [0x6]:           call @1991 // <std#string.operator+>   
7 [0x7]:           newstr @153 // , size:    
8 [0x8]:           call @1971 // <std#string.operator+>   
9 [0x9]:           movl 0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           rstore ebx   
16 [0x10]:           call @1991 // <std#string.operator+>   
17 [0x11]:           popobj2    
18 [0x12]:           returnobj   
19 [0x13]:           ret   


std#loopable<ui.support#view>.get_elements[4041] params(0) in file: /usr/include/sharp//loopable.sharp:4:8: note:  
		    def get_elements() : t[];
		       ^



constructor: std#loopable<ui.support#view>.loopable[4042] params(0) in file: /usr/include/sharp//loopable.sharp:3:10: note:  
		interface loopable<t> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std#list<ui.support#view>.list[4043] params(0) in file: /usr/include/sharp//list.sharp:13:9: note:  
		    list() {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 14 movi #10, ebx   
3 [0x3]:          new_classarray ebx  // ui.support#view[]   
5 [0x5]:          movl 0   
6 [0x6]:          movn #1   
8 [0x8]:          popobj   
9 [0x9]:          ret   


constructor: std#list<ui.support#view>.list[4044] params(1) in file: /usr/include/sharp//list.sharp:17:9: note:  
		    list(starting_capacity: var) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 18 loadl ebx, fp+1   
2 [0x2]:          new_classarray ebx  // ui.support#view[]   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]:          ret   


constructor: std#list<ui.support#view>.list[4045] params(1) in file: /usr/include/sharp//list.sharp:21:9: note:  
		    list(initial_data: t[]) {
		        ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 22 pushl 0   
2 [0x2]:          pushl 1   
3 [0x3]:          call @4056 // <std#list<ui.support#view>.add_all>   
4 [0x4]:          ret   


function: std#list<ui.support#view>.empty[4046] params(0) in file: /usr/include/sharp//list.sharp:25:8: note:  
		    def empty() := n_elements == 0;
		       ^

0 [0x0]: line: 25 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          return_val cmt   
12 [0xc]:          ret   


function: std#list<ui.support#view>.set_compact[4047] params(1) in file: /usr/include/sharp//list.sharp:27:8: note:  
		    def set_compact(compact_array: var) {
		       ^

0 [0x0]: line: 28 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #2   
4 [0x4]:          loadval ebx   
5 [0x5]:          movi #0, adx   
7 [0x7]:          rmov adx, ebx   
8 [0x8]:          ret   


function: std#list<ui.support#view>.get_elements[4048] params(0) in file: /usr/include/sharp//list.sharp:31:8: note:  
		    def get_elements() : t[] {
		       ^

0 [0x0]: line: 32 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movi #0, ebx   
9 [0x9]:          loadval ecx   
10 [0xa]:          test ecx, ebx   
11 [0xb]:          jne 17   
12 [0xc]:          pushnull    
13 [0xd]:          popobj2    
14 [0xe]:          returnobj   
15 [0xf]:          ret   
16 [0x10]:          jmp @34   
17 [0x11]: line: 33 movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          pushobj   
21 [0x15]:          istore 0   
23 [0x17]:          movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          iaload ebx, adx   
29 [0x1d]:          rstore ebx   
30 [0x1e]:          call @2107 // <std.io#__srt_global.copy>   
31 [0x1f]:          popobj2    
32 [0x20]:          returnobj   
33 [0x21]:          ret   
34 [0x22]:          nop   


overload function: std#list<ui.support#view>.operator[[4049] params(1) in file: /usr/include/sharp//list.sharp:36:8: note:  
		    def operator[](index: var): t {
		       ^

0 [0x0]: line: 37 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 38 new_class @0 // std#__srt_global   
19 [0x13]:          shl adx, adx -> adx   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @4070 // <std#list<ui.support#view>.out_of_bounds_msg>   
24 [0x18]:          call @3555 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 39 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          returnobj   
37 [0x25]:          ret   


function: std#list<ui.support#view>.at[4050] params(1) in file: /usr/include/sharp//list.sharp:42:8: note:  
		    def at(index: var): t {
		       ^

0 [0x0]: line: 43 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 44 new_class @0 // std#__srt_global   
19 [0x13]:          shl adx, adx -> adx   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @4070 // <std#list<ui.support#view>.out_of_bounds_msg>   
24 [0x18]:          call @3555 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 45 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          returnobj   
37 [0x25]:          ret   


function: std#list<ui.support#view>.last[4051] params(0) in file: /usr/include/sharp//list.sharp:48:8: note:  
		    def last(): t {
		       ^

0 [0x0]: line: 49 pushl 0   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movi #1, ebx   
10 [0xa]:          loadval ecx   
11 [0xb]:          sub ecx, ebx -> ebx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @4050 // <std#list<ui.support#view>.at>   
14 [0xe]:          popobj2    
15 [0xf]:          returnobj   
16 [0x10]:          ret   


function: std#list<ui.support#view>.put[4052] params(2) in file: /usr/include/sharp//list.sharp:52:8: note:  
		    def put(index: var, element: t) : t {
		       ^

0 [0x0]: line: 53 ipushl #1   
1 [0x1]:          movl 0   
2 [0x2]:          movn #0   
4 [0x4]:          movi #0, adx   
6 [0x6]:          iaload ebx, adx   
7 [0x7]:          loadval ecx   
8 [0x8]:          gte ecx, ebx   
9 [0x9]:          movr ebx, cmt   
10 [0xa]:          skpe ebx // pc = 16   
11 [0xb]:          loadl ecx, fp+1   
12 [0xc]:          movi #0, ebx   
14 [0xe]:          lt ecx, ebx   
15 [0xf]:          movr ebx, cmt   
16 [0x10]:          movr cmt, ebx   
17 [0x11]:          jne 26   
18 [0x12]: line: 54 new_class @0 // std#__srt_global   
19 [0x13]:          shl adx, adx -> adx   
20 [0x14]:          dup    
21 [0x15]:          pushl 0   
22 [0x16]:          ipushl #1   
23 [0x17]:          call @4070 // <std#list<ui.support#view>.out_of_bounds_msg>   
24 [0x18]:          call @3555 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:          throw    
26 [0x1a]:          nop   
27 [0x1b]: line: 56 movl 0   
28 [0x1c]:          movn #1   
30 [0x1e]:          pushobj   
31 [0x1f]:          loadl ebx, fp+1   
32 [0x20]:          popobj2    
33 [0x21]:          movr adx, ebx   
34 [0x22]:          chklen adx   
35 [0x23]:          movnd adx   
36 [0x24]:          smovr_3 fp+3   
37 [0x25]: line: 57 pushl 2   
38 [0x26]:          movl 0   
39 [0x27]:          movn #1   
41 [0x29]:          pushobj   
42 [0x2a]:          loadl ebx, fp+1   
43 [0x2b]:          popobj2    
44 [0x2c]:          movr adx, ebx   
45 [0x2d]:          chklen adx   
46 [0x2e]:          movnd adx   
47 [0x2f]:          popobj   
48 [0x30]: line: 58 movl 3   
49 [0x31]:          returnobj   
50 [0x32]:          ret   


function: std#list<ui.support#view>.expand[4053] params(0) in file: /usr/include/sharp//list.sharp:61:16: note:  
		    private def expand() {
		               ^

0 [0x0]: line: 62 movl 0   
1 [0x1]:          movn #2   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 24   
8 [0x8]: line: 63 movl 0   
9 [0x9]:          movn #1   
11 [0xb]:          pushobj   
12 [0xc]:          movl 0   
13 [0xd]:          movn #1   
15 [0xf]:          sizeof ebx   
16 [0x10]:          rstore ebx   
17 [0x11]:          movi #128, ebx   
19 [0x13]:          loadval ecx   
20 [0x14]:          add ecx, ebx -> ebx   
21 [0x15]:          rstore ebx   
22 [0x16]:          call @2087 // <std.io#__srt_global.realloc>   
23 [0x17]:          jmp @51   
24 [0x18]: line: 65 movl 0   
25 [0x19]:          movn #1   
27 [0x1b]:          pushobj   
28 [0x1c]:          movl 0   
29 [0x1d]:          movn #1   
31 [0x1f]:          sizeof ebx   
32 [0x20]:          rstore ebx   
33 [0x21]:          movl 0   
34 [0x22]:          movn #1   
36 [0x24]:          sizeof ebx   
37 [0x25]:          rstore ebx   
38 [0x26]:          movi #4, ebx   
40 [0x28]:          loadval ecx   
41 [0x29]:          shr ecx, ebx -> ebx   
42 [0x2a]:          loadval ecx   
43 [0x2b]:          add ecx, ebx -> ebx   
44 [0x2c]:          rstore ebx   
45 [0x2d]:          movi #128, ebx   
47 [0x2f]:          loadval ecx   
48 [0x30]:          add ecx, ebx -> ebx   
49 [0x31]:          rstore ebx   
50 [0x32]:          call @2087 // <std.io#__srt_global.realloc>   
51 [0x33]:          nop   
52 [0x34]:          ret   


function: std#list<ui.support#view>.clear[4054] params(0) in file: /usr/include/sharp//list.sharp:68:8: note:  
		    def clear() {
		       ^

0 [0x0]: line: 69 movi #10, ebx   
2 [0x2]:          new_classarray ebx  // ui.support#view[]   
4 [0x4]:          movl 0   
5 [0x5]:          movn #1   
7 [0x7]:          popobj   
8 [0x8]: line: 70 movi #0, ebx   
10 [0xa]:          movl 0   
11 [0xb]:          movn #0   
13 [0xd]:          movi #0, adx   
15 [0xf]:          rmov adx, ebx   
16 [0x10]:          ret   


function: std#list<ui.support#view>.add_all[4055] params(1) in file: /usr/include/sharp//list.sharp:73:8: note:  
		    def add_all(lst: list<t>) {
		       ^

0 [0x0]: line: 74 movl 1   
1 [0x1]:          movn #1   
3 [0x3]:          pushobj   
4 [0x4]:          istore 0   
6 [0x6]:          movl 1   
7 [0x7]:          movn #0   
9 [0x9]:          movi #0, adx   
11 [0xb]:          iaload ebx, adx   
12 [0xc]:          rstore ebx   
13 [0xd]:          call @2107 // <std.io#__srt_global.copy>   
14 [0xe]:          popobj2    
15 [0xf]:          movi #129, cmt   
17 [0x11]:          cast cmt   
18 [0x12]:          pushobj   
19 [0x13]:          movl 0   
20 [0x14]:          movn #1   
22 [0x16]:          popobj   
23 [0x17]: line: 75 movl 1   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          iaload ebx, adx   
29 [0x1d]:          movl 0   
30 [0x1e]:          movn #0   
32 [0x20]:          movi #0, adx   
34 [0x22]:          rmov adx, ebx   
35 [0x23]:          ret   


function: std#list<ui.support#view>.add_all[4056] params(1) in file: /usr/include/sharp//list.sharp:78:8: note:  
		    def add_all(lst: t[]) {
		       ^

0 [0x0]: line: 79 movl 1   
1 [0x1]:          checknull   
2 [0x2]:          not ebx, ebx   
3 [0x3]:          movr cmt, ebx   
4 [0x4]:          jne 30   
5 [0x5]: line: 80 pushl 1   
6 [0x6]:          istore 0   
8 [0x8]:          movl 1   
9 [0x9]:          sizeof ebx   
10 [0xa]:          rstore ebx   
11 [0xb]:          call @2107 // <std.io#__srt_global.copy>   
12 [0xc]:          popobj2    
13 [0xd]:          movi #129, cmt   
15 [0xf]:          cast cmt   
16 [0x10]:          pushobj   
17 [0x11]:          movl 0   
18 [0x12]:          movn #1   
20 [0x14]:          popobj   
21 [0x15]: line: 81 movl 1   
22 [0x16]:          sizeof ebx   
23 [0x17]:          movl 0   
24 [0x18]:          movn #0   
26 [0x1a]:          movi #0, adx   
28 [0x1c]:          rmov adx, ebx   
29 [0x1d]:          jmp @46   
30 [0x1e]: line: 83 movi #0, ebx   
32 [0x20]:          movl 0   
33 [0x21]:          movn #0   
35 [0x23]:          movi #0, adx   
37 [0x25]:          rmov adx, ebx   
38 [0x26]: line: 84 movi #10, ebx   
40 [0x28]:          new_classarray ebx  // ui.support#view[]   
42 [0x2a]:          movl 0   
43 [0x2b]:          movn #1   
45 [0x2d]:          popobj   
46 [0x2e]:          nop   
47 [0x2f]:          ret   


function: std#list<ui.support#view>.add[4057] params(1) in file: /usr/include/sharp//list.sharp:88:8: note:  
		    def add(element: t) {
		       ^

0 [0x0]: line: 89 movl 0   
1 [0x1]:          movn #0   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 0   
8 [0x8]:          movn #1   
10 [0xa]:          sizeof ebx   
11 [0xb]:          loadval ecx   
12 [0xc]:          gte ecx, ebx   
13 [0xd]:          movr ebx, cmt   
14 [0xe]:          movr cmt, ebx   
15 [0xf]:          jne 18   
16 [0x10]: line: 90 pushl 0   
17 [0x11]:          call @4053 // <std#list<ui.support#view>.expand>   
18 [0x12]:          nop   
19 [0x13]: line: 91 pushl 1   
20 [0x14]:          movl 0   
21 [0x15]:          movn #1   
23 [0x17]:          pushobj   
24 [0x18]:          movl 0   
25 [0x19]:          movn #0   
27 [0x1b]:          movi #0, adx   
29 [0x1d]:          iaload ebx, adx   
30 [0x1e]:          movr egx, ebx   
31 [0x1f]:          inc ebx   
32 [0x20]:          movi #0, adx   
34 [0x22]:          rmov adx, ebx   
35 [0x23]:          movr ebx, egx   
36 [0x24]:          popobj2    
37 [0x25]:          movr adx, ebx   
38 [0x26]:          chklen adx   
39 [0x27]:          movnd adx   
40 [0x28]:          popobj   
41 [0x29]:          ret   


function: std#list<ui.support#view>.indexof[4058] params(1) in file: /usr/include/sharp//list.sharp:94:8: note:  
		    def indexof(element: t) : var {
		       ^

0 [0x0]: line: 95 istorel 0, fp+2   
2 [0x2]:          ipushl #2   
3 [0x3]:          movl 0   
4 [0x4]:          movn #0   
6 [0x6]:          movi #0, adx   
8 [0x8]:          iaload ebx, adx   
9 [0x9]:          loadval ecx   
10 [0xa]:          lt ecx, ebx   
11 [0xb]:          movr ebx, cmt   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 35   
14 [0xe]: line: 96 pushl 1   
15 [0xf]:          movl 0   
16 [0x10]:          movn #1   
18 [0x12]:          pushobj   
19 [0x13]:          loadl ebx, fp+2   
20 [0x14]:          popobj2    
21 [0x15]:          movr adx, ebx   
22 [0x16]:          chklen adx   
23 [0x17]:          movnd adx   
24 [0x18]:          pushobj   
25 [0x19]:          itest ebx   
26 [0x1a]:          movr cmt, ebx   
27 [0x1b]:          jne 31   
28 [0x1c]: line: 97 loadl ebx, fp+2   
29 [0x1d]:          return_val ebx   
30 [0x1e]:          ret   
31 [0x1f]:          nop   
32 [0x20]:          iaddl 1, fp@2   
34 [0x22]:          jmp @2   
35 [0x23]: line: 101 istorel -1, fp+0   
37 [0x25]:           ret   


function: std#list<ui.support#view>.pop_back[4059] params(0) in file: /usr/include/sharp//list.sharp:104:8: note:  
		    def pop_back() {
		       ^

0 [0x0]: line: 105 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movi #0, ebx   
9 [0x9]:           loadval ecx   
10 [0xa]:           gt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 38   
14 [0xe]: line: 106 movl 1   
15 [0xf]:           del   
16 [0x10]: line: 107 pushl 1   
17 [0x11]:           movl 0   
18 [0x12]:           movn #1   
20 [0x14]:           pushobj   
21 [0x15]:           movl 0   
22 [0x16]:           movn #0   
24 [0x18]:           movi #0, adx   
26 [0x1a]:           iaload ebx, adx   
27 [0x1b]:           movr egx, ebx   
28 [0x1c]:           dec ebx   
29 [0x1d]:           movi #0, adx   
31 [0x1f]:           rmov adx, ebx   
32 [0x20]:           movr ebx, egx   
33 [0x21]:           popobj2    
34 [0x22]:           movr adx, ebx   
35 [0x23]:           chklen adx   
36 [0x24]:           movnd adx   
37 [0x25]:           popobj   
38 [0x26]:           nop   
39 [0x27]:           ret   


function: std#list<ui.support#view>.size[4060] params(0) in file: /usr/include/sharp//list.sharp:111:8: note:  
		    def size() := n_elements;
		       ^

0 [0x0]: line: 111 movl 0   
1 [0x1]:           movn #0   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           return_val ebx   
7 [0x7]:           ret   


function: std#list<ui.support#view>.insert[4061] params(2) in file: /usr/include/sharp//list.sharp:113:8: note:  
		    def insert(index: var, element: t) {
		       ^

0 [0x0]: line: 114 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gt ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 16   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 26   
18 [0x12]: line: 115 new_class @0 // std#__srt_global   
19 [0x13]:           shl adx, adx -> adx   
20 [0x14]:           dup    
21 [0x15]:           pushl 0   
22 [0x16]:           ipushl #1   
23 [0x17]:           call @4070 // <std#list<ui.support#view>.out_of_bounds_msg>   
24 [0x18]:           call @3555 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 117 movl 0   
28 [0x1c]:           movn #0   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movi #0, ebx   
36 [0x24]:           loadval ecx   
37 [0x25]:           test ecx, ebx   
38 [0x26]:           jne 43   
39 [0x27]: line: 118 pushl 0   
40 [0x28]:           pushl 2   
41 [0x29]:           call @4057 // <std#list<ui.support#view>.add>   
42 [0x2a]:           jmp @132   
43 [0x2b]: line: 120 movl 0   
44 [0x2c]:           movn #0   
46 [0x2e]:           movi #0, adx   
48 [0x30]:           iaload ebx, adx   
49 [0x31]:           rstore ebx   
50 [0x32]:           movl 0   
51 [0x33]:           movn #1   
53 [0x35]:           sizeof ebx   
54 [0x36]:           loadval ecx   
55 [0x37]:           gte ecx, ebx   
56 [0x38]:           movr ebx, cmt   
57 [0x39]:           movr cmt, ebx   
58 [0x3a]:           jne 61   
59 [0x3b]: line: 121 pushl 0   
60 [0x3c]:           call @4053 // <std#list<ui.support#view>.expand>   
61 [0x3d]:           nop   
62 [0x3e]: line: 122 movl 0   
63 [0x3f]:           movn #0   
65 [0x41]:           movi #0, adx   
67 [0x43]:           iaload ebx, adx   
68 [0x44]:           movr egx, ebx   
69 [0x45]:           inc ebx   
70 [0x46]:           movi #0, adx   
72 [0x48]:           rmov adx, ebx   
73 [0x49]: line: 123 movl 0   
74 [0x4a]:           movn #0   
76 [0x4c]:           movi #0, adx   
78 [0x4e]:           iaload ebx, adx   
79 [0x4f]:           rstore ebx   
80 [0x50]:           movi #1, ebx   
82 [0x52]:           loadval ecx   
83 [0x53]:           sub ecx, ebx -> ebx   
84 [0x54]:           smovr_2 ebx, fp+3   
85 [0x55]:           ipushl #3   
86 [0x56]:           loadl ebx, fp+1   
87 [0x57]:           loadval ecx   
88 [0x58]:           gt ecx, ebx   
89 [0x59]:           movr ebx, cmt   
90 [0x5a]:           movr cmt, ebx   
91 [0x5b]:           jne 121   
92 [0x5c]: line: 124 movl 0   
93 [0x5d]:           movn #1   
95 [0x5f]:           pushobj   
96 [0x60]:           ipushl #3   
97 [0x61]:           movi #1, ebx   
99 [0x63]:           loadval ecx   
100 [0x64]:           sub ecx, ebx -> ebx   
101 [0x65]:           popobj2    
102 [0x66]:           movr adx, ebx   
103 [0x67]:           chklen adx   
104 [0x68]:           movnd adx   
105 [0x69]:           pushobj   
106 [0x6a]:           movl 0   
107 [0x6b]:           movn #1   
109 [0x6d]:           pushobj   
110 [0x6e]:           loadl ebx, fp+3   
111 [0x6f]:           popobj2    
112 [0x70]:           movr adx, ebx   
113 [0x71]:           chklen adx   
114 [0x72]:           movnd adx   
115 [0x73]:           popobj   
116 [0x74]:           loadl ebx, fp+3   
117 [0x75]:           movr egx, ebx   
118 [0x76]:           dec ebx   
119 [0x77]:           smovr_2 ebx, fp+3   
120 [0x78]:           jmp @85   
121 [0x79]: line: 125 pushl 2   
122 [0x7a]:           movl 0   
123 [0x7b]:           movn #1   
125 [0x7d]:           pushobj   
126 [0x7e]:           loadl ebx, fp+1   
127 [0x7f]:           popobj2    
128 [0x80]:           movr adx, ebx   
129 [0x81]:           chklen adx   
130 [0x82]:           movnd adx   
131 [0x83]:           popobj   
132 [0x84]:           nop   
133 [0x85]:           ret   


function: std#list<ui.support#view>.find[4062] params(2) in file: /usr/include/sharp//list.sharp:129:8: note:  
		    def find(comparer : t, find_func: (t, t)(var)) : t {
		       ^

0 [0x0]: line: 130 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 46   
14 [0xe]: line: 131 ipushl #2   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+3   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           pushl 1   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 42   
31 [0x1f]: line: 132 movl 0   
32 [0x20]:           movn #1   
34 [0x22]:           pushobj   
35 [0x23]:           loadl ebx, fp+3   
36 [0x24]:           popobj2    
37 [0x25]:           movr adx, ebx   
38 [0x26]:           chklen adx   
39 [0x27]:           movnd adx   
40 [0x28]:           returnobj   
41 [0x29]:           ret   
42 [0x2a]:           nop   
43 [0x2b]:           iaddl 1, fp@3   
45 [0x2d]:           jmp @2   
46 [0x2e]: line: 136 movl 4   
47 [0x2f]:           del   
48 [0x30]: line: 137 movl 4   
49 [0x31]:           returnobj   
50 [0x32]:           ret   


function: std#list<ui.support#view>.remove[4063] params(1) in file: /usr/include/sharp//list.sharp:140:8: note:  
		    def remove(val: t) {
		       ^

0 [0x0]: line: 141 istorel 0, fp+2   
2 [0x2]:           ipushl #2   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 36   
14 [0xe]: line: 142 pushl 1   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+2   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           itest ebx   
26 [0x1a]:           movr cmt, ebx   
27 [0x1b]:           jne 32   
28 [0x1c]: line: 143 pushl 0   
29 [0x1d]:           ipushl #2   
30 [0x1e]:           call @4067 // <std#list<ui.support#view>.remove_at>   
31 [0x1f]: line: 144 ret   
32 [0x20]:           nop   
33 [0x21]:           iaddl 1, fp@2   
35 [0x23]:           jmp @2   
36 [0x24]:           ret   


function: std#list<ui.support#view>.remove[4064] params(2) in file: /usr/include/sharp//list.sharp:149:8: note:  
		    def remove(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 150 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 39   
14 [0xe]: line: 151 ipushl #2   
15 [0xf]:           pushl 1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #1   
19 [0x13]:           pushobj   
20 [0x14]:           loadl ebx, fp+3   
21 [0x15]:           popobj2    
22 [0x16]:           movr adx, ebx   
23 [0x17]:           chklen adx   
24 [0x18]:           movnd adx   
25 [0x19]:           pushobj   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 35   
31 [0x1f]: line: 152 pushl 0   
32 [0x20]:           ipushl #3   
33 [0x21]:           call @4067 // <std#list<ui.support#view>.remove_at>   
34 [0x22]: line: 153 ret   
35 [0x23]:           nop   
36 [0x24]:           iaddl 1, fp@3   
38 [0x26]:           jmp @2   
39 [0x27]:           ret   


function: std#list<ui.support#view>.replace[4065] params(2) in file: /usr/include/sharp//list.sharp:158:8: note:  
		    def replace(val: t, compare_fun: (t, t)(var)) {
		       ^

0 [0x0]: line: 159 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 47   
14 [0xe]: line: 160 ipushl #2   
15 [0xf]:           pushl 1   
16 [0x10]:           movl 0   
17 [0x11]:           movn #1   
19 [0x13]:           pushobj   
20 [0x14]:           loadl ebx, fp+3   
21 [0x15]:           popobj2    
22 [0x16]:           movr adx, ebx   
23 [0x17]:           chklen adx   
24 [0x18]:           movnd adx   
25 [0x19]:           pushobj   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 43   
31 [0x1f]: line: 161 pushl 1   
32 [0x20]:           movl 0   
33 [0x21]:           movn #1   
35 [0x23]:           pushobj   
36 [0x24]:           loadl ebx, fp+3   
37 [0x25]:           popobj2    
38 [0x26]:           movr adx, ebx   
39 [0x27]:           chklen adx   
40 [0x28]:           movnd adx   
41 [0x29]:           popobj   
42 [0x2a]: line: 162 ret   
43 [0x2b]:           nop   
44 [0x2c]:           iaddl 1, fp@3   
46 [0x2e]:           jmp @2   
47 [0x2f]:           ret   


function: std#list<ui.support#view>.linear_sort[4066] params(1) in file: /usr/include/sharp//list.sharp:167:8: note:  
		    def linear_sort(swap: (t, t)(var)) {
		       ^

0 [0x0]: line: 168 istorel 0, fp+2   
2 [0x2]:           ipushl #2   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 132   
14 [0xe]: line: 170 istorel 0, fp+3   
16 [0x10]:           ipushl #3   
17 [0x11]:           movl 0   
18 [0x12]:           movn #0   
20 [0x14]:           movi #0, adx   
22 [0x16]:           iaload ebx, adx   
23 [0x17]:           loadval ecx   
24 [0x18]:           lt ecx, ebx   
25 [0x19]:           movr ebx, cmt   
26 [0x1a]:           movr cmt, ebx   
27 [0x1b]:           jne 129   
28 [0x1c]: line: 171 ipushl #3   
29 [0x1d]:           movi #1, ebx   
31 [0x1f]:           loadval ecx   
32 [0x20]:           add ecx, ebx -> ebx   
33 [0x21]:           rstore ebx   
34 [0x22]:           movl 0   
35 [0x23]:           movn #0   
37 [0x25]:           movi #0, adx   
39 [0x27]:           iaload ebx, adx   
40 [0x28]:           loadval ecx   
41 [0x29]:           lt ecx, ebx   
42 [0x2a]:           movr ebx, cmt   
43 [0x2b]:           movr cmt, ebx   
44 [0x2c]:           jne 125   
45 [0x2d]: line: 173 ipushl #1   
46 [0x2e]:           movl 0   
47 [0x2f]:           movn #1   
49 [0x31]:           pushobj   
50 [0x32]:           loadl ebx, fp+3   
51 [0x33]:           popobj2    
52 [0x34]:           movr adx, ebx   
53 [0x35]:           chklen adx   
54 [0x36]:           movnd adx   
55 [0x37]:           pushobj   
56 [0x38]:           movl 0   
57 [0x39]:           movn #1   
59 [0x3b]:           pushobj   
60 [0x3c]:           ipushl #3   
61 [0x3d]:           movi #1, ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           add ecx, ebx -> ebx   
65 [0x41]:           popobj2    
66 [0x42]:           movr adx, ebx   
67 [0x43]:           chklen adx   
68 [0x44]:           movnd adx   
69 [0x45]:           pushobj   
70 [0x46]:           smov ebx, sp+[-2]   
71 [0x47]:           calld ebx   
72 [0x48]:           loadval ebx   
73 [0x49]:           movr cmt, ebx   
74 [0x4a]:           jne 124   
75 [0x4b]: line: 174 movl 0   
76 [0x4c]:           movn #1   
78 [0x4e]:           pushobj   
79 [0x4f]:           loadl ebx, fp+3   
80 [0x50]:           popobj2    
81 [0x51]:           movr adx, ebx   
82 [0x52]:           chklen adx   
83 [0x53]:           movnd adx   
84 [0x54]:           smovr_3 fp+4   
85 [0x55]: line: 175 movl 0   
86 [0x56]:           movn #1   
88 [0x58]:           pushobj   
89 [0x59]:           ipushl #3   
90 [0x5a]:           movi #1, ebx   
92 [0x5c]:           loadval ecx   
93 [0x5d]:           add ecx, ebx -> ebx   
94 [0x5e]:           popobj2    
95 [0x5f]:           movr adx, ebx   
96 [0x60]:           chklen adx   
97 [0x61]:           movnd adx   
98 [0x62]:           pushobj   
99 [0x63]:           movl 0   
100 [0x64]:           movn #1   
102 [0x66]:           pushobj   
103 [0x67]:           loadl ebx, fp+3   
104 [0x68]:           popobj2    
105 [0x69]:           movr adx, ebx   
106 [0x6a]:           chklen adx   
107 [0x6b]:           movnd adx   
108 [0x6c]:           popobj   
109 [0x6d]: line: 176 pushl 4   
110 [0x6e]:           movl 0   
111 [0x6f]:           movn #1   
113 [0x71]:           pushobj   
114 [0x72]:           ipushl #3   
115 [0x73]:           movi #1, ebx   
117 [0x75]:           loadval ecx   
118 [0x76]:           add ecx, ebx -> ebx   
119 [0x77]:           popobj2    
120 [0x78]:           movr adx, ebx   
121 [0x79]:           chklen adx   
122 [0x7a]:           movnd adx   
123 [0x7b]:           popobj   
124 [0x7c]:           nop   
125 [0x7d]:           nop   
126 [0x7e]:           iaddl 1, fp@3   
128 [0x80]:           jmp @16   
129 [0x81]:           iaddl 1, fp@2   
131 [0x83]:           jmp @2   
132 [0x84]:           ret   


function: std#list<ui.support#view>.remove_at[4067] params(1) in file: /usr/include/sharp//list.sharp:183:8: note:  
		    def remove_at(index: var) {
		       ^

0 [0x0]: line: 184 ipushl #1   
1 [0x1]:           movl 0   
2 [0x2]:           movn #0   
4 [0x4]:           movi #0, adx   
6 [0x6]:           iaload ebx, adx   
7 [0x7]:           loadval ecx   
8 [0x8]:           gte ecx, ebx   
9 [0x9]:           movr ebx, cmt   
10 [0xa]:           skpe ebx // pc = 16   
11 [0xb]:           loadl ecx, fp+1   
12 [0xc]:           movi #0, ebx   
14 [0xe]:           lt ecx, ebx   
15 [0xf]:           movr ebx, cmt   
16 [0x10]:           movr cmt, ebx   
17 [0x11]:           jne 26   
18 [0x12]: line: 185 new_class @0 // std#__srt_global   
19 [0x13]:           shl adx, adx -> adx   
20 [0x14]:           dup    
21 [0x15]:           pushl 0   
22 [0x16]:           ipushl #1   
23 [0x17]:           call @4070 // <std#list<ui.support#view>.out_of_bounds_msg>   
24 [0x18]:           call @3555 // <std#out_of_bounds_exception.out_of_bounds_exception>   
25 [0x19]:           throw    
26 [0x1a]:           nop   
27 [0x1b]: line: 187 movl 0   
28 [0x1c]:           movn #0   
30 [0x1e]:           movi #0, adx   
32 [0x20]:           iaload ebx, adx   
33 [0x21]:           rstore ebx   
34 [0x22]:           loadl ebx, fp+1   
35 [0x23]:           loadval ecx   
36 [0x24]:           sub ecx, ebx -> ebx   
37 [0x25]:           rstore ebx   
38 [0x26]:           movi #1, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           sub ecx, ebx -> ebx   
42 [0x2a]:           smovr_2 ebx, fp+2   
43 [0x2b]: line: 188 ipushl #2   
44 [0x2c]:           movi #0, ebx   
46 [0x2e]:           loadval ecx   
47 [0x2f]:           gt ecx, ebx   
48 [0x30]:           movr ebx, cmt   
49 [0x31]:           movr cmt, ebx   
50 [0x32]:           jne 74   
51 [0x33]: line: 189 movl 0   
52 [0x34]:           movn #1   
54 [0x36]:           pushobj   
55 [0x37]:           movl 0   
56 [0x38]:           movn #1   
58 [0x3a]:           pushobj   
59 [0x3b]:           ipushl #1   
60 [0x3c]:           ipushl #1   
61 [0x3d]:           movi #1, ebx   
63 [0x3f]:           loadval ecx   
64 [0x40]:           add ecx, ebx -> ebx   
65 [0x41]:           rstore ebx   
66 [0x42]:           movl 0   
67 [0x43]:           movn #0   
69 [0x45]:           movi #0, adx   
71 [0x47]:           iaload ebx, adx   
72 [0x48]:           rstore ebx   
73 [0x49]:           call @2097 // <std.io#__srt_global.memcopy>   
74 [0x4a]:           nop   
75 [0x4b]: line: 191 pushl 0   
76 [0x4c]:           call @4059 // <std#list<ui.support#view>.pop_back>   
77 [0x4d]:           ret   


function: std#list<ui.support#view>.indexof[4068] params(2) in file: /usr/include/sharp//list.sharp:194:8: note:  
		    def indexof(comparer: t, find_func: (t, t)(var)) : var {
		       ^

0 [0x0]: line: 195 istorel 0, fp+3   
2 [0x2]:           ipushl #3   
3 [0x3]:           movl 0   
4 [0x4]:           movn #0   
6 [0x6]:           movi #0, adx   
8 [0x8]:           iaload ebx, adx   
9 [0x9]:           loadval ecx   
10 [0xa]:           lt ecx, ebx   
11 [0xb]:           movr ebx, cmt   
12 [0xc]:           movr cmt, ebx   
13 [0xd]:           jne 38   
14 [0xe]: line: 196 ipushl #2   
15 [0xf]:           movl 0   
16 [0x10]:           movn #1   
18 [0x12]:           pushobj   
19 [0x13]:           loadl ebx, fp+3   
20 [0x14]:           popobj2    
21 [0x15]:           movr adx, ebx   
22 [0x16]:           chklen adx   
23 [0x17]:           movnd adx   
24 [0x18]:           pushobj   
25 [0x19]:           pushl 1   
26 [0x1a]:           smov ebx, sp+[-2]   
27 [0x1b]:           calld ebx   
28 [0x1c]:           loadval ebx   
29 [0x1d]:           movr cmt, ebx   
30 [0x1e]:           jne 34   
31 [0x1f]: line: 197 loadl ebx, fp+3   
32 [0x20]:           return_val ebx   
33 [0x21]:           ret   
34 [0x22]:           nop   
35 [0x23]:           iaddl 1, fp@3   
37 [0x25]:           jmp @2   
38 [0x26]: line: 201 istorel -1, fp+0   
40 [0x28]:           ret   


function: std#list<ui.support#view>.to_string[4069] params(0) in file: /usr/include/sharp//list.sharp:204:8: note:  
		    def to_string() : string {
		       ^

0 [0x0]: line: 205 new_class @0 // std#__srt_global   
1 [0x1]:           movi #112, adx   
3 [0x3]:           call @1958 // <std#string_builder.string_builder>   
4 [0x4]:           popobj2    
5 [0x5]:           smovr_3 fp+1   
6 [0x6]: line: 207 pushl 1   
7 [0x7]:           newstr @149 // [    
8 [0x8]:           call @1954 // <std#string_builder.operator+=>   
9 [0x9]:           pop   
10 [0xa]: line: 208 istorel 0, fp+2   
12 [0xc]:           ipushl #2   
13 [0xd]:           movl 0   
14 [0xe]:           movn #0   
16 [0x10]:           movi #0, adx   
18 [0x12]:           iaload ebx, adx   
19 [0x13]:           loadval ecx   
20 [0x14]:           lt ecx, ebx   
21 [0x15]:           movr ebx, cmt   
22 [0x16]:           movr cmt, ebx   
23 [0x17]:           jne 62   
24 [0x18]: line: 209 pushl 1   
25 [0x19]:           movl 0   
26 [0x1a]:           movn #1   
28 [0x1c]:           pushobj   
29 [0x1d]:           loadl ebx, fp+2   
30 [0x1e]:           popobj2    
31 [0x1f]:           movr adx, ebx   
32 [0x20]:           chklen adx   
33 [0x21]:           movnd adx   
34 [0x22]:           pushobj   
35 [0x23]:           call @1950 // <std#string_builder.operator+=>   
36 [0x24]:           pop   
37 [0x25]: line: 211 ipushl #2   
38 [0x26]:           movi #1, ebx   
40 [0x28]:           loadval ecx   
41 [0x29]:           add ecx, ebx -> ebx   
42 [0x2a]:           rstore ebx   
43 [0x2b]:           movl 0   
44 [0x2c]:           movn #0   
46 [0x2e]:           movi #0, adx   
48 [0x30]:           iaload ebx, adx   
49 [0x31]:           loadval ecx   
50 [0x32]:           lt ecx, ebx   
51 [0x33]:           movr ebx, cmt   
52 [0x34]:           movr cmt, ebx   
53 [0x35]:           jne 58   
54 [0x36]: line: 212 pushl 1   
55 [0x37]:           newstr @150 // ,    
56 [0x38]:           call @1954 // <std#string_builder.operator+=>   
57 [0x39]:           pop   
58 [0x3a]:           nop   
59 [0x3b]:           iaddl 1, fp@2   
61 [0x3d]:           jmp @12   
62 [0x3e]: line: 216 pushl 1   
63 [0x3f]:           newstr @151 //  ]   
64 [0x40]:           call @1954 // <std#string_builder.operator+=>   
65 [0x41]:           pop   
66 [0x42]: line: 217 pushl 1   
67 [0x43]:           call @1931 // <std#string_builder.to_string>   
68 [0x44]:           popobj2    
69 [0x45]:           returnobj   
70 [0x46]:           ret   


function: std#list<ui.support#view>.out_of_bounds_msg[4070] params(1) in file: /usr/include/sharp//list.sharp:220:16: note:  
		    private def out_of_bounds_msg(index: var) : string {
		               ^

0 [0x0]: line: 221 new_class @0 // std#__srt_global   
1 [0x1]:           ret   
2 [0x2]:           dup    
3 [0x3]:           newstr @152 // Index:    
4 [0x4]:           call @1959 // <std#string.string>   
5 [0x5]:           ipushl #1   
6 [0x6]:           call @1991 // <std#string.operator+>   
7 [0x7]:           newstr @153 // , size:    
8 [0x8]:           call @1971 // <std#string.operator+>   
9 [0x9]:           movl 0   
10 [0xa]:           movn #0   
12 [0xc]:           movi #0, adx   
14 [0xe]:           iaload ebx, adx   
15 [0xf]:           rstore ebx   
16 [0x10]:           call @1991 // <std#string.operator+>   
17 [0x11]:           popobj2    
18 [0x12]:           returnobj   
19 [0x13]:           ret   


constructor: std.io.task#entry<std.io#thread,std.io.task#job_controller>.entry[4071] params(2) in file: /usr/include/sharp//hashtable.sharp:134:21: note:  
		        public entry(key: k, value: v) {
		                    ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 135 pushl 1   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           popobj   
6 [0x6]: line: 136 pushl 2   
7 [0x7]:           movl 0   
8 [0x8]:           movn #1   
10 [0xa]:           popobj   
11 [0xb]:           ret   


function: std.io.task#entry<std.io#thread,std.io.task#job_controller>.to_string[4072] params(0) in file: /usr/include/sharp//hashtable.sharp:139:19: note:  
		        public def to_string() : string {
		                  ^

0 [0x0]: line: 140 new_class @0 // std#__srt_global   
1 [0x1]:           ret   
2 [0x2]:           dup    
3 [0x3]:           newstr @154 // key    
4 [0x4]:           call @1959 // <std#string.string>   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           pushobj   
9 [0x9]:           call @1973 // <std#string.operator+>   
10 [0xa]:           newstr @155 //  value    
11 [0xb]:           call @1971 // <std#string.operator+>   
12 [0xc]:           movl 0   
13 [0xd]:           movn #1   
15 [0xf]:           pushobj   
16 [0x10]:           call @1973 // <std#string.operator+>   
17 [0x11]:           popobj2    
18 [0x12]:           returnobj   
19 [0x13]:           ret   


constructor: std.io.task#entry<std.io#thread,std.io.task#job_controller>.entry[4073] params(0) in file: /usr/include/sharp//hashtable.sharp:129:10: note:  
		    class entry<k, v> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: std.io#entry<std#int,std.io#thread>.entry[4074] params(2) in file: /usr/include/sharp//hashtable.sharp:134:21: note:  
		        public entry(key: k, value: v) {
		                    ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 135 pushl 1   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           popobj   
6 [0x6]: line: 136 pushl 2   
7 [0x7]:           movl 0   
8 [0x8]:           movn #1   
10 [0xa]:           popobj   
11 [0xb]:           ret   


function: std.io#entry<std#int,std.io#thread>.to_string[4075] params(0) in file: /usr/include/sharp//hashtable.sharp:139:19: note:  
		        public def to_string() : string {
		                  ^

0 [0x0]: line: 140 new_class @0 // std#__srt_global   
1 [0x1]:           ret   
2 [0x2]:           dup    
3 [0x3]:           newstr @154 // key    
4 [0x4]:           call @1959 // <std#string.string>   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           pushobj   
9 [0x9]:           call @1973 // <std#string.operator+>   
10 [0xa]:           newstr @155 //  value    
11 [0xb]:           call @1971 // <std#string.operator+>   
12 [0xc]:           movl 0   
13 [0xd]:           movn #1   
15 [0xf]:           pushobj   
16 [0x10]:           call @1973 // <std#string.operator+>   
17 [0x11]:           popobj2    
18 [0x12]:           returnobj   
19 [0x13]:           ret   


constructor: std.io#entry<std#int,std.io#thread>.entry[4076] params(0) in file: /usr/include/sharp//hashtable.sharp:129:10: note:  
		    class entry<k, v> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


constructor: ui.res#entry<std#int,ui.support#drawable>.entry[4077] params(2) in file: /usr/include/sharp//hashmap.sharp:126:21: note:  
		        public entry(key: k, value: v) {
		                    ^

0 [0x0]:         pushl 0   
1 [0x1]: line: 127 pushl 1   
2 [0x2]:           movl 0   
3 [0x3]:           movn #0   
5 [0x5]:           popobj   
6 [0x6]: line: 128 pushl 2   
7 [0x7]:           movl 0   
8 [0x8]:           movn #1   
10 [0xa]:           popobj   
11 [0xb]:           ret   


function: ui.res#entry<std#int,ui.support#drawable>.to_string[4078] params(0) in file: /usr/include/sharp//hashmap.sharp:131:19: note:  
		        public def to_string() : string {
		                  ^

0 [0x0]: line: 132 new_class @0 // std#__srt_global   
1 [0x1]:           ret   
2 [0x2]:           dup    
3 [0x3]:           newstr @154 // key    
4 [0x4]:           call @1959 // <std#string.string>   
5 [0x5]:           movl 0   
6 [0x6]:           movn #0   
8 [0x8]:           pushobj   
9 [0x9]:           call @1973 // <std#string.operator+>   
10 [0xa]:           newstr @155 //  value    
11 [0xb]:           call @1971 // <std#string.operator+>   
12 [0xc]:           movl 0   
13 [0xd]:           movn #1   
15 [0xf]:           pushobj   
16 [0x10]:           call @1973 // <std#string.operator+>   
17 [0x11]:           popobj2    
18 [0x12]:           returnobj   
19 [0x13]:           ret   


constructor: ui.res#entry<std#int,ui.support#drawable>.entry[4079] params(0) in file: /usr/include/sharp//hashmap.sharp:121:10: note:  
		    class entry<k, v> {
		         ^

0 [0x0]:         pushl 0   
1 [0x1]:         ret   


function: std#__srt_global.$03internal_static_init[4080] params(0) in file: /usr/include/sharp//object.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         istore 0   
2 [0x2]:         movg @0 // @std#__srt_global   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         movi #0, adx   
8 [0x8]:         rmov adx, ebx   
9 [0x9]:         ret   


function: std#string_builder.$03internal_static_init[4081] params(0) in file: /usr/include/sharp//string_builder.sharp:5:6: note:  
		class string_builder : loopable<_int8> {
		     ^

0 [0x0]:         istore 103   
2 [0x2]:         movg @2 // @std#string_builder   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         mov8 ebx, ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         istore 0   
12 [0xc]:         movg @2 // @std#string_builder   
13 [0xd]:         movn #1   
15 [0xf]:         loadval ebx   
16 [0x10]:         movi #0, adx   
18 [0x12]:         rmov adx, ebx   
19 [0x13]:         ret   
20 [0x14]:         ret   


function: std#string.$03internal_static_init[4082] params(0) in file: /usr/include/sharp//string.sharp:5:6: note:  
		class string : loopable<_int8> {
		     ^

0 [0x0]:         istore 103   
2 [0x2]:         movg @3 // @std#string   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         mov8 ebx, ebx   
7 [0x7]:         movi #0, adx   
9 [0x9]:         rmov adx, ebx   
10 [0xa]:         istore 0   
12 [0xc]:         movg @3 // @std#string   
13 [0xd]:         movn #1   
15 [0xf]:         loadval ebx   
16 [0x10]:         movi #0, adx   
18 [0x12]:         rmov adx, ebx   
19 [0x13]:         ret   
20 [0x14]:         ret   


function: std.io.task#__srt_global.$03internal_static_init[4083] params(0) in file: /usr/include/sharp//io//task//task.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         new_class @0 // std#__srt_global   
1 [0x1]:         mov8 adx, adx   
2 [0x2]:         dup    
3 [0x3]:         call @2032 // <std.io.task#job_master.job_master>   
4 [0x4]:         movg @4 // @std.io.task#__srt_global   
5 [0x5]:         movn #0   
7 [0x7]:         popobj   
8 [0x8]:         ret   


function: std.io.task#job.$03internal_static_init[4084] params(0) in file: /usr/include/sharp//io//task//job.sharp:5:13: note:  
		public class job {
		            ^

0 [0x0]:         istore 0   
2 [0x2]:         movg @11 // @std.io.task#job   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         movi #0, adx   
8 [0x8]:         rmov adx, ebx   
9 [0x9]:         ret   
10 [0xa]:         ret   


function: std.io#thread_group.$03internal_static_init[4085] params(0) in file: /usr/include/sharp//io//thread_group.sharp:3:13: note:  
		public class thread_group : loopable<thread> {
		            ^

0 [0x0]:         new_class @0 // std#__srt_global   
1 [0x1]:         movu64 adx, adx   
2 [0x2]:         dup    
3 [0x3]:         new_class @0 // std#__srt_global   
4 [0x4]:         ret   
5 [0x5]:         dup    
6 [0x6]:         newstr @2 // main   
7 [0x7]:         call @1959 // <std#string.string>   
8 [0x8]:         call @2127 // <std.io#thread_group.thread_group>   
9 [0x9]:         movg @14 // @std.io#thread_group   
10 [0xa]:         movn #0   
12 [0xc]:         popobj   
13 [0xd]:         ret   
14 [0xe]:         ret   


function: std.io#__srt_global.$03internal_static_init[4086] params(0) in file: /usr/include/sharp//io//critical_section.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         new_class @0 // std#__srt_global   
1 [0x1]:         int 0x0   
2 [0x2]:         dup    
3 [0x3]:         movg @12 // @std.io#__srt_global   
4 [0x4]:         movn #0   
6 [0x6]:         popobj   
7 [0x7]:         ret   


function: std.io#file.$03internal_static_init[4087] params(0) in file: /usr/include/sharp//io//file.sharp:17:13: note:  
		public class file {
		            ^

0 [0x0]:         call @2250 // <std.io#file.get_file_system>   
1 [0x1]:         movg @21 // @std.io#file   
2 [0x2]:         movn #0   
4 [0x4]:         popobj   
5 [0x5]:         movg @21 // @std.io#file   
6 [0x6]:         movn #0   
8 [0x8]:         pushobj   
9 [0x9]:         invoke_delegate 2146 { static=0, args=0 }   
11 [0xb]:         movg @21 // @std.io#file   
12 [0xc]:         movn #1   
14 [0xe]:         loadval ebx   
15 [0xf]:         movi #0, adx   
17 [0x11]:         rmov adx, ebx   
18 [0x12]:         ret   
19 [0x13]:         ret   


function: std#time.$03internal_static_init[4088] params(0) in file: /usr/include/sharp//time.sharp:6:6: note:  
		class time {
		     ^

0 [0x0]:         istore 4294967295   
2 [0x2]:         movg @53 // @std#time   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         movi #0, adx   
8 [0x8]:         rmov adx, ebx   
9 [0x9]:         ret   
10 [0xa]:         ret   


function: std#_nil_.$03internal_static_init[4089] params(0) in file: /usr/include/sharp//nil.sharp:10:13: note:  
		stable class _nil_ {
		            ^

0 [0x0]:         new_class @0 // std#__srt_global   
1 [0x1]:         movnd adx   
2 [0x2]:         movg @56 // @std#_nil_   
3 [0x3]:         movn #0   
5 [0x5]:         popobj   
6 [0x6]:         ret   
7 [0x7]:         ret   


lambda: common.network.core#__srt_global.anon_func$4090[4090] params(2) in file: common//network//core//request_data.sharp:6:9: note:  
		        { t1, t2 ->
		        ^

0 [0x0]: line: 7 movl 0   
1 [0x1]:         movn #0   
3 [0x3]:         pushobj   
4 [0x4]:         movl 1   
5 [0x5]:         movn #0   
7 [0x7]:         pushobj   
8 [0x8]:         call @1977 // <std#string.operator==>   
9 [0x9]:         loadval ebx   
10 [0xa]:         return_val ebx   
11 [0xb]:         ret   


function: common#constants.$03internal_static_init[4091] params(0) in file: common//constants.sharp:3:6: note:  
		class constants {
		     ^

0 [0x0]:         ldc ebx // 1   
1 [0x1]:         rstore ebx   
2 [0x2]:         movg @105 // @common#constants   
3 [0x3]:         movn #20   
5 [0x5]:         loadval ebx   
6 [0x6]:         movi #0, adx   
8 [0x8]:         rmov adx, ebx   
9 [0x9]:         ret   
10 [0xa]:         ret   


function: common#constants.strings.$03internal_static_init[4092] params(0) in file: common//constants.sharp:39:10: note:  
		    class strings {
		         ^

0 [0x0]:         new_class @0 // std#__srt_global   
1 [0x1]:         ret   
2 [0x2]:         dup    
3 [0x3]:         newstr @5 // cmd   
4 [0x4]:         call @1959 // <std#string.string>   
5 [0x5]:         movg @106 // @common#constants.strings   
6 [0x6]:         movn #0   
8 [0x8]:         popobj   
9 [0x9]:         new_class @0 // std#__srt_global   
10 [0xa]:         ret   
11 [0xb]:         dup    
12 [0xc]:         newstr @6 // response   
13 [0xd]:         call @1959 // <std#string.string>   
14 [0xe]:         movg @106 // @common#constants.strings   
15 [0xf]:         movn #1   
17 [0x11]:         popobj   
18 [0x12]:         new_class @0 // std#__srt_global   
19 [0x13]:         ret   
20 [0x14]:         dup    
21 [0x15]:         newstr @7 // yes   
22 [0x16]:         call @1959 // <std#string.string>   
23 [0x17]:         movg @106 // @common#constants.strings   
24 [0x18]:         movn #2   
26 [0x1a]:         popobj   
27 [0x1b]:         new_class @0 // std#__srt_global   
28 [0x1c]:         ret   
29 [0x1d]:         dup    
30 [0x1e]:         newstr @8 // mode   
31 [0x1f]:         call @1959 // <std#string.string>   
32 [0x20]:         movg @106 // @common#constants.strings   
33 [0x21]:         movn #3   
35 [0x23]:         popobj   
36 [0x24]:         new_class @0 // std#__srt_global   
37 [0x25]:         ret   
38 [0x26]:         dup    
39 [0x27]:         newstr @9 // channel   
40 [0x28]:         call @1959 // <std#string.string>   
41 [0x29]:         movg @106 // @common#constants.strings   
42 [0x2a]:         movn #4   
44 [0x2c]:         popobj   
45 [0x2d]:         new_class @0 // std#__srt_global   
46 [0x2e]:         ret   
47 [0x2f]:         dup    
48 [0x30]:         newstr @10 // altitude   
49 [0x31]:         call @1959 // <std#string.string>   
50 [0x32]:         movg @106 // @common#constants.strings   
51 [0x33]:         movn #5   
53 [0x35]:         popobj   
54 [0x36]:         new_class @0 // std#__srt_global   
55 [0x37]:         ret   
56 [0x38]:         dup    
57 [0x39]:         newstr @11 // bat_lvl   
58 [0x3a]:         call @1959 // <std#string.string>   
59 [0x3b]:         movg @106 // @common#constants.strings   
60 [0x3c]:         movn #6   
62 [0x3e]:         popobj   
63 [0x3f]:         new_class @0 // std#__srt_global   
64 [0x40]:         ret   
65 [0x41]:         dup    
66 [0x42]:         newstr @12 // speed   
67 [0x43]:         call @1959 // <std#string.string>   
68 [0x44]:         movg @106 // @common#constants.strings   
69 [0x45]:         movn #7   
71 [0x47]:         popobj   
72 [0x48]:         newstr @3 // 100   
73 [0x49]:         movg @106 // @common#constants.strings   
74 [0x4a]:         movn #8   
76 [0x4c]:         popobj   
77 [0x4d]:         newstr @4 // 200   
78 [0x4e]:         movg @106 // @common#constants.strings   
79 [0x4f]:         movn #9   
81 [0x51]:         popobj   
82 [0x52]:         new_class @0 // std#__srt_global   
83 [0x53]:         ret   
84 [0x54]:         dup    
85 [0x55]:         newstr @13 // 0   
86 [0x56]:         call @1959 // <std#string.string>   
87 [0x57]:         movg @106 // @common#constants.strings   
88 [0x58]:         movn #10   
90 [0x5a]:         popobj   
91 [0x5b]:         new_class @0 // std#__srt_global   
92 [0x5c]:         ret   
93 [0x5d]:         dup    
94 [0x5e]:         newstr @14 // 1   
95 [0x5f]:         call @1959 // <std#string.string>   
96 [0x60]:         movg @106 // @common#constants.strings   
97 [0x61]:         movn #11   
99 [0x63]:         popobj   
100 [0x64]:         new_class @0 // std#__srt_global   
101 [0x65]:         ret   
102 [0x66]:         dup    
103 [0x67]:         newstr @15 // 2   
104 [0x68]:         call @1959 // <std#string.string>   
105 [0x69]:         movg @106 // @common#constants.strings   
106 [0x6a]:         movn #12   
108 [0x6c]:         popobj   
109 [0x6d]:         new_class @0 // std#__srt_global   
110 [0x6e]:         ret   
111 [0x6f]:         dup    
112 [0x70]:         newstr @16 // 3   
113 [0x71]:         call @1959 // <std#string.string>   
114 [0x72]:         movg @106 // @common#constants.strings   
115 [0x73]:         movn #13   
117 [0x75]:         popobj   
118 [0x76]:         new_class @0 // std#__srt_global   
119 [0x77]:         ret   
120 [0x78]:         dup    
121 [0x79]:         newstr @17 // 4   
122 [0x7a]:         call @1959 // <std#string.string>   
123 [0x7b]:         movg @106 // @common#constants.strings   
124 [0x7c]:         movn #14   
126 [0x7e]:         popobj   
127 [0x7f]:         new_class @0 // std#__srt_global   
128 [0x80]:         ret   
129 [0x81]:         dup    
130 [0x82]:         newstr @18 // 5   
131 [0x83]:         call @1959 // <std#string.string>   
132 [0x84]:         movg @106 // @common#constants.strings   
133 [0x85]:         movn #15   
135 [0x87]:         popobj   
136 [0x88]:         new_class @0 // std#__srt_global   
137 [0x89]:         ret   
138 [0x8a]:         dup    
139 [0x8b]:         newstr @19 // 6   
140 [0x8c]:         call @1959 // <std#string.string>   
141 [0x8d]:         movg @106 // @common#constants.strings   
142 [0x8e]:         movn #16   
144 [0x90]:         popobj   
145 [0x91]:         new_class @0 // std#__srt_global   
146 [0x92]:         ret   
147 [0x93]:         dup    
148 [0x94]:         newstr @20 // 7   
149 [0x95]:         call @1959 // <std#string.string>   
150 [0x96]:         movg @106 // @common#constants.strings   
151 [0x97]:         movn #17   
153 [0x99]:         popobj   
154 [0x9a]:         ret   
155 [0x9b]:         ret   


function: ui.res.drawable#__srt_global.$03internal_static_init[4093] params(0) in file: controller//ui//res//drawable//ico_signal_2.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         movi #117, ebx   
2 [0x2]:         newarry ebx: 8   
3 [0x3]:         movi #0, ebx   
5 [0x5]:         movsl #0   
6 [0x6]:         movi #0, adx   
8 [0x8]:         rmov adx, ebx   
9 [0x9]:         movi #2, ebx   
11 [0xb]:         movsl #0   
12 [0xc]:         movi #1, adx   
14 [0xe]:         rmov adx, ebx   
15 [0xf]:         movi #2, ebx   
17 [0x11]:         movsl #0   
18 [0x12]:         movi #2, adx   
20 [0x14]:         rmov adx, ebx   
21 [0x15]:         movi #2, ebx   
23 [0x17]:         movsl #0   
24 [0x18]:         movi #3, adx   
26 [0x1a]:         rmov adx, ebx   
27 [0x1b]:         movi #2, ebx   
29 [0x1d]:         movsl #0   
30 [0x1e]:         movi #4, adx   
32 [0x20]:         rmov adx, ebx   
33 [0x21]:         movi #2, ebx   
35 [0x23]:         movsl #0   
36 [0x24]:         movi #5, adx   
38 [0x26]:         rmov adx, ebx   
39 [0x27]:         movi #0, ebx   
41 [0x29]:         movsl #0   
42 [0x2a]:         movi #6, adx   
44 [0x2c]:         rmov adx, ebx   
45 [0x2d]:         movi #0, ebx   
47 [0x2f]:         movsl #0   
48 [0x30]:         movi #7, adx   
50 [0x32]:         rmov adx, ebx   
51 [0x33]:         movi #0, ebx   
53 [0x35]:         movsl #0   
54 [0x36]:         movi #8, adx   
56 [0x38]:         rmov adx, ebx   
57 [0x39]:         movi #0, ebx   
59 [0x3b]:         movsl #0   
60 [0x3c]:         movi #9, adx   
62 [0x3e]:         rmov adx, ebx   
63 [0x3f]:         movi #0, ebx   
65 [0x41]:         movsl #0   
66 [0x42]:         movi #10, adx   
68 [0x44]:         rmov adx, ebx   
69 [0x45]:         movi #0, ebx   
71 [0x47]:         movsl #0   
72 [0x48]:         movi #11, adx   
74 [0x4a]:         rmov adx, ebx   
75 [0x4b]:         movi #0, ebx   
77 [0x4d]:         movsl #0   
78 [0x4e]:         movi #12, adx   
80 [0x50]:         rmov adx, ebx   
81 [0x51]:         movi #0, ebx   
83 [0x53]:         movsl #0   
84 [0x54]:         movi #13, adx   
86 [0x56]:         rmov adx, ebx   
87 [0x57]:         movi #2, ebx   
89 [0x59]:         movsl #0   
90 [0x5a]:         movi #14, adx   
92 [0x5c]:         rmov adx, ebx   
93 [0x5d]:         movi #0, ebx   
95 [0x5f]:         movsl #0   
96 [0x60]:         movi #15, adx   
98 [0x62]:         rmov adx, ebx   
99 [0x63]:         movi #2, ebx   
101 [0x65]:         movsl #0   
102 [0x66]:         movi #16, adx   
104 [0x68]:         rmov adx, ebx   
105 [0x69]:         movi #0, ebx   
107 [0x6b]:         movsl #0   
108 [0x6c]:         movi #17, adx   
110 [0x6e]:         rmov adx, ebx   
111 [0x6f]:         movi #2, ebx   
113 [0x71]:         movsl #0   
114 [0x72]:         movi #18, adx   
116 [0x74]:         rmov adx, ebx   
117 [0x75]:         movi #0, ebx   
119 [0x77]:         movsl #0   
120 [0x78]:         movi #19, adx   
122 [0x7a]:         rmov adx, ebx   
123 [0x7b]:         movi #0, ebx   
125 [0x7d]:         movsl #0   
126 [0x7e]:         movi #20, adx   
128 [0x80]:         rmov adx, ebx   
129 [0x81]:         movi #0, ebx   
131 [0x83]:         movsl #0   
132 [0x84]:         movi #21, adx   
134 [0x86]:         rmov adx, ebx   
135 [0x87]:         movi #0, ebx   
137 [0x89]:         movsl #0   
138 [0x8a]:         movi #22, adx   
140 [0x8c]:         rmov adx, ebx   
141 [0x8d]:         movi #0, ebx   
143 [0x8f]:         movsl #0   
144 [0x90]:         movi #23, adx   
146 [0x92]:         rmov adx, ebx   
147 [0x93]:         movi #0, ebx   
149 [0x95]:         movsl #0   
150 [0x96]:         movi #24, adx   
152 [0x98]:         rmov adx, ebx   
153 [0x99]:         movi #0, ebx   
155 [0x9b]:         movsl #0   
156 [0x9c]:         movi #25, adx   
158 [0x9e]:         rmov adx, ebx   
159 [0x9f]:         movi #0, ebx   
161 [0xa1]:         movsl #0   
162 [0xa2]:         movi #26, adx   
164 [0xa4]:         rmov adx, ebx   
165 [0xa5]:         movi #0, ebx   
167 [0xa7]:         movsl #0   
168 [0xa8]:         movi #27, adx   
170 [0xaa]:         rmov adx, ebx   
171 [0xab]:         movi #2, ebx   
173 [0xad]:         movsl #0   
174 [0xae]:         movi #28, adx   
176 [0xb0]:         rmov adx, ebx   
177 [0xb1]:         movi #2, ebx   
179 [0xb3]:         movsl #0   
180 [0xb4]:         movi #29, adx   
182 [0xb6]:         rmov adx, ebx   
183 [0xb7]:         movi #2, ebx   
185 [0xb9]:         movsl #0   
186 [0xba]:         movi #30, adx   
188 [0xbc]:         rmov adx, ebx   
189 [0xbd]:         movi #0, ebx   
191 [0xbf]:         movsl #0   
192 [0xc0]:         movi #31, adx   
194 [0xc2]:         rmov adx, ebx   
195 [0xc3]:         movi #0, ebx   
197 [0xc5]:         movsl #0   
198 [0xc6]:         movi #32, adx   
200 [0xc8]:         rmov adx, ebx   
201 [0xc9]:         movi #0, ebx   
203 [0xcb]:         movsl #0   
204 [0xcc]:         movi #33, adx   
206 [0xce]:         rmov adx, ebx   
207 [0xcf]:         movi #0, ebx   
209 [0xd1]:         movsl #0   
210 [0xd2]:         movi #34, adx   
212 [0xd4]:         rmov adx, ebx   
213 [0xd5]:         movi #0, ebx   
215 [0xd7]:         movsl #0   
216 [0xd8]:         movi #35, adx   
218 [0xda]:         rmov adx, ebx   
219 [0xdb]:         movi #0, ebx   
221 [0xdd]:         movsl #0   
222 [0xde]:         movi #36, adx   
224 [0xe0]:         rmov adx, ebx   
225 [0xe1]:         movi #0, ebx   
227 [0xe3]:         movsl #0   
228 [0xe4]:         movi #37, adx   
230 [0xe6]:         rmov adx, ebx   
231 [0xe7]:         movi #0, ebx   
233 [0xe9]:         movsl #0   
234 [0xea]:         movi #38, adx   
236 [0xec]:         rmov adx, ebx   
237 [0xed]:         movi #0, ebx   
239 [0xef]:         movsl #0   
240 [0xf0]:         movi #39, adx   
242 [0xf2]:         rmov adx, ebx   
243 [0xf3]:         movi #0, ebx   
245 [0xf5]:         movsl #0   
246 [0xf6]:         movi #40, adx   
248 [0xf8]:         rmov adx, ebx   
249 [0xf9]:         movi #0, ebx   
251 [0xfb]:         movsl #0   
252 [0xfc]:         movi #41, adx   
254 [0xfe]:         rmov adx, ebx   
255 [0xff]:         movi #2, ebx   
257 [0x101]:         movsl #0   
258 [0x102]:         movi #42, adx   
260 [0x104]:         rmov adx, ebx   
261 [0x105]:         movi #0, ebx   
263 [0x107]:         movsl #0   
264 [0x108]:         movi #43, adx   
266 [0x10a]:         rmov adx, ebx   
267 [0x10b]:         movi #0, ebx   
269 [0x10d]:         movsl #0   
270 [0x10e]:         movi #44, adx   
272 [0x110]:         rmov adx, ebx   
273 [0x111]:         movi #0, ebx   
275 [0x113]:         movsl #0   
276 [0x114]:         movi #45, adx   
278 [0x116]:         rmov adx, ebx   
279 [0x117]:         movi #0, ebx   
281 [0x119]:         movsl #0   
282 [0x11a]:         movi #46, adx   
284 [0x11c]:         rmov adx, ebx   
285 [0x11d]:         movi #0, ebx   
287 [0x11f]:         movsl #0   
288 [0x120]:         movi #47, adx   
290 [0x122]:         rmov adx, ebx   
291 [0x123]:         movi #0, ebx   
293 [0x125]:         movsl #0   
294 [0x126]:         movi #48, adx   
296 [0x128]:         rmov adx, ebx   
297 [0x129]:         movi #0, ebx   
299 [0x12b]:         movsl #0   
300 [0x12c]:         movi #49, adx   
302 [0x12e]:         rmov adx, ebx   
303 [0x12f]:         movi #0, ebx   
305 [0x131]:         movsl #0   
306 [0x132]:         movi #50, adx   
308 [0x134]:         rmov adx, ebx   
309 [0x135]:         movi #0, ebx   
311 [0x137]:         movsl #0   
312 [0x138]:         movi #51, adx   
314 [0x13a]:         rmov adx, ebx   
315 [0x13b]:         movi #0, ebx   
317 [0x13d]:         movsl #0   
318 [0x13e]:         movi #52, adx   
320 [0x140]:         rmov adx, ebx   
321 [0x141]:         movi #0, ebx   
323 [0x143]:         movsl #0   
324 [0x144]:         movi #53, adx   
326 [0x146]:         rmov adx, ebx   
327 [0x147]:         movi #0, ebx   
329 [0x149]:         movsl #0   
330 [0x14a]:         movi #54, adx   
332 [0x14c]:         rmov adx, ebx   
333 [0x14d]:         movi #2, ebx   
335 [0x14f]:         movsl #0   
336 [0x150]:         movi #55, adx   
338 [0x152]:         rmov adx, ebx   
339 [0x153]:         movi #0, ebx   
341 [0x155]:         movsl #0   
342 [0x156]:         movi #56, adx   
344 [0x158]:         rmov adx, ebx   
345 [0x159]:         movi #0, ebx   
347 [0x15b]:         movsl #0   
348 [0x15c]:         movi #57, adx   
350 [0x15e]:         rmov adx, ebx   
351 [0x15f]:         movi #0, ebx   
353 [0x161]:         movsl #0   
354 [0x162]:         movi #58, adx   
356 [0x164]:         rmov adx, ebx   
357 [0x165]:         movi #0, ebx   
359 [0x167]:         movsl #0   
360 [0x168]:         movi #59, adx   
362 [0x16a]:         rmov adx, ebx   
363 [0x16b]:         movi #0, ebx   
365 [0x16d]:         movsl #0   
366 [0x16e]:         movi #60, adx   
368 [0x170]:         rmov adx, ebx   
369 [0x171]:         movi #0, ebx   
371 [0x173]:         movsl #0   
372 [0x174]:         movi #61, adx   
374 [0x176]:         rmov adx, ebx   
375 [0x177]:         movi #0, ebx   
377 [0x179]:         movsl #0   
378 [0x17a]:         movi #62, adx   
380 [0x17c]:         rmov adx, ebx   
381 [0x17d]:         movi #0, ebx   
383 [0x17f]:         movsl #0   
384 [0x180]:         movi #63, adx   
386 [0x182]:         rmov adx, ebx   
387 [0x183]:         movi #0, ebx   
389 [0x185]:         movsl #0   
390 [0x186]:         movi #64, adx   
392 [0x188]:         rmov adx, ebx   
393 [0x189]:         movi #0, ebx   
395 [0x18b]:         movsl #0   
396 [0x18c]:         movi #65, adx   
398 [0x18e]:         rmov adx, ebx   
399 [0x18f]:         movi #0, ebx   
401 [0x191]:         movsl #0   
402 [0x192]:         movi #66, adx   
404 [0x194]:         rmov adx, ebx   
405 [0x195]:         movi #0, ebx   
407 [0x197]:         movsl #0   
408 [0x198]:         movi #67, adx   
410 [0x19a]:         rmov adx, ebx   
411 [0x19b]:         movi #2, ebx   
413 [0x19d]:         movsl #0   
414 [0x19e]:         movi #68, adx   
416 [0x1a0]:         rmov adx, ebx   
417 [0x1a1]:         movi #0, ebx   
419 [0x1a3]:         movsl #0   
420 [0x1a4]:         movi #69, adx   
422 [0x1a6]:         rmov adx, ebx   
423 [0x1a7]:         movi #0, ebx   
425 [0x1a9]:         movsl #0   
426 [0x1aa]:         movi #70, adx   
428 [0x1ac]:         rmov adx, ebx   
429 [0x1ad]:         movi #0, ebx   
431 [0x1af]:         movsl #0   
432 [0x1b0]:         movi #71, adx   
434 [0x1b2]:         rmov adx, ebx   
435 [0x1b3]:         movi #2, ebx   
437 [0x1b5]:         movsl #0   
438 [0x1b6]:         movi #72, adx   
440 [0x1b8]:         rmov adx, ebx   
441 [0x1b9]:         movi #0, ebx   
443 [0x1bb]:         movsl #0   
444 [0x1bc]:         movi #73, adx   
446 [0x1be]:         rmov adx, ebx   
447 [0x1bf]:         movi #0, ebx   
449 [0x1c1]:         movsl #0   
450 [0x1c2]:         movi #74, adx   
452 [0x1c4]:         rmov adx, ebx   
453 [0x1c5]:         movi #0, ebx   
455 [0x1c7]:         movsl #0   
456 [0x1c8]:         movi #75, adx   
458 [0x1ca]:         rmov adx, ebx   
459 [0x1cb]:         movi #0, ebx   
461 [0x1cd]:         movsl #0   
462 [0x1ce]:         movi #76, adx   
464 [0x1d0]:         rmov adx, ebx   
465 [0x1d1]:         movi #0, ebx   
467 [0x1d3]:         movsl #0   
468 [0x1d4]:         movi #77, adx   
470 [0x1d6]:         rmov adx, ebx   
471 [0x1d7]:         movi #0, ebx   
473 [0x1d9]:         movsl #0   
474 [0x1da]:         movi #78, adx   
476 [0x1dc]:         rmov adx, ebx   
477 [0x1dd]:         movi #0, ebx   
479 [0x1df]:         movsl #0   
480 [0x1e0]:         movi #79, adx   
482 [0x1e2]:         rmov adx, ebx   
483 [0x1e3]:         movi #0, ebx   
485 [0x1e5]:         movsl #0   
486 [0x1e6]:         movi #80, adx   
488 [0x1e8]:         rmov adx, ebx   
489 [0x1e9]:         movi #2, ebx   
491 [0x1eb]:         movsl #0   
492 [0x1ec]:         movi #81, adx   
494 [0x1ee]:         rmov adx, ebx   
495 [0x1ef]:         movi #0, ebx   
497 [0x1f1]:         movsl #0   
498 [0x1f2]:         movi #82, adx   
500 [0x1f4]:         rmov adx, ebx   
501 [0x1f5]:         movi #2, ebx   
503 [0x1f7]:         movsl #0   
504 [0x1f8]:         movi #83, adx   
506 [0x1fa]:         rmov adx, ebx   
507 [0x1fb]:         movi #0, ebx   
509 [0x1fd]:         movsl #0   
510 [0x1fe]:         movi #84, adx   
512 [0x200]:         rmov adx, ebx   
513 [0x201]:         movi #2, ebx   
515 [0x203]:         movsl #0   
516 [0x204]:         movi #85, adx   
518 [0x206]:         rmov adx, ebx   
519 [0x207]:         movi #0, ebx   
521 [0x209]:         movsl #0   
522 [0x20a]:         movi #86, adx   
524 [0x20c]:         rmov adx, ebx   
525 [0x20d]:         movi #0, ebx   
527 [0x20f]:         movsl #0   
528 [0x210]:         movi #87, adx   
530 [0x212]:         rmov adx, ebx   
531 [0x213]:         movi #0, ebx   
533 [0x215]:         movsl #0   
534 [0x216]:         movi #88, adx   
536 [0x218]:         rmov adx, ebx   
537 [0x219]:         movi #0, ebx   
539 [0x21b]:         movsl #0   
540 [0x21c]:         movi #89, adx   
542 [0x21e]:         rmov adx, ebx   
543 [0x21f]:         movi #0, ebx   
545 [0x221]:         movsl #0   
546 [0x222]:         movi #90, adx   
548 [0x224]:         rmov adx, ebx   
549 [0x225]:         movi #0, ebx   
551 [0x227]:         movsl #0   
552 [0x228]:         movi #91, adx   
554 [0x22a]:         rmov adx, ebx   
555 [0x22b]:         movi #0, ebx   
557 [0x22d]:         movsl #0   
558 [0x22e]:         movi #92, adx   
560 [0x230]:         rmov adx, ebx   
561 [0x231]:         movi #0, ebx   
563 [0x233]:         movsl #0   
564 [0x234]:         movi #93, adx   
566 [0x236]:         rmov adx, ebx   
567 [0x237]:         movi #2, ebx   
569 [0x239]:         movsl #0   
570 [0x23a]:         movi #94, adx   
572 [0x23c]:         rmov adx, ebx   
573 [0x23d]:         movi #0, ebx   
575 [0x23f]:         movsl #0   
576 [0x240]:         movi #95, adx   
578 [0x242]:         rmov adx, ebx   
579 [0x243]:         movi #2, ebx   
581 [0x245]:         movsl #0   
582 [0x246]:         movi #96, adx   
584 [0x248]:         rmov adx, ebx   
585 [0x249]:         movi #0, ebx   
587 [0x24b]:         movsl #0   
588 [0x24c]:         movi #97, adx   
590 [0x24e]:         rmov adx, ebx   
591 [0x24f]:         movi #2, ebx   
593 [0x251]:         movsl #0   
594 [0x252]:         movi #98, adx   
596 [0x254]:         rmov adx, ebx   
597 [0x255]:         movi #0, ebx   
599 [0x257]:         movsl #0   
600 [0x258]:         movi #99, adx   
602 [0x25a]:         rmov adx, ebx   
603 [0x25b]:         movi #0, ebx   
605 [0x25d]:         movsl #0   
606 [0x25e]:         movi #100, adx   
608 [0x260]:         rmov adx, ebx   
609 [0x261]:         movi #0, ebx   
611 [0x263]:         movsl #0   
612 [0x264]:         movi #101, adx   
614 [0x266]:         rmov adx, ebx   
615 [0x267]:         movi #0, ebx   
617 [0x269]:         movsl #0   
618 [0x26a]:         movi #102, adx   
620 [0x26c]:         rmov adx, ebx   
621 [0x26d]:         movi #0, ebx   
623 [0x26f]:         movsl #0   
624 [0x270]:         movi #103, adx   
626 [0x272]:         rmov adx, ebx   
627 [0x273]:         movi #0, ebx   
629 [0x275]:         movsl #0   
630 [0x276]:         movi #104, adx   
632 [0x278]:         rmov adx, ebx   
633 [0x279]:         movi #0, ebx   
635 [0x27b]:         movsl #0   
636 [0x27c]:         movi #105, adx   
638 [0x27e]:         rmov adx, ebx   
639 [0x27f]:         movi #0, ebx   
641 [0x281]:         movsl #0   
642 [0x282]:         movi #106, adx   
644 [0x284]:         rmov adx, ebx   
645 [0x285]:         movi #2, ebx   
647 [0x287]:         movsl #0   
648 [0x288]:         movi #107, adx   
650 [0x28a]:         rmov adx, ebx   
651 [0x28b]:         movi #0, ebx   
653 [0x28d]:         movsl #0   
654 [0x28e]:         movi #108, adx   
656 [0x290]:         rmov adx, ebx   
657 [0x291]:         movi #2, ebx   
659 [0x293]:         movsl #0   
660 [0x294]:         movi #109, adx   
662 [0x296]:         rmov adx, ebx   
663 [0x297]:         movi #0, ebx   
665 [0x299]:         movsl #0   
666 [0x29a]:         movi #110, adx   
668 [0x29c]:         rmov adx, ebx   
669 [0x29d]:         movi #2, ebx   
671 [0x29f]:         movsl #0   
672 [0x2a0]:         movi #111, adx   
674 [0x2a2]:         rmov adx, ebx   
675 [0x2a3]:         movi #0, ebx   
677 [0x2a5]:         movsl #0   
678 [0x2a6]:         movi #112, adx   
680 [0x2a8]:         rmov adx, ebx   
681 [0x2a9]:         movi #0, ebx   
683 [0x2ab]:         movsl #0   
684 [0x2ac]:         movi #113, adx   
686 [0x2ae]:         rmov adx, ebx   
687 [0x2af]:         movi #0, ebx   
689 [0x2b1]:         movsl #0   
690 [0x2b2]:         movi #114, adx   
692 [0x2b4]:         rmov adx, ebx   
693 [0x2b5]:         movi #0, ebx   
695 [0x2b7]:         movsl #0   
696 [0x2b8]:         movi #115, adx   
698 [0x2ba]:         rmov adx, ebx   
699 [0x2bb]:         movi #0, ebx   
701 [0x2bd]:         movsl #0   
702 [0x2be]:         movi #116, adx   
704 [0x2c0]:         rmov adx, ebx   
705 [0x2c1]:         movg @108 // @ui.res.drawable#__srt_global   
706 [0x2c2]:         movn #0   
708 [0x2c4]:         popobj   
709 [0x2c5]:         new_class @0 // std#__srt_global   
710 [0x2c6]:         swap    
711 [0x2c7]:         dup    
712 [0x2c8]:         istore 7   
714 [0x2ca]:         movg @108 // @ui.res.drawable#__srt_global   
715 [0x2cb]:         movn #0   
717 [0x2cd]:         pushobj   
718 [0x2ce]:         istore 13   
720 [0x2d0]:         movi #9, ebx   
722 [0x2d2]:         rstore ebx   
723 [0x2d3]:         call @3711 // <ui.support#drawable.drawable>   
724 [0x2d4]:         movg @108 // @ui.res.drawable#__srt_global   
725 [0x2d5]:         movn #1   
727 [0x2d7]:         popobj   
728 [0x2d8]:         movi #117, ebx   
730 [0x2da]:         newarry ebx: 8   
731 [0x2db]:         movi #0, ebx   
733 [0x2dd]:         movsl #0   
734 [0x2de]:         movi #0, adx   
736 [0x2e0]:         rmov adx, ebx   
737 [0x2e1]:         movi #0, ebx   
739 [0x2e3]:         movsl #0   
740 [0x2e4]:         movi #1, adx   
742 [0x2e6]:         rmov adx, ebx   
743 [0x2e7]:         movi #0, ebx   
745 [0x2e9]:         movsl #0   
746 [0x2ea]:         movi #2, adx   
748 [0x2ec]:         rmov adx, ebx   
749 [0x2ed]:         movi #0, ebx   
751 [0x2ef]:         movsl #0   
752 [0x2f0]:         movi #3, adx   
754 [0x2f2]:         rmov adx, ebx   
755 [0x2f3]:         movi #0, ebx   
757 [0x2f5]:         movsl #0   
758 [0x2f6]:         movi #4, adx   
760 [0x2f8]:         rmov adx, ebx   
761 [0x2f9]:         movi #0, ebx   
763 [0x2fb]:         movsl #0   
764 [0x2fc]:         movi #5, adx   
766 [0x2fe]:         rmov adx, ebx   
767 [0x2ff]:         movi #2, ebx   
769 [0x301]:         movsl #0   
770 [0x302]:         movi #6, adx   
772 [0x304]:         rmov adx, ebx   
773 [0x305]:         movi #0, ebx   
775 [0x307]:         movsl #0   
776 [0x308]:         movi #7, adx   
778 [0x30a]:         rmov adx, ebx   
779 [0x30b]:         movi #0, ebx   
781 [0x30d]:         movsl #0   
782 [0x30e]:         movi #8, adx   
784 [0x310]:         rmov adx, ebx   
785 [0x311]:         movi #0, ebx   
787 [0x313]:         movsl #0   
788 [0x314]:         movi #9, adx   
790 [0x316]:         rmov adx, ebx   
791 [0x317]:         movi #0, ebx   
793 [0x319]:         movsl #0   
794 [0x31a]:         movi #10, adx   
796 [0x31c]:         rmov adx, ebx   
797 [0x31d]:         movi #0, ebx   
799 [0x31f]:         movsl #0   
800 [0x320]:         movi #11, adx   
802 [0x322]:         rmov adx, ebx   
803 [0x323]:         movi #0, ebx   
805 [0x325]:         movsl #0   
806 [0x326]:         movi #12, adx   
808 [0x328]:         rmov adx, ebx   
809 [0x329]:         movi #0, ebx   
811 [0x32b]:         movsl #0   
812 [0x32c]:         movi #13, adx   
814 [0x32e]:         rmov adx, ebx   
815 [0x32f]:         movi #0, ebx   
817 [0x331]:         movsl #0   
818 [0x332]:         movi #14, adx   
820 [0x334]:         rmov adx, ebx   
821 [0x335]:         movi #0, ebx   
823 [0x337]:         movsl #0   
824 [0x338]:         movi #15, adx   
826 [0x33a]:         rmov adx, ebx   
827 [0x33b]:         movi #2, ebx   
829 [0x33d]:         movsl #0   
830 [0x33e]:         movi #16, adx   
832 [0x340]:         rmov adx, ebx   
833 [0x341]:         movi #0, ebx   
835 [0x343]:         movsl #0   
836 [0x344]:         movi #17, adx   
838 [0x346]:         rmov adx, ebx   
839 [0x347]:         movi #2, ebx   
841 [0x349]:         movsl #0   
842 [0x34a]:         movi #18, adx   
844 [0x34c]:         rmov adx, ebx   
845 [0x34d]:         movi #2, ebx   
847 [0x34f]:         movsl #0   
848 [0x350]:         movi #19, adx   
850 [0x352]:         rmov adx, ebx   
851 [0x353]:         movi #2, ebx   
853 [0x355]:         movsl #0   
854 [0x356]:         movi #20, adx   
856 [0x358]:         rmov adx, ebx   
857 [0x359]:         movi #0, ebx   
859 [0x35b]:         movsl #0   
860 [0x35c]:         movi #21, adx   
862 [0x35e]:         rmov adx, ebx   
863 [0x35f]:         movi #0, ebx   
865 [0x361]:         movsl #0   
866 [0x362]:         movi #22, adx   
868 [0x364]:         rmov adx, ebx   
869 [0x365]:         movi #0, ebx   
871 [0x367]:         movsl #0   
872 [0x368]:         movi #23, adx   
874 [0x36a]:         rmov adx, ebx   
875 [0x36b]:         movi #0, ebx   
877 [0x36d]:         movsl #0   
878 [0x36e]:         movi #24, adx   
880 [0x370]:         rmov adx, ebx   
881 [0x371]:         movi #0, ebx   
883 [0x373]:         movsl #0   
884 [0x374]:         movi #25, adx   
886 [0x376]:         rmov adx, ebx   
887 [0x377]:         movi #0, ebx   
889 [0x379]:         movsl #0   
890 [0x37a]:         movi #26, adx   
892 [0x37c]:         rmov adx, ebx   
893 [0x37d]:         movi #0, ebx   
895 [0x37f]:         movsl #0   
896 [0x380]:         movi #27, adx   
898 [0x382]:         rmov adx, ebx   
899 [0x383]:         movi #2, ebx   
901 [0x385]:         movsl #0   
902 [0x386]:         movi #28, adx   
904 [0x388]:         rmov adx, ebx   
905 [0x389]:         movi #2, ebx   
907 [0x38b]:         movsl #0   
908 [0x38c]:         movi #29, adx   
910 [0x38e]:         rmov adx, ebx   
911 [0x38f]:         movi #2, ebx   
913 [0x391]:         movsl #0   
914 [0x392]:         movi #30, adx   
916 [0x394]:         rmov adx, ebx   
917 [0x395]:         movi #2, ebx   
919 [0x397]:         movsl #0   
920 [0x398]:         movi #31, adx   
922 [0x39a]:         rmov adx, ebx   
923 [0x39b]:         movi #2, ebx   
925 [0x39d]:         movsl #0   
926 [0x39e]:         movi #32, adx   
928 [0x3a0]:         rmov adx, ebx   
929 [0x3a1]:         movi #2, ebx   
931 [0x3a3]:         movsl #0   
932 [0x3a4]:         movi #33, adx   
934 [0x3a6]:         rmov adx, ebx   
935 [0x3a7]:         movi #2, ebx   
937 [0x3a9]:         movsl #0   
938 [0x3aa]:         movi #34, adx   
940 [0x3ac]:         rmov adx, ebx   
941 [0x3ad]:         movi #0, ebx   
943 [0x3af]:         movsl #0   
944 [0x3b0]:         movi #35, adx   
946 [0x3b2]:         rmov adx, ebx   
947 [0x3b3]:         movi #0, ebx   
949 [0x3b5]:         movsl #0   
950 [0x3b6]:         movi #36, adx   
952 [0x3b8]:         rmov adx, ebx   
953 [0x3b9]:         movi #0, ebx   
955 [0x3bb]:         movsl #0   
956 [0x3bc]:         movi #37, adx   
958 [0x3be]:         rmov adx, ebx   
959 [0x3bf]:         movi #0, ebx   
961 [0x3c1]:         movsl #0   
962 [0x3c2]:         movi #38, adx   
964 [0x3c4]:         rmov adx, ebx   
965 [0x3c5]:         movi #0, ebx   
967 [0x3c7]:         movsl #0   
968 [0x3c8]:         movi #39, adx   
970 [0x3ca]:         rmov adx, ebx   
971 [0x3cb]:         movi #0, ebx   
973 [0x3cd]:         movsl #0   
974 [0x3ce]:         movi #40, adx   
976 [0x3d0]:         rmov adx, ebx   
977 [0x3d1]:         movi #2, ebx   
979 [0x3d3]:         movsl #0   
980 [0x3d4]:         movi #41, adx   
982 [0x3d6]:         rmov adx, ebx   
983 [0x3d7]:         movi #2, ebx   
985 [0x3d9]:         movsl #0   
986 [0x3da]:         movi #42, adx   
988 [0x3dc]:         rmov adx, ebx   
989 [0x3dd]:         movi #2, ebx   
991 [0x3df]:         movsl #0   
992 [0x3e0]:         movi #43, adx   
994 [0x3e2]:         rmov adx, ebx   
995 [0x3e3]:         movi #2, ebx   
997 [0x3e5]:         movsl #0   
998 [0x3e6]:         movi #44, adx   
1000 [0x3e8]:         rmov adx, ebx   
1001 [0x3e9]:         movi #2, ebx   
1003 [0x3eb]:         movsl #0   
1004 [0x3ec]:         movi #45, adx   
1006 [0x3ee]:         rmov adx, ebx   
1007 [0x3ef]:         movi #2, ebx   
1009 [0x3f1]:         movsl #0   
1010 [0x3f2]:         movi #46, adx   
1012 [0x3f4]:         rmov adx, ebx   
1013 [0x3f5]:         movi #2, ebx   
1015 [0x3f7]:         movsl #0   
1016 [0x3f8]:         movi #47, adx   
1018 [0x3fa]:         rmov adx, ebx   
1019 [0x3fb]:         movi #0, ebx   
1021 [0x3fd]:         movsl #0   
1022 [0x3fe]:         movi #48, adx   
1024 [0x400]:         rmov adx, ebx   
1025 [0x401]:         movi #0, ebx   
1027 [0x403]:         movsl #0   
1028 [0x404]:         movi #49, adx   
1030 [0x406]:         rmov adx, ebx   
1031 [0x407]:         movi #0, ebx   
1033 [0x409]:         movsl #0   
1034 [0x40a]:         movi #50, adx   
1036 [0x40c]:         rmov adx, ebx   
1037 [0x40d]:         movi #0, ebx   
1039 [0x40f]:         movsl #0   
1040 [0x410]:         movi #51, adx   
1042 [0x412]:         rmov adx, ebx   
1043 [0x413]:         movi #0, ebx   
1045 [0x415]:         movsl #0   
1046 [0x416]:         movi #52, adx   
1048 [0x418]:         rmov adx, ebx   
1049 [0x419]:         movi #0, ebx   
1051 [0x41b]:         movsl #0   
1052 [0x41c]:         movi #53, adx   
1054 [0x41e]:         rmov adx, ebx   
1055 [0x41f]:         movi #2, ebx   
1057 [0x421]:         movsl #0   
1058 [0x422]:         movi #54, adx   
1060 [0x424]:         rmov adx, ebx   
1061 [0x425]:         movi #2, ebx   
1063 [0x427]:         movsl #0   
1064 [0x428]:         movi #55, adx   
1066 [0x42a]:         rmov adx, ebx   
1067 [0x42b]:         movi #2, ebx   
1069 [0x42d]:         movsl #0   
1070 [0x42e]:         movi #56, adx   
1072 [0x430]:         rmov adx, ebx   
1073 [0x431]:         movi #2, ebx   
1075 [0x433]:         movsl #0   
1076 [0x434]:         movi #57, adx   
1078 [0x436]:         rmov adx, ebx   
1079 [0x437]:         movi #0, ebx   
1081 [0x439]:         movsl #0   
1082 [0x43a]:         movi #58, adx   
1084 [0x43c]:         rmov adx, ebx   
1085 [0x43d]:         movi #2, ebx   
1087 [0x43f]:         movsl #0   
1088 [0x440]:         movi #59, adx   
1090 [0x442]:         rmov adx, ebx   
1091 [0x443]:         movi #2, ebx   
1093 [0x445]:         movsl #0   
1094 [0x446]:         movi #60, adx   
1096 [0x448]:         rmov adx, ebx   
1097 [0x449]:         movi #0, ebx   
1099 [0x44b]:         movsl #0   
1100 [0x44c]:         movi #61, adx   
1102 [0x44e]:         rmov adx, ebx   
1103 [0x44f]:         movi #0, ebx   
1105 [0x451]:         movsl #0   
1106 [0x452]:         movi #62, adx   
1108 [0x454]:         rmov adx, ebx   
1109 [0x455]:         movi #0, ebx   
1111 [0x457]:         movsl #0   
1112 [0x458]:         movi #63, adx   
1114 [0x45a]:         rmov adx, ebx   
1115 [0x45b]:         movi #0, ebx   
1117 [0x45d]:         movsl #0   
1118 [0x45e]:         movi #64, adx   
1120 [0x460]:         rmov adx, ebx   
1121 [0x461]:         movi #0, ebx   
1123 [0x463]:         movsl #0   
1124 [0x464]:         movi #65, adx   
1126 [0x466]:         rmov adx, ebx   
1127 [0x467]:         movi #0, ebx   
1129 [0x469]:         movsl #0   
1130 [0x46a]:         movi #66, adx   
1132 [0x46c]:         rmov adx, ebx   
1133 [0x46d]:         movi #2, ebx   
1135 [0x46f]:         movsl #0   
1136 [0x470]:         movi #67, adx   
1138 [0x472]:         rmov adx, ebx   
1139 [0x473]:         movi #0, ebx   
1141 [0x475]:         movsl #0   
1142 [0x476]:         movi #68, adx   
1144 [0x478]:         rmov adx, ebx   
1145 [0x479]:         movi #2, ebx   
1147 [0x47b]:         movsl #0   
1148 [0x47c]:         movi #69, adx   
1150 [0x47e]:         rmov adx, ebx   
1151 [0x47f]:         movi #2, ebx   
1153 [0x481]:         movsl #0   
1154 [0x482]:         movi #70, adx   
1156 [0x484]:         rmov adx, ebx   
1157 [0x485]:         movi #0, ebx   
1159 [0x487]:         movsl #0   
1160 [0x488]:         movi #71, adx   
1162 [0x48a]:         rmov adx, ebx   
1163 [0x48b]:         movi #2, ebx   
1165 [0x48d]:         movsl #0   
1166 [0x48e]:         movi #72, adx   
1168 [0x490]:         rmov adx, ebx   
1169 [0x491]:         movi #2, ebx   
1171 [0x493]:         movsl #0   
1172 [0x494]:         movi #73, adx   
1174 [0x496]:         rmov adx, ebx   
1175 [0x497]:         movi #0, ebx   
1177 [0x499]:         movsl #0   
1178 [0x49a]:         movi #74, adx   
1180 [0x49c]:         rmov adx, ebx   
1181 [0x49d]:         movi #0, ebx   
1183 [0x49f]:         movsl #0   
1184 [0x4a0]:         movi #75, adx   
1186 [0x4a2]:         rmov adx, ebx   
1187 [0x4a3]:         movi #0, ebx   
1189 [0x4a5]:         movsl #0   
1190 [0x4a6]:         movi #76, adx   
1192 [0x4a8]:         rmov adx, ebx   
1193 [0x4a9]:         movi #0, ebx   
1195 [0x4ab]:         movsl #0   
1196 [0x4ac]:         movi #77, adx   
1198 [0x4ae]:         rmov adx, ebx   
1199 [0x4af]:         movi #0, ebx   
1201 [0x4b1]:         movsl #0   
1202 [0x4b2]:         movi #78, adx   
1204 [0x4b4]:         rmov adx, ebx   
1205 [0x4b5]:         movi #0, ebx   
1207 [0x4b7]:         movsl #0   
1208 [0x4b8]:         movi #79, adx   
1210 [0x4ba]:         rmov adx, ebx   
1211 [0x4bb]:         movi #2, ebx   
1213 [0x4bd]:         movsl #0   
1214 [0x4be]:         movi #80, adx   
1216 [0x4c0]:         rmov adx, ebx   
1217 [0x4c1]:         movi #0, ebx   
1219 [0x4c3]:         movsl #0   
1220 [0x4c4]:         movi #81, adx   
1222 [0x4c6]:         rmov adx, ebx   
1223 [0x4c7]:         movi #2, ebx   
1225 [0x4c9]:         movsl #0   
1226 [0x4ca]:         movi #82, adx   
1228 [0x4cc]:         rmov adx, ebx   
1229 [0x4cd]:         movi #0, ebx   
1231 [0x4cf]:         movsl #0   
1232 [0x4d0]:         movi #83, adx   
1234 [0x4d2]:         rmov adx, ebx   
1235 [0x4d3]:         movi #2, ebx   
1237 [0x4d5]:         movsl #0   
1238 [0x4d6]:         movi #84, adx   
1240 [0x4d8]:         rmov adx, ebx   
1241 [0x4d9]:         movi #2, ebx   
1243 [0x4db]:         movsl #0   
1244 [0x4dc]:         movi #85, adx   
1246 [0x4de]:         rmov adx, ebx   
1247 [0x4df]:         movi #2, ebx   
1249 [0x4e1]:         movsl #0   
1250 [0x4e2]:         movi #86, adx   
1252 [0x4e4]:         rmov adx, ebx   
1253 [0x4e5]:         movi #0, ebx   
1255 [0x4e7]:         movsl #0   
1256 [0x4e8]:         movi #87, adx   
1258 [0x4ea]:         rmov adx, ebx   
1259 [0x4eb]:         movi #0, ebx   
1261 [0x4ed]:         movsl #0   
1262 [0x4ee]:         movi #88, adx   
1264 [0x4f0]:         rmov adx, ebx   
1265 [0x4f1]:         movi #0, ebx   
1267 [0x4f3]:         movsl #0   
1268 [0x4f4]:         movi #89, adx   
1270 [0x4f6]:         rmov adx, ebx   
1271 [0x4f7]:         movi #0, ebx   
1273 [0x4f9]:         movsl #0   
1274 [0x4fa]:         movi #90, adx   
1276 [0x4fc]:         rmov adx, ebx   
1277 [0x4fd]:         movi #0, ebx   
1279 [0x4ff]:         movsl #0   
1280 [0x500]:         movi #91, adx   
1282 [0x502]:         rmov adx, ebx   
1283 [0x503]:         movi #0, ebx   
1285 [0x505]:         movsl #0   
1286 [0x506]:         movi #92, adx   
1288 [0x508]:         rmov adx, ebx   
1289 [0x509]:         movi #0, ebx   
1291 [0x50b]:         movsl #0   
1292 [0x50c]:         movi #93, adx   
1294 [0x50e]:         rmov adx, ebx   
1295 [0x50f]:         movi #2, ebx   
1297 [0x511]:         movsl #0   
1298 [0x512]:         movi #94, adx   
1300 [0x514]:         rmov adx, ebx   
1301 [0x515]:         movi #0, ebx   
1303 [0x517]:         movsl #0   
1304 [0x518]:         movi #95, adx   
1306 [0x51a]:         rmov adx, ebx   
1307 [0x51b]:         movi #2, ebx   
1309 [0x51d]:         movsl #0   
1310 [0x51e]:         movi #96, adx   
1312 [0x520]:         rmov adx, ebx   
1313 [0x521]:         movi #2, ebx   
1315 [0x523]:         movsl #0   
1316 [0x524]:         movi #97, adx   
1318 [0x526]:         rmov adx, ebx   
1319 [0x527]:         movi #2, ebx   
1321 [0x529]:         movsl #0   
1322 [0x52a]:         movi #98, adx   
1324 [0x52c]:         rmov adx, ebx   
1325 [0x52d]:         movi #0, ebx   
1327 [0x52f]:         movsl #0   
1328 [0x530]:         movi #99, adx   
1330 [0x532]:         rmov adx, ebx   
1331 [0x533]:         movi #0, ebx   
1333 [0x535]:         movsl #0   
1334 [0x536]:         movi #100, adx   
1336 [0x538]:         rmov adx, ebx   
1337 [0x539]:         movi #0, ebx   
1339 [0x53b]:         movsl #0   
1340 [0x53c]:         movi #101, adx   
1342 [0x53e]:         rmov adx, ebx   
1343 [0x53f]:         movi #0, ebx   
1345 [0x541]:         movsl #0   
1346 [0x542]:         movi #102, adx   
1348 [0x544]:         rmov adx, ebx   
1349 [0x545]:         movi #0, ebx   
1351 [0x547]:         movsl #0   
1352 [0x548]:         movi #103, adx   
1354 [0x54a]:         rmov adx, ebx   
1355 [0x54b]:         movi #0, ebx   
1357 [0x54d]:         movsl #0   
1358 [0x54e]:         movi #104, adx   
1360 [0x550]:         rmov adx, ebx   
1361 [0x551]:         movi #0, ebx   
1363 [0x553]:         movsl #0   
1364 [0x554]:         movi #105, adx   
1366 [0x556]:         rmov adx, ebx   
1367 [0x557]:         movi #0, ebx   
1369 [0x559]:         movsl #0   
1370 [0x55a]:         movi #106, adx   
1372 [0x55c]:         rmov adx, ebx   
1373 [0x55d]:         movi #0, ebx   
1375 [0x55f]:         movsl #0   
1376 [0x560]:         movi #107, adx   
1378 [0x562]:         rmov adx, ebx   
1379 [0x563]:         movi #0, ebx   
1381 [0x565]:         movsl #0   
1382 [0x566]:         movi #108, adx   
1384 [0x568]:         rmov adx, ebx   
1385 [0x569]:         movi #0, ebx   
1387 [0x56b]:         movsl #0   
1388 [0x56c]:         movi #109, adx   
1390 [0x56e]:         rmov adx, ebx   
1391 [0x56f]:         movi #0, ebx   
1393 [0x571]:         movsl #0   
1394 [0x572]:         movi #110, adx   
1396 [0x574]:         rmov adx, ebx   
1397 [0x575]:         movi #0, ebx   
1399 [0x577]:         movsl #0   
1400 [0x578]:         movi #111, adx   
1402 [0x57a]:         rmov adx, ebx   
1403 [0x57b]:         movi #0, ebx   
1405 [0x57d]:         movsl #0   
1406 [0x57e]:         movi #112, adx   
1408 [0x580]:         rmov adx, ebx   
1409 [0x581]:         movi #0, ebx   
1411 [0x583]:         movsl #0   
1412 [0x584]:         movi #113, adx   
1414 [0x586]:         rmov adx, ebx   
1415 [0x587]:         movi #0, ebx   
1417 [0x589]:         movsl #0   
1418 [0x58a]:         movi #114, adx   
1420 [0x58c]:         rmov adx, ebx   
1421 [0x58d]:         movi #0, ebx   
1423 [0x58f]:         movsl #0   
1424 [0x590]:         movi #115, adx   
1426 [0x592]:         rmov adx, ebx   
1427 [0x593]:         movi #0, ebx   
1429 [0x595]:         movsl #0   
1430 [0x596]:         movi #116, adx   
1432 [0x598]:         rmov adx, ebx   
1433 [0x599]:         movg @108 // @ui.res.drawable#__srt_global   
1434 [0x59a]:         movn #2   
1436 [0x59c]:         popobj   
1437 [0x59d]:         new_class @0 // std#__srt_global   
1438 [0x59e]:         swap    
1439 [0x59f]:         dup    
1440 [0x5a0]:         istore 10   
1442 [0x5a2]:         movg @108 // @ui.res.drawable#__srt_global   
1443 [0x5a3]:         movn #2   
1445 [0x5a5]:         pushobj   
1446 [0x5a6]:         istore 13   
1448 [0x5a8]:         movi #9, ebx   
1450 [0x5aa]:         rstore ebx   
1451 [0x5ab]:         call @3711 // <ui.support#drawable.drawable>   
1452 [0x5ac]:         movg @108 // @ui.res.drawable#__srt_global   
1453 [0x5ad]:         movn #3   
1455 [0x5af]:         popobj   
1456 [0x5b0]:         movi #144, ebx   
1458 [0x5b2]:         newarry ebx: 8   
1459 [0x5b3]:         movi #0, ebx   
1461 [0x5b5]:         movsl #0   
1462 [0x5b6]:         movi #0, adx   
1464 [0x5b8]:         rmov adx, ebx   
1465 [0x5b9]:         movi #2, ebx   
1467 [0x5bb]:         movsl #0   
1468 [0x5bc]:         movi #1, adx   
1470 [0x5be]:         rmov adx, ebx   
1471 [0x5bf]:         movi #2, ebx   
1473 [0x5c1]:         movsl #0   
1474 [0x5c2]:         movi #2, adx   
1476 [0x5c4]:         rmov adx, ebx   
1477 [0x5c5]:         movi #2, ebx   
1479 [0x5c7]:         movsl #0   
1480 [0x5c8]:         movi #3, adx   
1482 [0x5ca]:         rmov adx, ebx   
1483 [0x5cb]:         movi #2, ebx   
1485 [0x5cd]:         movsl #0   
1486 [0x5ce]:         movi #4, adx   
1488 [0x5d0]:         rmov adx, ebx   
1489 [0x5d1]:         movi #2, ebx   
1491 [0x5d3]:         movsl #0   
1492 [0x5d4]:         movi #5, adx   
1494 [0x5d6]:         rmov adx, ebx   
1495 [0x5d7]:         movi #2, ebx   
1497 [0x5d9]:         movsl #0   
1498 [0x5da]:         movi #6, adx   
1500 [0x5dc]:         rmov adx, ebx   
1501 [0x5dd]:         movi #2, ebx   
1503 [0x5df]:         movsl #0   
1504 [0x5e0]:         movi #7, adx   
1506 [0x5e2]:         rmov adx, ebx   
1507 [0x5e3]:         movi #2, ebx   
1509 [0x5e5]:         movsl #0   
1510 [0x5e6]:         movi #8, adx   
1512 [0x5e8]:         rmov adx, ebx   
1513 [0x5e9]:         movi #2, ebx   
1515 [0x5eb]:         movsl #0   
1516 [0x5ec]:         movi #9, adx   
1518 [0x5ee]:         rmov adx, ebx   
1519 [0x5ef]:         movi #2, ebx   
1521 [0x5f1]:         movsl #0   
1522 [0x5f2]:         movi #10, adx   
1524 [0x5f4]:         rmov adx, ebx   
1525 [0x5f5]:         movi #2, ebx   
1527 [0x5f7]:         movsl #0   
1528 [0x5f8]:         movi #11, adx   
1530 [0x5fa]:         rmov adx, ebx   
1531 [0x5fb]:         movi #2, ebx   
1533 [0x5fd]:         movsl #0   
1534 [0x5fe]:         movi #12, adx   
1536 [0x600]:         rmov adx, ebx   
1537 [0x601]:         movi #2, ebx   
1539 [0x603]:         movsl #0   
1540 [0x604]:         movi #13, adx   
1542 [0x606]:         rmov adx, ebx   
1543 [0x607]:         movi #2, ebx   
1545 [0x609]:         movsl #0   
1546 [0x60a]:         movi #14, adx   
1548 [0x60c]:         rmov adx, ebx   
1549 [0x60d]:         movi #2, ebx   
1551 [0x60f]:         movsl #0   
1552 [0x610]:         movi #15, adx   
1554 [0x612]:         rmov adx, ebx   
1555 [0x613]:         movi #0, ebx   
1557 [0x615]:         movsl #0   
1558 [0x616]:         movi #16, adx   
1560 [0x618]:         rmov adx, ebx   
1561 [0x619]:         movi #2, ebx   
1563 [0x61b]:         movsl #0   
1564 [0x61c]:         movi #17, adx   
1566 [0x61e]:         rmov adx, ebx   
1567 [0x61f]:         movi #0, ebx   
1569 [0x621]:         movsl #0   
1570 [0x622]:         movi #18, adx   
1572 [0x624]:         rmov adx, ebx   
1573 [0x625]:         movi #0, ebx   
1575 [0x627]:         movsl #0   
1576 [0x628]:         movi #19, adx   
1578 [0x62a]:         rmov adx, ebx   
1579 [0x62b]:         movi #0, ebx   
1581 [0x62d]:         movsl #0   
1582 [0x62e]:         movi #20, adx   
1584 [0x630]:         rmov adx, ebx   
1585 [0x631]:         movi #0, ebx   
1587 [0x633]:         movsl #0   
1588 [0x634]:         movi #21, adx   
1590 [0x636]:         rmov adx, ebx   
1591 [0x637]:         movi #0, ebx   
1593 [0x639]:         movsl #0   
1594 [0x63a]:         movi #22, adx   
1596 [0x63c]:         rmov adx, ebx   
1597 [0x63d]:         movi #0, ebx   
1599 [0x63f]:         movsl #0   
1600 [0x640]:         movi #23, adx   
1602 [0x642]:         rmov adx, ebx   
1603 [0x643]:         movi #0, ebx   
1605 [0x645]:         movsl #0   
1606 [0x646]:         movi #24, adx   
1608 [0x648]:         rmov adx, ebx   
1609 [0x649]:         movi #0, ebx   
1611 [0x64b]:         movsl #0   
1612 [0x64c]:         movi #25, adx   
1614 [0x64e]:         rmov adx, ebx   
1615 [0x64f]:         movi #0, ebx   
1617 [0x651]:         movsl #0   
1618 [0x652]:         movi #26, adx   
1620 [0x654]:         rmov adx, ebx   
1621 [0x655]:         movi #0, ebx   
1623 [0x657]:         movsl #0   
1624 [0x658]:         movi #27, adx   
1626 [0x65a]:         rmov adx, ebx   
1627 [0x65b]:         movi #0, ebx   
1629 [0x65d]:         movsl #0   
1630 [0x65e]:         movi #28, adx   
1632 [0x660]:         rmov adx, ebx   
1633 [0x661]:         movi #0, ebx   
1635 [0x663]:         movsl #0   
1636 [0x664]:         movi #29, adx   
1638 [0x666]:         rmov adx, ebx   
1639 [0x667]:         movi #0, ebx   
1641 [0x669]:         movsl #0   
1642 [0x66a]:         movi #30, adx   
1644 [0x66c]:         rmov adx, ebx   
1645 [0x66d]:         movi #2, ebx   
1647 [0x66f]:         movsl #0   
1648 [0x670]:         movi #31, adx   
1650 [0x672]:         rmov adx, ebx   
1651 [0x673]:         movi #2, ebx   
1653 [0x675]:         movsl #0   
1654 [0x676]:         movi #32, adx   
1656 [0x678]:         rmov adx, ebx   
1657 [0x679]:         movi #2, ebx   
1659 [0x67b]:         movsl #0   
1660 [0x67c]:         movi #33, adx   
1662 [0x67e]:         rmov adx, ebx   
1663 [0x67f]:         movi #0, ebx   
1665 [0x681]:         movsl #0   
1666 [0x682]:         movi #34, adx   
1668 [0x684]:         rmov adx, ebx   
1669 [0x685]:         movi #0, ebx   
1671 [0x687]:         movsl #0   
1672 [0x688]:         movi #35, adx   
1674 [0x68a]:         rmov adx, ebx   
1675 [0x68b]:         movi #0, ebx   
1677 [0x68d]:         movsl #0   
1678 [0x68e]:         movi #36, adx   
1680 [0x690]:         rmov adx, ebx   
1681 [0x691]:         movi #0, ebx   
1683 [0x693]:         movsl #0   
1684 [0x694]:         movi #37, adx   
1686 [0x696]:         rmov adx, ebx   
1687 [0x697]:         movi #2, ebx   
1689 [0x699]:         movsl #0   
1690 [0x69a]:         movi #38, adx   
1692 [0x69c]:         rmov adx, ebx   
1693 [0x69d]:         movi #2, ebx   
1695 [0x69f]:         movsl #0   
1696 [0x6a0]:         movi #39, adx   
1698 [0x6a2]:         rmov adx, ebx   
1699 [0x6a3]:         movi #0, ebx   
1701 [0x6a5]:         movsl #0   
1702 [0x6a6]:         movi #40, adx   
1704 [0x6a8]:         rmov adx, ebx   
1705 [0x6a9]:         movi #2, ebx   
1707 [0x6ab]:         movsl #0   
1708 [0x6ac]:         movi #41, adx   
1710 [0x6ae]:         rmov adx, ebx   
1711 [0x6af]:         movi #2, ebx   
1713 [0x6b1]:         movsl #0   
1714 [0x6b2]:         movi #42, adx   
1716 [0x6b4]:         rmov adx, ebx   
1717 [0x6b5]:         movi #0, ebx   
1719 [0x6b7]:         movsl #0   
1720 [0x6b8]:         movi #43, adx   
1722 [0x6ba]:         rmov adx, ebx   
1723 [0x6bb]:         movi #2, ebx   
1725 [0x6bd]:         movsl #0   
1726 [0x6be]:         movi #44, adx   
1728 [0x6c0]:         rmov adx, ebx   
1729 [0x6c1]:         movi #2, ebx   
1731 [0x6c3]:         movsl #0   
1732 [0x6c4]:         movi #45, adx   
1734 [0x6c6]:         rmov adx, ebx   
1735 [0x6c7]:         movi #0, ebx   
1737 [0x6c9]:         movsl #0   
1738 [0x6ca]:         movi #46, adx   
1740 [0x6cc]:         rmov adx, ebx   
1741 [0x6cd]:         movi #2, ebx   
1743 [0x6cf]:         movsl #0   
1744 [0x6d0]:         movi #47, adx   
1746 [0x6d2]:         rmov adx, ebx   
1747 [0x6d3]:         movi #2, ebx   
1749 [0x6d5]:         movsl #0   
1750 [0x6d6]:         movi #48, adx   
1752 [0x6d8]:         rmov adx, ebx   
1753 [0x6d9]:         movi #2, ebx   
1755 [0x6db]:         movsl #0   
1756 [0x6dc]:         movi #49, adx   
1758 [0x6de]:         rmov adx, ebx   
1759 [0x6df]:         movi #0, ebx   
1761 [0x6e1]:         movsl #0   
1762 [0x6e2]:         movi #50, adx   
1764 [0x6e4]:         rmov adx, ebx   
1765 [0x6e5]:         movi #0, ebx   
1767 [0x6e7]:         movsl #0   
1768 [0x6e8]:         movi #51, adx   
1770 [0x6ea]:         rmov adx, ebx   
1771 [0x6eb]:         movi #0, ebx   
1773 [0x6ed]:         movsl #0   
1774 [0x6ee]:         movi #52, adx   
1776 [0x6f0]:         rmov adx, ebx   
1777 [0x6f1]:         movi #0, ebx   
1779 [0x6f3]:         movsl #0   
1780 [0x6f4]:         movi #53, adx   
1782 [0x6f6]:         rmov adx, ebx   
1783 [0x6f7]:         movi #2, ebx   
1785 [0x6f9]:         movsl #0   
1786 [0x6fa]:         movi #54, adx   
1788 [0x6fc]:         rmov adx, ebx   
1789 [0x6fd]:         movi #2, ebx   
1791 [0x6ff]:         movsl #0   
1792 [0x700]:         movi #55, adx   
1794 [0x702]:         rmov adx, ebx   
1795 [0x703]:         movi #0, ebx   
1797 [0x705]:         movsl #0   
1798 [0x706]:         movi #56, adx   
1800 [0x708]:         rmov adx, ebx   
1801 [0x709]:         movi #2, ebx   
1803 [0x70b]:         movsl #0   
1804 [0x70c]:         movi #57, adx   
1806 [0x70e]:         rmov adx, ebx   
1807 [0x70f]:         movi #2, ebx   
1809 [0x711]:         movsl #0   
1810 [0x712]:         movi #58, adx   
1812 [0x714]:         rmov adx, ebx   
1813 [0x715]:         movi #0, ebx   
1815 [0x717]:         movsl #0   
1816 [0x718]:         movi #59, adx   
1818 [0x71a]:         rmov adx, ebx   
1819 [0x71b]:         movi #2, ebx   
1821 [0x71d]:         movsl #0   
1822 [0x71e]:         movi #60, adx   
1824 [0x720]:         rmov adx, ebx   
1825 [0x721]:         movi #2, ebx   
1827 [0x723]:         movsl #0   
1828 [0x724]:         movi #61, adx   
1830 [0x726]:         rmov adx, ebx   
1831 [0x727]:         movi #0, ebx   
1833 [0x729]:         movsl #0   
1834 [0x72a]:         movi #62, adx   
1836 [0x72c]:         rmov adx, ebx   
1837 [0x72d]:         movi #2, ebx   
1839 [0x72f]:         movsl #0   
1840 [0x730]:         movi #63, adx   
1842 [0x732]:         rmov adx, ebx   
1843 [0x733]:         movi #2, ebx   
1845 [0x735]:         movsl #0   
1846 [0x736]:         movi #64, adx   
1848 [0x738]:         rmov adx, ebx   
1849 [0x739]:         movi #2, ebx   
1851 [0x73b]:         movsl #0   
1852 [0x73c]:         movi #65, adx   
1854 [0x73e]:         rmov adx, ebx   
1855 [0x73f]:         movi #0, ebx   
1857 [0x741]:         movsl #0   
1858 [0x742]:         movi #66, adx   
1860 [0x744]:         rmov adx, ebx   
1861 [0x745]:         movi #0, ebx   
1863 [0x747]:         movsl #0   
1864 [0x748]:         movi #67, adx   
1866 [0x74a]:         rmov adx, ebx   
1867 [0x74b]:         movi #0, ebx   
1869 [0x74d]:         movsl #0   
1870 [0x74e]:         movi #68, adx   
1872 [0x750]:         rmov adx, ebx   
1873 [0x751]:         movi #0, ebx   
1875 [0x753]:         movsl #0   
1876 [0x754]:         movi #69, adx   
1878 [0x756]:         rmov adx, ebx   
1879 [0x757]:         movi #2, ebx   
1881 [0x759]:         movsl #0   
1882 [0x75a]:         movi #70, adx   
1884 [0x75c]:         rmov adx, ebx   
1885 [0x75d]:         movi #2, ebx   
1887 [0x75f]:         movsl #0   
1888 [0x760]:         movi #71, adx   
1890 [0x762]:         rmov adx, ebx   
1891 [0x763]:         movi #0, ebx   
1893 [0x765]:         movsl #0   
1894 [0x766]:         movi #72, adx   
1896 [0x768]:         rmov adx, ebx   
1897 [0x769]:         movi #2, ebx   
1899 [0x76b]:         movsl #0   
1900 [0x76c]:         movi #73, adx   
1902 [0x76e]:         rmov adx, ebx   
1903 [0x76f]:         movi #2, ebx   
1905 [0x771]:         movsl #0   
1906 [0x772]:         movi #74, adx   
1908 [0x774]:         rmov adx, ebx   
1909 [0x775]:         movi #0, ebx   
1911 [0x777]:         movsl #0   
1912 [0x778]:         movi #75, adx   
1914 [0x77a]:         rmov adx, ebx   
1915 [0x77b]:         movi #2, ebx   
1917 [0x77d]:         movsl #0   
1918 [0x77e]:         movi #76, adx   
1920 [0x780]:         rmov adx, ebx   
1921 [0x781]:         movi #2, ebx   
1923 [0x783]:         movsl #0   
1924 [0x784]:         movi #77, adx   
1926 [0x786]:         rmov adx, ebx   
1927 [0x787]:         movi #0, ebx   
1929 [0x789]:         movsl #0   
1930 [0x78a]:         movi #78, adx   
1932 [0x78c]:         rmov adx, ebx   
1933 [0x78d]:         movi #2, ebx   
1935 [0x78f]:         movsl #0   
1936 [0x790]:         movi #79, adx   
1938 [0x792]:         rmov adx, ebx   
1939 [0x793]:         movi #2, ebx   
1941 [0x795]:         movsl #0   
1942 [0x796]:         movi #80, adx   
1944 [0x798]:         rmov adx, ebx   
1945 [0x799]:         movi #2, ebx   
1947 [0x79b]:         movsl #0   
1948 [0x79c]:         movi #81, adx   
1950 [0x79e]:         rmov adx, ebx   
1951 [0x79f]:         movi #0, ebx   
1953 [0x7a1]:         movsl #0   
1954 [0x7a2]:         movi #82, adx   
1956 [0x7a4]:         rmov adx, ebx   
1957 [0x7a5]:         movi #0, ebx   
1959 [0x7a7]:         movsl #0   
1960 [0x7a8]:         movi #83, adx   
1962 [0x7aa]:         rmov adx, ebx   
1963 [0x7ab]:         movi #0, ebx   
1965 [0x7ad]:         movsl #0   
1966 [0x7ae]:         movi #84, adx   
1968 [0x7b0]:         rmov adx, ebx   
1969 [0x7b1]:         movi #0, ebx   
1971 [0x7b3]:         movsl #0   
1972 [0x7b4]:         movi #85, adx   
1974 [0x7b6]:         rmov adx, ebx   
1975 [0x7b7]:         movi #2, ebx   
1977 [0x7b9]:         movsl #0   
1978 [0x7ba]:         movi #86, adx   
1980 [0x7bc]:         rmov adx, ebx   
1981 [0x7bd]:         movi #2, ebx   
1983 [0x7bf]:         movsl #0   
1984 [0x7c0]:         movi #87, adx   
1986 [0x7c2]:         rmov adx, ebx   
1987 [0x7c3]:         movi #0, ebx   
1989 [0x7c5]:         movsl #0   
1990 [0x7c6]:         movi #88, adx   
1992 [0x7c8]:         rmov adx, ebx   
1993 [0x7c9]:         movi #2, ebx   
1995 [0x7cb]:         movsl #0   
1996 [0x7cc]:         movi #89, adx   
1998 [0x7ce]:         rmov adx, ebx   
1999 [0x7cf]:         movi #2, ebx   
2001 [0x7d1]:         movsl #0   
2002 [0x7d2]:         movi #90, adx   
2004 [0x7d4]:         rmov adx, ebx   
2005 [0x7d5]:         movi #0, ebx   
2007 [0x7d7]:         movsl #0   
2008 [0x7d8]:         movi #91, adx   
2010 [0x7da]:         rmov adx, ebx   
2011 [0x7db]:         movi #2, ebx   
2013 [0x7dd]:         movsl #0   
2014 [0x7de]:         movi #92, adx   
2016 [0x7e0]:         rmov adx, ebx   
2017 [0x7e1]:         movi #2, ebx   
2019 [0x7e3]:         movsl #0   
2020 [0x7e4]:         movi #93, adx   
2022 [0x7e6]:         rmov adx, ebx   
2023 [0x7e7]:         movi #0, ebx   
2025 [0x7e9]:         movsl #0   
2026 [0x7ea]:         movi #94, adx   
2028 [0x7ec]:         rmov adx, ebx   
2029 [0x7ed]:         movi #2, ebx   
2031 [0x7ef]:         movsl #0   
2032 [0x7f0]:         movi #95, adx   
2034 [0x7f2]:         rmov adx, ebx   
2035 [0x7f3]:         movi #0, ebx   
2037 [0x7f5]:         movsl #0   
2038 [0x7f6]:         movi #96, adx   
2040 [0x7f8]:         rmov adx, ebx   
2041 [0x7f9]:         movi #2, ebx   
2043 [0x7fb]:         movsl #0   
2044 [0x7fc]:         movi #97, adx   
2046 [0x7fe]:         rmov adx, ebx   
2047 [0x7ff]:         movi #0, ebx   
2049 [0x801]:         movsl #0   
2050 [0x802]:         movi #98, adx   
2052 [0x804]:         rmov adx, ebx   
2053 [0x805]:         movi #0, ebx   
2055 [0x807]:         movsl #0   
2056 [0x808]:         movi #99, adx   
2058 [0x80a]:         rmov adx, ebx   
2059 [0x80b]:         movi #0, ebx   
2061 [0x80d]:         movsl #0   
2062 [0x80e]:         movi #100, adx   
2064 [0x810]:         rmov adx, ebx   
2065 [0x811]:         movi #0, ebx   
2067 [0x813]:         movsl #0   
2068 [0x814]:         movi #101, adx   
2070 [0x816]:         rmov adx, ebx   
2071 [0x817]:         movi #0, ebx   
2073 [0x819]:         movsl #0   
2074 [0x81a]:         movi #102, adx   
2076 [0x81c]:         rmov adx, ebx   
2077 [0x81d]:         movi #0, ebx   
2079 [0x81f]:         movsl #0   
2080 [0x820]:         movi #103, adx   
2082 [0x822]:         rmov adx, ebx   
2083 [0x823]:         movi #0, ebx   
2085 [0x825]:         movsl #0   
2086 [0x826]:         movi #104, adx   
2088 [0x828]:         rmov adx, ebx   
2089 [0x829]:         movi #0, ebx   
2091 [0x82b]:         movsl #0   
2092 [0x82c]:         movi #105, adx   
2094 [0x82e]:         rmov adx, ebx   
2095 [0x82f]:         movi #0, ebx   
2097 [0x831]:         movsl #0   
2098 [0x832]:         movi #106, adx   
2100 [0x834]:         rmov adx, ebx   
2101 [0x835]:         movi #0, ebx   
2103 [0x837]:         movsl #0   
2104 [0x838]:         movi #107, adx   
2106 [0x83a]:         rmov adx, ebx   
2107 [0x83b]:         movi #0, ebx   
2109 [0x83d]:         movsl #0   
2110 [0x83e]:         movi #108, adx   
2112 [0x840]:         rmov adx, ebx   
2113 [0x841]:         movi #0, ebx   
2115 [0x843]:         movsl #0   
2116 [0x844]:         movi #109, adx   
2118 [0x846]:         rmov adx, ebx   
2119 [0x847]:         movi #0, ebx   
2121 [0x849]:         movsl #0   
2122 [0x84a]:         movi #110, adx   
2124 [0x84c]:         rmov adx, ebx   
2125 [0x84d]:         movi #2, ebx   
2127 [0x84f]:         movsl #0   
2128 [0x850]:         movi #111, adx   
2130 [0x852]:         rmov adx, ebx   
2131 [0x853]:         movi #0, ebx   
2133 [0x855]:         movsl #0   
2134 [0x856]:         movi #112, adx   
2136 [0x858]:         rmov adx, ebx   
2137 [0x859]:         movi #2, ebx   
2139 [0x85b]:         movsl #0   
2140 [0x85c]:         movi #113, adx   
2142 [0x85e]:         rmov adx, ebx   
2143 [0x85f]:         movi #2, ebx   
2145 [0x861]:         movsl #0   
2146 [0x862]:         movi #114, adx   
2148 [0x864]:         rmov adx, ebx   
2149 [0x865]:         movi #2, ebx   
2151 [0x867]:         movsl #0   
2152 [0x868]:         movi #115, adx   
2154 [0x86a]:         rmov adx, ebx   
2155 [0x86b]:         movi #2, ebx   
2157 [0x86d]:         movsl #0   
2158 [0x86e]:         movi #116, adx   
2160 [0x870]:         rmov adx, ebx   
2161 [0x871]:         movi #2, ebx   
2163 [0x873]:         movsl #0   
2164 [0x874]:         movi #117, adx   
2166 [0x876]:         rmov adx, ebx   
2167 [0x877]:         movi #2, ebx   
2169 [0x879]:         movsl #0   
2170 [0x87a]:         movi #118, adx   
2172 [0x87c]:         rmov adx, ebx   
2173 [0x87d]:         movi #2, ebx   
2175 [0x87f]:         movsl #0   
2176 [0x880]:         movi #119, adx   
2178 [0x882]:         rmov adx, ebx   
2179 [0x883]:         movi #2, ebx   
2181 [0x885]:         movsl #0   
2182 [0x886]:         movi #120, adx   
2184 [0x888]:         rmov adx, ebx   
2185 [0x889]:         movi #2, ebx   
2187 [0x88b]:         movsl #0   
2188 [0x88c]:         movi #121, adx   
2190 [0x88e]:         rmov adx, ebx   
2191 [0x88f]:         movi #2, ebx   
2193 [0x891]:         movsl #0   
2194 [0x892]:         movi #122, adx   
2196 [0x894]:         rmov adx, ebx   
2197 [0x895]:         movi #2, ebx   
2199 [0x897]:         movsl #0   
2200 [0x898]:         movi #123, adx   
2202 [0x89a]:         rmov adx, ebx   
2203 [0x89b]:         movi #2, ebx   
2205 [0x89d]:         movsl #0   
2206 [0x89e]:         movi #124, adx   
2208 [0x8a0]:         rmov adx, ebx   
2209 [0x8a1]:         movi #2, ebx   
2211 [0x8a3]:         movsl #0   
2212 [0x8a4]:         movi #125, adx   
2214 [0x8a6]:         rmov adx, ebx   
2215 [0x8a7]:         movi #2, ebx   
2217 [0x8a9]:         movsl #0   
2218 [0x8aa]:         movi #126, adx   
2220 [0x8ac]:         rmov adx, ebx   
2221 [0x8ad]:         movi #2, ebx   
2223 [0x8af]:         movsl #0   
2224 [0x8b0]:         movi #127, adx   
2226 [0x8b2]:         rmov adx, ebx   
2227 [0x8b3]:         movi #0, ebx   
2229 [0x8b5]:         movsl #0   
2230 [0x8b6]:         movi #128, adx   
2232 [0x8b8]:         rmov adx, ebx   
2233 [0x8b9]:         movi #0, ebx   
2235 [0x8bb]:         movsl #0   
2236 [0x8bc]:         movi #129, adx   
2238 [0x8be]:         rmov adx, ebx   
2239 [0x8bf]:         movi #0, ebx   
2241 [0x8c1]:         movsl #0   
2242 [0x8c2]:         movi #130, adx   
2244 [0x8c4]:         rmov adx, ebx   
2245 [0x8c5]:         movi #0, ebx   
2247 [0x8c7]:         movsl #0   
2248 [0x8c8]:         movi #131, adx   
2250 [0x8ca]:         rmov adx, ebx   
2251 [0x8cb]:         movi #0, ebx   
2253 [0x8cd]:         movsl #0   
2254 [0x8ce]:         movi #132, adx   
2256 [0x8d0]:         rmov adx, ebx   
2257 [0x8d1]:         movi #0, ebx   
2259 [0x8d3]:         movsl #0   
2260 [0x8d4]:         movi #133, adx   
2262 [0x8d6]:         rmov adx, ebx   
2263 [0x8d7]:         movi #0, ebx   
2265 [0x8d9]:         movsl #0   
2266 [0x8da]:         movi #134, adx   
2268 [0x8dc]:         rmov adx, ebx   
2269 [0x8dd]:         movi #0, ebx   
2271 [0x8df]:         movsl #0   
2272 [0x8e0]:         movi #135, adx   
2274 [0x8e2]:         rmov adx, ebx   
2275 [0x8e3]:         movi #0, ebx   
2277 [0x8e5]:         movsl #0   
2278 [0x8e6]:         movi #136, adx   
2280 [0x8e8]:         rmov adx, ebx   
2281 [0x8e9]:         movi #0, ebx   
2283 [0x8eb]:         movsl #0   
2284 [0x8ec]:         movi #137, adx   
2286 [0x8ee]:         rmov adx, ebx   
2287 [0x8ef]:         movi #0, ebx   
2289 [0x8f1]:         movsl #0   
2290 [0x8f2]:         movi #138, adx   
2292 [0x8f4]:         rmov adx, ebx   
2293 [0x8f5]:         movi #0, ebx   
2295 [0x8f7]:         movsl #0   
2296 [0x8f8]:         movi #139, adx   
2298 [0x8fa]:         rmov adx, ebx   
2299 [0x8fb]:         movi #0, ebx   
2301 [0x8fd]:         movsl #0   
2302 [0x8fe]:         movi #140, adx   
2304 [0x900]:         rmov adx, ebx   
2305 [0x901]:         movi #0, ebx   
2307 [0x903]:         movsl #0   
2308 [0x904]:         movi #141, adx   
2310 [0x906]:         rmov adx, ebx   
2311 [0x907]:         movi #0, ebx   
2313 [0x909]:         movsl #0   
2314 [0x90a]:         movi #142, adx   
2316 [0x90c]:         rmov adx, ebx   
2317 [0x90d]:         movi #0, ebx   
2319 [0x90f]:         movsl #0   
2320 [0x910]:         movi #143, adx   
2322 [0x912]:         rmov adx, ebx   
2323 [0x913]:         movg @108 // @ui.res.drawable#__srt_global   
2324 [0x914]:         movn #4   
2326 [0x916]:         popobj   
2327 [0x917]:         new_class @0 // std#__srt_global   
2328 [0x918]:         swap    
2329 [0x919]:         dup    
2330 [0x91a]:         istore 16   
2332 [0x91c]:         movg @108 // @ui.res.drawable#__srt_global   
2333 [0x91d]:         movn #4   
2335 [0x91f]:         pushobj   
2336 [0x920]:         istore 16   
2338 [0x922]:         movi #9, ebx   
2340 [0x924]:         rstore ebx   
2341 [0x925]:         call @3711 // <ui.support#drawable.drawable>   
2342 [0x926]:         movg @108 // @ui.res.drawable#__srt_global   
2343 [0x927]:         movn #5   
2345 [0x929]:         popobj   
2346 [0x92a]:         movi #117, ebx   
2348 [0x92c]:         newarry ebx: 8   
2349 [0x92d]:         movi #0, ebx   
2351 [0x92f]:         movsl #0   
2352 [0x930]:         movi #0, adx   
2354 [0x932]:         rmov adx, ebx   
2355 [0x933]:         movi #2, ebx   
2357 [0x935]:         movsl #0   
2358 [0x936]:         movi #1, adx   
2360 [0x938]:         rmov adx, ebx   
2361 [0x939]:         movi #2, ebx   
2363 [0x93b]:         movsl #0   
2364 [0x93c]:         movi #2, adx   
2366 [0x93e]:         rmov adx, ebx   
2367 [0x93f]:         movi #2, ebx   
2369 [0x941]:         movsl #0   
2370 [0x942]:         movi #3, adx   
2372 [0x944]:         rmov adx, ebx   
2373 [0x945]:         movi #2, ebx   
2375 [0x947]:         movsl #0   
2376 [0x948]:         movi #4, adx   
2378 [0x94a]:         rmov adx, ebx   
2379 [0x94b]:         movi #2, ebx   
2381 [0x94d]:         movsl #0   
2382 [0x94e]:         movi #5, adx   
2384 [0x950]:         rmov adx, ebx   
2385 [0x951]:         movi #0, ebx   
2387 [0x953]:         movsl #0   
2388 [0x954]:         movi #6, adx   
2390 [0x956]:         rmov adx, ebx   
2391 [0x957]:         movi #0, ebx   
2393 [0x959]:         movsl #0   
2394 [0x95a]:         movi #7, adx   
2396 [0x95c]:         rmov adx, ebx   
2397 [0x95d]:         movi #0, ebx   
2399 [0x95f]:         movsl #0   
2400 [0x960]:         movi #8, adx   
2402 [0x962]:         rmov adx, ebx   
2403 [0x963]:         movi #0, ebx   
2405 [0x965]:         movsl #0   
2406 [0x966]:         movi #9, adx   
2408 [0x968]:         rmov adx, ebx   
2409 [0x969]:         movi #0, ebx   
2411 [0x96b]:         movsl #0   
2412 [0x96c]:         movi #10, adx   
2414 [0x96e]:         rmov adx, ebx   
2415 [0x96f]:         movi #0, ebx   
2417 [0x971]:         movsl #0   
2418 [0x972]:         movi #11, adx   
2420 [0x974]:         rmov adx, ebx   
2421 [0x975]:         movi #0, ebx   
2423 [0x977]:         movsl #0   
2424 [0x978]:         movi #12, adx   
2426 [0x97a]:         rmov adx, ebx   
2427 [0x97b]:         movi #0, ebx   
2429 [0x97d]:         movsl #0   
2430 [0x97e]:         movi #13, adx   
2432 [0x980]:         rmov adx, ebx   
2433 [0x981]:         movi #2, ebx   
2435 [0x983]:         movsl #0   
2436 [0x984]:         movi #14, adx   
2438 [0x986]:         rmov adx, ebx   
2439 [0x987]:         movi #0, ebx   
2441 [0x989]:         movsl #0   
2442 [0x98a]:         movi #15, adx   
2444 [0x98c]:         rmov adx, ebx   
2445 [0x98d]:         movi #2, ebx   
2447 [0x98f]:         movsl #0   
2448 [0x990]:         movi #16, adx   
2450 [0x992]:         rmov adx, ebx   
2451 [0x993]:         movi #0, ebx   
2453 [0x995]:         movsl #0   
2454 [0x996]:         movi #17, adx   
2456 [0x998]:         rmov adx, ebx   
2457 [0x999]:         movi #2, ebx   
2459 [0x99b]:         movsl #0   
2460 [0x99c]:         movi #18, adx   
2462 [0x99e]:         rmov adx, ebx   
2463 [0x99f]:         movi #0, ebx   
2465 [0x9a1]:         movsl #0   
2466 [0x9a2]:         movi #19, adx   
2468 [0x9a4]:         rmov adx, ebx   
2469 [0x9a5]:         movi #0, ebx   
2471 [0x9a7]:         movsl #0   
2472 [0x9a8]:         movi #20, adx   
2474 [0x9aa]:         rmov adx, ebx   
2475 [0x9ab]:         movi #0, ebx   
2477 [0x9ad]:         movsl #0   
2478 [0x9ae]:         movi #21, adx   
2480 [0x9b0]:         rmov adx, ebx   
2481 [0x9b1]:         movi #0, ebx   
2483 [0x9b3]:         movsl #0   
2484 [0x9b4]:         movi #22, adx   
2486 [0x9b6]:         rmov adx, ebx   
2487 [0x9b7]:         movi #2, ebx   
2489 [0x9b9]:         movsl #0   
2490 [0x9ba]:         movi #23, adx   
2492 [0x9bc]:         rmov adx, ebx   
2493 [0x9bd]:         movi #0, ebx   
2495 [0x9bf]:         movsl #0   
2496 [0x9c0]:         movi #24, adx   
2498 [0x9c2]:         rmov adx, ebx   
2499 [0x9c3]:         movi #2, ebx   
2501 [0x9c5]:         movsl #0   
2502 [0x9c6]:         movi #25, adx   
2504 [0x9c8]:         rmov adx, ebx   
2505 [0x9c9]:         movi #0, ebx   
2507 [0x9cb]:         movsl #0   
2508 [0x9cc]:         movi #26, adx   
2510 [0x9ce]:         rmov adx, ebx   
2511 [0x9cf]:         movi #0, ebx   
2513 [0x9d1]:         movsl #0   
2514 [0x9d2]:         movi #27, adx   
2516 [0x9d4]:         rmov adx, ebx   
2517 [0x9d5]:         movi #2, ebx   
2519 [0x9d7]:         movsl #0   
2520 [0x9d8]:         movi #28, adx   
2522 [0x9da]:         rmov adx, ebx   
2523 [0x9db]:         movi #2, ebx   
2525 [0x9dd]:         movsl #0   
2526 [0x9de]:         movi #29, adx   
2528 [0x9e0]:         rmov adx, ebx   
2529 [0x9e1]:         movi #2, ebx   
2531 [0x9e3]:         movsl #0   
2532 [0x9e4]:         movi #30, adx   
2534 [0x9e6]:         rmov adx, ebx   
2535 [0x9e7]:         movi #0, ebx   
2537 [0x9e9]:         movsl #0   
2538 [0x9ea]:         movi #31, adx   
2540 [0x9ec]:         rmov adx, ebx   
2541 [0x9ed]:         movi #0, ebx   
2543 [0x9ef]:         movsl #0   
2544 [0x9f0]:         movi #32, adx   
2546 [0x9f2]:         rmov adx, ebx   
2547 [0x9f3]:         movi #0, ebx   
2549 [0x9f5]:         movsl #0   
2550 [0x9f6]:         movi #33, adx   
2552 [0x9f8]:         rmov adx, ebx   
2553 [0x9f9]:         movi #0, ebx   
2555 [0x9fb]:         movsl #0   
2556 [0x9fc]:         movi #34, adx   
2558 [0x9fe]:         rmov adx, ebx   
2559 [0x9ff]:         movi #0, ebx   
2561 [0xa01]:         movsl #0   
2562 [0xa02]:         movi #35, adx   
2564 [0xa04]:         rmov adx, ebx   
2565 [0xa05]:         movi #0, ebx   
2567 [0xa07]:         movsl #0   
2568 [0xa08]:         movi #36, adx   
2570 [0xa0a]:         rmov adx, ebx   
2571 [0xa0b]:         movi #2, ebx   
2573 [0xa0d]:         movsl #0   
2574 [0xa0e]:         movi #37, adx   
2576 [0xa10]:         rmov adx, ebx   
2577 [0xa11]:         movi #0, ebx   
2579 [0xa13]:         movsl #0   
2580 [0xa14]:         movi #38, adx   
2582 [0xa16]:         rmov adx, ebx   
2583 [0xa17]:         movi #0, ebx   
2585 [0xa19]:         movsl #0   
2586 [0xa1a]:         movi #39, adx   
2588 [0xa1c]:         rmov adx, ebx   
2589 [0xa1d]:         movi #0, ebx   
2591 [0xa1f]:         movsl #0   
2592 [0xa20]:         movi #40, adx   
2594 [0xa22]:         rmov adx, ebx   
2595 [0xa23]:         movi #0, ebx   
2597 [0xa25]:         movsl #0   
2598 [0xa26]:         movi #41, adx   
2600 [0xa28]:         rmov adx, ebx   
2601 [0xa29]:         movi #2, ebx   
2603 [0xa2b]:         movsl #0   
2604 [0xa2c]:         movi #42, adx   
2606 [0xa2e]:         rmov adx, ebx   
2607 [0xa2f]:         movi #0, ebx   
2609 [0xa31]:         movsl #0   
2610 [0xa32]:         movi #43, adx   
2612 [0xa34]:         rmov adx, ebx   
2613 [0xa35]:         movi #0, ebx   
2615 [0xa37]:         movsl #0   
2616 [0xa38]:         movi #44, adx   
2618 [0xa3a]:         rmov adx, ebx   
2619 [0xa3b]:         movi #0, ebx   
2621 [0xa3d]:         movsl #0   
2622 [0xa3e]:         movi #45, adx   
2624 [0xa40]:         rmov adx, ebx   
2625 [0xa41]:         movi #0, ebx   
2627 [0xa43]:         movsl #0   
2628 [0xa44]:         movi #46, adx   
2630 [0xa46]:         rmov adx, ebx   
2631 [0xa47]:         movi #0, ebx   
2633 [0xa49]:         movsl #0   
2634 [0xa4a]:         movi #47, adx   
2636 [0xa4c]:         rmov adx, ebx   
2637 [0xa4d]:         movi #0, ebx   
2639 [0xa4f]:         movsl #0   
2640 [0xa50]:         movi #48, adx   
2642 [0xa52]:         rmov adx, ebx   
2643 [0xa53]:         movi #2, ebx   
2645 [0xa55]:         movsl #0   
2646 [0xa56]:         movi #49, adx   
2648 [0xa58]:         rmov adx, ebx   
2649 [0xa59]:         movi #0, ebx   
2651 [0xa5b]:         movsl #0   
2652 [0xa5c]:         movi #50, adx   
2654 [0xa5e]:         rmov adx, ebx   
2655 [0xa5f]:         movi #2, ebx   
2657 [0xa61]:         movsl #0   
2658 [0xa62]:         movi #51, adx   
2660 [0xa64]:         rmov adx, ebx   
2661 [0xa65]:         movi #0, ebx   
2663 [0xa67]:         movsl #0   
2664 [0xa68]:         movi #52, adx   
2666 [0xa6a]:         rmov adx, ebx   
2667 [0xa6b]:         movi #0, ebx   
2669 [0xa6d]:         movsl #0   
2670 [0xa6e]:         movi #53, adx   
2672 [0xa70]:         rmov adx, ebx   
2673 [0xa71]:         movi #0, ebx   
2675 [0xa73]:         movsl #0   
2676 [0xa74]:         movi #54, adx   
2678 [0xa76]:         rmov adx, ebx   
2679 [0xa77]:         movi #2, ebx   
2681 [0xa79]:         movsl #0   
2682 [0xa7a]:         movi #55, adx   
2684 [0xa7c]:         rmov adx, ebx   
2685 [0xa7d]:         movi #0, ebx   
2687 [0xa7f]:         movsl #0   
2688 [0xa80]:         movi #56, adx   
2690 [0xa82]:         rmov adx, ebx   
2691 [0xa83]:         movi #0, ebx   
2693 [0xa85]:         movsl #0   
2694 [0xa86]:         movi #57, adx   
2696 [0xa88]:         rmov adx, ebx   
2697 [0xa89]:         movi #0, ebx   
2699 [0xa8b]:         movsl #0   
2700 [0xa8c]:         movi #58, adx   
2702 [0xa8e]:         rmov adx, ebx   
2703 [0xa8f]:         movi #0, ebx   
2705 [0xa91]:         movsl #0   
2706 [0xa92]:         movi #59, adx   
2708 [0xa94]:         rmov adx, ebx   
2709 [0xa95]:         movi #0, ebx   
2711 [0xa97]:         movsl #0   
2712 [0xa98]:         movi #60, adx   
2714 [0xa9a]:         rmov adx, ebx   
2715 [0xa9b]:         movi #2, ebx   
2717 [0xa9d]:         movsl #0   
2718 [0xa9e]:         movi #61, adx   
2720 [0xaa0]:         rmov adx, ebx   
2721 [0xaa1]:         movi #0, ebx   
2723 [0xaa3]:         movsl #0   
2724 [0xaa4]:         movi #62, adx   
2726 [0xaa6]:         rmov adx, ebx   
2727 [0xaa7]:         movi #2, ebx   
2729 [0xaa9]:         movsl #0   
2730 [0xaaa]:         movi #63, adx   
2732 [0xaac]:         rmov adx, ebx   
2733 [0xaad]:         movi #0, ebx   
2735 [0xaaf]:         movsl #0   
2736 [0xab0]:         movi #64, adx   
2738 [0xab2]:         rmov adx, ebx   
2739 [0xab3]:         movi #0, ebx   
2741 [0xab5]:         movsl #0   
2742 [0xab6]:         movi #65, adx   
2744 [0xab8]:         rmov adx, ebx   
2745 [0xab9]:         movi #0, ebx   
2747 [0xabb]:         movsl #0   
2748 [0xabc]:         movi #66, adx   
2750 [0xabe]:         rmov adx, ebx   
2751 [0xabf]:         movi #0, ebx   
2753 [0xac1]:         movsl #0   
2754 [0xac2]:         movi #67, adx   
2756 [0xac4]:         rmov adx, ebx   
2757 [0xac5]:         movi #2, ebx   
2759 [0xac7]:         movsl #0   
2760 [0xac8]:         movi #68, adx   
2762 [0xaca]:         rmov adx, ebx   
2763 [0xacb]:         movi #0, ebx   
2765 [0xacd]:         movsl #0   
2766 [0xace]:         movi #69, adx   
2768 [0xad0]:         rmov adx, ebx   
2769 [0xad1]:         movi #0, ebx   
2771 [0xad3]:         movsl #0   
2772 [0xad4]:         movi #70, adx   
2774 [0xad6]:         rmov adx, ebx   
2775 [0xad7]:         movi #0, ebx   
2777 [0xad9]:         movsl #0   
2778 [0xada]:         movi #71, adx   
2780 [0xadc]:         rmov adx, ebx   
2781 [0xadd]:         movi #2, ebx   
2783 [0xadf]:         movsl #0   
2784 [0xae0]:         movi #72, adx   
2786 [0xae2]:         rmov adx, ebx   
2787 [0xae3]:         movi #0, ebx   
2789 [0xae5]:         movsl #0   
2790 [0xae6]:         movi #73, adx   
2792 [0xae8]:         rmov adx, ebx   
2793 [0xae9]:         movi #2, ebx   
2795 [0xaeb]:         movsl #0   
2796 [0xaec]:         movi #74, adx   
2798 [0xaee]:         rmov adx, ebx   
2799 [0xaef]:         movi #0, ebx   
2801 [0xaf1]:         movsl #0   
2802 [0xaf2]:         movi #75, adx   
2804 [0xaf4]:         rmov adx, ebx   
2805 [0xaf5]:         movi #2, ebx   
2807 [0xaf7]:         movsl #0   
2808 [0xaf8]:         movi #76, adx   
2810 [0xafa]:         rmov adx, ebx   
2811 [0xafb]:         movi #0, ebx   
2813 [0xafd]:         movsl #0   
2814 [0xafe]:         movi #77, adx   
2816 [0xb00]:         rmov adx, ebx   
2817 [0xb01]:         movi #0, ebx   
2819 [0xb03]:         movsl #0   
2820 [0xb04]:         movi #78, adx   
2822 [0xb06]:         rmov adx, ebx   
2823 [0xb07]:         movi #0, ebx   
2825 [0xb09]:         movsl #0   
2826 [0xb0a]:         movi #79, adx   
2828 [0xb0c]:         rmov adx, ebx   
2829 [0xb0d]:         movi #0, ebx   
2831 [0xb0f]:         movsl #0   
2832 [0xb10]:         movi #80, adx   
2834 [0xb12]:         rmov adx, ebx   
2835 [0xb13]:         movi #2, ebx   
2837 [0xb15]:         movsl #0   
2838 [0xb16]:         movi #81, adx   
2840 [0xb18]:         rmov adx, ebx   
2841 [0xb19]:         movi #0, ebx   
2843 [0xb1b]:         movsl #0   
2844 [0xb1c]:         movi #82, adx   
2846 [0xb1e]:         rmov adx, ebx   
2847 [0xb1f]:         movi #2, ebx   
2849 [0xb21]:         movsl #0   
2850 [0xb22]:         movi #83, adx   
2852 [0xb24]:         rmov adx, ebx   
2853 [0xb25]:         movi #0, ebx   
2855 [0xb27]:         movsl #0   
2856 [0xb28]:         movi #84, adx   
2858 [0xb2a]:         rmov adx, ebx   
2859 [0xb2b]:         movi #2, ebx   
2861 [0xb2d]:         movsl #0   
2862 [0xb2e]:         movi #85, adx   
2864 [0xb30]:         rmov adx, ebx   
2865 [0xb31]:         movi #0, ebx   
2867 [0xb33]:         movsl #0   
2868 [0xb34]:         movi #86, adx   
2870 [0xb36]:         rmov adx, ebx   
2871 [0xb37]:         movi #2, ebx   
2873 [0xb39]:         movsl #0   
2874 [0xb3a]:         movi #87, adx   
2876 [0xb3c]:         rmov adx, ebx   
2877 [0xb3d]:         movi #0, ebx   
2879 [0xb3f]:         movsl #0   
2880 [0xb40]:         movi #88, adx   
2882 [0xb42]:         rmov adx, ebx   
2883 [0xb43]:         movi #2, ebx   
2885 [0xb45]:         movsl #0   
2886 [0xb46]:         movi #89, adx   
2888 [0xb48]:         rmov adx, ebx   
2889 [0xb49]:         movi #0, ebx   
2891 [0xb4b]:         movsl #0   
2892 [0xb4c]:         movi #90, adx   
2894 [0xb4e]:         rmov adx, ebx   
2895 [0xb4f]:         movi #0, ebx   
2897 [0xb51]:         movsl #0   
2898 [0xb52]:         movi #91, adx   
2900 [0xb54]:         rmov adx, ebx   
2901 [0xb55]:         movi #0, ebx   
2903 [0xb57]:         movsl #0   
2904 [0xb58]:         movi #92, adx   
2906 [0xb5a]:         rmov adx, ebx   
2907 [0xb5b]:         movi #0, ebx   
2909 [0xb5d]:         movsl #0   
2910 [0xb5e]:         movi #93, adx   
2912 [0xb60]:         rmov adx, ebx   
2913 [0xb61]:         movi #2, ebx   
2915 [0xb63]:         movsl #0   
2916 [0xb64]:         movi #94, adx   
2918 [0xb66]:         rmov adx, ebx   
2919 [0xb67]:         movi #0, ebx   
2921 [0xb69]:         movsl #0   
2922 [0xb6a]:         movi #95, adx   
2924 [0xb6c]:         rmov adx, ebx   
2925 [0xb6d]:         movi #2, ebx   
2927 [0xb6f]:         movsl #0   
2928 [0xb70]:         movi #96, adx   
2930 [0xb72]:         rmov adx, ebx   
2931 [0xb73]:         movi #0, ebx   
2933 [0xb75]:         movsl #0   
2934 [0xb76]:         movi #97, adx   
2936 [0xb78]:         rmov adx, ebx   
2937 [0xb79]:         movi #2, ebx   
2939 [0xb7b]:         movsl #0   
2940 [0xb7c]:         movi #98, adx   
2942 [0xb7e]:         rmov adx, ebx   
2943 [0xb7f]:         movi #0, ebx   
2945 [0xb81]:         movsl #0   
2946 [0xb82]:         movi #99, adx   
2948 [0xb84]:         rmov adx, ebx   
2949 [0xb85]:         movi #2, ebx   
2951 [0xb87]:         movsl #0   
2952 [0xb88]:         movi #100, adx   
2954 [0xb8a]:         rmov adx, ebx   
2955 [0xb8b]:         movi #0, ebx   
2957 [0xb8d]:         movsl #0   
2958 [0xb8e]:         movi #101, adx   
2960 [0xb90]:         rmov adx, ebx   
2961 [0xb91]:         movi #2, ebx   
2963 [0xb93]:         movsl #0   
2964 [0xb94]:         movi #102, adx   
2966 [0xb96]:         rmov adx, ebx   
2967 [0xb97]:         movi #0, ebx   
2969 [0xb99]:         movsl #0   
2970 [0xb9a]:         movi #103, adx   
2972 [0xb9c]:         rmov adx, ebx   
2973 [0xb9d]:         movi #0, ebx   
2975 [0xb9f]:         movsl #0   
2976 [0xba0]:         movi #104, adx   
2978 [0xba2]:         rmov adx, ebx   
2979 [0xba3]:         movi #0, ebx   
2981 [0xba5]:         movsl #0   
2982 [0xba6]:         movi #105, adx   
2984 [0xba8]:         rmov adx, ebx   
2985 [0xba9]:         movi #0, ebx   
2987 [0xbab]:         movsl #0   
2988 [0xbac]:         movi #106, adx   
2990 [0xbae]:         rmov adx, ebx   
2991 [0xbaf]:         movi #2, ebx   
2993 [0xbb1]:         movsl #0   
2994 [0xbb2]:         movi #107, adx   
2996 [0xbb4]:         rmov adx, ebx   
2997 [0xbb5]:         movi #0, ebx   
2999 [0xbb7]:         movsl #0   
3000 [0xbb8]:         movi #108, adx   
3002 [0xbba]:         rmov adx, ebx   
3003 [0xbbb]:         movi #2, ebx   
3005 [0xbbd]:         movsl #0   
3006 [0xbbe]:         movi #109, adx   
3008 [0xbc0]:         rmov adx, ebx   
3009 [0xbc1]:         movi #0, ebx   
3011 [0xbc3]:         movsl #0   
3012 [0xbc4]:         movi #110, adx   
3014 [0xbc6]:         rmov adx, ebx   
3015 [0xbc7]:         movi #2, ebx   
3017 [0xbc9]:         movsl #0   
3018 [0xbca]:         movi #111, adx   
3020 [0xbcc]:         rmov adx, ebx   
3021 [0xbcd]:         movi #0, ebx   
3023 [0xbcf]:         movsl #0   
3024 [0xbd0]:         movi #112, adx   
3026 [0xbd2]:         rmov adx, ebx   
3027 [0xbd3]:         movi #2, ebx   
3029 [0xbd5]:         movsl #0   
3030 [0xbd6]:         movi #113, adx   
3032 [0xbd8]:         rmov adx, ebx   
3033 [0xbd9]:         movi #0, ebx   
3035 [0xbdb]:         movsl #0   
3036 [0xbdc]:         movi #114, adx   
3038 [0xbde]:         rmov adx, ebx   
3039 [0xbdf]:         movi #2, ebx   
3041 [0xbe1]:         movsl #0   
3042 [0xbe2]:         movi #115, adx   
3044 [0xbe4]:         rmov adx, ebx   
3045 [0xbe5]:         movi #0, ebx   
3047 [0xbe7]:         movsl #0   
3048 [0xbe8]:         movi #116, adx   
3050 [0xbea]:         rmov adx, ebx   
3051 [0xbeb]:         movg @108 // @ui.res.drawable#__srt_global   
3052 [0xbec]:         movn #6   
3054 [0xbee]:         popobj   
3055 [0xbef]:         new_class @0 // std#__srt_global   
3056 [0xbf0]:         swap    
3057 [0xbf1]:         dup    
3058 [0xbf2]:         istore 5   
3060 [0xbf4]:         movg @108 // @ui.res.drawable#__srt_global   
3061 [0xbf5]:         movn #6   
3063 [0xbf7]:         pushobj   
3064 [0xbf8]:         istore 13   
3066 [0xbfa]:         movi #9, ebx   
3068 [0xbfc]:         rstore ebx   
3069 [0xbfd]:         call @3711 // <ui.support#drawable.drawable>   
3070 [0xbfe]:         movg @108 // @ui.res.drawable#__srt_global   
3071 [0xbff]:         movn #7   
3073 [0xc01]:         popobj   
3074 [0xc02]:         movi #117, ebx   
3076 [0xc04]:         newarry ebx: 8   
3077 [0xc05]:         movi #0, ebx   
3079 [0xc07]:         movsl #0   
3080 [0xc08]:         movi #0, adx   
3082 [0xc0a]:         rmov adx, ebx   
3083 [0xc0b]:         movi #2, ebx   
3085 [0xc0d]:         movsl #0   
3086 [0xc0e]:         movi #1, adx   
3088 [0xc10]:         rmov adx, ebx   
3089 [0xc11]:         movi #2, ebx   
3091 [0xc13]:         movsl #0   
3092 [0xc14]:         movi #2, adx   
3094 [0xc16]:         rmov adx, ebx   
3095 [0xc17]:         movi #2, ebx   
3097 [0xc19]:         movsl #0   
3098 [0xc1a]:         movi #3, adx   
3100 [0xc1c]:         rmov adx, ebx   
3101 [0xc1d]:         movi #2, ebx   
3103 [0xc1f]:         movsl #0   
3104 [0xc20]:         movi #4, adx   
3106 [0xc22]:         rmov adx, ebx   
3107 [0xc23]:         movi #2, ebx   
3109 [0xc25]:         movsl #0   
3110 [0xc26]:         movi #5, adx   
3112 [0xc28]:         rmov adx, ebx   
3113 [0xc29]:         movi #0, ebx   
3115 [0xc2b]:         movsl #0   
3116 [0xc2c]:         movi #6, adx   
3118 [0xc2e]:         rmov adx, ebx   
3119 [0xc2f]:         movi #0, ebx   
3121 [0xc31]:         movsl #0   
3122 [0xc32]:         movi #7, adx   
3124 [0xc34]:         rmov adx, ebx   
3125 [0xc35]:         movi #0, ebx   
3127 [0xc37]:         movsl #0   
3128 [0xc38]:         movi #8, adx   
3130 [0xc3a]:         rmov adx, ebx   
3131 [0xc3b]:         movi #0, ebx   
3133 [0xc3d]:         movsl #0   
3134 [0xc3e]:         movi #9, adx   
3136 [0xc40]:         rmov adx, ebx   
3137 [0xc41]:         movi #0, ebx   
3139 [0xc43]:         movsl #0   
3140 [0xc44]:         movi #10, adx   
3142 [0xc46]:         rmov adx, ebx   
3143 [0xc47]:         movi #0, ebx   
3145 [0xc49]:         movsl #0   
3146 [0xc4a]:         movi #11, adx   
3148 [0xc4c]:         rmov adx, ebx   
3149 [0xc4d]:         movi #0, ebx   
3151 [0xc4f]:         movsl #0   
3152 [0xc50]:         movi #12, adx   
3154 [0xc52]:         rmov adx, ebx   
3155 [0xc53]:         movi #0, ebx   
3157 [0xc55]:         movsl #0   
3158 [0xc56]:         movi #13, adx   
3160 [0xc58]:         rmov adx, ebx   
3161 [0xc59]:         movi #2, ebx   
3163 [0xc5b]:         movsl #0   
3164 [0xc5c]:         movi #14, adx   
3166 [0xc5e]:         rmov adx, ebx   
3167 [0xc5f]:         movi #0, ebx   
3169 [0xc61]:         movsl #0   
3170 [0xc62]:         movi #15, adx   
3172 [0xc64]:         rmov adx, ebx   
3173 [0xc65]:         movi #2, ebx   
3175 [0xc67]:         movsl #0   
3176 [0xc68]:         movi #16, adx   
3178 [0xc6a]:         rmov adx, ebx   
3179 [0xc6b]:         movi #0, ebx   
3181 [0xc6d]:         movsl #0   
3182 [0xc6e]:         movi #17, adx   
3184 [0xc70]:         rmov adx, ebx   
3185 [0xc71]:         movi #2, ebx   
3187 [0xc73]:         movsl #0   
3188 [0xc74]:         movi #18, adx   
3190 [0xc76]:         rmov adx, ebx   
3191 [0xc77]:         movi #0, ebx   
3193 [0xc79]:         movsl #0   
3194 [0xc7a]:         movi #19, adx   
3196 [0xc7c]:         rmov adx, ebx   
3197 [0xc7d]:         movi #0, ebx   
3199 [0xc7f]:         movsl #0   
3200 [0xc80]:         movi #20, adx   
3202 [0xc82]:         rmov adx, ebx   
3203 [0xc83]:         movi #0, ebx   
3205 [0xc85]:         movsl #0   
3206 [0xc86]:         movi #21, adx   
3208 [0xc88]:         rmov adx, ebx   
3209 [0xc89]:         movi #0, ebx   
3211 [0xc8b]:         movsl #0   
3212 [0xc8c]:         movi #22, adx   
3214 [0xc8e]:         rmov adx, ebx   
3215 [0xc8f]:         movi #0, ebx   
3217 [0xc91]:         movsl #0   
3218 [0xc92]:         movi #23, adx   
3220 [0xc94]:         rmov adx, ebx   
3221 [0xc95]:         movi #0, ebx   
3223 [0xc97]:         movsl #0   
3224 [0xc98]:         movi #24, adx   
3226 [0xc9a]:         rmov adx, ebx   
3227 [0xc9b]:         movi #0, ebx   
3229 [0xc9d]:         movsl #0   
3230 [0xc9e]:         movi #25, adx   
3232 [0xca0]:         rmov adx, ebx   
3233 [0xca1]:         movi #0, ebx   
3235 [0xca3]:         movsl #0   
3236 [0xca4]:         movi #26, adx   
3238 [0xca6]:         rmov adx, ebx   
3239 [0xca7]:         movi #0, ebx   
3241 [0xca9]:         movsl #0   
3242 [0xcaa]:         movi #27, adx   
3244 [0xcac]:         rmov adx, ebx   
3245 [0xcad]:         movi #2, ebx   
3247 [0xcaf]:         movsl #0   
3248 [0xcb0]:         movi #28, adx   
3250 [0xcb2]:         rmov adx, ebx   
3251 [0xcb3]:         movi #2, ebx   
3253 [0xcb5]:         movsl #0   
3254 [0xcb6]:         movi #29, adx   
3256 [0xcb8]:         rmov adx, ebx   
3257 [0xcb9]:         movi #2, ebx   
3259 [0xcbb]:         movsl #0   
3260 [0xcbc]:         movi #30, adx   
3262 [0xcbe]:         rmov adx, ebx   
3263 [0xcbf]:         movi #0, ebx   
3265 [0xcc1]:         movsl #0   
3266 [0xcc2]:         movi #31, adx   
3268 [0xcc4]:         rmov adx, ebx   
3269 [0xcc5]:         movi #0, ebx   
3271 [0xcc7]:         movsl #0   
3272 [0xcc8]:         movi #32, adx   
3274 [0xcca]:         rmov adx, ebx   
3275 [0xccb]:         movi #0, ebx   
3277 [0xccd]:         movsl #0   
3278 [0xcce]:         movi #33, adx   
3280 [0xcd0]:         rmov adx, ebx   
3281 [0xcd1]:         movi #0, ebx   
3283 [0xcd3]:         movsl #0   
3284 [0xcd4]:         movi #34, adx   
3286 [0xcd6]:         rmov adx, ebx   
3287 [0xcd7]:         movi #0, ebx   
3289 [0xcd9]:         movsl #0   
3290 [0xcda]:         movi #35, adx   
3292 [0xcdc]:         rmov adx, ebx   
3293 [0xcdd]:         movi #0, ebx   
3295 [0xcdf]:         movsl #0   
3296 [0xce0]:         movi #36, adx   
3298 [0xce2]:         rmov adx, ebx   
3299 [0xce3]:         movi #2, ebx   
3301 [0xce5]:         movsl #0   
3302 [0xce6]:         movi #37, adx   
3304 [0xce8]:         rmov adx, ebx   
3305 [0xce9]:         movi #0, ebx   
3307 [0xceb]:         movsl #0   
3308 [0xcec]:         movi #38, adx   
3310 [0xcee]:         rmov adx, ebx   
3311 [0xcef]:         movi #0, ebx   
3313 [0xcf1]:         movsl #0   
3314 [0xcf2]:         movi #39, adx   
3316 [0xcf4]:         rmov adx, ebx   
3317 [0xcf5]:         movi #0, ebx   
3319 [0xcf7]:         movsl #0   
3320 [0xcf8]:         movi #40, adx   
3322 [0xcfa]:         rmov adx, ebx   
3323 [0xcfb]:         movi #0, ebx   
3325 [0xcfd]:         movsl #0   
3326 [0xcfe]:         movi #41, adx   
3328 [0xd00]:         rmov adx, ebx   
3329 [0xd01]:         movi #2, ebx   
3331 [0xd03]:         movsl #0   
3332 [0xd04]:         movi #42, adx   
3334 [0xd06]:         rmov adx, ebx   
3335 [0xd07]:         movi #0, ebx   
3337 [0xd09]:         movsl #0   
3338 [0xd0a]:         movi #43, adx   
3340 [0xd0c]:         rmov adx, ebx   
3341 [0xd0d]:         movi #0, ebx   
3343 [0xd0f]:         movsl #0   
3344 [0xd10]:         movi #44, adx   
3346 [0xd12]:         rmov adx, ebx   
3347 [0xd13]:         movi #0, ebx   
3349 [0xd15]:         movsl #0   
3350 [0xd16]:         movi #45, adx   
3352 [0xd18]:         rmov adx, ebx   
3353 [0xd19]:         movi #0, ebx   
3355 [0xd1b]:         movsl #0   
3356 [0xd1c]:         movi #46, adx   
3358 [0xd1e]:         rmov adx, ebx   
3359 [0xd1f]:         movi #0, ebx   
3361 [0xd21]:         movsl #0   
3362 [0xd22]:         movi #47, adx   
3364 [0xd24]:         rmov adx, ebx   
3365 [0xd25]:         movi #0, ebx   
3367 [0xd27]:         movsl #0   
3368 [0xd28]:         movi #48, adx   
3370 [0xd2a]:         rmov adx, ebx   
3371 [0xd2b]:         movi #0, ebx   
3373 [0xd2d]:         movsl #0   
3374 [0xd2e]:         movi #49, adx   
3376 [0xd30]:         rmov adx, ebx   
3377 [0xd31]:         movi #2, ebx   
3379 [0xd33]:         movsl #0   
3380 [0xd34]:         movi #50, adx   
3382 [0xd36]:         rmov adx, ebx   
3383 [0xd37]:         movi #0, ebx   
3385 [0xd39]:         movsl #0   
3386 [0xd3a]:         movi #51, adx   
3388 [0xd3c]:         rmov adx, ebx   
3389 [0xd3d]:         movi #0, ebx   
3391 [0xd3f]:         movsl #0   
3392 [0xd40]:         movi #52, adx   
3394 [0xd42]:         rmov adx, ebx   
3395 [0xd43]:         movi #0, ebx   
3397 [0xd45]:         movsl #0   
3398 [0xd46]:         movi #53, adx   
3400 [0xd48]:         rmov adx, ebx   
3401 [0xd49]:         movi #0, ebx   
3403 [0xd4b]:         movsl #0   
3404 [0xd4c]:         movi #54, adx   
3406 [0xd4e]:         rmov adx, ebx   
3407 [0xd4f]:         movi #2, ebx   
3409 [0xd51]:         movsl #0   
3410 [0xd52]:         movi #55, adx   
3412 [0xd54]:         rmov adx, ebx   
3413 [0xd55]:         movi #0, ebx   
3415 [0xd57]:         movsl #0   
3416 [0xd58]:         movi #56, adx   
3418 [0xd5a]:         rmov adx, ebx   
3419 [0xd5b]:         movi #0, ebx   
3421 [0xd5d]:         movsl #0   
3422 [0xd5e]:         movi #57, adx   
3424 [0xd60]:         rmov adx, ebx   
3425 [0xd61]:         movi #0, ebx   
3427 [0xd63]:         movsl #0   
3428 [0xd64]:         movi #58, adx   
3430 [0xd66]:         rmov adx, ebx   
3431 [0xd67]:         movi #0, ebx   
3433 [0xd69]:         movsl #0   
3434 [0xd6a]:         movi #59, adx   
3436 [0xd6c]:         rmov adx, ebx   
3437 [0xd6d]:         movi #0, ebx   
3439 [0xd6f]:         movsl #0   
3440 [0xd70]:         movi #60, adx   
3442 [0xd72]:         rmov adx, ebx   
3443 [0xd73]:         movi #2, ebx   
3445 [0xd75]:         movsl #0   
3446 [0xd76]:         movi #61, adx   
3448 [0xd78]:         rmov adx, ebx   
3449 [0xd79]:         movi #0, ebx   
3451 [0xd7b]:         movsl #0   
3452 [0xd7c]:         movi #62, adx   
3454 [0xd7e]:         rmov adx, ebx   
3455 [0xd7f]:         movi #2, ebx   
3457 [0xd81]:         movsl #0   
3458 [0xd82]:         movi #63, adx   
3460 [0xd84]:         rmov adx, ebx   
3461 [0xd85]:         movi #0, ebx   
3463 [0xd87]:         movsl #0   
3464 [0xd88]:         movi #64, adx   
3466 [0xd8a]:         rmov adx, ebx   
3467 [0xd8b]:         movi #0, ebx   
3469 [0xd8d]:         movsl #0   
3470 [0xd8e]:         movi #65, adx   
3472 [0xd90]:         rmov adx, ebx   
3473 [0xd91]:         movi #0, ebx   
3475 [0xd93]:         movsl #0   
3476 [0xd94]:         movi #66, adx   
3478 [0xd96]:         rmov adx, ebx   
3479 [0xd97]:         movi #0, ebx   
3481 [0xd99]:         movsl #0   
3482 [0xd9a]:         movi #67, adx   
3484 [0xd9c]:         rmov adx, ebx   
3485 [0xd9d]:         movi #2, ebx   
3487 [0xd9f]:         movsl #0   
3488 [0xda0]:         movi #68, adx   
3490 [0xda2]:         rmov adx, ebx   
3491 [0xda3]:         movi #0, ebx   
3493 [0xda5]:         movsl #0   
3494 [0xda6]:         movi #69, adx   
3496 [0xda8]:         rmov adx, ebx   
3497 [0xda9]:         movi #0, ebx   
3499 [0xdab]:         movsl #0   
3500 [0xdac]:         movi #70, adx   
3502 [0xdae]:         rmov adx, ebx   
3503 [0xdaf]:         movi #0, ebx   
3505 [0xdb1]:         movsl #0   
3506 [0xdb2]:         movi #71, adx   
3508 [0xdb4]:         rmov adx, ebx   
3509 [0xdb5]:         movi #2, ebx   
3511 [0xdb7]:         movsl #0   
3512 [0xdb8]:         movi #72, adx   
3514 [0xdba]:         rmov adx, ebx   
3515 [0xdbb]:         movi #0, ebx   
3517 [0xdbd]:         movsl #0   
3518 [0xdbe]:         movi #73, adx   
3520 [0xdc0]:         rmov adx, ebx   
3521 [0xdc1]:         movi #2, ebx   
3523 [0xdc3]:         movsl #0   
3524 [0xdc4]:         movi #74, adx   
3526 [0xdc6]:         rmov adx, ebx   
3527 [0xdc7]:         movi #0, ebx   
3529 [0xdc9]:         movsl #0   
3530 [0xdca]:         movi #75, adx   
3532 [0xdcc]:         rmov adx, ebx   
3533 [0xdcd]:         movi #2, ebx   
3535 [0xdcf]:         movsl #0   
3536 [0xdd0]:         movi #76, adx   
3538 [0xdd2]:         rmov adx, ebx   
3539 [0xdd3]:         movi #0, ebx   
3541 [0xdd5]:         movsl #0   
3542 [0xdd6]:         movi #77, adx   
3544 [0xdd8]:         rmov adx, ebx   
3545 [0xdd9]:         movi #0, ebx   
3547 [0xddb]:         movsl #0   
3548 [0xddc]:         movi #78, adx   
3550 [0xdde]:         rmov adx, ebx   
3551 [0xddf]:         movi #0, ebx   
3553 [0xde1]:         movsl #0   
3554 [0xde2]:         movi #79, adx   
3556 [0xde4]:         rmov adx, ebx   
3557 [0xde5]:         movi #0, ebx   
3559 [0xde7]:         movsl #0   
3560 [0xde8]:         movi #80, adx   
3562 [0xdea]:         rmov adx, ebx   
3563 [0xdeb]:         movi #2, ebx   
3565 [0xded]:         movsl #0   
3566 [0xdee]:         movi #81, adx   
3568 [0xdf0]:         rmov adx, ebx   
3569 [0xdf1]:         movi #0, ebx   
3571 [0xdf3]:         movsl #0   
3572 [0xdf4]:         movi #82, adx   
3574 [0xdf6]:         rmov adx, ebx   
3575 [0xdf7]:         movi #2, ebx   
3577 [0xdf9]:         movsl #0   
3578 [0xdfa]:         movi #83, adx   
3580 [0xdfc]:         rmov adx, ebx   
3581 [0xdfd]:         movi #0, ebx   
3583 [0xdff]:         movsl #0   
3584 [0xe00]:         movi #84, adx   
3586 [0xe02]:         rmov adx, ebx   
3587 [0xe03]:         movi #2, ebx   
3589 [0xe05]:         movsl #0   
3590 [0xe06]:         movi #85, adx   
3592 [0xe08]:         rmov adx, ebx   
3593 [0xe09]:         movi #0, ebx   
3595 [0xe0b]:         movsl #0   
3596 [0xe0c]:         movi #86, adx   
3598 [0xe0e]:         rmov adx, ebx   
3599 [0xe0f]:         movi #2, ebx   
3601 [0xe11]:         movsl #0   
3602 [0xe12]:         movi #87, adx   
3604 [0xe14]:         rmov adx, ebx   
3605 [0xe15]:         movi #0, ebx   
3607 [0xe17]:         movsl #0   
3608 [0xe18]:         movi #88, adx   
3610 [0xe1a]:         rmov adx, ebx   
3611 [0xe1b]:         movi #2, ebx   
3613 [0xe1d]:         movsl #0   
3614 [0xe1e]:         movi #89, adx   
3616 [0xe20]:         rmov adx, ebx   
3617 [0xe21]:         movi #0, ebx   
3619 [0xe23]:         movsl #0   
3620 [0xe24]:         movi #90, adx   
3622 [0xe26]:         rmov adx, ebx   
3623 [0xe27]:         movi #0, ebx   
3625 [0xe29]:         movsl #0   
3626 [0xe2a]:         movi #91, adx   
3628 [0xe2c]:         rmov adx, ebx   
3629 [0xe2d]:         movi #0, ebx   
3631 [0xe2f]:         movsl #0   
3632 [0xe30]:         movi #92, adx   
3634 [0xe32]:         rmov adx, ebx   
3635 [0xe33]:         movi #0, ebx   
3637 [0xe35]:         movsl #0   
3638 [0xe36]:         movi #93, adx   
3640 [0xe38]:         rmov adx, ebx   
3641 [0xe39]:         movi #2, ebx   
3643 [0xe3b]:         movsl #0   
3644 [0xe3c]:         movi #94, adx   
3646 [0xe3e]:         rmov adx, ebx   
3647 [0xe3f]:         movi #0, ebx   
3649 [0xe41]:         movsl #0   
3650 [0xe42]:         movi #95, adx   
3652 [0xe44]:         rmov adx, ebx   
3653 [0xe45]:         movi #2, ebx   
3655 [0xe47]:         movsl #0   
3656 [0xe48]:         movi #96, adx   
3658 [0xe4a]:         rmov adx, ebx   
3659 [0xe4b]:         movi #0, ebx   
3661 [0xe4d]:         movsl #0   
3662 [0xe4e]:         movi #97, adx   
3664 [0xe50]:         rmov adx, ebx   
3665 [0xe51]:         movi #2, ebx   
3667 [0xe53]:         movsl #0   
3668 [0xe54]:         movi #98, adx   
3670 [0xe56]:         rmov adx, ebx   
3671 [0xe57]:         movi #0, ebx   
3673 [0xe59]:         movsl #0   
3674 [0xe5a]:         movi #99, adx   
3676 [0xe5c]:         rmov adx, ebx   
3677 [0xe5d]:         movi #2, ebx   
3679 [0xe5f]:         movsl #0   
3680 [0xe60]:         movi #100, adx   
3682 [0xe62]:         rmov adx, ebx   
3683 [0xe63]:         movi #0, ebx   
3685 [0xe65]:         movsl #0   
3686 [0xe66]:         movi #101, adx   
3688 [0xe68]:         rmov adx, ebx   
3689 [0xe69]:         movi #2, ebx   
3691 [0xe6b]:         movsl #0   
3692 [0xe6c]:         movi #102, adx   
3694 [0xe6e]:         rmov adx, ebx   
3695 [0xe6f]:         movi #0, ebx   
3697 [0xe71]:         movsl #0   
3698 [0xe72]:         movi #103, adx   
3700 [0xe74]:         rmov adx, ebx   
3701 [0xe75]:         movi #0, ebx   
3703 [0xe77]:         movsl #0   
3704 [0xe78]:         movi #104, adx   
3706 [0xe7a]:         rmov adx, ebx   
3707 [0xe7b]:         movi #0, ebx   
3709 [0xe7d]:         movsl #0   
3710 [0xe7e]:         movi #105, adx   
3712 [0xe80]:         rmov adx, ebx   
3713 [0xe81]:         movi #0, ebx   
3715 [0xe83]:         movsl #0   
3716 [0xe84]:         movi #106, adx   
3718 [0xe86]:         rmov adx, ebx   
3719 [0xe87]:         movi #2, ebx   
3721 [0xe89]:         movsl #0   
3722 [0xe8a]:         movi #107, adx   
3724 [0xe8c]:         rmov adx, ebx   
3725 [0xe8d]:         movi #0, ebx   
3727 [0xe8f]:         movsl #0   
3728 [0xe90]:         movi #108, adx   
3730 [0xe92]:         rmov adx, ebx   
3731 [0xe93]:         movi #2, ebx   
3733 [0xe95]:         movsl #0   
3734 [0xe96]:         movi #109, adx   
3736 [0xe98]:         rmov adx, ebx   
3737 [0xe99]:         movi #0, ebx   
3739 [0xe9b]:         movsl #0   
3740 [0xe9c]:         movi #110, adx   
3742 [0xe9e]:         rmov adx, ebx   
3743 [0xe9f]:         movi #2, ebx   
3745 [0xea1]:         movsl #0   
3746 [0xea2]:         movi #111, adx   
3748 [0xea4]:         rmov adx, ebx   
3749 [0xea5]:         movi #0, ebx   
3751 [0xea7]:         movsl #0   
3752 [0xea8]:         movi #112, adx   
3754 [0xeaa]:         rmov adx, ebx   
3755 [0xeab]:         movi #2, ebx   
3757 [0xead]:         movsl #0   
3758 [0xeae]:         movi #113, adx   
3760 [0xeb0]:         rmov adx, ebx   
3761 [0xeb1]:         movi #0, ebx   
3763 [0xeb3]:         movsl #0   
3764 [0xeb4]:         movi #114, adx   
3766 [0xeb6]:         rmov adx, ebx   
3767 [0xeb7]:         movi #2, ebx   
3769 [0xeb9]:         movsl #0   
3770 [0xeba]:         movi #115, adx   
3772 [0xebc]:         rmov adx, ebx   
3773 [0xebd]:         movi #0, ebx   
3775 [0xebf]:         movsl #0   
3776 [0xec0]:         movi #116, adx   
3778 [0xec2]:         rmov adx, ebx   
3779 [0xec3]:         movg @108 // @ui.res.drawable#__srt_global   
3780 [0xec4]:         movn #8   
3782 [0xec6]:         popobj   
3783 [0xec7]:         new_class @0 // std#__srt_global   
3784 [0xec8]:         swap    
3785 [0xec9]:         dup    
3786 [0xeca]:         istore 9   
3788 [0xecc]:         movg @108 // @ui.res.drawable#__srt_global   
3789 [0xecd]:         movn #8   
3791 [0xecf]:         pushobj   
3792 [0xed0]:         istore 13   
3794 [0xed2]:         movi #9, ebx   
3796 [0xed4]:         rstore ebx   
3797 [0xed5]:         call @3711 // <ui.support#drawable.drawable>   
3798 [0xed6]:         movg @108 // @ui.res.drawable#__srt_global   
3799 [0xed7]:         movn #9   
3801 [0xed9]:         popobj   
3802 [0xeda]:         movi #117, ebx   
3804 [0xedc]:         newarry ebx: 8   
3805 [0xedd]:         movi #0, ebx   
3807 [0xedf]:         movsl #0   
3808 [0xee0]:         movi #0, adx   
3810 [0xee2]:         rmov adx, ebx   
3811 [0xee3]:         movi #2, ebx   
3813 [0xee5]:         movsl #0   
3814 [0xee6]:         movi #1, adx   
3816 [0xee8]:         rmov adx, ebx   
3817 [0xee9]:         movi #2, ebx   
3819 [0xeeb]:         movsl #0   
3820 [0xeec]:         movi #2, adx   
3822 [0xeee]:         rmov adx, ebx   
3823 [0xeef]:         movi #2, ebx   
3825 [0xef1]:         movsl #0   
3826 [0xef2]:         movi #3, adx   
3828 [0xef4]:         rmov adx, ebx   
3829 [0xef5]:         movi #2, ebx   
3831 [0xef7]:         movsl #0   
3832 [0xef8]:         movi #4, adx   
3834 [0xefa]:         rmov adx, ebx   
3835 [0xefb]:         movi #2, ebx   
3837 [0xefd]:         movsl #0   
3838 [0xefe]:         movi #5, adx   
3840 [0xf00]:         rmov adx, ebx   
3841 [0xf01]:         movi #0, ebx   
3843 [0xf03]:         movsl #0   
3844 [0xf04]:         movi #6, adx   
3846 [0xf06]:         rmov adx, ebx   
3847 [0xf07]:         movi #0, ebx   
3849 [0xf09]:         movsl #0   
3850 [0xf0a]:         movi #7, adx   
3852 [0xf0c]:         rmov adx, ebx   
3853 [0xf0d]:         movi #0, ebx   
3855 [0xf0f]:         movsl #0   
3856 [0xf10]:         movi #8, adx   
3858 [0xf12]:         rmov adx, ebx   
3859 [0xf13]:         movi #0, ebx   
3861 [0xf15]:         movsl #0   
3862 [0xf16]:         movi #9, adx   
3864 [0xf18]:         rmov adx, ebx   
3865 [0xf19]:         movi #0, ebx   
3867 [0xf1b]:         movsl #0   
3868 [0xf1c]:         movi #10, adx   
3870 [0xf1e]:         rmov adx, ebx   
3871 [0xf1f]:         movi #0, ebx   
3873 [0xf21]:         movsl #0   
3874 [0xf22]:         movi #11, adx   
3876 [0xf24]:         rmov adx, ebx   
3877 [0xf25]:         movi #0, ebx   
3879 [0xf27]:         movsl #0   
3880 [0xf28]:         movi #12, adx   
3882 [0xf2a]:         rmov adx, ebx   
3883 [0xf2b]:         movi #0, ebx   
3885 [0xf2d]:         movsl #0   
3886 [0xf2e]:         movi #13, adx   
3888 [0xf30]:         rmov adx, ebx   
3889 [0xf31]:         movi #2, ebx   
3891 [0xf33]:         movsl #0   
3892 [0xf34]:         movi #14, adx   
3894 [0xf36]:         rmov adx, ebx   
3895 [0xf37]:         movi #0, ebx   
3897 [0xf39]:         movsl #0   
3898 [0xf3a]:         movi #15, adx   
3900 [0xf3c]:         rmov adx, ebx   
3901 [0xf3d]:         movi #2, ebx   
3903 [0xf3f]:         movsl #0   
3904 [0xf40]:         movi #16, adx   
3906 [0xf42]:         rmov adx, ebx   
3907 [0xf43]:         movi #0, ebx   
3909 [0xf45]:         movsl #0   
3910 [0xf46]:         movi #17, adx   
3912 [0xf48]:         rmov adx, ebx   
3913 [0xf49]:         movi #2, ebx   
3915 [0xf4b]:         movsl #0   
3916 [0xf4c]:         movi #18, adx   
3918 [0xf4e]:         rmov adx, ebx   
3919 [0xf4f]:         movi #0, ebx   
3921 [0xf51]:         movsl #0   
3922 [0xf52]:         movi #19, adx   
3924 [0xf54]:         rmov adx, ebx   
3925 [0xf55]:         movi #0, ebx   
3927 [0xf57]:         movsl #0   
3928 [0xf58]:         movi #20, adx   
3930 [0xf5a]:         rmov adx, ebx   
3931 [0xf5b]:         movi #0, ebx   
3933 [0xf5d]:         movsl #0   
3934 [0xf5e]:         movi #21, adx   
3936 [0xf60]:         rmov adx, ebx   
3937 [0xf61]:         movi #0, ebx   
3939 [0xf63]:         movsl #0   
3940 [0xf64]:         movi #22, adx   
3942 [0xf66]:         rmov adx, ebx   
3943 [0xf67]:         movi #0, ebx   
3945 [0xf69]:         movsl #0   
3946 [0xf6a]:         movi #23, adx   
3948 [0xf6c]:         rmov adx, ebx   
3949 [0xf6d]:         movi #0, ebx   
3951 [0xf6f]:         movsl #0   
3952 [0xf70]:         movi #24, adx   
3954 [0xf72]:         rmov adx, ebx   
3955 [0xf73]:         movi #0, ebx   
3957 [0xf75]:         movsl #0   
3958 [0xf76]:         movi #25, adx   
3960 [0xf78]:         rmov adx, ebx   
3961 [0xf79]:         movi #0, ebx   
3963 [0xf7b]:         movsl #0   
3964 [0xf7c]:         movi #26, adx   
3966 [0xf7e]:         rmov adx, ebx   
3967 [0xf7f]:         movi #0, ebx   
3969 [0xf81]:         movsl #0   
3970 [0xf82]:         movi #27, adx   
3972 [0xf84]:         rmov adx, ebx   
3973 [0xf85]:         movi #2, ebx   
3975 [0xf87]:         movsl #0   
3976 [0xf88]:         movi #28, adx   
3978 [0xf8a]:         rmov adx, ebx   
3979 [0xf8b]:         movi #2, ebx   
3981 [0xf8d]:         movsl #0   
3982 [0xf8e]:         movi #29, adx   
3984 [0xf90]:         rmov adx, ebx   
3985 [0xf91]:         movi #2, ebx   
3987 [0xf93]:         movsl #0   
3988 [0xf94]:         movi #30, adx   
3990 [0xf96]:         rmov adx, ebx   
3991 [0xf97]:         movi #0, ebx   
3993 [0xf99]:         movsl #0   
3994 [0xf9a]:         movi #31, adx   
3996 [0xf9c]:         rmov adx, ebx   
3997 [0xf9d]:         movi #0, ebx   
3999 [0xf9f]:         movsl #0   
4000 [0xfa0]:         movi #32, adx   
4002 [0xfa2]:         rmov adx, ebx   
4003 [0xfa3]:         movi #0, ebx   
4005 [0xfa5]:         movsl #0   
4006 [0xfa6]:         movi #33, adx   
4008 [0xfa8]:         rmov adx, ebx   
4009 [0xfa9]:         movi #0, ebx   
4011 [0xfab]:         movsl #0   
4012 [0xfac]:         movi #34, adx   
4014 [0xfae]:         rmov adx, ebx   
4015 [0xfaf]:         movi #0, ebx   
4017 [0xfb1]:         movsl #0   
4018 [0xfb2]:         movi #35, adx   
4020 [0xfb4]:         rmov adx, ebx   
4021 [0xfb5]:         movi #0, ebx   
4023 [0xfb7]:         movsl #0   
4024 [0xfb8]:         movi #36, adx   
4026 [0xfba]:         rmov adx, ebx   
4027 [0xfbb]:         movi #0, ebx   
4029 [0xfbd]:         movsl #0   
4030 [0xfbe]:         movi #37, adx   
4032 [0xfc0]:         rmov adx, ebx   
4033 [0xfc1]:         movi #0, ebx   
4035 [0xfc3]:         movsl #0   
4036 [0xfc4]:         movi #38, adx   
4038 [0xfc6]:         rmov adx, ebx   
4039 [0xfc7]:         movi #0, ebx   
4041 [0xfc9]:         movsl #0   
4042 [0xfca]:         movi #39, adx   
4044 [0xfcc]:         rmov adx, ebx   
4045 [0xfcd]:         movi #0, ebx   
4047 [0xfcf]:         movsl #0   
4048 [0xfd0]:         movi #40, adx   
4050 [0xfd2]:         rmov adx, ebx   
4051 [0xfd3]:         movi #0, ebx   
4053 [0xfd5]:         movsl #0   
4054 [0xfd6]:         movi #41, adx   
4056 [0xfd8]:         rmov adx, ebx   
4057 [0xfd9]:         movi #2, ebx   
4059 [0xfdb]:         movsl #0   
4060 [0xfdc]:         movi #42, adx   
4062 [0xfde]:         rmov adx, ebx   
4063 [0xfdf]:         movi #0, ebx   
4065 [0xfe1]:         movsl #0   
4066 [0xfe2]:         movi #43, adx   
4068 [0xfe4]:         rmov adx, ebx   
4069 [0xfe5]:         movi #0, ebx   
4071 [0xfe7]:         movsl #0   
4072 [0xfe8]:         movi #44, adx   
4074 [0xfea]:         rmov adx, ebx   
4075 [0xfeb]:         movi #0, ebx   
4077 [0xfed]:         movsl #0   
4078 [0xfee]:         movi #45, adx   
4080 [0xff0]:         rmov adx, ebx   
4081 [0xff1]:         movi #0, ebx   
4083 [0xff3]:         movsl #0   
4084 [0xff4]:         movi #46, adx   
4086 [0xff6]:         rmov adx, ebx   
4087 [0xff7]:         movi #0, ebx   
4089 [0xff9]:         movsl #0   
4090 [0xffa]:         movi #47, adx   
4092 [0xffc]:         rmov adx, ebx   
4093 [0xffd]:         movi #0, ebx   
4095 [0xfff]:         movsl #0   
4096 [0x1000]:         movi #48, adx   
4098 [0x1002]:         rmov adx, ebx   
4099 [0x1003]:         movi #0, ebx   
4101 [0x1005]:         movsl #0   
4102 [0x1006]:         movi #49, adx   
4104 [0x1008]:         rmov adx, ebx   
4105 [0x1009]:         movi #0, ebx   
4107 [0x100b]:         movsl #0   
4108 [0x100c]:         movi #50, adx   
4110 [0x100e]:         rmov adx, ebx   
4111 [0x100f]:         movi #0, ebx   
4113 [0x1011]:         movsl #0   
4114 [0x1012]:         movi #51, adx   
4116 [0x1014]:         rmov adx, ebx   
4117 [0x1015]:         movi #0, ebx   
4119 [0x1017]:         movsl #0   
4120 [0x1018]:         movi #52, adx   
4122 [0x101a]:         rmov adx, ebx   
4123 [0x101b]:         movi #0, ebx   
4125 [0x101d]:         movsl #0   
4126 [0x101e]:         movi #53, adx   
4128 [0x1020]:         rmov adx, ebx   
4129 [0x1021]:         movi #0, ebx   
4131 [0x1023]:         movsl #0   
4132 [0x1024]:         movi #54, adx   
4134 [0x1026]:         rmov adx, ebx   
4135 [0x1027]:         movi #2, ebx   
4137 [0x1029]:         movsl #0   
4138 [0x102a]:         movi #55, adx   
4140 [0x102c]:         rmov adx, ebx   
4141 [0x102d]:         movi #0, ebx   
4143 [0x102f]:         movsl #0   
4144 [0x1030]:         movi #56, adx   
4146 [0x1032]:         rmov adx, ebx   
4147 [0x1033]:         movi #0, ebx   
4149 [0x1035]:         movsl #0   
4150 [0x1036]:         movi #57, adx   
4152 [0x1038]:         rmov adx, ebx   
4153 [0x1039]:         movi #0, ebx   
4155 [0x103b]:         movsl #0   
4156 [0x103c]:         movi #58, adx   
4158 [0x103e]:         rmov adx, ebx   
4159 [0x103f]:         movi #0, ebx   
4161 [0x1041]:         movsl #0   
4162 [0x1042]:         movi #59, adx   
4164 [0x1044]:         rmov adx, ebx   
4165 [0x1045]:         movi #0, ebx   
4167 [0x1047]:         movsl #0   
4168 [0x1048]:         movi #60, adx   
4170 [0x104a]:         rmov adx, ebx   
4171 [0x104b]:         movi #0, ebx   
4173 [0x104d]:         movsl #0   
4174 [0x104e]:         movi #61, adx   
4176 [0x1050]:         rmov adx, ebx   
4177 [0x1051]:         movi #0, ebx   
4179 [0x1053]:         movsl #0   
4180 [0x1054]:         movi #62, adx   
4182 [0x1056]:         rmov adx, ebx   
4183 [0x1057]:         movi #0, ebx   
4185 [0x1059]:         movsl #0   
4186 [0x105a]:         movi #63, adx   
4188 [0x105c]:         rmov adx, ebx   
4189 [0x105d]:         movi #0, ebx   
4191 [0x105f]:         movsl #0   
4192 [0x1060]:         movi #64, adx   
4194 [0x1062]:         rmov adx, ebx   
4195 [0x1063]:         movi #0, ebx   
4197 [0x1065]:         movsl #0   
4198 [0x1066]:         movi #65, adx   
4200 [0x1068]:         rmov adx, ebx   
4201 [0x1069]:         movi #0, ebx   
4203 [0x106b]:         movsl #0   
4204 [0x106c]:         movi #66, adx   
4206 [0x106e]:         rmov adx, ebx   
4207 [0x106f]:         movi #0, ebx   
4209 [0x1071]:         movsl #0   
4210 [0x1072]:         movi #67, adx   
4212 [0x1074]:         rmov adx, ebx   
4213 [0x1075]:         movi #2, ebx   
4215 [0x1077]:         movsl #0   
4216 [0x1078]:         movi #68, adx   
4218 [0x107a]:         rmov adx, ebx   
4219 [0x107b]:         movi #0, ebx   
4221 [0x107d]:         movsl #0   
4222 [0x107e]:         movi #69, adx   
4224 [0x1080]:         rmov adx, ebx   
4225 [0x1081]:         movi #0, ebx   
4227 [0x1083]:         movsl #0   
4228 [0x1084]:         movi #70, adx   
4230 [0x1086]:         rmov adx, ebx   
4231 [0x1087]:         movi #0, ebx   
4233 [0x1089]:         movsl #0   
4234 [0x108a]:         movi #71, adx   
4236 [0x108c]:         rmov adx, ebx   
4237 [0x108d]:         movi #0, ebx   
4239 [0x108f]:         movsl #0   
4240 [0x1090]:         movi #72, adx   
4242 [0x1092]:         rmov adx, ebx   
4243 [0x1093]:         movi #0, ebx   
4245 [0x1095]:         movsl #0   
4246 [0x1096]:         movi #73, adx   
4248 [0x1098]:         rmov adx, ebx   
4249 [0x1099]:         movi #0, ebx   
4251 [0x109b]:         movsl #0   
4252 [0x109c]:         movi #74, adx   
4254 [0x109e]:         rmov adx, ebx   
4255 [0x109f]:         movi #0, ebx   
4257 [0x10a1]:         movsl #0   
4258 [0x10a2]:         movi #75, adx   
4260 [0x10a4]:         rmov adx, ebx   
4261 [0x10a5]:         movi #0, ebx   
4263 [0x10a7]:         movsl #0   
4264 [0x10a8]:         movi #76, adx   
4266 [0x10aa]:         rmov adx, ebx   
4267 [0x10ab]:         movi #0, ebx   
4269 [0x10ad]:         movsl #0   
4270 [0x10ae]:         movi #77, adx   
4272 [0x10b0]:         rmov adx, ebx   
4273 [0x10b1]:         movi #0, ebx   
4275 [0x10b3]:         movsl #0   
4276 [0x10b4]:         movi #78, adx   
4278 [0x10b6]:         rmov adx, ebx   
4279 [0x10b7]:         movi #0, ebx   
4281 [0x10b9]:         movsl #0   
4282 [0x10ba]:         movi #79, adx   
4284 [0x10bc]:         rmov adx, ebx   
4285 [0x10bd]:         movi #0, ebx   
4287 [0x10bf]:         movsl #0   
4288 [0x10c0]:         movi #80, adx   
4290 [0x10c2]:         rmov adx, ebx   
4291 [0x10c3]:         movi #2, ebx   
4293 [0x10c5]:         movsl #0   
4294 [0x10c6]:         movi #81, adx   
4296 [0x10c8]:         rmov adx, ebx   
4297 [0x10c9]:         movi #0, ebx   
4299 [0x10cb]:         movsl #0   
4300 [0x10cc]:         movi #82, adx   
4302 [0x10ce]:         rmov adx, ebx   
4303 [0x10cf]:         movi #2, ebx   
4305 [0x10d1]:         movsl #0   
4306 [0x10d2]:         movi #83, adx   
4308 [0x10d4]:         rmov adx, ebx   
4309 [0x10d5]:         movi #0, ebx   
4311 [0x10d7]:         movsl #0   
4312 [0x10d8]:         movi #84, adx   
4314 [0x10da]:         rmov adx, ebx   
4315 [0x10db]:         movi #0, ebx   
4317 [0x10dd]:         movsl #0   
4318 [0x10de]:         movi #85, adx   
4320 [0x10e0]:         rmov adx, ebx   
4321 [0x10e1]:         movi #0, ebx   
4323 [0x10e3]:         movsl #0   
4324 [0x10e4]:         movi #86, adx   
4326 [0x10e6]:         rmov adx, ebx   
4327 [0x10e7]:         movi #0, ebx   
4329 [0x10e9]:         movsl #0   
4330 [0x10ea]:         movi #87, adx   
4332 [0x10ec]:         rmov adx, ebx   
4333 [0x10ed]:         movi #0, ebx   
4335 [0x10ef]:         movsl #0   
4336 [0x10f0]:         movi #88, adx   
4338 [0x10f2]:         rmov adx, ebx   
4339 [0x10f3]:         movi #0, ebx   
4341 [0x10f5]:         movsl #0   
4342 [0x10f6]:         movi #89, adx   
4344 [0x10f8]:         rmov adx, ebx   
4345 [0x10f9]:         movi #0, ebx   
4347 [0x10fb]:         movsl #0   
4348 [0x10fc]:         movi #90, adx   
4350 [0x10fe]:         rmov adx, ebx   
4351 [0x10ff]:         movi #0, ebx   
4353 [0x1101]:         movsl #0   
4354 [0x1102]:         movi #91, adx   
4356 [0x1104]:         rmov adx, ebx   
4357 [0x1105]:         movi #0, ebx   
4359 [0x1107]:         movsl #0   
4360 [0x1108]:         movi #92, adx   
4362 [0x110a]:         rmov adx, ebx   
4363 [0x110b]:         movi #0, ebx   
4365 [0x110d]:         movsl #0   
4366 [0x110e]:         movi #93, adx   
4368 [0x1110]:         rmov adx, ebx   
4369 [0x1111]:         movi #2, ebx   
4371 [0x1113]:         movsl #0   
4372 [0x1114]:         movi #94, adx   
4374 [0x1116]:         rmov adx, ebx   
4375 [0x1117]:         movi #0, ebx   
4377 [0x1119]:         movsl #0   
4378 [0x111a]:         movi #95, adx   
4380 [0x111c]:         rmov adx, ebx   
4381 [0x111d]:         movi #2, ebx   
4383 [0x111f]:         movsl #0   
4384 [0x1120]:         movi #96, adx   
4386 [0x1122]:         rmov adx, ebx   
4387 [0x1123]:         movi #0, ebx   
4389 [0x1125]:         movsl #0   
4390 [0x1126]:         movi #97, adx   
4392 [0x1128]:         rmov adx, ebx   
4393 [0x1129]:         movi #0, ebx   
4395 [0x112b]:         movsl #0   
4396 [0x112c]:         movi #98, adx   
4398 [0x112e]:         rmov adx, ebx   
4399 [0x112f]:         movi #0, ebx   
4401 [0x1131]:         movsl #0   
4402 [0x1132]:         movi #99, adx   
4404 [0x1134]:         rmov adx, ebx   
4405 [0x1135]:         movi #0, ebx   
4407 [0x1137]:         movsl #0   
4408 [0x1138]:         movi #100, adx   
4410 [0x113a]:         rmov adx, ebx   
4411 [0x113b]:         movi #0, ebx   
4413 [0x113d]:         movsl #0   
4414 [0x113e]:         movi #101, adx   
4416 [0x1140]:         rmov adx, ebx   
4417 [0x1141]:         movi #0, ebx   
4419 [0x1143]:         movsl #0   
4420 [0x1144]:         movi #102, adx   
4422 [0x1146]:         rmov adx, ebx   
4423 [0x1147]:         movi #0, ebx   
4425 [0x1149]:         movsl #0   
4426 [0x114a]:         movi #103, adx   
4428 [0x114c]:         rmov adx, ebx   
4429 [0x114d]:         movi #0, ebx   
4431 [0x114f]:         movsl #0   
4432 [0x1150]:         movi #104, adx   
4434 [0x1152]:         rmov adx, ebx   
4435 [0x1153]:         movi #0, ebx   
4437 [0x1155]:         movsl #0   
4438 [0x1156]:         movi #105, adx   
4440 [0x1158]:         rmov adx, ebx   
4441 [0x1159]:         movi #0, ebx   
4443 [0x115b]:         movsl #0   
4444 [0x115c]:         movi #106, adx   
4446 [0x115e]:         rmov adx, ebx   
4447 [0x115f]:         movi #2, ebx   
4449 [0x1161]:         movsl #0   
4450 [0x1162]:         movi #107, adx   
4452 [0x1164]:         rmov adx, ebx   
4453 [0x1165]:         movi #0, ebx   
4455 [0x1167]:         movsl #0   
4456 [0x1168]:         movi #108, adx   
4458 [0x116a]:         rmov adx, ebx   
4459 [0x116b]:         movi #2, ebx   
4461 [0x116d]:         movsl #0   
4462 [0x116e]:         movi #109, adx   
4464 [0x1170]:         rmov adx, ebx   
4465 [0x1171]:         movi #0, ebx   
4467 [0x1173]:         movsl #0   
4468 [0x1174]:         movi #110, adx   
4470 [0x1176]:         rmov adx, ebx   
4471 [0x1177]:         movi #0, ebx   
4473 [0x1179]:         movsl #0   
4474 [0x117a]:         movi #111, adx   
4476 [0x117c]:         rmov adx, ebx   
4477 [0x117d]:         movi #0, ebx   
4479 [0x117f]:         movsl #0   
4480 [0x1180]:         movi #112, adx   
4482 [0x1182]:         rmov adx, ebx   
4483 [0x1183]:         movi #0, ebx   
4485 [0x1185]:         movsl #0   
4486 [0x1186]:         movi #113, adx   
4488 [0x1188]:         rmov adx, ebx   
4489 [0x1189]:         movi #0, ebx   
4491 [0x118b]:         movsl #0   
4492 [0x118c]:         movi #114, adx   
4494 [0x118e]:         rmov adx, ebx   
4495 [0x118f]:         movi #0, ebx   
4497 [0x1191]:         movsl #0   
4498 [0x1192]:         movi #115, adx   
4500 [0x1194]:         rmov adx, ebx   
4501 [0x1195]:         movi #0, ebx   
4503 [0x1197]:         movsl #0   
4504 [0x1198]:         movi #116, adx   
4506 [0x119a]:         rmov adx, ebx   
4507 [0x119b]:         movg @108 // @ui.res.drawable#__srt_global   
4508 [0x119c]:         movn #10   
4510 [0x119e]:         popobj   
4511 [0x119f]:         new_class @0 // std#__srt_global   
4512 [0x11a0]:         swap    
4513 [0x11a1]:         dup    
4514 [0x11a2]:         istore 6   
4516 [0x11a4]:         movg @108 // @ui.res.drawable#__srt_global   
4517 [0x11a5]:         movn #10   
4519 [0x11a7]:         pushobj   
4520 [0x11a8]:         istore 13   
4522 [0x11aa]:         movi #9, ebx   
4524 [0x11ac]:         rstore ebx   
4525 [0x11ad]:         call @3711 // <ui.support#drawable.drawable>   
4526 [0x11ae]:         movg @108 // @ui.res.drawable#__srt_global   
4527 [0x11af]:         movn #11   
4529 [0x11b1]:         popobj   
4530 [0x11b2]:         movi #144, ebx   
4532 [0x11b4]:         newarry ebx: 8   
4533 [0x11b5]:         movi #0, ebx   
4535 [0x11b7]:         movsl #0   
4536 [0x11b8]:         movi #0, adx   
4538 [0x11ba]:         rmov adx, ebx   
4539 [0x11bb]:         movi #2, ebx   
4541 [0x11bd]:         movsl #0   
4542 [0x11be]:         movi #1, adx   
4544 [0x11c0]:         rmov adx, ebx   
4545 [0x11c1]:         movi #2, ebx   
4547 [0x11c3]:         movsl #0   
4548 [0x11c4]:         movi #2, adx   
4550 [0x11c6]:         rmov adx, ebx   
4551 [0x11c7]:         movi #2, ebx   
4553 [0x11c9]:         movsl #0   
4554 [0x11ca]:         movi #3, adx   
4556 [0x11cc]:         rmov adx, ebx   
4557 [0x11cd]:         movi #2, ebx   
4559 [0x11cf]:         movsl #0   
4560 [0x11d0]:         movi #4, adx   
4562 [0x11d2]:         rmov adx, ebx   
4563 [0x11d3]:         movi #2, ebx   
4565 [0x11d5]:         movsl #0   
4566 [0x11d6]:         movi #5, adx   
4568 [0x11d8]:         rmov adx, ebx   
4569 [0x11d9]:         movi #2, ebx   
4571 [0x11db]:         movsl #0   
4572 [0x11dc]:         movi #6, adx   
4574 [0x11de]:         rmov adx, ebx   
4575 [0x11df]:         movi #2, ebx   
4577 [0x11e1]:         movsl #0   
4578 [0x11e2]:         movi #7, adx   
4580 [0x11e4]:         rmov adx, ebx   
4581 [0x11e5]:         movi #2, ebx   
4583 [0x11e7]:         movsl #0   
4584 [0x11e8]:         movi #8, adx   
4586 [0x11ea]:         rmov adx, ebx   
4587 [0x11eb]:         movi #2, ebx   
4589 [0x11ed]:         movsl #0   
4590 [0x11ee]:         movi #9, adx   
4592 [0x11f0]:         rmov adx, ebx   
4593 [0x11f1]:         movi #2, ebx   
4595 [0x11f3]:         movsl #0   
4596 [0x11f4]:         movi #10, adx   
4598 [0x11f6]:         rmov adx, ebx   
4599 [0x11f7]:         movi #2, ebx   
4601 [0x11f9]:         movsl #0   
4602 [0x11fa]:         movi #11, adx   
4604 [0x11fc]:         rmov adx, ebx   
4605 [0x11fd]:         movi #2, ebx   
4607 [0x11ff]:         movsl #0   
4608 [0x1200]:         movi #12, adx   
4610 [0x1202]:         rmov adx, ebx   
4611 [0x1203]:         movi #2, ebx   
4613 [0x1205]:         movsl #0   
4614 [0x1206]:         movi #13, adx   
4616 [0x1208]:         rmov adx, ebx   
4617 [0x1209]:         movi #2, ebx   
4619 [0x120b]:         movsl #0   
4620 [0x120c]:         movi #14, adx   
4622 [0x120e]:         rmov adx, ebx   
4623 [0x120f]:         movi #2, ebx   
4625 [0x1211]:         movsl #0   
4626 [0x1212]:         movi #15, adx   
4628 [0x1214]:         rmov adx, ebx   
4629 [0x1215]:         movi #0, ebx   
4631 [0x1217]:         movsl #0   
4632 [0x1218]:         movi #16, adx   
4634 [0x121a]:         rmov adx, ebx   
4635 [0x121b]:         movi #2, ebx   
4637 [0x121d]:         movsl #0   
4638 [0x121e]:         movi #17, adx   
4640 [0x1220]:         rmov adx, ebx   
4641 [0x1221]:         movi #0, ebx   
4643 [0x1223]:         movsl #0   
4644 [0x1224]:         movi #18, adx   
4646 [0x1226]:         rmov adx, ebx   
4647 [0x1227]:         movi #0, ebx   
4649 [0x1229]:         movsl #0   
4650 [0x122a]:         movi #19, adx   
4652 [0x122c]:         rmov adx, ebx   
4653 [0x122d]:         movi #0, ebx   
4655 [0x122f]:         movsl #0   
4656 [0x1230]:         movi #20, adx   
4658 [0x1232]:         rmov adx, ebx   
4659 [0x1233]:         movi #0, ebx   
4661 [0x1235]:         movsl #0   
4662 [0x1236]:         movi #21, adx   
4664 [0x1238]:         rmov adx, ebx   
4665 [0x1239]:         movi #0, ebx   
4667 [0x123b]:         movsl #0   
4668 [0x123c]:         movi #22, adx   
4670 [0x123e]:         rmov adx, ebx   
4671 [0x123f]:         movi #0, ebx   
4673 [0x1241]:         movsl #0   
4674 [0x1242]:         movi #23, adx   
4676 [0x1244]:         rmov adx, ebx   
4677 [0x1245]:         movi #0, ebx   
4679 [0x1247]:         movsl #0   
4680 [0x1248]:         movi #24, adx   
4682 [0x124a]:         rmov adx, ebx   
4683 [0x124b]:         movi #0, ebx   
4685 [0x124d]:         movsl #0   
4686 [0x124e]:         movi #25, adx   
4688 [0x1250]:         rmov adx, ebx   
4689 [0x1251]:         movi #0, ebx   
4691 [0x1253]:         movsl #0   
4692 [0x1254]:         movi #26, adx   
4694 [0x1256]:         rmov adx, ebx   
4695 [0x1257]:         movi #0, ebx   
4697 [0x1259]:         movsl #0   
4698 [0x125a]:         movi #27, adx   
4700 [0x125c]:         rmov adx, ebx   
4701 [0x125d]:         movi #0, ebx   
4703 [0x125f]:         movsl #0   
4704 [0x1260]:         movi #28, adx   
4706 [0x1262]:         rmov adx, ebx   
4707 [0x1263]:         movi #0, ebx   
4709 [0x1265]:         movsl #0   
4710 [0x1266]:         movi #29, adx   
4712 [0x1268]:         rmov adx, ebx   
4713 [0x1269]:         movi #0, ebx   
4715 [0x126b]:         movsl #0   
4716 [0x126c]:         movi #30, adx   
4718 [0x126e]:         rmov adx, ebx   
4719 [0x126f]:         movi #2, ebx   
4721 [0x1271]:         movsl #0   
4722 [0x1272]:         movi #31, adx   
4724 [0x1274]:         rmov adx, ebx   
4725 [0x1275]:         movi #2, ebx   
4727 [0x1277]:         movsl #0   
4728 [0x1278]:         movi #32, adx   
4730 [0x127a]:         rmov adx, ebx   
4731 [0x127b]:         movi #2, ebx   
4733 [0x127d]:         movsl #0   
4734 [0x127e]:         movi #33, adx   
4736 [0x1280]:         rmov adx, ebx   
4737 [0x1281]:         movi #0, ebx   
4739 [0x1283]:         movsl #0   
4740 [0x1284]:         movi #34, adx   
4742 [0x1286]:         rmov adx, ebx   
4743 [0x1287]:         movi #0, ebx   
4745 [0x1289]:         movsl #0   
4746 [0x128a]:         movi #35, adx   
4748 [0x128c]:         rmov adx, ebx   
4749 [0x128d]:         movi #0, ebx   
4751 [0x128f]:         movsl #0   
4752 [0x1290]:         movi #36, adx   
4754 [0x1292]:         rmov adx, ebx   
4755 [0x1293]:         movi #0, ebx   
4757 [0x1295]:         movsl #0   
4758 [0x1296]:         movi #37, adx   
4760 [0x1298]:         rmov adx, ebx   
4761 [0x1299]:         movi #0, ebx   
4763 [0x129b]:         movsl #0   
4764 [0x129c]:         movi #38, adx   
4766 [0x129e]:         rmov adx, ebx   
4767 [0x129f]:         movi #0, ebx   
4769 [0x12a1]:         movsl #0   
4770 [0x12a2]:         movi #39, adx   
4772 [0x12a4]:         rmov adx, ebx   
4773 [0x12a5]:         movi #0, ebx   
4775 [0x12a7]:         movsl #0   
4776 [0x12a8]:         movi #40, adx   
4778 [0x12aa]:         rmov adx, ebx   
4779 [0x12ab]:         movi #2, ebx   
4781 [0x12ad]:         movsl #0   
4782 [0x12ae]:         movi #41, adx   
4784 [0x12b0]:         rmov adx, ebx   
4785 [0x12b1]:         movi #2, ebx   
4787 [0x12b3]:         movsl #0   
4788 [0x12b4]:         movi #42, adx   
4790 [0x12b6]:         rmov adx, ebx   
4791 [0x12b7]:         movi #0, ebx   
4793 [0x12b9]:         movsl #0   
4794 [0x12ba]:         movi #43, adx   
4796 [0x12bc]:         rmov adx, ebx   
4797 [0x12bd]:         movi #2, ebx   
4799 [0x12bf]:         movsl #0   
4800 [0x12c0]:         movi #44, adx   
4802 [0x12c2]:         rmov adx, ebx   
4803 [0x12c3]:         movi #2, ebx   
4805 [0x12c5]:         movsl #0   
4806 [0x12c6]:         movi #45, adx   
4808 [0x12c8]:         rmov adx, ebx   
4809 [0x12c9]:         movi #0, ebx   
4811 [0x12cb]:         movsl #0   
4812 [0x12cc]:         movi #46, adx   
4814 [0x12ce]:         rmov adx, ebx   
4815 [0x12cf]:         movi #2, ebx   
4817 [0x12d1]:         movsl #0   
4818 [0x12d2]:         movi #47, adx   
4820 [0x12d4]:         rmov adx, ebx   
4821 [0x12d5]:         movi #2, ebx   
4823 [0x12d7]:         movsl #0   
4824 [0x12d8]:         movi #48, adx   
4826 [0x12da]:         rmov adx, ebx   
4827 [0x12db]:         movi #2, ebx   
4829 [0x12dd]:         movsl #0   
4830 [0x12de]:         movi #49, adx   
4832 [0x12e0]:         rmov adx, ebx   
4833 [0x12e1]:         movi #0, ebx   
4835 [0x12e3]:         movsl #0   
4836 [0x12e4]:         movi #50, adx   
4838 [0x12e6]:         rmov adx, ebx   
4839 [0x12e7]:         movi #0, ebx   
4841 [0x12e9]:         movsl #0   
4842 [0x12ea]:         movi #51, adx   
4844 [0x12ec]:         rmov adx, ebx   
4845 [0x12ed]:         movi #0, ebx   
4847 [0x12ef]:         movsl #0   
4848 [0x12f0]:         movi #52, adx   
4850 [0x12f2]:         rmov adx, ebx   
4851 [0x12f3]:         movi #0, ebx   
4853 [0x12f5]:         movsl #0   
4854 [0x12f6]:         movi #53, adx   
4856 [0x12f8]:         rmov adx, ebx   
4857 [0x12f9]:         movi #0, ebx   
4859 [0x12fb]:         movsl #0   
4860 [0x12fc]:         movi #54, adx   
4862 [0x12fe]:         rmov adx, ebx   
4863 [0x12ff]:         movi #0, ebx   
4865 [0x1301]:         movsl #0   
4866 [0x1302]:         movi #55, adx   
4868 [0x1304]:         rmov adx, ebx   
4869 [0x1305]:         movi #0, ebx   
4871 [0x1307]:         movsl #0   
4872 [0x1308]:         movi #56, adx   
4874 [0x130a]:         rmov adx, ebx   
4875 [0x130b]:         movi #2, ebx   
4877 [0x130d]:         movsl #0   
4878 [0x130e]:         movi #57, adx   
4880 [0x1310]:         rmov adx, ebx   
4881 [0x1311]:         movi #2, ebx   
4883 [0x1313]:         movsl #0   
4884 [0x1314]:         movi #58, adx   
4886 [0x1316]:         rmov adx, ebx   
4887 [0x1317]:         movi #0, ebx   
4889 [0x1319]:         movsl #0   
4890 [0x131a]:         movi #59, adx   
4892 [0x131c]:         rmov adx, ebx   
4893 [0x131d]:         movi #2, ebx   
4895 [0x131f]:         movsl #0   
4896 [0x1320]:         movi #60, adx   
4898 [0x1322]:         rmov adx, ebx   
4899 [0x1323]:         movi #2, ebx   
4901 [0x1325]:         movsl #0   
4902 [0x1326]:         movi #61, adx   
4904 [0x1328]:         rmov adx, ebx   
4905 [0x1329]:         movi #0, ebx   
4907 [0x132b]:         movsl #0   
4908 [0x132c]:         movi #62, adx   
4910 [0x132e]:         rmov adx, ebx   
4911 [0x132f]:         movi #2, ebx   
4913 [0x1331]:         movsl #0   
4914 [0x1332]:         movi #63, adx   
4916 [0x1334]:         rmov adx, ebx   
4917 [0x1335]:         movi #2, ebx   
4919 [0x1337]:         movsl #0   
4920 [0x1338]:         movi #64, adx   
4922 [0x133a]:         rmov adx, ebx   
4923 [0x133b]:         movi #2, ebx   
4925 [0x133d]:         movsl #0   
4926 [0x133e]:         movi #65, adx   
4928 [0x1340]:         rmov adx, ebx   
4929 [0x1341]:         movi #0, ebx   
4931 [0x1343]:         movsl #0   
4932 [0x1344]:         movi #66, adx   
4934 [0x1346]:         rmov adx, ebx   
4935 [0x1347]:         movi #0, ebx   
4937 [0x1349]:         movsl #0   
4938 [0x134a]:         movi #67, adx   
4940 [0x134c]:         rmov adx, ebx   
4941 [0x134d]:         movi #0, ebx   
4943 [0x134f]:         movsl #0   
4944 [0x1350]:         movi #68, adx   
4946 [0x1352]:         rmov adx, ebx   
4947 [0x1353]:         movi #0, ebx   
4949 [0x1355]:         movsl #0   
4950 [0x1356]:         movi #69, adx   
4952 [0x1358]:         rmov adx, ebx   
4953 [0x1359]:         movi #0, ebx   
4955 [0x135b]:         movsl #0   
4956 [0x135c]:         movi #70, adx   
4958 [0x135e]:         rmov adx, ebx   
4959 [0x135f]:         movi #0, ebx   
4961 [0x1361]:         movsl #0   
4962 [0x1362]:         movi #71, adx   
4964 [0x1364]:         rmov adx, ebx   
4965 [0x1365]:         movi #0, ebx   
4967 [0x1367]:         movsl #0   
4968 [0x1368]:         movi #72, adx   
4970 [0x136a]:         rmov adx, ebx   
4971 [0x136b]:         movi #2, ebx   
4973 [0x136d]:         movsl #0   
4974 [0x136e]:         movi #73, adx   
4976 [0x1370]:         rmov adx, ebx   
4977 [0x1371]:         movi #2, ebx   
4979 [0x1373]:         movsl #0   
4980 [0x1374]:         movi #74, adx   
4982 [0x1376]:         rmov adx, ebx   
4983 [0x1377]:         movi #0, ebx   
4985 [0x1379]:         movsl #0   
4986 [0x137a]:         movi #75, adx   
4988 [0x137c]:         rmov adx, ebx   
4989 [0x137d]:         movi #2, ebx   
4991 [0x137f]:         movsl #0   
4992 [0x1380]:         movi #76, adx   
4994 [0x1382]:         rmov adx, ebx   
4995 [0x1383]:         movi #2, ebx   
4997 [0x1385]:         movsl #0   
4998 [0x1386]:         movi #77, adx   
5000 [0x1388]:         rmov adx, ebx   
5001 [0x1389]:         movi #0, ebx   
5003 [0x138b]:         movsl #0   
5004 [0x138c]:         movi #78, adx   
5006 [0x138e]:         rmov adx, ebx   
5007 [0x138f]:         movi #2, ebx   
5009 [0x1391]:         movsl #0   
5010 [0x1392]:         movi #79, adx   
5012 [0x1394]:         rmov adx, ebx   
5013 [0x1395]:         movi #2, ebx   
5015 [0x1397]:         movsl #0   
5016 [0x1398]:         movi #80, adx   
5018 [0x139a]:         rmov adx, ebx   
5019 [0x139b]:         movi #2, ebx   
5021 [0x139d]:         movsl #0   
5022 [0x139e]:         movi #81, adx   
5024 [0x13a0]:         rmov adx, ebx   
5025 [0x13a1]:         movi #0, ebx   
5027 [0x13a3]:         movsl #0   
5028 [0x13a4]:         movi #82, adx   
5030 [0x13a6]:         rmov adx, ebx   
5031 [0x13a7]:         movi #0, ebx   
5033 [0x13a9]:         movsl #0   
5034 [0x13aa]:         movi #83, adx   
5036 [0x13ac]:         rmov adx, ebx   
5037 [0x13ad]:         movi #0, ebx   
5039 [0x13af]:         movsl #0   
5040 [0x13b0]:         movi #84, adx   
5042 [0x13b2]:         rmov adx, ebx   
5043 [0x13b3]:         movi #0, ebx   
5045 [0x13b5]:         movsl #0   
5046 [0x13b6]:         movi #85, adx   
5048 [0x13b8]:         rmov adx, ebx   
5049 [0x13b9]:         movi #0, ebx   
5051 [0x13bb]:         movsl #0   
5052 [0x13bc]:         movi #86, adx   
5054 [0x13be]:         rmov adx, ebx   
5055 [0x13bf]:         movi #0, ebx   
5057 [0x13c1]:         movsl #0   
5058 [0x13c2]:         movi #87, adx   
5060 [0x13c4]:         rmov adx, ebx   
5061 [0x13c5]:         movi #0, ebx   
5063 [0x13c7]:         movsl #0   
5064 [0x13c8]:         movi #88, adx   
5066 [0x13ca]:         rmov adx, ebx   
5067 [0x13cb]:         movi #2, ebx   
5069 [0x13cd]:         movsl #0   
5070 [0x13ce]:         movi #89, adx   
5072 [0x13d0]:         rmov adx, ebx   
5073 [0x13d1]:         movi #2, ebx   
5075 [0x13d3]:         movsl #0   
5076 [0x13d4]:         movi #90, adx   
5078 [0x13d6]:         rmov adx, ebx   
5079 [0x13d7]:         movi #0, ebx   
5081 [0x13d9]:         movsl #0   
5082 [0x13da]:         movi #91, adx   
5084 [0x13dc]:         rmov adx, ebx   
5085 [0x13dd]:         movi #2, ebx   
5087 [0x13df]:         movsl #0   
5088 [0x13e0]:         movi #92, adx   
5090 [0x13e2]:         rmov adx, ebx   
5091 [0x13e3]:         movi #2, ebx   
5093 [0x13e5]:         movsl #0   
5094 [0x13e6]:         movi #93, adx   
5096 [0x13e8]:         rmov adx, ebx   
5097 [0x13e9]:         movi #0, ebx   
5099 [0x13eb]:         movsl #0   
5100 [0x13ec]:         movi #94, adx   
5102 [0x13ee]:         rmov adx, ebx   
5103 [0x13ef]:         movi #2, ebx   
5105 [0x13f1]:         movsl #0   
5106 [0x13f2]:         movi #95, adx   
5108 [0x13f4]:         rmov adx, ebx   
5109 [0x13f5]:         movi #0, ebx   
5111 [0x13f7]:         movsl #0   
5112 [0x13f8]:         movi #96, adx   
5114 [0x13fa]:         rmov adx, ebx   
5115 [0x13fb]:         movi #2, ebx   
5117 [0x13fd]:         movsl #0   
5118 [0x13fe]:         movi #97, adx   
5120 [0x1400]:         rmov adx, ebx   
5121 [0x1401]:         movi #0, ebx   
5123 [0x1403]:         movsl #0   
5124 [0x1404]:         movi #98, adx   
5126 [0x1406]:         rmov adx, ebx   
5127 [0x1407]:         movi #0, ebx   
5129 [0x1409]:         movsl #0   
5130 [0x140a]:         movi #99, adx   
5132 [0x140c]:         rmov adx, ebx   
5133 [0x140d]:         movi #0, ebx   
5135 [0x140f]:         movsl #0   
5136 [0x1410]:         movi #100, adx   
5138 [0x1412]:         rmov adx, ebx   
5139 [0x1413]:         movi #0, ebx   
5141 [0x1415]:         movsl #0   
5142 [0x1416]:         movi #101, adx   
5144 [0x1418]:         rmov adx, ebx   
5145 [0x1419]:         movi #0, ebx   
5147 [0x141b]:         movsl #0   
5148 [0x141c]:         movi #102, adx   
5150 [0x141e]:         rmov adx, ebx   
5151 [0x141f]:         movi #0, ebx   
5153 [0x1421]:         movsl #0   
5154 [0x1422]:         movi #103, adx   
5156 [0x1424]:         rmov adx, ebx   
5157 [0x1425]:         movi #0, ebx   
5159 [0x1427]:         movsl #0   
5160 [0x1428]:         movi #104, adx   
5162 [0x142a]:         rmov adx, ebx   
5163 [0x142b]:         movi #0, ebx   
5165 [0x142d]:         movsl #0   
5166 [0x142e]:         movi #105, adx   
5168 [0x1430]:         rmov adx, ebx   
5169 [0x1431]:         movi #0, ebx   
5171 [0x1433]:         movsl #0   
5172 [0x1434]:         movi #106, adx   
5174 [0x1436]:         rmov adx, ebx   
5175 [0x1437]:         movi #0, ebx   
5177 [0x1439]:         movsl #0   
5178 [0x143a]:         movi #107, adx   
5180 [0x143c]:         rmov adx, ebx   
5181 [0x143d]:         movi #0, ebx   
5183 [0x143f]:         movsl #0   
5184 [0x1440]:         movi #108, adx   
5186 [0x1442]:         rmov adx, ebx   
5187 [0x1443]:         movi #0, ebx   
5189 [0x1445]:         movsl #0   
5190 [0x1446]:         movi #109, adx   
5192 [0x1448]:         rmov adx, ebx   
5193 [0x1449]:         movi #0, ebx   
5195 [0x144b]:         movsl #0   
5196 [0x144c]:         movi #110, adx   
5198 [0x144e]:         rmov adx, ebx   
5199 [0x144f]:         movi #2, ebx   
5201 [0x1451]:         movsl #0   
5202 [0x1452]:         movi #111, adx   
5204 [0x1454]:         rmov adx, ebx   
5205 [0x1455]:         movi #0, ebx   
5207 [0x1457]:         movsl #0   
5208 [0x1458]:         movi #112, adx   
5210 [0x145a]:         rmov adx, ebx   
5211 [0x145b]:         movi #2, ebx   
5213 [0x145d]:         movsl #0   
5214 [0x145e]:         movi #113, adx   
5216 [0x1460]:         rmov adx, ebx   
5217 [0x1461]:         movi #2, ebx   
5219 [0x1463]:         movsl #0   
5220 [0x1464]:         movi #114, adx   
5222 [0x1466]:         rmov adx, ebx   
5223 [0x1467]:         movi #2, ebx   
5225 [0x1469]:         movsl #0   
5226 [0x146a]:         movi #115, adx   
5228 [0x146c]:         rmov adx, ebx   
5229 [0x146d]:         movi #2, ebx   
5231 [0x146f]:         movsl #0   
5232 [0x1470]:         movi #116, adx   
5234 [0x1472]:         rmov adx, ebx   
5235 [0x1473]:         movi #2, ebx   
5237 [0x1475]:         movsl #0   
5238 [0x1476]:         movi #117, adx   
5240 [0x1478]:         rmov adx, ebx   
5241 [0x1479]:         movi #2, ebx   
5243 [0x147b]:         movsl #0   
5244 [0x147c]:         movi #118, adx   
5246 [0x147e]:         rmov adx, ebx   
5247 [0x147f]:         movi #2, ebx   
5249 [0x1481]:         movsl #0   
5250 [0x1482]:         movi #119, adx   
5252 [0x1484]:         rmov adx, ebx   
5253 [0x1485]:         movi #2, ebx   
5255 [0x1487]:         movsl #0   
5256 [0x1488]:         movi #120, adx   
5258 [0x148a]:         rmov adx, ebx   
5259 [0x148b]:         movi #2, ebx   
5261 [0x148d]:         movsl #0   
5262 [0x148e]:         movi #121, adx   
5264 [0x1490]:         rmov adx, ebx   
5265 [0x1491]:         movi #2, ebx   
5267 [0x1493]:         movsl #0   
5268 [0x1494]:         movi #122, adx   
5270 [0x1496]:         rmov adx, ebx   
5271 [0x1497]:         movi #2, ebx   
5273 [0x1499]:         movsl #0   
5274 [0x149a]:         movi #123, adx   
5276 [0x149c]:         rmov adx, ebx   
5277 [0x149d]:         movi #2, ebx   
5279 [0x149f]:         movsl #0   
5280 [0x14a0]:         movi #124, adx   
5282 [0x14a2]:         rmov adx, ebx   
5283 [0x14a3]:         movi #2, ebx   
5285 [0x14a5]:         movsl #0   
5286 [0x14a6]:         movi #125, adx   
5288 [0x14a8]:         rmov adx, ebx   
5289 [0x14a9]:         movi #2, ebx   
5291 [0x14ab]:         movsl #0   
5292 [0x14ac]:         movi #126, adx   
5294 [0x14ae]:         rmov adx, ebx   
5295 [0x14af]:         movi #2, ebx   
5297 [0x14b1]:         movsl #0   
5298 [0x14b2]:         movi #127, adx   
5300 [0x14b4]:         rmov adx, ebx   
5301 [0x14b5]:         movi #0, ebx   
5303 [0x14b7]:         movsl #0   
5304 [0x14b8]:         movi #128, adx   
5306 [0x14ba]:         rmov adx, ebx   
5307 [0x14bb]:         movi #0, ebx   
5309 [0x14bd]:         movsl #0   
5310 [0x14be]:         movi #129, adx   
5312 [0x14c0]:         rmov adx, ebx   
5313 [0x14c1]:         movi #0, ebx   
5315 [0x14c3]:         movsl #0   
5316 [0x14c4]:         movi #130, adx   
5318 [0x14c6]:         rmov adx, ebx   
5319 [0x14c7]:         movi #0, ebx   
5321 [0x14c9]:         movsl #0   
5322 [0x14ca]:         movi #131, adx   
5324 [0x14cc]:         rmov adx, ebx   
5325 [0x14cd]:         movi #0, ebx   
5327 [0x14cf]:         movsl #0   
5328 [0x14d0]:         movi #132, adx   
5330 [0x14d2]:         rmov adx, ebx   
5331 [0x14d3]:         movi #0, ebx   
5333 [0x14d5]:         movsl #0   
5334 [0x14d6]:         movi #133, adx   
5336 [0x14d8]:         rmov adx, ebx   
5337 [0x14d9]:         movi #0, ebx   
5339 [0x14db]:         movsl #0   
5340 [0x14dc]:         movi #134, adx   
5342 [0x14de]:         rmov adx, ebx   
5343 [0x14df]:         movi #0, ebx   
5345 [0x14e1]:         movsl #0   
5346 [0x14e2]:         movi #135, adx   
5348 [0x14e4]:         rmov adx, ebx   
5349 [0x14e5]:         movi #0, ebx   
5351 [0x14e7]:         movsl #0   
5352 [0x14e8]:         movi #136, adx   
5354 [0x14ea]:         rmov adx, ebx   
5355 [0x14eb]:         movi #0, ebx   
5357 [0x14ed]:         movsl #0   
5358 [0x14ee]:         movi #137, adx   
5360 [0x14f0]:         rmov adx, ebx   
5361 [0x14f1]:         movi #0, ebx   
5363 [0x14f3]:         movsl #0   
5364 [0x14f4]:         movi #138, adx   
5366 [0x14f6]:         rmov adx, ebx   
5367 [0x14f7]:         movi #0, ebx   
5369 [0x14f9]:         movsl #0   
5370 [0x14fa]:         movi #139, adx   
5372 [0x14fc]:         rmov adx, ebx   
5373 [0x14fd]:         movi #0, ebx   
5375 [0x14ff]:         movsl #0   
5376 [0x1500]:         movi #140, adx   
5378 [0x1502]:         rmov adx, ebx   
5379 [0x1503]:         movi #0, ebx   
5381 [0x1505]:         movsl #0   
5382 [0x1506]:         movi #141, adx   
5384 [0x1508]:         rmov adx, ebx   
5385 [0x1509]:         movi #0, ebx   
5387 [0x150b]:         movsl #0   
5388 [0x150c]:         movi #142, adx   
5390 [0x150e]:         rmov adx, ebx   
5391 [0x150f]:         movi #0, ebx   
5393 [0x1511]:         movsl #0   
5394 [0x1512]:         movi #143, adx   
5396 [0x1514]:         rmov adx, ebx   
5397 [0x1515]:         movg @108 // @ui.res.drawable#__srt_global   
5398 [0x1516]:         movn #12   
5400 [0x1518]:         popobj   
5401 [0x1519]:         new_class @0 // std#__srt_global   
5402 [0x151a]:         swap    
5403 [0x151b]:         dup    
5404 [0x151c]:         istore 15   
5406 [0x151e]:         movg @108 // @ui.res.drawable#__srt_global   
5407 [0x151f]:         movn #12   
5409 [0x1521]:         pushobj   
5410 [0x1522]:         istore 16   
5412 [0x1524]:         movi #9, ebx   
5414 [0x1526]:         rstore ebx   
5415 [0x1527]:         call @3711 // <ui.support#drawable.drawable>   
5416 [0x1528]:         movg @108 // @ui.res.drawable#__srt_global   
5417 [0x1529]:         movn #13   
5419 [0x152b]:         popobj   
5420 [0x152c]:         movi #117, ebx   
5422 [0x152e]:         newarry ebx: 8   
5423 [0x152f]:         movi #0, ebx   
5425 [0x1531]:         movsl #0   
5426 [0x1532]:         movi #0, adx   
5428 [0x1534]:         rmov adx, ebx   
5429 [0x1535]:         movi #2, ebx   
5431 [0x1537]:         movsl #0   
5432 [0x1538]:         movi #1, adx   
5434 [0x153a]:         rmov adx, ebx   
5435 [0x153b]:         movi #2, ebx   
5437 [0x153d]:         movsl #0   
5438 [0x153e]:         movi #2, adx   
5440 [0x1540]:         rmov adx, ebx   
5441 [0x1541]:         movi #2, ebx   
5443 [0x1543]:         movsl #0   
5444 [0x1544]:         movi #3, adx   
5446 [0x1546]:         rmov adx, ebx   
5447 [0x1547]:         movi #2, ebx   
5449 [0x1549]:         movsl #0   
5450 [0x154a]:         movi #4, adx   
5452 [0x154c]:         rmov adx, ebx   
5453 [0x154d]:         movi #2, ebx   
5455 [0x154f]:         movsl #0   
5456 [0x1550]:         movi #5, adx   
5458 [0x1552]:         rmov adx, ebx   
5459 [0x1553]:         movi #0, ebx   
5461 [0x1555]:         movsl #0   
5462 [0x1556]:         movi #6, adx   
5464 [0x1558]:         rmov adx, ebx   
5465 [0x1559]:         movi #0, ebx   
5467 [0x155b]:         movsl #0   
5468 [0x155c]:         movi #7, adx   
5470 [0x155e]:         rmov adx, ebx   
5471 [0x155f]:         movi #0, ebx   
5473 [0x1561]:         movsl #0   
5474 [0x1562]:         movi #8, adx   
5476 [0x1564]:         rmov adx, ebx   
5477 [0x1565]:         movi #0, ebx   
5479 [0x1567]:         movsl #0   
5480 [0x1568]:         movi #9, adx   
5482 [0x156a]:         rmov adx, ebx   
5483 [0x156b]:         movi #0, ebx   
5485 [0x156d]:         movsl #0   
5486 [0x156e]:         movi #10, adx   
5488 [0x1570]:         rmov adx, ebx   
5489 [0x1571]:         movi #0, ebx   
5491 [0x1573]:         movsl #0   
5492 [0x1574]:         movi #11, adx   
5494 [0x1576]:         rmov adx, ebx   
5495 [0x1577]:         movi #0, ebx   
5497 [0x1579]:         movsl #0   
5498 [0x157a]:         movi #12, adx   
5500 [0x157c]:         rmov adx, ebx   
5501 [0x157d]:         movi #0, ebx   
5503 [0x157f]:         movsl #0   
5504 [0x1580]:         movi #13, adx   
5506 [0x1582]:         rmov adx, ebx   
5507 [0x1583]:         movi #2, ebx   
5509 [0x1585]:         movsl #0   
5510 [0x1586]:         movi #14, adx   
5512 [0x1588]:         rmov adx, ebx   
5513 [0x1589]:         movi #0, ebx   
5515 [0x158b]:         movsl #0   
5516 [0x158c]:         movi #15, adx   
5518 [0x158e]:         rmov adx, ebx   
5519 [0x158f]:         movi #2, ebx   
5521 [0x1591]:         movsl #0   
5522 [0x1592]:         movi #16, adx   
5524 [0x1594]:         rmov adx, ebx   
5525 [0x1595]:         movi #0, ebx   
5527 [0x1597]:         movsl #0   
5528 [0x1598]:         movi #17, adx   
5530 [0x159a]:         rmov adx, ebx   
5531 [0x159b]:         movi #2, ebx   
5533 [0x159d]:         movsl #0   
5534 [0x159e]:         movi #18, adx   
5536 [0x15a0]:         rmov adx, ebx   
5537 [0x15a1]:         movi #0, ebx   
5539 [0x15a3]:         movsl #0   
5540 [0x15a4]:         movi #19, adx   
5542 [0x15a6]:         rmov adx, ebx   
5543 [0x15a7]:         movi #0, ebx   
5545 [0x15a9]:         movsl #0   
5546 [0x15aa]:         movi #20, adx   
5548 [0x15ac]:         rmov adx, ebx   
5549 [0x15ad]:         movi #0, ebx   
5551 [0x15af]:         movsl #0   
5552 [0x15b0]:         movi #21, adx   
5554 [0x15b2]:         rmov adx, ebx   
5555 [0x15b3]:         movi #0, ebx   
5557 [0x15b5]:         movsl #0   
5558 [0x15b6]:         movi #22, adx   
5560 [0x15b8]:         rmov adx, ebx   
5561 [0x15b9]:         movi #0, ebx   
5563 [0x15bb]:         movsl #0   
5564 [0x15bc]:         movi #23, adx   
5566 [0x15be]:         rmov adx, ebx   
5567 [0x15bf]:         movi #0, ebx   
5569 [0x15c1]:         movsl #0   
5570 [0x15c2]:         movi #24, adx   
5572 [0x15c4]:         rmov adx, ebx   
5573 [0x15c5]:         movi #0, ebx   
5575 [0x15c7]:         movsl #0   
5576 [0x15c8]:         movi #25, adx   
5578 [0x15ca]:         rmov adx, ebx   
5579 [0x15cb]:         movi #0, ebx   
5581 [0x15cd]:         movsl #0   
5582 [0x15ce]:         movi #26, adx   
5584 [0x15d0]:         rmov adx, ebx   
5585 [0x15d1]:         movi #0, ebx   
5587 [0x15d3]:         movsl #0   
5588 [0x15d4]:         movi #27, adx   
5590 [0x15d6]:         rmov adx, ebx   
5591 [0x15d7]:         movi #2, ebx   
5593 [0x15d9]:         movsl #0   
5594 [0x15da]:         movi #28, adx   
5596 [0x15dc]:         rmov adx, ebx   
5597 [0x15dd]:         movi #2, ebx   
5599 [0x15df]:         movsl #0   
5600 [0x15e0]:         movi #29, adx   
5602 [0x15e2]:         rmov adx, ebx   
5603 [0x15e3]:         movi #2, ebx   
5605 [0x15e5]:         movsl #0   
5606 [0x15e6]:         movi #30, adx   
5608 [0x15e8]:         rmov adx, ebx   
5609 [0x15e9]:         movi #0, ebx   
5611 [0x15eb]:         movsl #0   
5612 [0x15ec]:         movi #31, adx   
5614 [0x15ee]:         rmov adx, ebx   
5615 [0x15ef]:         movi #0, ebx   
5617 [0x15f1]:         movsl #0   
5618 [0x15f2]:         movi #32, adx   
5620 [0x15f4]:         rmov adx, ebx   
5621 [0x15f5]:         movi #0, ebx   
5623 [0x15f7]:         movsl #0   
5624 [0x15f8]:         movi #33, adx   
5626 [0x15fa]:         rmov adx, ebx   
5627 [0x15fb]:         movi #0, ebx   
5629 [0x15fd]:         movsl #0   
5630 [0x15fe]:         movi #34, adx   
5632 [0x1600]:         rmov adx, ebx   
5633 [0x1601]:         movi #0, ebx   
5635 [0x1603]:         movsl #0   
5636 [0x1604]:         movi #35, adx   
5638 [0x1606]:         rmov adx, ebx   
5639 [0x1607]:         movi #0, ebx   
5641 [0x1609]:         movsl #0   
5642 [0x160a]:         movi #36, adx   
5644 [0x160c]:         rmov adx, ebx   
5645 [0x160d]:         movi #0, ebx   
5647 [0x160f]:         movsl #0   
5648 [0x1610]:         movi #37, adx   
5650 [0x1612]:         rmov adx, ebx   
5651 [0x1613]:         movi #0, ebx   
5653 [0x1615]:         movsl #0   
5654 [0x1616]:         movi #38, adx   
5656 [0x1618]:         rmov adx, ebx   
5657 [0x1619]:         movi #0, ebx   
5659 [0x161b]:         movsl #0   
5660 [0x161c]:         movi #39, adx   
5662 [0x161e]:         rmov adx, ebx   
5663 [0x161f]:         movi #0, ebx   
5665 [0x1621]:         movsl #0   
5666 [0x1622]:         movi #40, adx   
5668 [0x1624]:         rmov adx, ebx   
5669 [0x1625]:         movi #0, ebx   
5671 [0x1627]:         movsl #0   
5672 [0x1628]:         movi #41, adx   
5674 [0x162a]:         rmov adx, ebx   
5675 [0x162b]:         movi #2, ebx   
5677 [0x162d]:         movsl #0   
5678 [0x162e]:         movi #42, adx   
5680 [0x1630]:         rmov adx, ebx   
5681 [0x1631]:         movi #0, ebx   
5683 [0x1633]:         movsl #0   
5684 [0x1634]:         movi #43, adx   
5686 [0x1636]:         rmov adx, ebx   
5687 [0x1637]:         movi #0, ebx   
5689 [0x1639]:         movsl #0   
5690 [0x163a]:         movi #44, adx   
5692 [0x163c]:         rmov adx, ebx   
5693 [0x163d]:         movi #0, ebx   
5695 [0x163f]:         movsl #0   
5696 [0x1640]:         movi #45, adx   
5698 [0x1642]:         rmov adx, ebx   
5699 [0x1643]:         movi #0, ebx   
5701 [0x1645]:         movsl #0   
5702 [0x1646]:         movi #46, adx   
5704 [0x1648]:         rmov adx, ebx   
5705 [0x1649]:         movi #0, ebx   
5707 [0x164b]:         movsl #0   
5708 [0x164c]:         movi #47, adx   
5710 [0x164e]:         rmov adx, ebx   
5711 [0x164f]:         movi #0, ebx   
5713 [0x1651]:         movsl #0   
5714 [0x1652]:         movi #48, adx   
5716 [0x1654]:         rmov adx, ebx   
5717 [0x1655]:         movi #0, ebx   
5719 [0x1657]:         movsl #0   
5720 [0x1658]:         movi #49, adx   
5722 [0x165a]:         rmov adx, ebx   
5723 [0x165b]:         movi #0, ebx   
5725 [0x165d]:         movsl #0   
5726 [0x165e]:         movi #50, adx   
5728 [0x1660]:         rmov adx, ebx   
5729 [0x1661]:         movi #0, ebx   
5731 [0x1663]:         movsl #0   
5732 [0x1664]:         movi #51, adx   
5734 [0x1666]:         rmov adx, ebx   
5735 [0x1667]:         movi #0, ebx   
5737 [0x1669]:         movsl #0   
5738 [0x166a]:         movi #52, adx   
5740 [0x166c]:         rmov adx, ebx   
5741 [0x166d]:         movi #0, ebx   
5743 [0x166f]:         movsl #0   
5744 [0x1670]:         movi #53, adx   
5746 [0x1672]:         rmov adx, ebx   
5747 [0x1673]:         movi #0, ebx   
5749 [0x1675]:         movsl #0   
5750 [0x1676]:         movi #54, adx   
5752 [0x1678]:         rmov adx, ebx   
5753 [0x1679]:         movi #2, ebx   
5755 [0x167b]:         movsl #0   
5756 [0x167c]:         movi #55, adx   
5758 [0x167e]:         rmov adx, ebx   
5759 [0x167f]:         movi #0, ebx   
5761 [0x1681]:         movsl #0   
5762 [0x1682]:         movi #56, adx   
5764 [0x1684]:         rmov adx, ebx   
5765 [0x1685]:         movi #0, ebx   
5767 [0x1687]:         movsl #0   
5768 [0x1688]:         movi #57, adx   
5770 [0x168a]:         rmov adx, ebx   
5771 [0x168b]:         movi #0, ebx   
5773 [0x168d]:         movsl #0   
5774 [0x168e]:         movi #58, adx   
5776 [0x1690]:         rmov adx, ebx   
5777 [0x1691]:         movi #0, ebx   
5779 [0x1693]:         movsl #0   
5780 [0x1694]:         movi #59, adx   
5782 [0x1696]:         rmov adx, ebx   
5783 [0x1697]:         movi #0, ebx   
5785 [0x1699]:         movsl #0   
5786 [0x169a]:         movi #60, adx   
5788 [0x169c]:         rmov adx, ebx   
5789 [0x169d]:         movi #2, ebx   
5791 [0x169f]:         movsl #0   
5792 [0x16a0]:         movi #61, adx   
5794 [0x16a2]:         rmov adx, ebx   
5795 [0x16a3]:         movi #0, ebx   
5797 [0x16a5]:         movsl #0   
5798 [0x16a6]:         movi #62, adx   
5800 [0x16a8]:         rmov adx, ebx   
5801 [0x16a9]:         movi #0, ebx   
5803 [0x16ab]:         movsl #0   
5804 [0x16ac]:         movi #63, adx   
5806 [0x16ae]:         rmov adx, ebx   
5807 [0x16af]:         movi #0, ebx   
5809 [0x16b1]:         movsl #0   
5810 [0x16b2]:         movi #64, adx   
5812 [0x16b4]:         rmov adx, ebx   
5813 [0x16b5]:         movi #0, ebx   
5815 [0x16b7]:         movsl #0   
5816 [0x16b8]:         movi #65, adx   
5818 [0x16ba]:         rmov adx, ebx   
5819 [0x16bb]:         movi #0, ebx   
5821 [0x16bd]:         movsl #0   
5822 [0x16be]:         movi #66, adx   
5824 [0x16c0]:         rmov adx, ebx   
5825 [0x16c1]:         movi #0, ebx   
5827 [0x16c3]:         movsl #0   
5828 [0x16c4]:         movi #67, adx   
5830 [0x16c6]:         rmov adx, ebx   
5831 [0x16c7]:         movi #2, ebx   
5833 [0x16c9]:         movsl #0   
5834 [0x16ca]:         movi #68, adx   
5836 [0x16cc]:         rmov adx, ebx   
5837 [0x16cd]:         movi #0, ebx   
5839 [0x16cf]:         movsl #0   
5840 [0x16d0]:         movi #69, adx   
5842 [0x16d2]:         rmov adx, ebx   
5843 [0x16d3]:         movi #0, ebx   
5845 [0x16d5]:         movsl #0   
5846 [0x16d6]:         movi #70, adx   
5848 [0x16d8]:         rmov adx, ebx   
5849 [0x16d9]:         movi #0, ebx   
5851 [0x16db]:         movsl #0   
5852 [0x16dc]:         movi #71, adx   
5854 [0x16de]:         rmov adx, ebx   
5855 [0x16df]:         movi #2, ebx   
5857 [0x16e1]:         movsl #0   
5858 [0x16e2]:         movi #72, adx   
5860 [0x16e4]:         rmov adx, ebx   
5861 [0x16e5]:         movi #0, ebx   
5863 [0x16e7]:         movsl #0   
5864 [0x16e8]:         movi #73, adx   
5866 [0x16ea]:         rmov adx, ebx   
5867 [0x16eb]:         movi #2, ebx   
5869 [0x16ed]:         movsl #0   
5870 [0x16ee]:         movi #74, adx   
5872 [0x16f0]:         rmov adx, ebx   
5873 [0x16f1]:         movi #0, ebx   
5875 [0x16f3]:         movsl #0   
5876 [0x16f4]:         movi #75, adx   
5878 [0x16f6]:         rmov adx, ebx   
5879 [0x16f7]:         movi #0, ebx   
5881 [0x16f9]:         movsl #0   
5882 [0x16fa]:         movi #76, adx   
5884 [0x16fc]:         rmov adx, ebx   
5885 [0x16fd]:         movi #0, ebx   
5887 [0x16ff]:         movsl #0   
5888 [0x1700]:         movi #77, adx   
5890 [0x1702]:         rmov adx, ebx   
5891 [0x1703]:         movi #0, ebx   
5893 [0x1705]:         movsl #0   
5894 [0x1706]:         movi #78, adx   
5896 [0x1708]:         rmov adx, ebx   
5897 [0x1709]:         movi #0, ebx   
5899 [0x170b]:         movsl #0   
5900 [0x170c]:         movi #79, adx   
5902 [0x170e]:         rmov adx, ebx   
5903 [0x170f]:         movi #0, ebx   
5905 [0x1711]:         movsl #0   
5906 [0x1712]:         movi #80, adx   
5908 [0x1714]:         rmov adx, ebx   
5909 [0x1715]:         movi #2, ebx   
5911 [0x1717]:         movsl #0   
5912 [0x1718]:         movi #81, adx   
5914 [0x171a]:         rmov adx, ebx   
5915 [0x171b]:         movi #0, ebx   
5917 [0x171d]:         movsl #0   
5918 [0x171e]:         movi #82, adx   
5920 [0x1720]:         rmov adx, ebx   
5921 [0x1721]:         movi #2, ebx   
5923 [0x1723]:         movsl #0   
5924 [0x1724]:         movi #83, adx   
5926 [0x1726]:         rmov adx, ebx   
5927 [0x1727]:         movi #0, ebx   
5929 [0x1729]:         movsl #0   
5930 [0x172a]:         movi #84, adx   
5932 [0x172c]:         rmov adx, ebx   
5933 [0x172d]:         movi #2, ebx   
5935 [0x172f]:         movsl #0   
5936 [0x1730]:         movi #85, adx   
5938 [0x1732]:         rmov adx, ebx   
5939 [0x1733]:         movi #0, ebx   
5941 [0x1735]:         movsl #0   
5942 [0x1736]:         movi #86, adx   
5944 [0x1738]:         rmov adx, ebx   
5945 [0x1739]:         movi #2, ebx   
5947 [0x173b]:         movsl #0   
5948 [0x173c]:         movi #87, adx   
5950 [0x173e]:         rmov adx, ebx   
5951 [0x173f]:         movi #0, ebx   
5953 [0x1741]:         movsl #0   
5954 [0x1742]:         movi #88, adx   
5956 [0x1744]:         rmov adx, ebx   
5957 [0x1745]:         movi #0, ebx   
5959 [0x1747]:         movsl #0   
5960 [0x1748]:         movi #89, adx   
5962 [0x174a]:         rmov adx, ebx   
5963 [0x174b]:         movi #0, ebx   
5965 [0x174d]:         movsl #0   
5966 [0x174e]:         movi #90, adx   
5968 [0x1750]:         rmov adx, ebx   
5969 [0x1751]:         movi #0, ebx   
5971 [0x1753]:         movsl #0   
5972 [0x1754]:         movi #91, adx   
5974 [0x1756]:         rmov adx, ebx   
5975 [0x1757]:         movi #0, ebx   
5977 [0x1759]:         movsl #0   
5978 [0x175a]:         movi #92, adx   
5980 [0x175c]:         rmov adx, ebx   
5981 [0x175d]:         movi #0, ebx   
5983 [0x175f]:         movsl #0   
5984 [0x1760]:         movi #93, adx   
5986 [0x1762]:         rmov adx, ebx   
5987 [0x1763]:         movi #2, ebx   
5989 [0x1765]:         movsl #0   
5990 [0x1766]:         movi #94, adx   
5992 [0x1768]:         rmov adx, ebx   
5993 [0x1769]:         movi #0, ebx   
5995 [0x176b]:         movsl #0   
5996 [0x176c]:         movi #95, adx   
5998 [0x176e]:         rmov adx, ebx   
5999 [0x176f]:         movi #2, ebx   
6001 [0x1771]:         movsl #0   
6002 [0x1772]:         movi #96, adx   
6004 [0x1774]:         rmov adx, ebx   
6005 [0x1775]:         movi #0, ebx   
6007 [0x1777]:         movsl #0   
6008 [0x1778]:         movi #97, adx   
6010 [0x177a]:         rmov adx, ebx   
6011 [0x177b]:         movi #2, ebx   
6013 [0x177d]:         movsl #0   
6014 [0x177e]:         movi #98, adx   
6016 [0x1780]:         rmov adx, ebx   
6017 [0x1781]:         movi #0, ebx   
6019 [0x1783]:         movsl #0   
6020 [0x1784]:         movi #99, adx   
6022 [0x1786]:         rmov adx, ebx   
6023 [0x1787]:         movi #2, ebx   
6025 [0x1789]:         movsl #0   
6026 [0x178a]:         movi #100, adx   
6028 [0x178c]:         rmov adx, ebx   
6029 [0x178d]:         movi #0, ebx   
6031 [0x178f]:         movsl #0   
6032 [0x1790]:         movi #101, adx   
6034 [0x1792]:         rmov adx, ebx   
6035 [0x1793]:         movi #0, ebx   
6037 [0x1795]:         movsl #0   
6038 [0x1796]:         movi #102, adx   
6040 [0x1798]:         rmov adx, ebx   
6041 [0x1799]:         movi #0, ebx   
6043 [0x179b]:         movsl #0   
6044 [0x179c]:         movi #103, adx   
6046 [0x179e]:         rmov adx, ebx   
6047 [0x179f]:         movi #0, ebx   
6049 [0x17a1]:         movsl #0   
6050 [0x17a2]:         movi #104, adx   
6052 [0x17a4]:         rmov adx, ebx   
6053 [0x17a5]:         movi #0, ebx   
6055 [0x17a7]:         movsl #0   
6056 [0x17a8]:         movi #105, adx   
6058 [0x17aa]:         rmov adx, ebx   
6059 [0x17ab]:         movi #0, ebx   
6061 [0x17ad]:         movsl #0   
6062 [0x17ae]:         movi #106, adx   
6064 [0x17b0]:         rmov adx, ebx   
6065 [0x17b1]:         movi #2, ebx   
6067 [0x17b3]:         movsl #0   
6068 [0x17b4]:         movi #107, adx   
6070 [0x17b6]:         rmov adx, ebx   
6071 [0x17b7]:         movi #0, ebx   
6073 [0x17b9]:         movsl #0   
6074 [0x17ba]:         movi #108, adx   
6076 [0x17bc]:         rmov adx, ebx   
6077 [0x17bd]:         movi #2, ebx   
6079 [0x17bf]:         movsl #0   
6080 [0x17c0]:         movi #109, adx   
6082 [0x17c2]:         rmov adx, ebx   
6083 [0x17c3]:         movi #0, ebx   
6085 [0x17c5]:         movsl #0   
6086 [0x17c6]:         movi #110, adx   
6088 [0x17c8]:         rmov adx, ebx   
6089 [0x17c9]:         movi #2, ebx   
6091 [0x17cb]:         movsl #0   
6092 [0x17cc]:         movi #111, adx   
6094 [0x17ce]:         rmov adx, ebx   
6095 [0x17cf]:         movi #0, ebx   
6097 [0x17d1]:         movsl #0   
6098 [0x17d2]:         movi #112, adx   
6100 [0x17d4]:         rmov adx, ebx   
6101 [0x17d5]:         movi #2, ebx   
6103 [0x17d7]:         movsl #0   
6104 [0x17d8]:         movi #113, adx   
6106 [0x17da]:         rmov adx, ebx   
6107 [0x17db]:         movi #0, ebx   
6109 [0x17dd]:         movsl #0   
6110 [0x17de]:         movi #114, adx   
6112 [0x17e0]:         rmov adx, ebx   
6113 [0x17e1]:         movi #0, ebx   
6115 [0x17e3]:         movsl #0   
6116 [0x17e4]:         movi #115, adx   
6118 [0x17e6]:         rmov adx, ebx   
6119 [0x17e7]:         movi #0, ebx   
6121 [0x17e9]:         movsl #0   
6122 [0x17ea]:         movi #116, adx   
6124 [0x17ec]:         rmov adx, ebx   
6125 [0x17ed]:         movg @108 // @ui.res.drawable#__srt_global   
6126 [0x17ee]:         movn #14   
6128 [0x17f0]:         popobj   
6129 [0x17f1]:         new_class @0 // std#__srt_global   
6130 [0x17f2]:         swap    
6131 [0x17f3]:         dup    
6132 [0x17f4]:         istore 8   
6134 [0x17f6]:         movg @108 // @ui.res.drawable#__srt_global   
6135 [0x17f7]:         movn #14   
6137 [0x17f9]:         pushobj   
6138 [0x17fa]:         istore 13   
6140 [0x17fc]:         movi #9, ebx   
6142 [0x17fe]:         rstore ebx   
6143 [0x17ff]:         call @3711 // <ui.support#drawable.drawable>   
6144 [0x1800]:         movg @108 // @ui.res.drawable#__srt_global   
6145 [0x1801]:         movn #15   
6147 [0x1803]:         popobj   
6148 [0x1804]:         movi #126, ebx   
6150 [0x1806]:         newarry ebx: 8   
6151 [0x1807]:         movi #0, ebx   
6153 [0x1809]:         movsl #0   
6154 [0x180a]:         movi #0, adx   
6156 [0x180c]:         rmov adx, ebx   
6157 [0x180d]:         movi #0, ebx   
6159 [0x180f]:         movsl #0   
6160 [0x1810]:         movi #1, adx   
6162 [0x1812]:         rmov adx, ebx   
6163 [0x1813]:         movi #0, ebx   
6165 [0x1815]:         movsl #0   
6166 [0x1816]:         movi #2, adx   
6168 [0x1818]:         rmov adx, ebx   
6169 [0x1819]:         movi #0, ebx   
6171 [0x181b]:         movsl #0   
6172 [0x181c]:         movi #3, adx   
6174 [0x181e]:         rmov adx, ebx   
6175 [0x181f]:         movi #0, ebx   
6177 [0x1821]:         movsl #0   
6178 [0x1822]:         movi #4, adx   
6180 [0x1824]:         rmov adx, ebx   
6181 [0x1825]:         movi #0, ebx   
6183 [0x1827]:         movsl #0   
6184 [0x1828]:         movi #5, adx   
6186 [0x182a]:         rmov adx, ebx   
6187 [0x182b]:         movi #2, ebx   
6189 [0x182d]:         movsl #0   
6190 [0x182e]:         movi #6, adx   
6192 [0x1830]:         rmov adx, ebx   
6193 [0x1831]:         movi #2, ebx   
6195 [0x1833]:         movsl #0   
6196 [0x1834]:         movi #7, adx   
6198 [0x1836]:         rmov adx, ebx   
6199 [0x1837]:         movi #0, ebx   
6201 [0x1839]:         movsl #0   
6202 [0x183a]:         movi #8, adx   
6204 [0x183c]:         rmov adx, ebx   
6205 [0x183d]:         movi #0, ebx   
6207 [0x183f]:         movsl #0   
6208 [0x1840]:         movi #9, adx   
6210 [0x1842]:         rmov adx, ebx   
6211 [0x1843]:         movi #0, ebx   
6213 [0x1845]:         movsl #0   
6214 [0x1846]:         movi #10, adx   
6216 [0x1848]:         rmov adx, ebx   
6217 [0x1849]:         movi #0, ebx   
6219 [0x184b]:         movsl #0   
6220 [0x184c]:         movi #11, adx   
6222 [0x184e]:         rmov adx, ebx   
6223 [0x184f]:         movi #0, ebx   
6225 [0x1851]:         movsl #0   
6226 [0x1852]:         movi #12, adx   
6228 [0x1854]:         rmov adx, ebx   
6229 [0x1855]:         movi #0, ebx   
6231 [0x1857]:         movsl #0   
6232 [0x1858]:         movi #13, adx   
6234 [0x185a]:         rmov adx, ebx   
6235 [0x185b]:         movi #0, ebx   
6237 [0x185d]:         movsl #0   
6238 [0x185e]:         movi #14, adx   
6240 [0x1860]:         rmov adx, ebx   
6241 [0x1861]:         movi #0, ebx   
6243 [0x1863]:         movsl #0   
6244 [0x1864]:         movi #15, adx   
6246 [0x1866]:         rmov adx, ebx   
6247 [0x1867]:         movi #0, ebx   
6249 [0x1869]:         movsl #0   
6250 [0x186a]:         movi #16, adx   
6252 [0x186c]:         rmov adx, ebx   
6253 [0x186d]:         movi #0, ebx   
6255 [0x186f]:         movsl #0   
6256 [0x1870]:         movi #17, adx   
6258 [0x1872]:         rmov adx, ebx   
6259 [0x1873]:         movi #0, ebx   
6261 [0x1875]:         movsl #0   
6262 [0x1876]:         movi #18, adx   
6264 [0x1878]:         rmov adx, ebx   
6265 [0x1879]:         movi #2, ebx   
6267 [0x187b]:         movsl #0   
6268 [0x187c]:         movi #19, adx   
6270 [0x187e]:         rmov adx, ebx   
6271 [0x187f]:         movi #0, ebx   
6273 [0x1881]:         movsl #0   
6274 [0x1882]:         movi #20, adx   
6276 [0x1884]:         rmov adx, ebx   
6277 [0x1885]:         movi #0, ebx   
6279 [0x1887]:         movsl #0   
6280 [0x1888]:         movi #21, adx   
6282 [0x188a]:         rmov adx, ebx   
6283 [0x188b]:         movi #2, ebx   
6285 [0x188d]:         movsl #0   
6286 [0x188e]:         movi #22, adx   
6288 [0x1890]:         rmov adx, ebx   
6289 [0x1891]:         movi #0, ebx   
6291 [0x1893]:         movsl #0   
6292 [0x1894]:         movi #23, adx   
6294 [0x1896]:         rmov adx, ebx   
6295 [0x1897]:         movi #0, ebx   
6297 [0x1899]:         movsl #0   
6298 [0x189a]:         movi #24, adx   
6300 [0x189c]:         rmov adx, ebx   
6301 [0x189d]:         movi #0, ebx   
6303 [0x189f]:         movsl #0   
6304 [0x18a0]:         movi #25, adx   
6306 [0x18a2]:         rmov adx, ebx   
6307 [0x18a3]:         movi #0, ebx   
6309 [0x18a5]:         movsl #0   
6310 [0x18a6]:         movi #26, adx   
6312 [0x18a8]:         rmov adx, ebx   
6313 [0x18a9]:         movi #0, ebx   
6315 [0x18ab]:         movsl #0   
6316 [0x18ac]:         movi #27, adx   
6318 [0x18ae]:         rmov adx, ebx   
6319 [0x18af]:         movi #0, ebx   
6321 [0x18b1]:         movsl #0   
6322 [0x18b2]:         movi #28, adx   
6324 [0x18b4]:         rmov adx, ebx   
6325 [0x18b5]:         movi #0, ebx   
6327 [0x18b7]:         movsl #0   
6328 [0x18b8]:         movi #29, adx   
6330 [0x18ba]:         rmov adx, ebx   
6331 [0x18bb]:         movi #0, ebx   
6333 [0x18bd]:         movsl #0   
6334 [0x18be]:         movi #30, adx   
6336 [0x18c0]:         rmov adx, ebx   
6337 [0x18c1]:         movi #0, ebx   
6339 [0x18c3]:         movsl #0   
6340 [0x18c4]:         movi #31, adx   
6342 [0x18c6]:         rmov adx, ebx   
6343 [0x18c7]:         movi #2, ebx   
6345 [0x18c9]:         movsl #0   
6346 [0x18ca]:         movi #32, adx   
6348 [0x18cc]:         rmov adx, ebx   
6349 [0x18cd]:         movi #0, ebx   
6351 [0x18cf]:         movsl #0   
6352 [0x18d0]:         movi #33, adx   
6354 [0x18d2]:         rmov adx, ebx   
6355 [0x18d3]:         movi #0, ebx   
6357 [0x18d5]:         movsl #0   
6358 [0x18d6]:         movi #34, adx   
6360 [0x18d8]:         rmov adx, ebx   
6361 [0x18d9]:         movi #0, ebx   
6363 [0x18db]:         movsl #0   
6364 [0x18dc]:         movi #35, adx   
6366 [0x18de]:         rmov adx, ebx   
6367 [0x18df]:         movi #0, ebx   
6369 [0x18e1]:         movsl #0   
6370 [0x18e2]:         movi #36, adx   
6372 [0x18e4]:         rmov adx, ebx   
6373 [0x18e5]:         movi #0, ebx   
6375 [0x18e7]:         movsl #0   
6376 [0x18e8]:         movi #37, adx   
6378 [0x18ea]:         rmov adx, ebx   
6379 [0x18eb]:         movi #2, ebx   
6381 [0x18ed]:         movsl #0   
6382 [0x18ee]:         movi #38, adx   
6384 [0x18f0]:         rmov adx, ebx   
6385 [0x18f1]:         movi #0, ebx   
6387 [0x18f3]:         movsl #0   
6388 [0x18f4]:         movi #39, adx   
6390 [0x18f6]:         rmov adx, ebx   
6391 [0x18f7]:         movi #0, ebx   
6393 [0x18f9]:         movsl #0   
6394 [0x18fa]:         movi #40, adx   
6396 [0x18fc]:         rmov adx, ebx   
6397 [0x18fd]:         movi #0, ebx   
6399 [0x18ff]:         movsl #0   
6400 [0x1900]:         movi #41, adx   
6402 [0x1902]:         rmov adx, ebx   
6403 [0x1903]:         movi #0, ebx   
6405 [0x1905]:         movsl #0   
6406 [0x1906]:         movi #42, adx   
6408 [0x1908]:         rmov adx, ebx   
6409 [0x1909]:         movi #0, ebx   
6411 [0x190b]:         movsl #0   
6412 [0x190c]:         movi #43, adx   
6414 [0x190e]:         rmov adx, ebx   
6415 [0x190f]:         movi #0, ebx   
6417 [0x1911]:         movsl #0   
6418 [0x1912]:         movi #44, adx   
6420 [0x1914]:         rmov adx, ebx   
6421 [0x1915]:         movi #2, ebx   
6423 [0x1917]:         movsl #0   
6424 [0x1918]:         movi #45, adx   
6426 [0x191a]:         rmov adx, ebx   
6427 [0x191b]:         movi #0, ebx   
6429 [0x191d]:         movsl #0   
6430 [0x191e]:         movi #46, adx   
6432 [0x1920]:         rmov adx, ebx   
6433 [0x1921]:         movi #0, ebx   
6435 [0x1923]:         movsl #0   
6436 [0x1924]:         movi #47, adx   
6438 [0x1926]:         rmov adx, ebx   
6439 [0x1927]:         movi #0, ebx   
6441 [0x1929]:         movsl #0   
6442 [0x192a]:         movi #48, adx   
6444 [0x192c]:         rmov adx, ebx   
6445 [0x192d]:         movi #0, ebx   
6447 [0x192f]:         movsl #0   
6448 [0x1930]:         movi #49, adx   
6450 [0x1932]:         rmov adx, ebx   
6451 [0x1933]:         movi #0, ebx   
6453 [0x1935]:         movsl #0   
6454 [0x1936]:         movi #50, adx   
6456 [0x1938]:         rmov adx, ebx   
6457 [0x1939]:         movi #2, ebx   
6459 [0x193b]:         movsl #0   
6460 [0x193c]:         movi #51, adx   
6462 [0x193e]:         rmov adx, ebx   
6463 [0x193f]:         movi #0, ebx   
6465 [0x1941]:         movsl #0   
6466 [0x1942]:         movi #52, adx   
6468 [0x1944]:         rmov adx, ebx   
6469 [0x1945]:         movi #0, ebx   
6471 [0x1947]:         movsl #0   
6472 [0x1948]:         movi #53, adx   
6474 [0x194a]:         rmov adx, ebx   
6475 [0x194b]:         movi #0, ebx   
6477 [0x194d]:         movsl #0   
6478 [0x194e]:         movi #54, adx   
6480 [0x1950]:         rmov adx, ebx   
6481 [0x1951]:         movi #0, ebx   
6483 [0x1953]:         movsl #0   
6484 [0x1954]:         movi #55, adx   
6486 [0x1956]:         rmov adx, ebx   
6487 [0x1957]:         movi #0, ebx   
6489 [0x1959]:         movsl #0   
6490 [0x195a]:         movi #56, adx   
6492 [0x195c]:         rmov adx, ebx   
6493 [0x195d]:         movi #0, ebx   
6495 [0x195f]:         movsl #0   
6496 [0x1960]:         movi #57, adx   
6498 [0x1962]:         rmov adx, ebx   
6499 [0x1963]:         movi #2, ebx   
6501 [0x1965]:         movsl #0   
6502 [0x1966]:         movi #58, adx   
6504 [0x1968]:         rmov adx, ebx   
6505 [0x1969]:         movi #0, ebx   
6507 [0x196b]:         movsl #0   
6508 [0x196c]:         movi #59, adx   
6510 [0x196e]:         rmov adx, ebx   
6511 [0x196f]:         movi #0, ebx   
6513 [0x1971]:         movsl #0   
6514 [0x1972]:         movi #60, adx   
6516 [0x1974]:         rmov adx, ebx   
6517 [0x1975]:         movi #0, ebx   
6519 [0x1977]:         movsl #0   
6520 [0x1978]:         movi #61, adx   
6522 [0x197a]:         rmov adx, ebx   
6523 [0x197b]:         movi #0, ebx   
6525 [0x197d]:         movsl #0   
6526 [0x197e]:         movi #62, adx   
6528 [0x1980]:         rmov adx, ebx   
6529 [0x1981]:         movi #0, ebx   
6531 [0x1983]:         movsl #0   
6532 [0x1984]:         movi #63, adx   
6534 [0x1986]:         rmov adx, ebx   
6535 [0x1987]:         movi #2, ebx   
6537 [0x1989]:         movsl #0   
6538 [0x198a]:         movi #64, adx   
6540 [0x198c]:         rmov adx, ebx   
6541 [0x198d]:         movi #0, ebx   
6543 [0x198f]:         movsl #0   
6544 [0x1990]:         movi #65, adx   
6546 [0x1992]:         rmov adx, ebx   
6547 [0x1993]:         movi #0, ebx   
6549 [0x1995]:         movsl #0   
6550 [0x1996]:         movi #66, adx   
6552 [0x1998]:         rmov adx, ebx   
6553 [0x1999]:         movi #2, ebx   
6555 [0x199b]:         movsl #0   
6556 [0x199c]:         movi #67, adx   
6558 [0x199e]:         rmov adx, ebx   
6559 [0x199f]:         movi #0, ebx   
6561 [0x19a1]:         movsl #0   
6562 [0x19a2]:         movi #68, adx   
6564 [0x19a4]:         rmov adx, ebx   
6565 [0x19a5]:         movi #0, ebx   
6567 [0x19a7]:         movsl #0   
6568 [0x19a8]:         movi #69, adx   
6570 [0x19aa]:         rmov adx, ebx   
6571 [0x19ab]:         movi #0, ebx   
6573 [0x19ad]:         movsl #0   
6574 [0x19ae]:         movi #70, adx   
6576 [0x19b0]:         rmov adx, ebx   
6577 [0x19b1]:         movi #0, ebx   
6579 [0x19b3]:         movsl #0   
6580 [0x19b4]:         movi #71, adx   
6582 [0x19b6]:         rmov adx, ebx   
6583 [0x19b7]:         movi #2, ebx   
6585 [0x19b9]:         movsl #0   
6586 [0x19ba]:         movi #72, adx   
6588 [0x19bc]:         rmov adx, ebx   
6589 [0x19bd]:         movi #0, ebx   
6591 [0x19bf]:         movsl #0   
6592 [0x19c0]:         movi #73, adx   
6594 [0x19c2]:         rmov adx, ebx   
6595 [0x19c3]:         movi #0, ebx   
6597 [0x19c5]:         movsl #0   
6598 [0x19c6]:         movi #74, adx   
6600 [0x19c8]:         rmov adx, ebx   
6601 [0x19c9]:         movi #0, ebx   
6603 [0x19cb]:         movsl #0   
6604 [0x19cc]:         movi #75, adx   
6606 [0x19ce]:         rmov adx, ebx   
6607 [0x19cf]:         movi #0, ebx   
6609 [0x19d1]:         movsl #0   
6610 [0x19d2]:         movi #76, adx   
6612 [0x19d4]:         rmov adx, ebx   
6613 [0x19d5]:         movi #2, ebx   
6615 [0x19d7]:         movsl #0   
6616 [0x19d8]:         movi #77, adx   
6618 [0x19da]:         rmov adx, ebx   
6619 [0x19db]:         movi #0, ebx   
6621 [0x19dd]:         movsl #0   
6622 [0x19de]:         movi #78, adx   
6624 [0x19e0]:         rmov adx, ebx   
6625 [0x19e1]:         movi #0, ebx   
6627 [0x19e3]:         movsl #0   
6628 [0x19e4]:         movi #79, adx   
6630 [0x19e6]:         rmov adx, ebx   
6631 [0x19e7]:         movi #0, ebx   
6633 [0x19e9]:         movsl #0   
6634 [0x19ea]:         movi #80, adx   
6636 [0x19ec]:         rmov adx, ebx   
6637 [0x19ed]:         movi #2, ebx   
6639 [0x19ef]:         movsl #0   
6640 [0x19f0]:         movi #81, adx   
6642 [0x19f2]:         rmov adx, ebx   
6643 [0x19f3]:         movi #0, ebx   
6645 [0x19f5]:         movsl #0   
6646 [0x19f6]:         movi #82, adx   
6648 [0x19f8]:         rmov adx, ebx   
6649 [0x19f9]:         movi #0, ebx   
6651 [0x19fb]:         movsl #0   
6652 [0x19fc]:         movi #83, adx   
6654 [0x19fe]:         rmov adx, ebx   
6655 [0x19ff]:         movi #0, ebx   
6657 [0x1a01]:         movsl #0   
6658 [0x1a02]:         movi #84, adx   
6660 [0x1a04]:         rmov adx, ebx   
6661 [0x1a05]:         movi #0, ebx   
6663 [0x1a07]:         movsl #0   
6664 [0x1a08]:         movi #85, adx   
6666 [0x1a0a]:         rmov adx, ebx   
6667 [0x1a0b]:         movi #0, ebx   
6669 [0x1a0d]:         movsl #0   
6670 [0x1a0e]:         movi #86, adx   
6672 [0x1a10]:         rmov adx, ebx   
6673 [0x1a11]:         movi #2, ebx   
6675 [0x1a13]:         movsl #0   
6676 [0x1a14]:         movi #87, adx   
6678 [0x1a16]:         rmov adx, ebx   
6679 [0x1a17]:         movi #0, ebx   
6681 [0x1a19]:         movsl #0   
6682 [0x1a1a]:         movi #88, adx   
6684 [0x1a1c]:         rmov adx, ebx   
6685 [0x1a1d]:         movi #0, ebx   
6687 [0x1a1f]:         movsl #0   
6688 [0x1a20]:         movi #89, adx   
6690 [0x1a22]:         rmov adx, ebx   
6691 [0x1a23]:         movi #0, ebx   
6693 [0x1a25]:         movsl #0   
6694 [0x1a26]:         movi #90, adx   
6696 [0x1a28]:         rmov adx, ebx   
6697 [0x1a29]:         movi #0, ebx   
6699 [0x1a2b]:         movsl #0   
6700 [0x1a2c]:         movi #91, adx   
6702 [0x1a2e]:         rmov adx, ebx   
6703 [0x1a2f]:         movi #0, ebx   
6705 [0x1a31]:         movsl #0   
6706 [0x1a32]:         movi #92, adx   
6708 [0x1a34]:         rmov adx, ebx   
6709 [0x1a35]:         movi #0, ebx   
6711 [0x1a37]:         movsl #0   
6712 [0x1a38]:         movi #93, adx   
6714 [0x1a3a]:         rmov adx, ebx   
6715 [0x1a3b]:         movi #2, ebx   
6717 [0x1a3d]:         movsl #0   
6718 [0x1a3e]:         movi #94, adx   
6720 [0x1a40]:         rmov adx, ebx   
6721 [0x1a41]:         movi #0, ebx   
6723 [0x1a43]:         movsl #0   
6724 [0x1a44]:         movi #95, adx   
6726 [0x1a46]:         rmov adx, ebx   
6727 [0x1a47]:         movi #0, ebx   
6729 [0x1a49]:         movsl #0   
6730 [0x1a4a]:         movi #96, adx   
6732 [0x1a4c]:         rmov adx, ebx   
6733 [0x1a4d]:         movi #0, ebx   
6735 [0x1a4f]:         movsl #0   
6736 [0x1a50]:         movi #97, adx   
6738 [0x1a52]:         rmov adx, ebx   
6739 [0x1a53]:         movi #0, ebx   
6741 [0x1a55]:         movsl #0   
6742 [0x1a56]:         movi #98, adx   
6744 [0x1a58]:         rmov adx, ebx   
6745 [0x1a59]:         movi #0, ebx   
6747 [0x1a5b]:         movsl #0   
6748 [0x1a5c]:         movi #99, adx   
6750 [0x1a5e]:         rmov adx, ebx   
6751 [0x1a5f]:         movi #0, ebx   
6753 [0x1a61]:         movsl #0   
6754 [0x1a62]:         movi #100, adx   
6756 [0x1a64]:         rmov adx, ebx   
6757 [0x1a65]:         movi #0, ebx   
6759 [0x1a67]:         movsl #0   
6760 [0x1a68]:         movi #101, adx   
6762 [0x1a6a]:         rmov adx, ebx   
6763 [0x1a6b]:         movi #2, ebx   
6765 [0x1a6d]:         movsl #0   
6766 [0x1a6e]:         movi #102, adx   
6768 [0x1a70]:         rmov adx, ebx   
6769 [0x1a71]:         movi #0, ebx   
6771 [0x1a73]:         movsl #0   
6772 [0x1a74]:         movi #103, adx   
6774 [0x1a76]:         rmov adx, ebx   
6775 [0x1a77]:         movi #2, ebx   
6777 [0x1a79]:         movsl #0   
6778 [0x1a7a]:         movi #104, adx   
6780 [0x1a7c]:         rmov adx, ebx   
6781 [0x1a7d]:         movi #0, ebx   
6783 [0x1a7f]:         movsl #0   
6784 [0x1a80]:         movi #105, adx   
6786 [0x1a82]:         rmov adx, ebx   
6787 [0x1a83]:         movi #2, ebx   
6789 [0x1a85]:         movsl #0   
6790 [0x1a86]:         movi #106, adx   
6792 [0x1a88]:         rmov adx, ebx   
6793 [0x1a89]:         movi #2, ebx   
6795 [0x1a8b]:         movsl #0   
6796 [0x1a8c]:         movi #107, adx   
6798 [0x1a8e]:         rmov adx, ebx   
6799 [0x1a8f]:         movi #0, ebx   
6801 [0x1a91]:         movsl #0   
6802 [0x1a92]:         movi #108, adx   
6804 [0x1a94]:         rmov adx, ebx   
6805 [0x1a95]:         movi #0, ebx   
6807 [0x1a97]:         movsl #0   
6808 [0x1a98]:         movi #109, adx   
6810 [0x1a9a]:         rmov adx, ebx   
6811 [0x1a9b]:         movi #0, ebx   
6813 [0x1a9d]:         movsl #0   
6814 [0x1a9e]:         movi #110, adx   
6816 [0x1aa0]:         rmov adx, ebx   
6817 [0x1aa1]:         movi #0, ebx   
6819 [0x1aa3]:         movsl #0   
6820 [0x1aa4]:         movi #111, adx   
6822 [0x1aa6]:         rmov adx, ebx   
6823 [0x1aa7]:         movi #0, ebx   
6825 [0x1aa9]:         movsl #0   
6826 [0x1aaa]:         movi #112, adx   
6828 [0x1aac]:         rmov adx, ebx   
6829 [0x1aad]:         movi #0, ebx   
6831 [0x1aaf]:         movsl #0   
6832 [0x1ab0]:         movi #113, adx   
6834 [0x1ab2]:         rmov adx, ebx   
6835 [0x1ab3]:         movi #0, ebx   
6837 [0x1ab5]:         movsl #0   
6838 [0x1ab6]:         movi #114, adx   
6840 [0x1ab8]:         rmov adx, ebx   
6841 [0x1ab9]:         movi #0, ebx   
6843 [0x1abb]:         movsl #0   
6844 [0x1abc]:         movi #115, adx   
6846 [0x1abe]:         rmov adx, ebx   
6847 [0x1abf]:         movi #0, ebx   
6849 [0x1ac1]:         movsl #0   
6850 [0x1ac2]:         movi #116, adx   
6852 [0x1ac4]:         rmov adx, ebx   
6853 [0x1ac5]:         movi #2, ebx   
6855 [0x1ac7]:         movsl #0   
6856 [0x1ac8]:         movi #117, adx   
6858 [0x1aca]:         rmov adx, ebx   
6859 [0x1acb]:         movi #2, ebx   
6861 [0x1acd]:         movsl #0   
6862 [0x1ace]:         movi #118, adx   
6864 [0x1ad0]:         rmov adx, ebx   
6865 [0x1ad1]:         movi #0, ebx   
6867 [0x1ad3]:         movsl #0   
6868 [0x1ad4]:         movi #119, adx   
6870 [0x1ad6]:         rmov adx, ebx   
6871 [0x1ad7]:         movi #2, ebx   
6873 [0x1ad9]:         movsl #0   
6874 [0x1ada]:         movi #120, adx   
6876 [0x1adc]:         rmov adx, ebx   
6877 [0x1add]:         movi #0, ebx   
6879 [0x1adf]:         movsl #0   
6880 [0x1ae0]:         movi #121, adx   
6882 [0x1ae2]:         rmov adx, ebx   
6883 [0x1ae3]:         movi #0, ebx   
6885 [0x1ae5]:         movsl #0   
6886 [0x1ae6]:         movi #122, adx   
6888 [0x1ae8]:         rmov adx, ebx   
6889 [0x1ae9]:         movi #0, ebx   
6891 [0x1aeb]:         movsl #0   
6892 [0x1aec]:         movi #123, adx   
6894 [0x1aee]:         rmov adx, ebx   
6895 [0x1aef]:         movi #0, ebx   
6897 [0x1af1]:         movsl #0   
6898 [0x1af2]:         movi #124, adx   
6900 [0x1af4]:         rmov adx, ebx   
6901 [0x1af5]:         movi #0, ebx   
6903 [0x1af7]:         movsl #0   
6904 [0x1af8]:         movi #125, adx   
6906 [0x1afa]:         rmov adx, ebx   
6907 [0x1afb]:         movg @108 // @ui.res.drawable#__srt_global   
6908 [0x1afc]:         movn #16   
6910 [0x1afe]:         popobj   
6911 [0x1aff]:         new_class @0 // std#__srt_global   
6912 [0x1b00]:         swap    
6913 [0x1b01]:         dup    
6914 [0x1b02]:         istore 11   
6916 [0x1b04]:         movg @108 // @ui.res.drawable#__srt_global   
6917 [0x1b05]:         movn #16   
6919 [0x1b07]:         pushobj   
6920 [0x1b08]:         istore 14   
6922 [0x1b0a]:         movi #9, ebx   
6924 [0x1b0c]:         rstore ebx   
6925 [0x1b0d]:         call @3711 // <ui.support#drawable.drawable>   
6926 [0x1b0e]:         movg @108 // @ui.res.drawable#__srt_global   
6927 [0x1b0f]:         movn #17   
6929 [0x1b11]:         popobj   
6930 [0x1b12]:         movi #144, ebx   
6932 [0x1b14]:         newarry ebx: 8   
6933 [0x1b15]:         movi #0, ebx   
6935 [0x1b17]:         movsl #0   
6936 [0x1b18]:         movi #0, adx   
6938 [0x1b1a]:         rmov adx, ebx   
6939 [0x1b1b]:         movi #2, ebx   
6941 [0x1b1d]:         movsl #0   
6942 [0x1b1e]:         movi #1, adx   
6944 [0x1b20]:         rmov adx, ebx   
6945 [0x1b21]:         movi #2, ebx   
6947 [0x1b23]:         movsl #0   
6948 [0x1b24]:         movi #2, adx   
6950 [0x1b26]:         rmov adx, ebx   
6951 [0x1b27]:         movi #2, ebx   
6953 [0x1b29]:         movsl #0   
6954 [0x1b2a]:         movi #3, adx   
6956 [0x1b2c]:         rmov adx, ebx   
6957 [0x1b2d]:         movi #2, ebx   
6959 [0x1b2f]:         movsl #0   
6960 [0x1b30]:         movi #4, adx   
6962 [0x1b32]:         rmov adx, ebx   
6963 [0x1b33]:         movi #2, ebx   
6965 [0x1b35]:         movsl #0   
6966 [0x1b36]:         movi #5, adx   
6968 [0x1b38]:         rmov adx, ebx   
6969 [0x1b39]:         movi #2, ebx   
6971 [0x1b3b]:         movsl #0   
6972 [0x1b3c]:         movi #6, adx   
6974 [0x1b3e]:         rmov adx, ebx   
6975 [0x1b3f]:         movi #2, ebx   
6977 [0x1b41]:         movsl #0   
6978 [0x1b42]:         movi #7, adx   
6980 [0x1b44]:         rmov adx, ebx   
6981 [0x1b45]:         movi #2, ebx   
6983 [0x1b47]:         movsl #0   
6984 [0x1b48]:         movi #8, adx   
6986 [0x1b4a]:         rmov adx, ebx   
6987 [0x1b4b]:         movi #2, ebx   
6989 [0x1b4d]:         movsl #0   
6990 [0x1b4e]:         movi #9, adx   
6992 [0x1b50]:         rmov adx, ebx   
6993 [0x1b51]:         movi #2, ebx   
6995 [0x1b53]:         movsl #0   
6996 [0x1b54]:         movi #10, adx   
6998 [0x1b56]:         rmov adx, ebx   
6999 [0x1b57]:         movi #2, ebx   
7001 [0x1b59]:         movsl #0   
7002 [0x1b5a]:         movi #11, adx   
7004 [0x1b5c]:         rmov adx, ebx   
7005 [0x1b5d]:         movi #2, ebx   
7007 [0x1b5f]:         movsl #0   
7008 [0x1b60]:         movi #12, adx   
7010 [0x1b62]:         rmov adx, ebx   
7011 [0x1b63]:         movi #2, ebx   
7013 [0x1b65]:         movsl #0   
7014 [0x1b66]:         movi #13, adx   
7016 [0x1b68]:         rmov adx, ebx   
7017 [0x1b69]:         movi #2, ebx   
7019 [0x1b6b]:         movsl #0   
7020 [0x1b6c]:         movi #14, adx   
7022 [0x1b6e]:         rmov adx, ebx   
7023 [0x1b6f]:         movi #2, ebx   
7025 [0x1b71]:         movsl #0   
7026 [0x1b72]:         movi #15, adx   
7028 [0x1b74]:         rmov adx, ebx   
7029 [0x1b75]:         movi #0, ebx   
7031 [0x1b77]:         movsl #0   
7032 [0x1b78]:         movi #16, adx   
7034 [0x1b7a]:         rmov adx, ebx   
7035 [0x1b7b]:         movi #2, ebx   
7037 [0x1b7d]:         movsl #0   
7038 [0x1b7e]:         movi #17, adx   
7040 [0x1b80]:         rmov adx, ebx   
7041 [0x1b81]:         movi #0, ebx   
7043 [0x1b83]:         movsl #0   
7044 [0x1b84]:         movi #18, adx   
7046 [0x1b86]:         rmov adx, ebx   
7047 [0x1b87]:         movi #0, ebx   
7049 [0x1b89]:         movsl #0   
7050 [0x1b8a]:         movi #19, adx   
7052 [0x1b8c]:         rmov adx, ebx   
7053 [0x1b8d]:         movi #0, ebx   
7055 [0x1b8f]:         movsl #0   
7056 [0x1b90]:         movi #20, adx   
7058 [0x1b92]:         rmov adx, ebx   
7059 [0x1b93]:         movi #0, ebx   
7061 [0x1b95]:         movsl #0   
7062 [0x1b96]:         movi #21, adx   
7064 [0x1b98]:         rmov adx, ebx   
7065 [0x1b99]:         movi #0, ebx   
7067 [0x1b9b]:         movsl #0   
7068 [0x1b9c]:         movi #22, adx   
7070 [0x1b9e]:         rmov adx, ebx   
7071 [0x1b9f]:         movi #0, ebx   
7073 [0x1ba1]:         movsl #0   
7074 [0x1ba2]:         movi #23, adx   
7076 [0x1ba4]:         rmov adx, ebx   
7077 [0x1ba5]:         movi #0, ebx   
7079 [0x1ba7]:         movsl #0   
7080 [0x1ba8]:         movi #24, adx   
7082 [0x1baa]:         rmov adx, ebx   
7083 [0x1bab]:         movi #0, ebx   
7085 [0x1bad]:         movsl #0   
7086 [0x1bae]:         movi #25, adx   
7088 [0x1bb0]:         rmov adx, ebx   
7089 [0x1bb1]:         movi #0, ebx   
7091 [0x1bb3]:         movsl #0   
7092 [0x1bb4]:         movi #26, adx   
7094 [0x1bb6]:         rmov adx, ebx   
7095 [0x1bb7]:         movi #0, ebx   
7097 [0x1bb9]:         movsl #0   
7098 [0x1bba]:         movi #27, adx   
7100 [0x1bbc]:         rmov adx, ebx   
7101 [0x1bbd]:         movi #0, ebx   
7103 [0x1bbf]:         movsl #0   
7104 [0x1bc0]:         movi #28, adx   
7106 [0x1bc2]:         rmov adx, ebx   
7107 [0x1bc3]:         movi #0, ebx   
7109 [0x1bc5]:         movsl #0   
7110 [0x1bc6]:         movi #29, adx   
7112 [0x1bc8]:         rmov adx, ebx   
7113 [0x1bc9]:         movi #0, ebx   
7115 [0x1bcb]:         movsl #0   
7116 [0x1bcc]:         movi #30, adx   
7118 [0x1bce]:         rmov adx, ebx   
7119 [0x1bcf]:         movi #2, ebx   
7121 [0x1bd1]:         movsl #0   
7122 [0x1bd2]:         movi #31, adx   
7124 [0x1bd4]:         rmov adx, ebx   
7125 [0x1bd5]:         movi #2, ebx   
7127 [0x1bd7]:         movsl #0   
7128 [0x1bd8]:         movi #32, adx   
7130 [0x1bda]:         rmov adx, ebx   
7131 [0x1bdb]:         movi #2, ebx   
7133 [0x1bdd]:         movsl #0   
7134 [0x1bde]:         movi #33, adx   
7136 [0x1be0]:         rmov adx, ebx   
7137 [0x1be1]:         movi #0, ebx   
7139 [0x1be3]:         movsl #0   
7140 [0x1be4]:         movi #34, adx   
7142 [0x1be6]:         rmov adx, ebx   
7143 [0x1be7]:         movi #0, ebx   
7145 [0x1be9]:         movsl #0   
7146 [0x1bea]:         movi #35, adx   
7148 [0x1bec]:         rmov adx, ebx   
7149 [0x1bed]:         movi #0, ebx   
7151 [0x1bef]:         movsl #0   
7152 [0x1bf0]:         movi #36, adx   
7154 [0x1bf2]:         rmov adx, ebx   
7155 [0x1bf3]:         movi #0, ebx   
7157 [0x1bf5]:         movsl #0   
7158 [0x1bf6]:         movi #37, adx   
7160 [0x1bf8]:         rmov adx, ebx   
7161 [0x1bf9]:         movi #0, ebx   
7163 [0x1bfb]:         movsl #0   
7164 [0x1bfc]:         movi #38, adx   
7166 [0x1bfe]:         rmov adx, ebx   
7167 [0x1bff]:         movi #0, ebx   
7169 [0x1c01]:         movsl #0   
7170 [0x1c02]:         movi #39, adx   
7172 [0x1c04]:         rmov adx, ebx   
7173 [0x1c05]:         movi #0, ebx   
7175 [0x1c07]:         movsl #0   
7176 [0x1c08]:         movi #40, adx   
7178 [0x1c0a]:         rmov adx, ebx   
7179 [0x1c0b]:         movi #0, ebx   
7181 [0x1c0d]:         movsl #0   
7182 [0x1c0e]:         movi #41, adx   
7184 [0x1c10]:         rmov adx, ebx   
7185 [0x1c11]:         movi #0, ebx   
7187 [0x1c13]:         movsl #0   
7188 [0x1c14]:         movi #42, adx   
7190 [0x1c16]:         rmov adx, ebx   
7191 [0x1c17]:         movi #0, ebx   
7193 [0x1c19]:         movsl #0   
7194 [0x1c1a]:         movi #43, adx   
7196 [0x1c1c]:         rmov adx, ebx   
7197 [0x1c1d]:         movi #0, ebx   
7199 [0x1c1f]:         movsl #0   
7200 [0x1c20]:         movi #44, adx   
7202 [0x1c22]:         rmov adx, ebx   
7203 [0x1c23]:         movi #0, ebx   
7205 [0x1c25]:         movsl #0   
7206 [0x1c26]:         movi #45, adx   
7208 [0x1c28]:         rmov adx, ebx   
7209 [0x1c29]:         movi #0, ebx   
7211 [0x1c2b]:         movsl #0   
7212 [0x1c2c]:         movi #46, adx   
7214 [0x1c2e]:         rmov adx, ebx   
7215 [0x1c2f]:         movi #2, ebx   
7217 [0x1c31]:         movsl #0   
7218 [0x1c32]:         movi #47, adx   
7220 [0x1c34]:         rmov adx, ebx   
7221 [0x1c35]:         movi #2, ebx   
7223 [0x1c37]:         movsl #0   
7224 [0x1c38]:         movi #48, adx   
7226 [0x1c3a]:         rmov adx, ebx   
7227 [0x1c3b]:         movi #2, ebx   
7229 [0x1c3d]:         movsl #0   
7230 [0x1c3e]:         movi #49, adx   
7232 [0x1c40]:         rmov adx, ebx   
7233 [0x1c41]:         movi #0, ebx   
7235 [0x1c43]:         movsl #0   
7236 [0x1c44]:         movi #50, adx   
7238 [0x1c46]:         rmov adx, ebx   
7239 [0x1c47]:         movi #0, ebx   
7241 [0x1c49]:         movsl #0   
7242 [0x1c4a]:         movi #51, adx   
7244 [0x1c4c]:         rmov adx, ebx   
7245 [0x1c4d]:         movi #0, ebx   
7247 [0x1c4f]:         movsl #0   
7248 [0x1c50]:         movi #52, adx   
7250 [0x1c52]:         rmov adx, ebx   
7251 [0x1c53]:         movi #0, ebx   
7253 [0x1c55]:         movsl #0   
7254 [0x1c56]:         movi #53, adx   
7256 [0x1c58]:         rmov adx, ebx   
7257 [0x1c59]:         movi #0, ebx   
7259 [0x1c5b]:         movsl #0   
7260 [0x1c5c]:         movi #54, adx   
7262 [0x1c5e]:         rmov adx, ebx   
7263 [0x1c5f]:         movi #0, ebx   
7265 [0x1c61]:         movsl #0   
7266 [0x1c62]:         movi #55, adx   
7268 [0x1c64]:         rmov adx, ebx   
7269 [0x1c65]:         movi #0, ebx   
7271 [0x1c67]:         movsl #0   
7272 [0x1c68]:         movi #56, adx   
7274 [0x1c6a]:         rmov adx, ebx   
7275 [0x1c6b]:         movi #0, ebx   
7277 [0x1c6d]:         movsl #0   
7278 [0x1c6e]:         movi #57, adx   
7280 [0x1c70]:         rmov adx, ebx   
7281 [0x1c71]:         movi #0, ebx   
7283 [0x1c73]:         movsl #0   
7284 [0x1c74]:         movi #58, adx   
7286 [0x1c76]:         rmov adx, ebx   
7287 [0x1c77]:         movi #0, ebx   
7289 [0x1c79]:         movsl #0   
7290 [0x1c7a]:         movi #59, adx   
7292 [0x1c7c]:         rmov adx, ebx   
7293 [0x1c7d]:         movi #0, ebx   
7295 [0x1c7f]:         movsl #0   
7296 [0x1c80]:         movi #60, adx   
7298 [0x1c82]:         rmov adx, ebx   
7299 [0x1c83]:         movi #0, ebx   
7301 [0x1c85]:         movsl #0   
7302 [0x1c86]:         movi #61, adx   
7304 [0x1c88]:         rmov adx, ebx   
7305 [0x1c89]:         movi #0, ebx   
7307 [0x1c8b]:         movsl #0   
7308 [0x1c8c]:         movi #62, adx   
7310 [0x1c8e]:         rmov adx, ebx   
7311 [0x1c8f]:         movi #2, ebx   
7313 [0x1c91]:         movsl #0   
7314 [0x1c92]:         movi #63, adx   
7316 [0x1c94]:         rmov adx, ebx   
7317 [0x1c95]:         movi #2, ebx   
7319 [0x1c97]:         movsl #0   
7320 [0x1c98]:         movi #64, adx   
7322 [0x1c9a]:         rmov adx, ebx   
7323 [0x1c9b]:         movi #2, ebx   
7325 [0x1c9d]:         movsl #0   
7326 [0x1c9e]:         movi #65, adx   
7328 [0x1ca0]:         rmov adx, ebx   
7329 [0x1ca1]:         movi #0, ebx   
7331 [0x1ca3]:         movsl #0   
7332 [0x1ca4]:         movi #66, adx   
7334 [0x1ca6]:         rmov adx, ebx   
7335 [0x1ca7]:         movi #0, ebx   
7337 [0x1ca9]:         movsl #0   
7338 [0x1caa]:         movi #67, adx   
7340 [0x1cac]:         rmov adx, ebx   
7341 [0x1cad]:         movi #0, ebx   
7343 [0x1caf]:         movsl #0   
7344 [0x1cb0]:         movi #68, adx   
7346 [0x1cb2]:         rmov adx, ebx   
7347 [0x1cb3]:         movi #0, ebx   
7349 [0x1cb5]:         movsl #0   
7350 [0x1cb6]:         movi #69, adx   
7352 [0x1cb8]:         rmov adx, ebx   
7353 [0x1cb9]:         movi #0, ebx   
7355 [0x1cbb]:         movsl #0   
7356 [0x1cbc]:         movi #70, adx   
7358 [0x1cbe]:         rmov adx, ebx   
7359 [0x1cbf]:         movi #0, ebx   
7361 [0x1cc1]:         movsl #0   
7362 [0x1cc2]:         movi #71, adx   
7364 [0x1cc4]:         rmov adx, ebx   
7365 [0x1cc5]:         movi #0, ebx   
7367 [0x1cc7]:         movsl #0   
7368 [0x1cc8]:         movi #72, adx   
7370 [0x1cca]:         rmov adx, ebx   
7371 [0x1ccb]:         movi #0, ebx   
7373 [0x1ccd]:         movsl #0   
7374 [0x1cce]:         movi #73, adx   
7376 [0x1cd0]:         rmov adx, ebx   
7377 [0x1cd1]:         movi #0, ebx   
7379 [0x1cd3]:         movsl #0   
7380 [0x1cd4]:         movi #74, adx   
7382 [0x1cd6]:         rmov adx, ebx   
7383 [0x1cd7]:         movi #0, ebx   
7385 [0x1cd9]:         movsl #0   
7386 [0x1cda]:         movi #75, adx   
7388 [0x1cdc]:         rmov adx, ebx   
7389 [0x1cdd]:         movi #0, ebx   
7391 [0x1cdf]:         movsl #0   
7392 [0x1ce0]:         movi #76, adx   
7394 [0x1ce2]:         rmov adx, ebx   
7395 [0x1ce3]:         movi #0, ebx   
7397 [0x1ce5]:         movsl #0   
7398 [0x1ce6]:         movi #77, adx   
7400 [0x1ce8]:         rmov adx, ebx   
7401 [0x1ce9]:         movi #0, ebx   
7403 [0x1ceb]:         movsl #0   
7404 [0x1cec]:         movi #78, adx   
7406 [0x1cee]:         rmov adx, ebx   
7407 [0x1cef]:         movi #2, ebx   
7409 [0x1cf1]:         movsl #0   
7410 [0x1cf2]:         movi #79, adx   
7412 [0x1cf4]:         rmov adx, ebx   
7413 [0x1cf5]:         movi #2, ebx   
7415 [0x1cf7]:         movsl #0   
7416 [0x1cf8]:         movi #80, adx   
7418 [0x1cfa]:         rmov adx, ebx   
7419 [0x1cfb]:         movi #2, ebx   
7421 [0x1cfd]:         movsl #0   
7422 [0x1cfe]:         movi #81, adx   
7424 [0x1d00]:         rmov adx, ebx   
7425 [0x1d01]:         movi #0, ebx   
7427 [0x1d03]:         movsl #0   
7428 [0x1d04]:         movi #82, adx   
7430 [0x1d06]:         rmov adx, ebx   
7431 [0x1d07]:         movi #0, ebx   
7433 [0x1d09]:         movsl #0   
7434 [0x1d0a]:         movi #83, adx   
7436 [0x1d0c]:         rmov adx, ebx   
7437 [0x1d0d]:         movi #0, ebx   
7439 [0x1d0f]:         movsl #0   
7440 [0x1d10]:         movi #84, adx   
7442 [0x1d12]:         rmov adx, ebx   
7443 [0x1d13]:         movi #0, ebx   
7445 [0x1d15]:         movsl #0   
7446 [0x1d16]:         movi #85, adx   
7448 [0x1d18]:         rmov adx, ebx   
7449 [0x1d19]:         movi #0, ebx   
7451 [0x1d1b]:         movsl #0   
7452 [0x1d1c]:         movi #86, adx   
7454 [0x1d1e]:         rmov adx, ebx   
7455 [0x1d1f]:         movi #0, ebx   
7457 [0x1d21]:         movsl #0   
7458 [0x1d22]:         movi #87, adx   
7460 [0x1d24]:         rmov adx, ebx   
7461 [0x1d25]:         movi #0, ebx   
7463 [0x1d27]:         movsl #0   
7464 [0x1d28]:         movi #88, adx   
7466 [0x1d2a]:         rmov adx, ebx   
7467 [0x1d2b]:         movi #0, ebx   
7469 [0x1d2d]:         movsl #0   
7470 [0x1d2e]:         movi #89, adx   
7472 [0x1d30]:         rmov adx, ebx   
7473 [0x1d31]:         movi #0, ebx   
7475 [0x1d33]:         movsl #0   
7476 [0x1d34]:         movi #90, adx   
7478 [0x1d36]:         rmov adx, ebx   
7479 [0x1d37]:         movi #0, ebx   
7481 [0x1d39]:         movsl #0   
7482 [0x1d3a]:         movi #91, adx   
7484 [0x1d3c]:         rmov adx, ebx   
7485 [0x1d3d]:         movi #0, ebx   
7487 [0x1d3f]:         movsl #0   
7488 [0x1d40]:         movi #92, adx   
7490 [0x1d42]:         rmov adx, ebx   
7491 [0x1d43]:         movi #0, ebx   
7493 [0x1d45]:         movsl #0   
7494 [0x1d46]:         movi #93, adx   
7496 [0x1d48]:         rmov adx, ebx   
7497 [0x1d49]:         movi #0, ebx   
7499 [0x1d4b]:         movsl #0   
7500 [0x1d4c]:         movi #94, adx   
7502 [0x1d4e]:         rmov adx, ebx   
7503 [0x1d4f]:         movi #2, ebx   
7505 [0x1d51]:         movsl #0   
7506 [0x1d52]:         movi #95, adx   
7508 [0x1d54]:         rmov adx, ebx   
7509 [0x1d55]:         movi #0, ebx   
7511 [0x1d57]:         movsl #0   
7512 [0x1d58]:         movi #96, adx   
7514 [0x1d5a]:         rmov adx, ebx   
7515 [0x1d5b]:         movi #2, ebx   
7517 [0x1d5d]:         movsl #0   
7518 [0x1d5e]:         movi #97, adx   
7520 [0x1d60]:         rmov adx, ebx   
7521 [0x1d61]:         movi #0, ebx   
7523 [0x1d63]:         movsl #0   
7524 [0x1d64]:         movi #98, adx   
7526 [0x1d66]:         rmov adx, ebx   
7527 [0x1d67]:         movi #0, ebx   
7529 [0x1d69]:         movsl #0   
7530 [0x1d6a]:         movi #99, adx   
7532 [0x1d6c]:         rmov adx, ebx   
7533 [0x1d6d]:         movi #0, ebx   
7535 [0x1d6f]:         movsl #0   
7536 [0x1d70]:         movi #100, adx   
7538 [0x1d72]:         rmov adx, ebx   
7539 [0x1d73]:         movi #0, ebx   
7541 [0x1d75]:         movsl #0   
7542 [0x1d76]:         movi #101, adx   
7544 [0x1d78]:         rmov adx, ebx   
7545 [0x1d79]:         movi #0, ebx   
7547 [0x1d7b]:         movsl #0   
7548 [0x1d7c]:         movi #102, adx   
7550 [0x1d7e]:         rmov adx, ebx   
7551 [0x1d7f]:         movi #0, ebx   
7553 [0x1d81]:         movsl #0   
7554 [0x1d82]:         movi #103, adx   
7556 [0x1d84]:         rmov adx, ebx   
7557 [0x1d85]:         movi #0, ebx   
7559 [0x1d87]:         movsl #0   
7560 [0x1d88]:         movi #104, adx   
7562 [0x1d8a]:         rmov adx, ebx   
7563 [0x1d8b]:         movi #0, ebx   
7565 [0x1d8d]:         movsl #0   
7566 [0x1d8e]:         movi #105, adx   
7568 [0x1d90]:         rmov adx, ebx   
7569 [0x1d91]:         movi #0, ebx   
7571 [0x1d93]:         movsl #0   
7572 [0x1d94]:         movi #106, adx   
7574 [0x1d96]:         rmov adx, ebx   
7575 [0x1d97]:         movi #0, ebx   
7577 [0x1d99]:         movsl #0   
7578 [0x1d9a]:         movi #107, adx   
7580 [0x1d9c]:         rmov adx, ebx   
7581 [0x1d9d]:         movi #0, ebx   
7583 [0x1d9f]:         movsl #0   
7584 [0x1da0]:         movi #108, adx   
7586 [0x1da2]:         rmov adx, ebx   
7587 [0x1da3]:         movi #0, ebx   
7589 [0x1da5]:         movsl #0   
7590 [0x1da6]:         movi #109, adx   
7592 [0x1da8]:         rmov adx, ebx   
7593 [0x1da9]:         movi #0, ebx   
7595 [0x1dab]:         movsl #0   
7596 [0x1dac]:         movi #110, adx   
7598 [0x1dae]:         rmov adx, ebx   
7599 [0x1daf]:         movi #2, ebx   
7601 [0x1db1]:         movsl #0   
7602 [0x1db2]:         movi #111, adx   
7604 [0x1db4]:         rmov adx, ebx   
7605 [0x1db5]:         movi #0, ebx   
7607 [0x1db7]:         movsl #0   
7608 [0x1db8]:         movi #112, adx   
7610 [0x1dba]:         rmov adx, ebx   
7611 [0x1dbb]:         movi #2, ebx   
7613 [0x1dbd]:         movsl #0   
7614 [0x1dbe]:         movi #113, adx   
7616 [0x1dc0]:         rmov adx, ebx   
7617 [0x1dc1]:         movi #2, ebx   
7619 [0x1dc3]:         movsl #0   
7620 [0x1dc4]:         movi #114, adx   
7622 [0x1dc6]:         rmov adx, ebx   
7623 [0x1dc7]:         movi #2, ebx   
7625 [0x1dc9]:         movsl #0   
7626 [0x1dca]:         movi #115, adx   
7628 [0x1dcc]:         rmov adx, ebx   
7629 [0x1dcd]:         movi #2, ebx   
7631 [0x1dcf]:         movsl #0   
7632 [0x1dd0]:         movi #116, adx   
7634 [0x1dd2]:         rmov adx, ebx   
7635 [0x1dd3]:         movi #2, ebx   
7637 [0x1dd5]:         movsl #0   
7638 [0x1dd6]:         movi #117, adx   
7640 [0x1dd8]:         rmov adx, ebx   
7641 [0x1dd9]:         movi #2, ebx   
7643 [0x1ddb]:         movsl #0   
7644 [0x1ddc]:         movi #118, adx   
7646 [0x1dde]:         rmov adx, ebx   
7647 [0x1ddf]:         movi #2, ebx   
7649 [0x1de1]:         movsl #0   
7650 [0x1de2]:         movi #119, adx   
7652 [0x1de4]:         rmov adx, ebx   
7653 [0x1de5]:         movi #2, ebx   
7655 [0x1de7]:         movsl #0   
7656 [0x1de8]:         movi #120, adx   
7658 [0x1dea]:         rmov adx, ebx   
7659 [0x1deb]:         movi #2, ebx   
7661 [0x1ded]:         movsl #0   
7662 [0x1dee]:         movi #121, adx   
7664 [0x1df0]:         rmov adx, ebx   
7665 [0x1df1]:         movi #2, ebx   
7667 [0x1df3]:         movsl #0   
7668 [0x1df4]:         movi #122, adx   
7670 [0x1df6]:         rmov adx, ebx   
7671 [0x1df7]:         movi #2, ebx   
7673 [0x1df9]:         movsl #0   
7674 [0x1dfa]:         movi #123, adx   
7676 [0x1dfc]:         rmov adx, ebx   
7677 [0x1dfd]:         movi #2, ebx   
7679 [0x1dff]:         movsl #0   
7680 [0x1e00]:         movi #124, adx   
7682 [0x1e02]:         rmov adx, ebx   
7683 [0x1e03]:         movi #2, ebx   
7685 [0x1e05]:         movsl #0   
7686 [0x1e06]:         movi #125, adx   
7688 [0x1e08]:         rmov adx, ebx   
7689 [0x1e09]:         movi #2, ebx   
7691 [0x1e0b]:         movsl #0   
7692 [0x1e0c]:         movi #126, adx   
7694 [0x1e0e]:         rmov adx, ebx   
7695 [0x1e0f]:         movi #2, ebx   
7697 [0x1e11]:         movsl #0   
7698 [0x1e12]:         movi #127, adx   
7700 [0x1e14]:         rmov adx, ebx   
7701 [0x1e15]:         movi #0, ebx   
7703 [0x1e17]:         movsl #0   
7704 [0x1e18]:         movi #128, adx   
7706 [0x1e1a]:         rmov adx, ebx   
7707 [0x1e1b]:         movi #0, ebx   
7709 [0x1e1d]:         movsl #0   
7710 [0x1e1e]:         movi #129, adx   
7712 [0x1e20]:         rmov adx, ebx   
7713 [0x1e21]:         movi #0, ebx   
7715 [0x1e23]:         movsl #0   
7716 [0x1e24]:         movi #130, adx   
7718 [0x1e26]:         rmov adx, ebx   
7719 [0x1e27]:         movi #0, ebx   
7721 [0x1e29]:         movsl #0   
7722 [0x1e2a]:         movi #131, adx   
7724 [0x1e2c]:         rmov adx, ebx   
7725 [0x1e2d]:         movi #0, ebx   
7727 [0x1e2f]:         movsl #0   
7728 [0x1e30]:         movi #132, adx   
7730 [0x1e32]:         rmov adx, ebx   
7731 [0x1e33]:         movi #0, ebx   
7733 [0x1e35]:         movsl #0   
7734 [0x1e36]:         movi #133, adx   
7736 [0x1e38]:         rmov adx, ebx   
7737 [0x1e39]:         movi #0, ebx   
7739 [0x1e3b]:         movsl #0   
7740 [0x1e3c]:         movi #134, adx   
7742 [0x1e3e]:         rmov adx, ebx   
7743 [0x1e3f]:         movi #0, ebx   
7745 [0x1e41]:         movsl #0   
7746 [0x1e42]:         movi #135, adx   
7748 [0x1e44]:         rmov adx, ebx   
7749 [0x1e45]:         movi #0, ebx   
7751 [0x1e47]:         movsl #0   
7752 [0x1e48]:         movi #136, adx   
7754 [0x1e4a]:         rmov adx, ebx   
7755 [0x1e4b]:         movi #0, ebx   
7757 [0x1e4d]:         movsl #0   
7758 [0x1e4e]:         movi #137, adx   
7760 [0x1e50]:         rmov adx, ebx   
7761 [0x1e51]:         movi #0, ebx   
7763 [0x1e53]:         movsl #0   
7764 [0x1e54]:         movi #138, adx   
7766 [0x1e56]:         rmov adx, ebx   
7767 [0x1e57]:         movi #0, ebx   
7769 [0x1e59]:         movsl #0   
7770 [0x1e5a]:         movi #139, adx   
7772 [0x1e5c]:         rmov adx, ebx   
7773 [0x1e5d]:         movi #0, ebx   
7775 [0x1e5f]:         movsl #0   
7776 [0x1e60]:         movi #140, adx   
7778 [0x1e62]:         rmov adx, ebx   
7779 [0x1e63]:         movi #0, ebx   
7781 [0x1e65]:         movsl #0   
7782 [0x1e66]:         movi #141, adx   
7784 [0x1e68]:         rmov adx, ebx   
7785 [0x1e69]:         movi #0, ebx   
7787 [0x1e6b]:         movsl #0   
7788 [0x1e6c]:         movi #142, adx   
7790 [0x1e6e]:         rmov adx, ebx   
7791 [0x1e6f]:         movi #0, ebx   
7793 [0x1e71]:         movsl #0   
7794 [0x1e72]:         movi #143, adx   
7796 [0x1e74]:         rmov adx, ebx   
7797 [0x1e75]:         movg @108 // @ui.res.drawable#__srt_global   
7798 [0x1e76]:         movn #18   
7800 [0x1e78]:         popobj   
7801 [0x1e79]:         new_class @0 // std#__srt_global   
7802 [0x1e7a]:         swap    
7803 [0x1e7b]:         dup    
7804 [0x1e7c]:         istore 13   
7806 [0x1e7e]:         movg @108 // @ui.res.drawable#__srt_global   
7807 [0x1e7f]:         movn #18   
7809 [0x1e81]:         pushobj   
7810 [0x1e82]:         istore 16   
7812 [0x1e84]:         movi #9, ebx   
7814 [0x1e86]:         rstore ebx   
7815 [0x1e87]:         call @3711 // <ui.support#drawable.drawable>   
7816 [0x1e88]:         movg @108 // @ui.res.drawable#__srt_global   
7817 [0x1e89]:         movn #19   
7819 [0x1e8b]:         popobj   
7820 [0x1e8c]:         movi #144, ebx   
7822 [0x1e8e]:         newarry ebx: 8   
7823 [0x1e8f]:         movi #0, ebx   
7825 [0x1e91]:         movsl #0   
7826 [0x1e92]:         movi #0, adx   
7828 [0x1e94]:         rmov adx, ebx   
7829 [0x1e95]:         movi #2, ebx   
7831 [0x1e97]:         movsl #0   
7832 [0x1e98]:         movi #1, adx   
7834 [0x1e9a]:         rmov adx, ebx   
7835 [0x1e9b]:         movi #2, ebx   
7837 [0x1e9d]:         movsl #0   
7838 [0x1e9e]:         movi #2, adx   
7840 [0x1ea0]:         rmov adx, ebx   
7841 [0x1ea1]:         movi #2, ebx   
7843 [0x1ea3]:         movsl #0   
7844 [0x1ea4]:         movi #3, adx   
7846 [0x1ea6]:         rmov adx, ebx   
7847 [0x1ea7]:         movi #2, ebx   
7849 [0x1ea9]:         movsl #0   
7850 [0x1eaa]:         movi #4, adx   
7852 [0x1eac]:         rmov adx, ebx   
7853 [0x1ead]:         movi #2, ebx   
7855 [0x1eaf]:         movsl #0   
7856 [0x1eb0]:         movi #5, adx   
7858 [0x1eb2]:         rmov adx, ebx   
7859 [0x1eb3]:         movi #2, ebx   
7861 [0x1eb5]:         movsl #0   
7862 [0x1eb6]:         movi #6, adx   
7864 [0x1eb8]:         rmov adx, ebx   
7865 [0x1eb9]:         movi #2, ebx   
7867 [0x1ebb]:         movsl #0   
7868 [0x1ebc]:         movi #7, adx   
7870 [0x1ebe]:         rmov adx, ebx   
7871 [0x1ebf]:         movi #2, ebx   
7873 [0x1ec1]:         movsl #0   
7874 [0x1ec2]:         movi #8, adx   
7876 [0x1ec4]:         rmov adx, ebx   
7877 [0x1ec5]:         movi #2, ebx   
7879 [0x1ec7]:         movsl #0   
7880 [0x1ec8]:         movi #9, adx   
7882 [0x1eca]:         rmov adx, ebx   
7883 [0x1ecb]:         movi #2, ebx   
7885 [0x1ecd]:         movsl #0   
7886 [0x1ece]:         movi #10, adx   
7888 [0x1ed0]:         rmov adx, ebx   
7889 [0x1ed1]:         movi #2, ebx   
7891 [0x1ed3]:         movsl #0   
7892 [0x1ed4]:         movi #11, adx   
7894 [0x1ed6]:         rmov adx, ebx   
7895 [0x1ed7]:         movi #2, ebx   
7897 [0x1ed9]:         movsl #0   
7898 [0x1eda]:         movi #12, adx   
7900 [0x1edc]:         rmov adx, ebx   
7901 [0x1edd]:         movi #2, ebx   
7903 [0x1edf]:         movsl #0   
7904 [0x1ee0]:         movi #13, adx   
7906 [0x1ee2]:         rmov adx, ebx   
7907 [0x1ee3]:         movi #2, ebx   
7909 [0x1ee5]:         movsl #0   
7910 [0x1ee6]:         movi #14, adx   
7912 [0x1ee8]:         rmov adx, ebx   
7913 [0x1ee9]:         movi #2, ebx   
7915 [0x1eeb]:         movsl #0   
7916 [0x1eec]:         movi #15, adx   
7918 [0x1eee]:         rmov adx, ebx   
7919 [0x1eef]:         movi #0, ebx   
7921 [0x1ef1]:         movsl #0   
7922 [0x1ef2]:         movi #16, adx   
7924 [0x1ef4]:         rmov adx, ebx   
7925 [0x1ef5]:         movi #2, ebx   
7927 [0x1ef7]:         movsl #0   
7928 [0x1ef8]:         movi #17, adx   
7930 [0x1efa]:         rmov adx, ebx   
7931 [0x1efb]:         movi #0, ebx   
7933 [0x1efd]:         movsl #0   
7934 [0x1efe]:         movi #18, adx   
7936 [0x1f00]:         rmov adx, ebx   
7937 [0x1f01]:         movi #0, ebx   
7939 [0x1f03]:         movsl #0   
7940 [0x1f04]:         movi #19, adx   
7942 [0x1f06]:         rmov adx, ebx   
7943 [0x1f07]:         movi #0, ebx   
7945 [0x1f09]:         movsl #0   
7946 [0x1f0a]:         movi #20, adx   
7948 [0x1f0c]:         rmov adx, ebx   
7949 [0x1f0d]:         movi #0, ebx   
7951 [0x1f0f]:         movsl #0   
7952 [0x1f10]:         movi #21, adx   
7954 [0x1f12]:         rmov adx, ebx   
7955 [0x1f13]:         movi #0, ebx   
7957 [0x1f15]:         movsl #0   
7958 [0x1f16]:         movi #22, adx   
7960 [0x1f18]:         rmov adx, ebx   
7961 [0x1f19]:         movi #0, ebx   
7963 [0x1f1b]:         movsl #0   
7964 [0x1f1c]:         movi #23, adx   
7966 [0x1f1e]:         rmov adx, ebx   
7967 [0x1f1f]:         movi #0, ebx   
7969 [0x1f21]:         movsl #0   
7970 [0x1f22]:         movi #24, adx   
7972 [0x1f24]:         rmov adx, ebx   
7973 [0x1f25]:         movi #0, ebx   
7975 [0x1f27]:         movsl #0   
7976 [0x1f28]:         movi #25, adx   
7978 [0x1f2a]:         rmov adx, ebx   
7979 [0x1f2b]:         movi #0, ebx   
7981 [0x1f2d]:         movsl #0   
7982 [0x1f2e]:         movi #26, adx   
7984 [0x1f30]:         rmov adx, ebx   
7985 [0x1f31]:         movi #0, ebx   
7987 [0x1f33]:         movsl #0   
7988 [0x1f34]:         movi #27, adx   
7990 [0x1f36]:         rmov adx, ebx   
7991 [0x1f37]:         movi #0, ebx   
7993 [0x1f39]:         movsl #0   
7994 [0x1f3a]:         movi #28, adx   
7996 [0x1f3c]:         rmov adx, ebx   
7997 [0x1f3d]:         movi #0, ebx   
7999 [0x1f3f]:         movsl #0   
8000 [0x1f40]:         movi #29, adx   
8002 [0x1f42]:         rmov adx, ebx   
8003 [0x1f43]:         movi #0, ebx   
8005 [0x1f45]:         movsl #0   
8006 [0x1f46]:         movi #30, adx   
8008 [0x1f48]:         rmov adx, ebx   
8009 [0x1f49]:         movi #2, ebx   
8011 [0x1f4b]:         movsl #0   
8012 [0x1f4c]:         movi #31, adx   
8014 [0x1f4e]:         rmov adx, ebx   
8015 [0x1f4f]:         movi #2, ebx   
8017 [0x1f51]:         movsl #0   
8018 [0x1f52]:         movi #32, adx   
8020 [0x1f54]:         rmov adx, ebx   
8021 [0x1f55]:         movi #2, ebx   
8023 [0x1f57]:         movsl #0   
8024 [0x1f58]:         movi #33, adx   
8026 [0x1f5a]:         rmov adx, ebx   
8027 [0x1f5b]:         movi #0, ebx   
8029 [0x1f5d]:         movsl #0   
8030 [0x1f5e]:         movi #34, adx   
8032 [0x1f60]:         rmov adx, ebx   
8033 [0x1f61]:         movi #0, ebx   
8035 [0x1f63]:         movsl #0   
8036 [0x1f64]:         movi #35, adx   
8038 [0x1f66]:         rmov adx, ebx   
8039 [0x1f67]:         movi #0, ebx   
8041 [0x1f69]:         movsl #0   
8042 [0x1f6a]:         movi #36, adx   
8044 [0x1f6c]:         rmov adx, ebx   
8045 [0x1f6d]:         movi #0, ebx   
8047 [0x1f6f]:         movsl #0   
8048 [0x1f70]:         movi #37, adx   
8050 [0x1f72]:         rmov adx, ebx   
8051 [0x1f73]:         movi #0, ebx   
8053 [0x1f75]:         movsl #0   
8054 [0x1f76]:         movi #38, adx   
8056 [0x1f78]:         rmov adx, ebx   
8057 [0x1f79]:         movi #0, ebx   
8059 [0x1f7b]:         movsl #0   
8060 [0x1f7c]:         movi #39, adx   
8062 [0x1f7e]:         rmov adx, ebx   
8063 [0x1f7f]:         movi #0, ebx   
8065 [0x1f81]:         movsl #0   
8066 [0x1f82]:         movi #40, adx   
8068 [0x1f84]:         rmov adx, ebx   
8069 [0x1f85]:         movi #0, ebx   
8071 [0x1f87]:         movsl #0   
8072 [0x1f88]:         movi #41, adx   
8074 [0x1f8a]:         rmov adx, ebx   
8075 [0x1f8b]:         movi #0, ebx   
8077 [0x1f8d]:         movsl #0   
8078 [0x1f8e]:         movi #42, adx   
8080 [0x1f90]:         rmov adx, ebx   
8081 [0x1f91]:         movi #0, ebx   
8083 [0x1f93]:         movsl #0   
8084 [0x1f94]:         movi #43, adx   
8086 [0x1f96]:         rmov adx, ebx   
8087 [0x1f97]:         movi #2, ebx   
8089 [0x1f99]:         movsl #0   
8090 [0x1f9a]:         movi #44, adx   
8092 [0x1f9c]:         rmov adx, ebx   
8093 [0x1f9d]:         movi #2, ebx   
8095 [0x1f9f]:         movsl #0   
8096 [0x1fa0]:         movi #45, adx   
8098 [0x1fa2]:         rmov adx, ebx   
8099 [0x1fa3]:         movi #0, ebx   
8101 [0x1fa5]:         movsl #0   
8102 [0x1fa6]:         movi #46, adx   
8104 [0x1fa8]:         rmov adx, ebx   
8105 [0x1fa9]:         movi #2, ebx   
8107 [0x1fab]:         movsl #0   
8108 [0x1fac]:         movi #47, adx   
8110 [0x1fae]:         rmov adx, ebx   
8111 [0x1faf]:         movi #2, ebx   
8113 [0x1fb1]:         movsl #0   
8114 [0x1fb2]:         movi #48, adx   
8116 [0x1fb4]:         rmov adx, ebx   
8117 [0x1fb5]:         movi #2, ebx   
8119 [0x1fb7]:         movsl #0   
8120 [0x1fb8]:         movi #49, adx   
8122 [0x1fba]:         rmov adx, ebx   
8123 [0x1fbb]:         movi #0, ebx   
8125 [0x1fbd]:         movsl #0   
8126 [0x1fbe]:         movi #50, adx   
8128 [0x1fc0]:         rmov adx, ebx   
8129 [0x1fc1]:         movi #0, ebx   
8131 [0x1fc3]:         movsl #0   
8132 [0x1fc4]:         movi #51, adx   
8134 [0x1fc6]:         rmov adx, ebx   
8135 [0x1fc7]:         movi #0, ebx   
8137 [0x1fc9]:         movsl #0   
8138 [0x1fca]:         movi #52, adx   
8140 [0x1fcc]:         rmov adx, ebx   
8141 [0x1fcd]:         movi #0, ebx   
8143 [0x1fcf]:         movsl #0   
8144 [0x1fd0]:         movi #53, adx   
8146 [0x1fd2]:         rmov adx, ebx   
8147 [0x1fd3]:         movi #0, ebx   
8149 [0x1fd5]:         movsl #0   
8150 [0x1fd6]:         movi #54, adx   
8152 [0x1fd8]:         rmov adx, ebx   
8153 [0x1fd9]:         movi #0, ebx   
8155 [0x1fdb]:         movsl #0   
8156 [0x1fdc]:         movi #55, adx   
8158 [0x1fde]:         rmov adx, ebx   
8159 [0x1fdf]:         movi #0, ebx   
8161 [0x1fe1]:         movsl #0   
8162 [0x1fe2]:         movi #56, adx   
8164 [0x1fe4]:         rmov adx, ebx   
8165 [0x1fe5]:         movi #0, ebx   
8167 [0x1fe7]:         movsl #0   
8168 [0x1fe8]:         movi #57, adx   
8170 [0x1fea]:         rmov adx, ebx   
8171 [0x1feb]:         movi #0, ebx   
8173 [0x1fed]:         movsl #0   
8174 [0x1fee]:         movi #58, adx   
8176 [0x1ff0]:         rmov adx, ebx   
8177 [0x1ff1]:         movi #0, ebx   
8179 [0x1ff3]:         movsl #0   
8180 [0x1ff4]:         movi #59, adx   
8182 [0x1ff6]:         rmov adx, ebx   
8183 [0x1ff7]:         movi #2, ebx   
8185 [0x1ff9]:         movsl #0   
8186 [0x1ffa]:         movi #60, adx   
8188 [0x1ffc]:         rmov adx, ebx   
8189 [0x1ffd]:         movi #2, ebx   
8191 [0x1fff]:         movsl #0   
8192 [0x2000]:         movi #61, adx   
8194 [0x2002]:         rmov adx, ebx   
8195 [0x2003]:         movi #0, ebx   
8197 [0x2005]:         movsl #0   
8198 [0x2006]:         movi #62, adx   
8200 [0x2008]:         rmov adx, ebx   
8201 [0x2009]:         movi #2, ebx   
8203 [0x200b]:         movsl #0   
8204 [0x200c]:         movi #63, adx   
8206 [0x200e]:         rmov adx, ebx   
8207 [0x200f]:         movi #2, ebx   
8209 [0x2011]:         movsl #0   
8210 [0x2012]:         movi #64, adx   
8212 [0x2014]:         rmov adx, ebx   
8213 [0x2015]:         movi #2, ebx   
8215 [0x2017]:         movsl #0   
8216 [0x2018]:         movi #65, adx   
8218 [0x201a]:         rmov adx, ebx   
8219 [0x201b]:         movi #0, ebx   
8221 [0x201d]:         movsl #0   
8222 [0x201e]:         movi #66, adx   
8224 [0x2020]:         rmov adx, ebx   
8225 [0x2021]:         movi #0, ebx   
8227 [0x2023]:         movsl #0   
8228 [0x2024]:         movi #67, adx   
8230 [0x2026]:         rmov adx, ebx   
8231 [0x2027]:         movi #0, ebx   
8233 [0x2029]:         movsl #0   
8234 [0x202a]:         movi #68, adx   
8236 [0x202c]:         rmov adx, ebx   
8237 [0x202d]:         movi #0, ebx   
8239 [0x202f]:         movsl #0   
8240 [0x2030]:         movi #69, adx   
8242 [0x2032]:         rmov adx, ebx   
8243 [0x2033]:         movi #0, ebx   
8245 [0x2035]:         movsl #0   
8246 [0x2036]:         movi #70, adx   
8248 [0x2038]:         rmov adx, ebx   
8249 [0x2039]:         movi #0, ebx   
8251 [0x203b]:         movsl #0   
8252 [0x203c]:         movi #71, adx   
8254 [0x203e]:         rmov adx, ebx   
8255 [0x203f]:         movi #0, ebx   
8257 [0x2041]:         movsl #0   
8258 [0x2042]:         movi #72, adx   
8260 [0x2044]:         rmov adx, ebx   
8261 [0x2045]:         movi #0, ebx   
8263 [0x2047]:         movsl #0   
8264 [0x2048]:         movi #73, adx   
8266 [0x204a]:         rmov adx, ebx   
8267 [0x204b]:         movi #0, ebx   
8269 [0x204d]:         movsl #0   
8270 [0x204e]:         movi #74, adx   
8272 [0x2050]:         rmov adx, ebx   
8273 [0x2051]:         movi #0, ebx   
8275 [0x2053]:         movsl #0   
8276 [0x2054]:         movi #75, adx   
8278 [0x2056]:         rmov adx, ebx   
8279 [0x2057]:         movi #2, ebx   
8281 [0x2059]:         movsl #0   
8282 [0x205a]:         movi #76, adx   
8284 [0x205c]:         rmov adx, ebx   
8285 [0x205d]:         movi #2, ebx   
8287 [0x205f]:         movsl #0   
8288 [0x2060]:         movi #77, adx   
8290 [0x2062]:         rmov adx, ebx   
8291 [0x2063]:         movi #0, ebx   
8293 [0x2065]:         movsl #0   
8294 [0x2066]:         movi #78, adx   
8296 [0x2068]:         rmov adx, ebx   
8297 [0x2069]:         movi #2, ebx   
8299 [0x206b]:         movsl #0   
8300 [0x206c]:         movi #79, adx   
8302 [0x206e]:         rmov adx, ebx   
8303 [0x206f]:         movi #2, ebx   
8305 [0x2071]:         movsl #0   
8306 [0x2072]:         movi #80, adx   
8308 [0x2074]:         rmov adx, ebx   
8309 [0x2075]:         movi #2, ebx   
8311 [0x2077]:         movsl #0   
8312 [0x2078]:         movi #81, adx   
8314 [0x207a]:         rmov adx, ebx   
8315 [0x207b]:         movi #0, ebx   
8317 [0x207d]:         movsl #0   
8318 [0x207e]:         movi #82, adx   
8320 [0x2080]:         rmov adx, ebx   
8321 [0x2081]:         movi #0, ebx   
8323 [0x2083]:         movsl #0   
8324 [0x2084]:         movi #83, adx   
8326 [0x2086]:         rmov adx, ebx   
8327 [0x2087]:         movi #0, ebx   
8329 [0x2089]:         movsl #0   
8330 [0x208a]:         movi #84, adx   
8332 [0x208c]:         rmov adx, ebx   
8333 [0x208d]:         movi #0, ebx   
8335 [0x208f]:         movsl #0   
8336 [0x2090]:         movi #85, adx   
8338 [0x2092]:         rmov adx, ebx   
8339 [0x2093]:         movi #0, ebx   
8341 [0x2095]:         movsl #0   
8342 [0x2096]:         movi #86, adx   
8344 [0x2098]:         rmov adx, ebx   
8345 [0x2099]:         movi #0, ebx   
8347 [0x209b]:         movsl #0   
8348 [0x209c]:         movi #87, adx   
8350 [0x209e]:         rmov adx, ebx   
8351 [0x209f]:         movi #0, ebx   
8353 [0x20a1]:         movsl #0   
8354 [0x20a2]:         movi #88, adx   
8356 [0x20a4]:         rmov adx, ebx   
8357 [0x20a5]:         movi #0, ebx   
8359 [0x20a7]:         movsl #0   
8360 [0x20a8]:         movi #89, adx   
8362 [0x20aa]:         rmov adx, ebx   
8363 [0x20ab]:         movi #0, ebx   
8365 [0x20ad]:         movsl #0   
8366 [0x20ae]:         movi #90, adx   
8368 [0x20b0]:         rmov adx, ebx   
8369 [0x20b1]:         movi #0, ebx   
8371 [0x20b3]:         movsl #0   
8372 [0x20b4]:         movi #91, adx   
8374 [0x20b6]:         rmov adx, ebx   
8375 [0x20b7]:         movi #2, ebx   
8377 [0x20b9]:         movsl #0   
8378 [0x20ba]:         movi #92, adx   
8380 [0x20bc]:         rmov adx, ebx   
8381 [0x20bd]:         movi #2, ebx   
8383 [0x20bf]:         movsl #0   
8384 [0x20c0]:         movi #93, adx   
8386 [0x20c2]:         rmov adx, ebx   
8387 [0x20c3]:         movi #0, ebx   
8389 [0x20c5]:         movsl #0   
8390 [0x20c6]:         movi #94, adx   
8392 [0x20c8]:         rmov adx, ebx   
8393 [0x20c9]:         movi #2, ebx   
8395 [0x20cb]:         movsl #0   
8396 [0x20cc]:         movi #95, adx   
8398 [0x20ce]:         rmov adx, ebx   
8399 [0x20cf]:         movi #0, ebx   
8401 [0x20d1]:         movsl #0   
8402 [0x20d2]:         movi #96, adx   
8404 [0x20d4]:         rmov adx, ebx   
8405 [0x20d5]:         movi #2, ebx   
8407 [0x20d7]:         movsl #0   
8408 [0x20d8]:         movi #97, adx   
8410 [0x20da]:         rmov adx, ebx   
8411 [0x20db]:         movi #0, ebx   
8413 [0x20dd]:         movsl #0   
8414 [0x20de]:         movi #98, adx   
8416 [0x20e0]:         rmov adx, ebx   
8417 [0x20e1]:         movi #0, ebx   
8419 [0x20e3]:         movsl #0   
8420 [0x20e4]:         movi #99, adx   
8422 [0x20e6]:         rmov adx, ebx   
8423 [0x20e7]:         movi #0, ebx   
8425 [0x20e9]:         movsl #0   
8426 [0x20ea]:         movi #100, adx   
8428 [0x20ec]:         rmov adx, ebx   
8429 [0x20ed]:         movi #0, ebx   
8431 [0x20ef]:         movsl #0   
8432 [0x20f0]:         movi #101, adx   
8434 [0x20f2]:         rmov adx, ebx   
8435 [0x20f3]:         movi #0, ebx   
8437 [0x20f5]:         movsl #0   
8438 [0x20f6]:         movi #102, adx   
8440 [0x20f8]:         rmov adx, ebx   
8441 [0x20f9]:         movi #0, ebx   
8443 [0x20fb]:         movsl #0   
8444 [0x20fc]:         movi #103, adx   
8446 [0x20fe]:         rmov adx, ebx   
8447 [0x20ff]:         movi #0, ebx   
8449 [0x2101]:         movsl #0   
8450 [0x2102]:         movi #104, adx   
8452 [0x2104]:         rmov adx, ebx   
8453 [0x2105]:         movi #0, ebx   
8455 [0x2107]:         movsl #0   
8456 [0x2108]:         movi #105, adx   
8458 [0x210a]:         rmov adx, ebx   
8459 [0x210b]:         movi #0, ebx   
8461 [0x210d]:         movsl #0   
8462 [0x210e]:         movi #106, adx   
8464 [0x2110]:         rmov adx, ebx   
8465 [0x2111]:         movi #0, ebx   
8467 [0x2113]:         movsl #0   
8468 [0x2114]:         movi #107, adx   
8470 [0x2116]:         rmov adx, ebx   
8471 [0x2117]:         movi #0, ebx   
8473 [0x2119]:         movsl #0   
8474 [0x211a]:         movi #108, adx   
8476 [0x211c]:         rmov adx, ebx   
8477 [0x211d]:         movi #0, ebx   
8479 [0x211f]:         movsl #0   
8480 [0x2120]:         movi #109, adx   
8482 [0x2122]:         rmov adx, ebx   
8483 [0x2123]:         movi #0, ebx   
8485 [0x2125]:         movsl #0   
8486 [0x2126]:         movi #110, adx   
8488 [0x2128]:         rmov adx, ebx   
8489 [0x2129]:         movi #2, ebx   
8491 [0x212b]:         movsl #0   
8492 [0x212c]:         movi #111, adx   
8494 [0x212e]:         rmov adx, ebx   
8495 [0x212f]:         movi #0, ebx   
8497 [0x2131]:         movsl #0   
8498 [0x2132]:         movi #112, adx   
8500 [0x2134]:         rmov adx, ebx   
8501 [0x2135]:         movi #2, ebx   
8503 [0x2137]:         movsl #0   
8504 [0x2138]:         movi #113, adx   
8506 [0x213a]:         rmov adx, ebx   
8507 [0x213b]:         movi #2, ebx   
8509 [0x213d]:         movsl #0   
8510 [0x213e]:         movi #114, adx   
8512 [0x2140]:         rmov adx, ebx   
8513 [0x2141]:         movi #2, ebx   
8515 [0x2143]:         movsl #0   
8516 [0x2144]:         movi #115, adx   
8518 [0x2146]:         rmov adx, ebx   
8519 [0x2147]:         movi #2, ebx   
8521 [0x2149]:         movsl #0   
8522 [0x214a]:         movi #116, adx   
8524 [0x214c]:         rmov adx, ebx   
8525 [0x214d]:         movi #2, ebx   
8527 [0x214f]:         movsl #0   
8528 [0x2150]:         movi #117, adx   
8530 [0x2152]:         rmov adx, ebx   
8531 [0x2153]:         movi #2, ebx   
8533 [0x2155]:         movsl #0   
8534 [0x2156]:         movi #118, adx   
8536 [0x2158]:         rmov adx, ebx   
8537 [0x2159]:         movi #2, ebx   
8539 [0x215b]:         movsl #0   
8540 [0x215c]:         movi #119, adx   
8542 [0x215e]:         rmov adx, ebx   
8543 [0x215f]:         movi #2, ebx   
8545 [0x2161]:         movsl #0   
8546 [0x2162]:         movi #120, adx   
8548 [0x2164]:         rmov adx, ebx   
8549 [0x2165]:         movi #2, ebx   
8551 [0x2167]:         movsl #0   
8552 [0x2168]:         movi #121, adx   
8554 [0x216a]:         rmov adx, ebx   
8555 [0x216b]:         movi #2, ebx   
8557 [0x216d]:         movsl #0   
8558 [0x216e]:         movi #122, adx   
8560 [0x2170]:         rmov adx, ebx   
8561 [0x2171]:         movi #2, ebx   
8563 [0x2173]:         movsl #0   
8564 [0x2174]:         movi #123, adx   
8566 [0x2176]:         rmov adx, ebx   
8567 [0x2177]:         movi #2, ebx   
8569 [0x2179]:         movsl #0   
8570 [0x217a]:         movi #124, adx   
8572 [0x217c]:         rmov adx, ebx   
8573 [0x217d]:         movi #2, ebx   
8575 [0x217f]:         movsl #0   
8576 [0x2180]:         movi #125, adx   
8578 [0x2182]:         rmov adx, ebx   
8579 [0x2183]:         movi #2, ebx   
8581 [0x2185]:         movsl #0   
8582 [0x2186]:         movi #126, adx   
8584 [0x2188]:         rmov adx, ebx   
8585 [0x2189]:         movi #2, ebx   
8587 [0x218b]:         movsl #0   
8588 [0x218c]:         movi #127, adx   
8590 [0x218e]:         rmov adx, ebx   
8591 [0x218f]:         movi #0, ebx   
8593 [0x2191]:         movsl #0   
8594 [0x2192]:         movi #128, adx   
8596 [0x2194]:         rmov adx, ebx   
8597 [0x2195]:         movi #0, ebx   
8599 [0x2197]:         movsl #0   
8600 [0x2198]:         movi #129, adx   
8602 [0x219a]:         rmov adx, ebx   
8603 [0x219b]:         movi #0, ebx   
8605 [0x219d]:         movsl #0   
8606 [0x219e]:         movi #130, adx   
8608 [0x21a0]:         rmov adx, ebx   
8609 [0x21a1]:         movi #0, ebx   
8611 [0x21a3]:         movsl #0   
8612 [0x21a4]:         movi #131, adx   
8614 [0x21a6]:         rmov adx, ebx   
8615 [0x21a7]:         movi #0, ebx   
8617 [0x21a9]:         movsl #0   
8618 [0x21aa]:         movi #132, adx   
8620 [0x21ac]:         rmov adx, ebx   
8621 [0x21ad]:         movi #0, ebx   
8623 [0x21af]:         movsl #0   
8624 [0x21b0]:         movi #133, adx   
8626 [0x21b2]:         rmov adx, ebx   
8627 [0x21b3]:         movi #0, ebx   
8629 [0x21b5]:         movsl #0   
8630 [0x21b6]:         movi #134, adx   
8632 [0x21b8]:         rmov adx, ebx   
8633 [0x21b9]:         movi #0, ebx   
8635 [0x21bb]:         movsl #0   
8636 [0x21bc]:         movi #135, adx   
8638 [0x21be]:         rmov adx, ebx   
8639 [0x21bf]:         movi #0, ebx   
8641 [0x21c1]:         movsl #0   
8642 [0x21c2]:         movi #136, adx   
8644 [0x21c4]:         rmov adx, ebx   
8645 [0x21c5]:         movi #0, ebx   
8647 [0x21c7]:         movsl #0   
8648 [0x21c8]:         movi #137, adx   
8650 [0x21ca]:         rmov adx, ebx   
8651 [0x21cb]:         movi #0, ebx   
8653 [0x21cd]:         movsl #0   
8654 [0x21ce]:         movi #138, adx   
8656 [0x21d0]:         rmov adx, ebx   
8657 [0x21d1]:         movi #0, ebx   
8659 [0x21d3]:         movsl #0   
8660 [0x21d4]:         movi #139, adx   
8662 [0x21d6]:         rmov adx, ebx   
8663 [0x21d7]:         movi #0, ebx   
8665 [0x21d9]:         movsl #0   
8666 [0x21da]:         movi #140, adx   
8668 [0x21dc]:         rmov adx, ebx   
8669 [0x21dd]:         movi #0, ebx   
8671 [0x21df]:         movsl #0   
8672 [0x21e0]:         movi #141, adx   
8674 [0x21e2]:         rmov adx, ebx   
8675 [0x21e3]:         movi #0, ebx   
8677 [0x21e5]:         movsl #0   
8678 [0x21e6]:         movi #142, adx   
8680 [0x21e8]:         rmov adx, ebx   
8681 [0x21e9]:         movi #0, ebx   
8683 [0x21eb]:         movsl #0   
8684 [0x21ec]:         movi #143, adx   
8686 [0x21ee]:         rmov adx, ebx   
8687 [0x21ef]:         movg @108 // @ui.res.drawable#__srt_global   
8688 [0x21f0]:         movn #20   
8690 [0x21f2]:         popobj   
8691 [0x21f3]:         new_class @0 // std#__srt_global   
8692 [0x21f4]:         swap    
8693 [0x21f5]:         dup    
8694 [0x21f6]:         istore 14   
8696 [0x21f8]:         movg @108 // @ui.res.drawable#__srt_global   
8697 [0x21f9]:         movn #20   
8699 [0x21fb]:         pushobj   
8700 [0x21fc]:         istore 16   
8702 [0x21fe]:         movi #9, ebx   
8704 [0x2200]:         rstore ebx   
8705 [0x2201]:         call @3711 // <ui.support#drawable.drawable>   
8706 [0x2202]:         movg @108 // @ui.res.drawable#__srt_global   
8707 [0x2203]:         movn #21   
8709 [0x2205]:         popobj   
8710 [0x2206]:         movi #144, ebx   
8712 [0x2208]:         newarry ebx: 8   
8713 [0x2209]:         movi #0, ebx   
8715 [0x220b]:         movsl #0   
8716 [0x220c]:         movi #0, adx   
8718 [0x220e]:         rmov adx, ebx   
8719 [0x220f]:         movi #2, ebx   
8721 [0x2211]:         movsl #0   
8722 [0x2212]:         movi #1, adx   
8724 [0x2214]:         rmov adx, ebx   
8725 [0x2215]:         movi #2, ebx   
8727 [0x2217]:         movsl #0   
8728 [0x2218]:         movi #2, adx   
8730 [0x221a]:         rmov adx, ebx   
8731 [0x221b]:         movi #2, ebx   
8733 [0x221d]:         movsl #0   
8734 [0x221e]:         movi #3, adx   
8736 [0x2220]:         rmov adx, ebx   
8737 [0x2221]:         movi #2, ebx   
8739 [0x2223]:         movsl #0   
8740 [0x2224]:         movi #4, adx   
8742 [0x2226]:         rmov adx, ebx   
8743 [0x2227]:         movi #2, ebx   
8745 [0x2229]:         movsl #0   
8746 [0x222a]:         movi #5, adx   
8748 [0x222c]:         rmov adx, ebx   
8749 [0x222d]:         movi #2, ebx   
8751 [0x222f]:         movsl #0   
8752 [0x2230]:         movi #6, adx   
8754 [0x2232]:         rmov adx, ebx   
8755 [0x2233]:         movi #2, ebx   
8757 [0x2235]:         movsl #0   
8758 [0x2236]:         movi #7, adx   
8760 [0x2238]:         rmov adx, ebx   
8761 [0x2239]:         movi #2, ebx   
8763 [0x223b]:         movsl #0   
8764 [0x223c]:         movi #8, adx   
8766 [0x223e]:         rmov adx, ebx   
8767 [0x223f]:         movi #2, ebx   
8769 [0x2241]:         movsl #0   
8770 [0x2242]:         movi #9, adx   
8772 [0x2244]:         rmov adx, ebx   
8773 [0x2245]:         movi #2, ebx   
8775 [0x2247]:         movsl #0   
8776 [0x2248]:         movi #10, adx   
8778 [0x224a]:         rmov adx, ebx   
8779 [0x224b]:         movi #2, ebx   
8781 [0x224d]:         movsl #0   
8782 [0x224e]:         movi #11, adx   
8784 [0x2250]:         rmov adx, ebx   
8785 [0x2251]:         movi #2, ebx   
8787 [0x2253]:         movsl #0   
8788 [0x2254]:         movi #12, adx   
8790 [0x2256]:         rmov adx, ebx   
8791 [0x2257]:         movi #2, ebx   
8793 [0x2259]:         movsl #0   
8794 [0x225a]:         movi #13, adx   
8796 [0x225c]:         rmov adx, ebx   
8797 [0x225d]:         movi #2, ebx   
8799 [0x225f]:         movsl #0   
8800 [0x2260]:         movi #14, adx   
8802 [0x2262]:         rmov adx, ebx   
8803 [0x2263]:         movi #2, ebx   
8805 [0x2265]:         movsl #0   
8806 [0x2266]:         movi #15, adx   
8808 [0x2268]:         rmov adx, ebx   
8809 [0x2269]:         movi #0, ebx   
8811 [0x226b]:         movsl #0   
8812 [0x226c]:         movi #16, adx   
8814 [0x226e]:         rmov adx, ebx   
8815 [0x226f]:         movi #2, ebx   
8817 [0x2271]:         movsl #0   
8818 [0x2272]:         movi #17, adx   
8820 [0x2274]:         rmov adx, ebx   
8821 [0x2275]:         movi #0, ebx   
8823 [0x2277]:         movsl #0   
8824 [0x2278]:         movi #18, adx   
8826 [0x227a]:         rmov adx, ebx   
8827 [0x227b]:         movi #0, ebx   
8829 [0x227d]:         movsl #0   
8830 [0x227e]:         movi #19, adx   
8832 [0x2280]:         rmov adx, ebx   
8833 [0x2281]:         movi #0, ebx   
8835 [0x2283]:         movsl #0   
8836 [0x2284]:         movi #20, adx   
8838 [0x2286]:         rmov adx, ebx   
8839 [0x2287]:         movi #0, ebx   
8841 [0x2289]:         movsl #0   
8842 [0x228a]:         movi #21, adx   
8844 [0x228c]:         rmov adx, ebx   
8845 [0x228d]:         movi #0, ebx   
8847 [0x228f]:         movsl #0   
8848 [0x2290]:         movi #22, adx   
8850 [0x2292]:         rmov adx, ebx   
8851 [0x2293]:         movi #0, ebx   
8853 [0x2295]:         movsl #0   
8854 [0x2296]:         movi #23, adx   
8856 [0x2298]:         rmov adx, ebx   
8857 [0x2299]:         movi #0, ebx   
8859 [0x229b]:         movsl #0   
8860 [0x229c]:         movi #24, adx   
8862 [0x229e]:         rmov adx, ebx   
8863 [0x229f]:         movi #0, ebx   
8865 [0x22a1]:         movsl #0   
8866 [0x22a2]:         movi #25, adx   
8868 [0x22a4]:         rmov adx, ebx   
8869 [0x22a5]:         movi #0, ebx   
8871 [0x22a7]:         movsl #0   
8872 [0x22a8]:         movi #26, adx   
8874 [0x22aa]:         rmov adx, ebx   
8875 [0x22ab]:         movi #0, ebx   
8877 [0x22ad]:         movsl #0   
8878 [0x22ae]:         movi #27, adx   
8880 [0x22b0]:         rmov adx, ebx   
8881 [0x22b1]:         movi #0, ebx   
8883 [0x22b3]:         movsl #0   
8884 [0x22b4]:         movi #28, adx   
8886 [0x22b6]:         rmov adx, ebx   
8887 [0x22b7]:         movi #0, ebx   
8889 [0x22b9]:         movsl #0   
8890 [0x22ba]:         movi #29, adx   
8892 [0x22bc]:         rmov adx, ebx   
8893 [0x22bd]:         movi #0, ebx   
8895 [0x22bf]:         movsl #0   
8896 [0x22c0]:         movi #30, adx   
8898 [0x22c2]:         rmov adx, ebx   
8899 [0x22c3]:         movi #2, ebx   
8901 [0x22c5]:         movsl #0   
8902 [0x22c6]:         movi #31, adx   
8904 [0x22c8]:         rmov adx, ebx   
8905 [0x22c9]:         movi #2, ebx   
8907 [0x22cb]:         movsl #0   
8908 [0x22cc]:         movi #32, adx   
8910 [0x22ce]:         rmov adx, ebx   
8911 [0x22cf]:         movi #2, ebx   
8913 [0x22d1]:         movsl #0   
8914 [0x22d2]:         movi #33, adx   
8916 [0x22d4]:         rmov adx, ebx   
8917 [0x22d5]:         movi #0, ebx   
8919 [0x22d7]:         movsl #0   
8920 [0x22d8]:         movi #34, adx   
8922 [0x22da]:         rmov adx, ebx   
8923 [0x22db]:         movi #2, ebx   
8925 [0x22dd]:         movsl #0   
8926 [0x22de]:         movi #35, adx   
8928 [0x22e0]:         rmov adx, ebx   
8929 [0x22e1]:         movi #2, ebx   
8931 [0x22e3]:         movsl #0   
8932 [0x22e4]:         movi #36, adx   
8934 [0x22e6]:         rmov adx, ebx   
8935 [0x22e7]:         movi #0, ebx   
8937 [0x22e9]:         movsl #0   
8938 [0x22ea]:         movi #37, adx   
8940 [0x22ec]:         rmov adx, ebx   
8941 [0x22ed]:         movi #2, ebx   
8943 [0x22ef]:         movsl #0   
8944 [0x22f0]:         movi #38, adx   
8946 [0x22f2]:         rmov adx, ebx   
8947 [0x22f3]:         movi #2, ebx   
8949 [0x22f5]:         movsl #0   
8950 [0x22f6]:         movi #39, adx   
8952 [0x22f8]:         rmov adx, ebx   
8953 [0x22f9]:         movi #0, ebx   
8955 [0x22fb]:         movsl #0   
8956 [0x22fc]:         movi #40, adx   
8958 [0x22fe]:         rmov adx, ebx   
8959 [0x22ff]:         movi #2, ebx   
8961 [0x2301]:         movsl #0   
8962 [0x2302]:         movi #41, adx   
8964 [0x2304]:         rmov adx, ebx   
8965 [0x2305]:         movi #2, ebx   
8967 [0x2307]:         movsl #0   
8968 [0x2308]:         movi #42, adx   
8970 [0x230a]:         rmov adx, ebx   
8971 [0x230b]:         movi #0, ebx   
8973 [0x230d]:         movsl #0   
8974 [0x230e]:         movi #43, adx   
8976 [0x2310]:         rmov adx, ebx   
8977 [0x2311]:         movi #2, ebx   
8979 [0x2313]:         movsl #0   
8980 [0x2314]:         movi #44, adx   
8982 [0x2316]:         rmov adx, ebx   
8983 [0x2317]:         movi #2, ebx   
8985 [0x2319]:         movsl #0   
8986 [0x231a]:         movi #45, adx   
8988 [0x231c]:         rmov adx, ebx   
8989 [0x231d]:         movi #0, ebx   
8991 [0x231f]:         movsl #0   
8992 [0x2320]:         movi #46, adx   
8994 [0x2322]:         rmov adx, ebx   
8995 [0x2323]:         movi #2, ebx   
8997 [0x2325]:         movsl #0   
8998 [0x2326]:         movi #47, adx   
9000 [0x2328]:         rmov adx, ebx   
9001 [0x2329]:         movi #2, ebx   
9003 [0x232b]:         movsl #0   
9004 [0x232c]:         movi #48, adx   
9006 [0x232e]:         rmov adx, ebx   
9007 [0x232f]:         movi #2, ebx   
9009 [0x2331]:         movsl #0   
9010 [0x2332]:         movi #49, adx   
9012 [0x2334]:         rmov adx, ebx   
9013 [0x2335]:         movi #0, ebx   
9015 [0x2337]:         movsl #0   
9016 [0x2338]:         movi #50, adx   
9018 [0x233a]:         rmov adx, ebx   
9019 [0x233b]:         movi #2, ebx   
9021 [0x233d]:         movsl #0   
9022 [0x233e]:         movi #51, adx   
9024 [0x2340]:         rmov adx, ebx   
9025 [0x2341]:         movi #2, ebx   
9027 [0x2343]:         movsl #0   
9028 [0x2344]:         movi #52, adx   
9030 [0x2346]:         rmov adx, ebx   
9031 [0x2347]:         movi #0, ebx   
9033 [0x2349]:         movsl #0   
9034 [0x234a]:         movi #53, adx   
9036 [0x234c]:         rmov adx, ebx   
9037 [0x234d]:         movi #2, ebx   
9039 [0x234f]:         movsl #0   
9040 [0x2350]:         movi #54, adx   
9042 [0x2352]:         rmov adx, ebx   
9043 [0x2353]:         movi #2, ebx   
9045 [0x2355]:         movsl #0   
9046 [0x2356]:         movi #55, adx   
9048 [0x2358]:         rmov adx, ebx   
9049 [0x2359]:         movi #0, ebx   
9051 [0x235b]:         movsl #0   
9052 [0x235c]:         movi #56, adx   
9054 [0x235e]:         rmov adx, ebx   
9055 [0x235f]:         movi #2, ebx   
9057 [0x2361]:         movsl #0   
9058 [0x2362]:         movi #57, adx   
9060 [0x2364]:         rmov adx, ebx   
9061 [0x2365]:         movi #2, ebx   
9063 [0x2367]:         movsl #0   
9064 [0x2368]:         movi #58, adx   
9066 [0x236a]:         rmov adx, ebx   
9067 [0x236b]:         movi #0, ebx   
9069 [0x236d]:         movsl #0   
9070 [0x236e]:         movi #59, adx   
9072 [0x2370]:         rmov adx, ebx   
9073 [0x2371]:         movi #2, ebx   
9075 [0x2373]:         movsl #0   
9076 [0x2374]:         movi #60, adx   
9078 [0x2376]:         rmov adx, ebx   
9079 [0x2377]:         movi #2, ebx   
9081 [0x2379]:         movsl #0   
9082 [0x237a]:         movi #61, adx   
9084 [0x237c]:         rmov adx, ebx   
9085 [0x237d]:         movi #0, ebx   
9087 [0x237f]:         movsl #0   
9088 [0x2380]:         movi #62, adx   
9090 [0x2382]:         rmov adx, ebx   
9091 [0x2383]:         movi #2, ebx   
9093 [0x2385]:         movsl #0   
9094 [0x2386]:         movi #63, adx   
9096 [0x2388]:         rmov adx, ebx   
9097 [0x2389]:         movi #2, ebx   
9099 [0x238b]:         movsl #0   
9100 [0x238c]:         movi #64, adx   
9102 [0x238e]:         rmov adx, ebx   
9103 [0x238f]:         movi #2, ebx   
9105 [0x2391]:         movsl #0   
9106 [0x2392]:         movi #65, adx   
9108 [0x2394]:         rmov adx, ebx   
9109 [0x2395]:         movi #0, ebx   
9111 [0x2397]:         movsl #0   
9112 [0x2398]:         movi #66, adx   
9114 [0x239a]:         rmov adx, ebx   
9115 [0x239b]:         movi #2, ebx   
9117 [0x239d]:         movsl #0   
9118 [0x239e]:         movi #67, adx   
9120 [0x23a0]:         rmov adx, ebx   
9121 [0x23a1]:         movi #2, ebx   
9123 [0x23a3]:         movsl #0   
9124 [0x23a4]:         movi #68, adx   
9126 [0x23a6]:         rmov adx, ebx   
9127 [0x23a7]:         movi #0, ebx   
9129 [0x23a9]:         movsl #0   
9130 [0x23aa]:         movi #69, adx   
9132 [0x23ac]:         rmov adx, ebx   
9133 [0x23ad]:         movi #2, ebx   
9135 [0x23af]:         movsl #0   
9136 [0x23b0]:         movi #70, adx   
9138 [0x23b2]:         rmov adx, ebx   
9139 [0x23b3]:         movi #2, ebx   
9141 [0x23b5]:         movsl #0   
9142 [0x23b6]:         movi #71, adx   
9144 [0x23b8]:         rmov adx, ebx   
9145 [0x23b9]:         movi #0, ebx   
9147 [0x23bb]:         movsl #0   
9148 [0x23bc]:         movi #72, adx   
9150 [0x23be]:         rmov adx, ebx   
9151 [0x23bf]:         movi #2, ebx   
9153 [0x23c1]:         movsl #0   
9154 [0x23c2]:         movi #73, adx   
9156 [0x23c4]:         rmov adx, ebx   
9157 [0x23c5]:         movi #2, ebx   
9159 [0x23c7]:         movsl #0   
9160 [0x23c8]:         movi #74, adx   
9162 [0x23ca]:         rmov adx, ebx   
9163 [0x23cb]:         movi #0, ebx   
9165 [0x23cd]:         movsl #0   
9166 [0x23ce]:         movi #75, adx   
9168 [0x23d0]:         rmov adx, ebx   
9169 [0x23d1]:         movi #2, ebx   
9171 [0x23d3]:         movsl #0   
9172 [0x23d4]:         movi #76, adx   
9174 [0x23d6]:         rmov adx, ebx   
9175 [0x23d7]:         movi #2, ebx   
9177 [0x23d9]:         movsl #0   
9178 [0x23da]:         movi #77, adx   
9180 [0x23dc]:         rmov adx, ebx   
9181 [0x23dd]:         movi #0, ebx   
9183 [0x23df]:         movsl #0   
9184 [0x23e0]:         movi #78, adx   
9186 [0x23e2]:         rmov adx, ebx   
9187 [0x23e3]:         movi #2, ebx   
9189 [0x23e5]:         movsl #0   
9190 [0x23e6]:         movi #79, adx   
9192 [0x23e8]:         rmov adx, ebx   
9193 [0x23e9]:         movi #2, ebx   
9195 [0x23eb]:         movsl #0   
9196 [0x23ec]:         movi #80, adx   
9198 [0x23ee]:         rmov adx, ebx   
9199 [0x23ef]:         movi #2, ebx   
9201 [0x23f1]:         movsl #0   
9202 [0x23f2]:         movi #81, adx   
9204 [0x23f4]:         rmov adx, ebx   
9205 [0x23f5]:         movi #0, ebx   
9207 [0x23f7]:         movsl #0   
9208 [0x23f8]:         movi #82, adx   
9210 [0x23fa]:         rmov adx, ebx   
9211 [0x23fb]:         movi #2, ebx   
9213 [0x23fd]:         movsl #0   
9214 [0x23fe]:         movi #83, adx   
9216 [0x2400]:         rmov adx, ebx   
9217 [0x2401]:         movi #2, ebx   
9219 [0x2403]:         movsl #0   
9220 [0x2404]:         movi #84, adx   
9222 [0x2406]:         rmov adx, ebx   
9223 [0x2407]:         movi #0, ebx   
9225 [0x2409]:         movsl #0   
9226 [0x240a]:         movi #85, adx   
9228 [0x240c]:         rmov adx, ebx   
9229 [0x240d]:         movi #2, ebx   
9231 [0x240f]:         movsl #0   
9232 [0x2410]:         movi #86, adx   
9234 [0x2412]:         rmov adx, ebx   
9235 [0x2413]:         movi #2, ebx   
9237 [0x2415]:         movsl #0   
9238 [0x2416]:         movi #87, adx   
9240 [0x2418]:         rmov adx, ebx   
9241 [0x2419]:         movi #0, ebx   
9243 [0x241b]:         movsl #0   
9244 [0x241c]:         movi #88, adx   
9246 [0x241e]:         rmov adx, ebx   
9247 [0x241f]:         movi #2, ebx   
9249 [0x2421]:         movsl #0   
9250 [0x2422]:         movi #89, adx   
9252 [0x2424]:         rmov adx, ebx   
9253 [0x2425]:         movi #2, ebx   
9255 [0x2427]:         movsl #0   
9256 [0x2428]:         movi #90, adx   
9258 [0x242a]:         rmov adx, ebx   
9259 [0x242b]:         movi #0, ebx   
9261 [0x242d]:         movsl #0   
9262 [0x242e]:         movi #91, adx   
9264 [0x2430]:         rmov adx, ebx   
9265 [0x2431]:         movi #2, ebx   
9267 [0x2433]:         movsl #0   
9268 [0x2434]:         movi #92, adx   
9270 [0x2436]:         rmov adx, ebx   
9271 [0x2437]:         movi #2, ebx   
9273 [0x2439]:         movsl #0   
9274 [0x243a]:         movi #93, adx   
9276 [0x243c]:         rmov adx, ebx   
9277 [0x243d]:         movi #0, ebx   
9279 [0x243f]:         movsl #0   
9280 [0x2440]:         movi #94, adx   
9282 [0x2442]:         rmov adx, ebx   
9283 [0x2443]:         movi #2, ebx   
9285 [0x2445]:         movsl #0   
9286 [0x2446]:         movi #95, adx   
9288 [0x2448]:         rmov adx, ebx   
9289 [0x2449]:         movi #0, ebx   
9291 [0x244b]:         movsl #0   
9292 [0x244c]:         movi #96, adx   
9294 [0x244e]:         rmov adx, ebx   
9295 [0x244f]:         movi #2, ebx   
9297 [0x2451]:         movsl #0   
9298 [0x2452]:         movi #97, adx   
9300 [0x2454]:         rmov adx, ebx   
9301 [0x2455]:         movi #0, ebx   
9303 [0x2457]:         movsl #0   
9304 [0x2458]:         movi #98, adx   
9306 [0x245a]:         rmov adx, ebx   
9307 [0x245b]:         movi #0, ebx   
9309 [0x245d]:         movsl #0   
9310 [0x245e]:         movi #99, adx   
9312 [0x2460]:         rmov adx, ebx   
9313 [0x2461]:         movi #0, ebx   
9315 [0x2463]:         movsl #0   
9316 [0x2464]:         movi #100, adx   
9318 [0x2466]:         rmov adx, ebx   
9319 [0x2467]:         movi #0, ebx   
9321 [0x2469]:         movsl #0   
9322 [0x246a]:         movi #101, adx   
9324 [0x246c]:         rmov adx, ebx   
9325 [0x246d]:         movi #0, ebx   
9327 [0x246f]:         movsl #0   
9328 [0x2470]:         movi #102, adx   
9330 [0x2472]:         rmov adx, ebx   
9331 [0x2473]:         movi #0, ebx   
9333 [0x2475]:         movsl #0   
9334 [0x2476]:         movi #103, adx   
9336 [0x2478]:         rmov adx, ebx   
9337 [0x2479]:         movi #0, ebx   
9339 [0x247b]:         movsl #0   
9340 [0x247c]:         movi #104, adx   
9342 [0x247e]:         rmov adx, ebx   
9343 [0x247f]:         movi #0, ebx   
9345 [0x2481]:         movsl #0   
9346 [0x2482]:         movi #105, adx   
9348 [0x2484]:         rmov adx, ebx   
9349 [0x2485]:         movi #0, ebx   
9351 [0x2487]:         movsl #0   
9352 [0x2488]:         movi #106, adx   
9354 [0x248a]:         rmov adx, ebx   
9355 [0x248b]:         movi #0, ebx   
9357 [0x248d]:         movsl #0   
9358 [0x248e]:         movi #107, adx   
9360 [0x2490]:         rmov adx, ebx   
9361 [0x2491]:         movi #0, ebx   
9363 [0x2493]:         movsl #0   
9364 [0x2494]:         movi #108, adx   
9366 [0x2496]:         rmov adx, ebx   
9367 [0x2497]:         movi #0, ebx   
9369 [0x2499]:         movsl #0   
9370 [0x249a]:         movi #109, adx   
9372 [0x249c]:         rmov adx, ebx   
9373 [0x249d]:         movi #0, ebx   
9375 [0x249f]:         movsl #0   
9376 [0x24a0]:         movi #110, adx   
9378 [0x24a2]:         rmov adx, ebx   
9379 [0x24a3]:         movi #2, ebx   
9381 [0x24a5]:         movsl #0   
9382 [0x24a6]:         movi #111, adx   
9384 [0x24a8]:         rmov adx, ebx   
9385 [0x24a9]:         movi #0, ebx   
9387 [0x24ab]:         movsl #0   
9388 [0x24ac]:         movi #112, adx   
9390 [0x24ae]:         rmov adx, ebx   
9391 [0x24af]:         movi #2, ebx   
9393 [0x24b1]:         movsl #0   
9394 [0x24b2]:         movi #113, adx   
9396 [0x24b4]:         rmov adx, ebx   
9397 [0x24b5]:         movi #2, ebx   
9399 [0x24b7]:         movsl #0   
9400 [0x24b8]:         movi #114, adx   
9402 [0x24ba]:         rmov adx, ebx   
9403 [0x24bb]:         movi #2, ebx   
9405 [0x24bd]:         movsl #0   
9406 [0x24be]:         movi #115, adx   
9408 [0x24c0]:         rmov adx, ebx   
9409 [0x24c1]:         movi #2, ebx   
9411 [0x24c3]:         movsl #0   
9412 [0x24c4]:         movi #116, adx   
9414 [0x24c6]:         rmov adx, ebx   
9415 [0x24c7]:         movi #2, ebx   
9417 [0x24c9]:         movsl #0   
9418 [0x24ca]:         movi #117, adx   
9420 [0x24cc]:         rmov adx, ebx   
9421 [0x24cd]:         movi #2, ebx   
9423 [0x24cf]:         movsl #0   
9424 [0x24d0]:         movi #118, adx   
9426 [0x24d2]:         rmov adx, ebx   
9427 [0x24d3]:         movi #2, ebx   
9429 [0x24d5]:         movsl #0   
9430 [0x24d6]:         movi #119, adx   
9432 [0x24d8]:         rmov adx, ebx   
9433 [0x24d9]:         movi #2, ebx   
9435 [0x24db]:         movsl #0   
9436 [0x24dc]:         movi #120, adx   
9438 [0x24de]:         rmov adx, ebx   
9439 [0x24df]:         movi #2, ebx   
9441 [0x24e1]:         movsl #0   
9442 [0x24e2]:         movi #121, adx   
9444 [0x24e4]:         rmov adx, ebx   
9445 [0x24e5]:         movi #2, ebx   
9447 [0x24e7]:         movsl #0   
9448 [0x24e8]:         movi #122, adx   
9450 [0x24ea]:         rmov adx, ebx   
9451 [0x24eb]:         movi #2, ebx   
9453 [0x24ed]:         movsl #0   
9454 [0x24ee]:         movi #123, adx   
9456 [0x24f0]:         rmov adx, ebx   
9457 [0x24f1]:         movi #2, ebx   
9459 [0x24f3]:         movsl #0   
9460 [0x24f4]:         movi #124, adx   
9462 [0x24f6]:         rmov adx, ebx   
9463 [0x24f7]:         movi #2, ebx   
9465 [0x24f9]:         movsl #0   
9466 [0x24fa]:         movi #125, adx   
9468 [0x24fc]:         rmov adx, ebx   
9469 [0x24fd]:         movi #2, ebx   
9471 [0x24ff]:         movsl #0   
9472 [0x2500]:         movi #126, adx   
9474 [0x2502]:         rmov adx, ebx   
9475 [0x2503]:         movi #2, ebx   
9477 [0x2505]:         movsl #0   
9478 [0x2506]:         movi #127, adx   
9480 [0x2508]:         rmov adx, ebx   
9481 [0x2509]:         movi #0, ebx   
9483 [0x250b]:         movsl #0   
9484 [0x250c]:         movi #128, adx   
9486 [0x250e]:         rmov adx, ebx   
9487 [0x250f]:         movi #0, ebx   
9489 [0x2511]:         movsl #0   
9490 [0x2512]:         movi #129, adx   
9492 [0x2514]:         rmov adx, ebx   
9493 [0x2515]:         movi #0, ebx   
9495 [0x2517]:         movsl #0   
9496 [0x2518]:         movi #130, adx   
9498 [0x251a]:         rmov adx, ebx   
9499 [0x251b]:         movi #0, ebx   
9501 [0x251d]:         movsl #0   
9502 [0x251e]:         movi #131, adx   
9504 [0x2520]:         rmov adx, ebx   
9505 [0x2521]:         movi #0, ebx   
9507 [0x2523]:         movsl #0   
9508 [0x2524]:         movi #132, adx   
9510 [0x2526]:         rmov adx, ebx   
9511 [0x2527]:         movi #0, ebx   
9513 [0x2529]:         movsl #0   
9514 [0x252a]:         movi #133, adx   
9516 [0x252c]:         rmov adx, ebx   
9517 [0x252d]:         movi #0, ebx   
9519 [0x252f]:         movsl #0   
9520 [0x2530]:         movi #134, adx   
9522 [0x2532]:         rmov adx, ebx   
9523 [0x2533]:         movi #0, ebx   
9525 [0x2535]:         movsl #0   
9526 [0x2536]:         movi #135, adx   
9528 [0x2538]:         rmov adx, ebx   
9529 [0x2539]:         movi #0, ebx   
9531 [0x253b]:         movsl #0   
9532 [0x253c]:         movi #136, adx   
9534 [0x253e]:         rmov adx, ebx   
9535 [0x253f]:         movi #0, ebx   
9537 [0x2541]:         movsl #0   
9538 [0x2542]:         movi #137, adx   
9540 [0x2544]:         rmov adx, ebx   
9541 [0x2545]:         movi #0, ebx   
9543 [0x2547]:         movsl #0   
9544 [0x2548]:         movi #138, adx   
9546 [0x254a]:         rmov adx, ebx   
9547 [0x254b]:         movi #0, ebx   
9549 [0x254d]:         movsl #0   
9550 [0x254e]:         movi #139, adx   
9552 [0x2550]:         rmov adx, ebx   
9553 [0x2551]:         movi #0, ebx   
9555 [0x2553]:         movsl #0   
9556 [0x2554]:         movi #140, adx   
9558 [0x2556]:         rmov adx, ebx   
9559 [0x2557]:         movi #0, ebx   
9561 [0x2559]:         movsl #0   
9562 [0x255a]:         movi #141, adx   
9564 [0x255c]:         rmov adx, ebx   
9565 [0x255d]:         movi #0, ebx   
9567 [0x255f]:         movsl #0   
9568 [0x2560]:         movi #142, adx   
9570 [0x2562]:         rmov adx, ebx   
9571 [0x2563]:         movi #0, ebx   
9573 [0x2565]:         movsl #0   
9574 [0x2566]:         movi #143, adx   
9576 [0x2568]:         rmov adx, ebx   
9577 [0x2569]:         movg @108 // @ui.res.drawable#__srt_global   
9578 [0x256a]:         movn #22   
9580 [0x256c]:         popobj   
9581 [0x256d]:         new_class @0 // std#__srt_global   
9582 [0x256e]:         swap    
9583 [0x256f]:         dup    
9584 [0x2570]:         istore 17   
9586 [0x2572]:         movg @108 // @ui.res.drawable#__srt_global   
9587 [0x2573]:         movn #22   
9589 [0x2575]:         pushobj   
9590 [0x2576]:         istore 16   
9592 [0x2578]:         movi #9, ebx   
9594 [0x257a]:         rstore ebx   
9595 [0x257b]:         call @3711 // <ui.support#drawable.drawable>   
9596 [0x257c]:         movg @108 // @ui.res.drawable#__srt_global   
9597 [0x257d]:         movn #23   
9599 [0x257f]:         popobj   
9600 [0x2580]:         movi #660, ebx   
9602 [0x2582]:         newarry ebx: 8   
9603 [0x2583]:         movi #0, ebx   
9605 [0x2585]:         movsl #0   
9606 [0x2586]:         movi #0, adx   
9608 [0x2588]:         rmov adx, ebx   
9609 [0x2589]:         movi #0, ebx   
9611 [0x258b]:         movsl #0   
9612 [0x258c]:         movi #1, adx   
9614 [0x258e]:         rmov adx, ebx   
9615 [0x258f]:         movi #0, ebx   
9617 [0x2591]:         movsl #0   
9618 [0x2592]:         movi #2, adx   
9620 [0x2594]:         rmov adx, ebx   
9621 [0x2595]:         movi #0, ebx   
9623 [0x2597]:         movsl #0   
9624 [0x2598]:         movi #3, adx   
9626 [0x259a]:         rmov adx, ebx   
9627 [0x259b]:         movi #0, ebx   
9629 [0x259d]:         movsl #0   
9630 [0x259e]:         movi #4, adx   
9632 [0x25a0]:         rmov adx, ebx   
9633 [0x25a1]:         movi #0, ebx   
9635 [0x25a3]:         movsl #0   
9636 [0x25a4]:         movi #5, adx   
9638 [0x25a6]:         rmov adx, ebx   
9639 [0x25a7]:         movi #0, ebx   
9641 [0x25a9]:         movsl #0   
9642 [0x25aa]:         movi #6, adx   
9644 [0x25ac]:         rmov adx, ebx   
9645 [0x25ad]:         movi #0, ebx   
9647 [0x25af]:         movsl #0   
9648 [0x25b0]:         movi #7, adx   
9650 [0x25b2]:         rmov adx, ebx   
9651 [0x25b3]:         movi #0, ebx   
9653 [0x25b5]:         movsl #0   
9654 [0x25b6]:         movi #8, adx   
9656 [0x25b8]:         rmov adx, ebx   
9657 [0x25b9]:         movi #0, ebx   
9659 [0x25bb]:         movsl #0   
9660 [0x25bc]:         movi #9, adx   
9662 [0x25be]:         rmov adx, ebx   
9663 [0x25bf]:         movi #0, ebx   
9665 [0x25c1]:         movsl #0   
9666 [0x25c2]:         movi #10, adx   
9668 [0x25c4]:         rmov adx, ebx   
9669 [0x25c5]:         movi #0, ebx   
9671 [0x25c7]:         movsl #0   
9672 [0x25c8]:         movi #11, adx   
9674 [0x25ca]:         rmov adx, ebx   
9675 [0x25cb]:         movi #0, ebx   
9677 [0x25cd]:         movsl #0   
9678 [0x25ce]:         movi #12, adx   
9680 [0x25d0]:         rmov adx, ebx   
9681 [0x25d1]:         movi #0, ebx   
9683 [0x25d3]:         movsl #0   
9684 [0x25d4]:         movi #13, adx   
9686 [0x25d6]:         rmov adx, ebx   
9687 [0x25d7]:         movi #0, ebx   
9689 [0x25d9]:         movsl #0   
9690 [0x25da]:         movi #14, adx   
9692 [0x25dc]:         rmov adx, ebx   
9693 [0x25dd]:         movi #0, ebx   
9695 [0x25df]:         movsl #0   
9696 [0x25e0]:         movi #15, adx   
9698 [0x25e2]:         rmov adx, ebx   
9699 [0x25e3]:         movi #0, ebx   
9701 [0x25e5]:         movsl #0   
9702 [0x25e6]:         movi #16, adx   
9704 [0x25e8]:         rmov adx, ebx   
9705 [0x25e9]:         movi #0, ebx   
9707 [0x25eb]:         movsl #0   
9708 [0x25ec]:         movi #17, adx   
9710 [0x25ee]:         rmov adx, ebx   
9711 [0x25ef]:         movi #0, ebx   
9713 [0x25f1]:         movsl #0   
9714 [0x25f2]:         movi #18, adx   
9716 [0x25f4]:         rmov adx, ebx   
9717 [0x25f5]:         movi #0, ebx   
9719 [0x25f7]:         movsl #0   
9720 [0x25f8]:         movi #19, adx   
9722 [0x25fa]:         rmov adx, ebx   
9723 [0x25fb]:         movi #0, ebx   
9725 [0x25fd]:         movsl #0   
9726 [0x25fe]:         movi #20, adx   
9728 [0x2600]:         rmov adx, ebx   
9729 [0x2601]:         movi #0, ebx   
9731 [0x2603]:         movsl #0   
9732 [0x2604]:         movi #21, adx   
9734 [0x2606]:         rmov adx, ebx   
9735 [0x2607]:         movi #0, ebx   
9737 [0x2609]:         movsl #0   
9738 [0x260a]:         movi #22, adx   
9740 [0x260c]:         rmov adx, ebx   
9741 [0x260d]:         movi #2, ebx   
9743 [0x260f]:         movsl #0   
9744 [0x2610]:         movi #23, adx   
9746 [0x2612]:         rmov adx, ebx   
9747 [0x2613]:         movi #0, ebx   
9749 [0x2615]:         movsl #0   
9750 [0x2616]:         movi #24, adx   
9752 [0x2618]:         rmov adx, ebx   
9753 [0x2619]:         movi #0, ebx   
9755 [0x261b]:         movsl #0   
9756 [0x261c]:         movi #25, adx   
9758 [0x261e]:         rmov adx, ebx   
9759 [0x261f]:         movi #0, ebx   
9761 [0x2621]:         movsl #0   
9762 [0x2622]:         movi #26, adx   
9764 [0x2624]:         rmov adx, ebx   
9765 [0x2625]:         movi #0, ebx   
9767 [0x2627]:         movsl #0   
9768 [0x2628]:         movi #27, adx   
9770 [0x262a]:         rmov adx, ebx   
9771 [0x262b]:         movi #0, ebx   
9773 [0x262d]:         movsl #0   
9774 [0x262e]:         movi #28, adx   
9776 [0x2630]:         rmov adx, ebx   
9777 [0x2631]:         movi #2, ebx   
9779 [0x2633]:         movsl #0   
9780 [0x2634]:         movi #29, adx   
9782 [0x2636]:         rmov adx, ebx   
9783 [0x2637]:         movi #0, ebx   
9785 [0x2639]:         movsl #0   
9786 [0x263a]:         movi #30, adx   
9788 [0x263c]:         rmov adx, ebx   
9789 [0x263d]:         movi #2, ebx   
9791 [0x263f]:         movsl #0   
9792 [0x2640]:         movi #31, adx   
9794 [0x2642]:         rmov adx, ebx   
9795 [0x2643]:         movi #0, ebx   
9797 [0x2645]:         movsl #0   
9798 [0x2646]:         movi #32, adx   
9800 [0x2648]:         rmov adx, ebx   
9801 [0x2649]:         movi #0, ebx   
9803 [0x264b]:         movsl #0   
9804 [0x264c]:         movi #33, adx   
9806 [0x264e]:         rmov adx, ebx   
9807 [0x264f]:         movi #0, ebx   
9809 [0x2651]:         movsl #0   
9810 [0x2652]:         movi #34, adx   
9812 [0x2654]:         rmov adx, ebx   
9813 [0x2655]:         movi #0, ebx   
9815 [0x2657]:         movsl #0   
9816 [0x2658]:         movi #35, adx   
9818 [0x265a]:         rmov adx, ebx   
9819 [0x265b]:         movi #0, ebx   
9821 [0x265d]:         movsl #0   
9822 [0x265e]:         movi #36, adx   
9824 [0x2660]:         rmov adx, ebx   
9825 [0x2661]:         movi #2, ebx   
9827 [0x2663]:         movsl #0   
9828 [0x2664]:         movi #37, adx   
9830 [0x2666]:         rmov adx, ebx   
9831 [0x2667]:         movi #0, ebx   
9833 [0x2669]:         movsl #0   
9834 [0x266a]:         movi #38, adx   
9836 [0x266c]:         rmov adx, ebx   
9837 [0x266d]:         movi #0, ebx   
9839 [0x266f]:         movsl #0   
9840 [0x2670]:         movi #39, adx   
9842 [0x2672]:         rmov adx, ebx   
9843 [0x2673]:         movi #0, ebx   
9845 [0x2675]:         movsl #0   
9846 [0x2676]:         movi #40, adx   
9848 [0x2678]:         rmov adx, ebx   
9849 [0x2679]:         movi #0, ebx   
9851 [0x267b]:         movsl #0   
9852 [0x267c]:         movi #41, adx   
9854 [0x267e]:         rmov adx, ebx   
9855 [0x267f]:         movi #2, ebx   
9857 [0x2681]:         movsl #0   
9858 [0x2682]:         movi #42, adx   
9860 [0x2684]:         rmov adx, ebx   
9861 [0x2685]:         movi #0, ebx   
9863 [0x2687]:         movsl #0   
9864 [0x2688]:         movi #43, adx   
9866 [0x268a]:         rmov adx, ebx   
9867 [0x268b]:         movi #2, ebx   
9869 [0x268d]:         movsl #0   
9870 [0x268e]:         movi #44, adx   
9872 [0x2690]:         rmov adx, ebx   
9873 [0x2691]:         movi #0, ebx   
9875 [0x2693]:         movsl #0   
9876 [0x2694]:         movi #45, adx   
9878 [0x2696]:         rmov adx, ebx   
9879 [0x2697]:         movi #0, ebx   
9881 [0x2699]:         movsl #0   
9882 [0x269a]:         movi #46, adx   
9884 [0x269c]:         rmov adx, ebx   
9885 [0x269d]:         movi #0, ebx   
9887 [0x269f]:         movsl #0   
9888 [0x26a0]:         movi #47, adx   
9890 [0x26a2]:         rmov adx, ebx   
9891 [0x26a3]:         movi #2, ebx   
9893 [0x26a5]:         movsl #0   
9894 [0x26a6]:         movi #48, adx   
9896 [0x26a8]:         rmov adx, ebx   
9897 [0x26a9]:         movi #0, ebx   
9899 [0x26ab]:         movsl #0   
9900 [0x26ac]:         movi #49, adx   
9902 [0x26ae]:         rmov adx, ebx   
9903 [0x26af]:         movi #0, ebx   
9905 [0x26b1]:         movsl #0   
9906 [0x26b2]:         movi #50, adx   
9908 [0x26b4]:         rmov adx, ebx   
9909 [0x26b5]:         movi #0, ebx   
9911 [0x26b7]:         movsl #0   
9912 [0x26b8]:         movi #51, adx   
9914 [0x26ba]:         rmov adx, ebx   
9915 [0x26bb]:         movi #2, ebx   
9917 [0x26bd]:         movsl #0   
9918 [0x26be]:         movi #52, adx   
9920 [0x26c0]:         rmov adx, ebx   
9921 [0x26c1]:         movi #0, ebx   
9923 [0x26c3]:         movsl #0   
9924 [0x26c4]:         movi #53, adx   
9926 [0x26c6]:         rmov adx, ebx   
9927 [0x26c7]:         movi #0, ebx   
9929 [0x26c9]:         movsl #0   
9930 [0x26ca]:         movi #54, adx   
9932 [0x26cc]:         rmov adx, ebx   
9933 [0x26cd]:         movi #0, ebx   
9935 [0x26cf]:         movsl #0   
9936 [0x26d0]:         movi #55, adx   
9938 [0x26d2]:         rmov adx, ebx   
9939 [0x26d3]:         movi #2, ebx   
9941 [0x26d5]:         movsl #0   
9942 [0x26d6]:         movi #56, adx   
9944 [0x26d8]:         rmov adx, ebx   
9945 [0x26d9]:         movi #0, ebx   
9947 [0x26db]:         movsl #0   
9948 [0x26dc]:         movi #57, adx   
9950 [0x26de]:         rmov adx, ebx   
9951 [0x26df]:         movi #2, ebx   
9953 [0x26e1]:         movsl #0   
9954 [0x26e2]:         movi #58, adx   
9956 [0x26e4]:         rmov adx, ebx   
9957 [0x26e5]:         movi #0, ebx   
9959 [0x26e7]:         movsl #0   
9960 [0x26e8]:         movi #59, adx   
9962 [0x26ea]:         rmov adx, ebx   
9963 [0x26eb]:         movi #0, ebx   
9965 [0x26ed]:         movsl #0   
9966 [0x26ee]:         movi #60, adx   
9968 [0x26f0]:         rmov adx, ebx   
9969 [0x26f1]:         movi #0, ebx   
9971 [0x26f3]:         movsl #0   
9972 [0x26f4]:         movi #61, adx   
9974 [0x26f6]:         rmov adx, ebx   
9975 [0x26f7]:         movi #2, ebx   
9977 [0x26f9]:         movsl #0   
9978 [0x26fa]:         movi #62, adx   
9980 [0x26fc]:         rmov adx, ebx   
9981 [0x26fd]:         movi #0, ebx   
9983 [0x26ff]:         movsl #0   
9984 [0x2700]:         movi #63, adx   
9986 [0x2702]:         rmov adx, ebx   
9987 [0x2703]:         movi #0, ebx   
9989 [0x2705]:         movsl #0   
9990 [0x2706]:         movi #64, adx   
9992 [0x2708]:         rmov adx, ebx   
9993 [0x2709]:         movi #2, ebx   
9995 [0x270b]:         movsl #0   
9996 [0x270c]:         movi #65, adx   
9998 [0x270e]:         rmov adx, ebx   
9999 [0x270f]:         movi #0, ebx   
10001 [0x2711]:         movsl #0   
10002 [0x2712]:         movi #66, adx   
10004 [0x2714]:         rmov adx, ebx   
10005 [0x2715]:         movi #2, ebx   
10007 [0x2717]:         movsl #0   
10008 [0x2718]:         movi #67, adx   
10010 [0x271a]:         rmov adx, ebx   
10011 [0x271b]:         movi #0, ebx   
10013 [0x271d]:         movsl #0   
10014 [0x271e]:         movi #68, adx   
10016 [0x2720]:         rmov adx, ebx   
10017 [0x2721]:         movi #0, ebx   
10019 [0x2723]:         movsl #0   
10020 [0x2724]:         movi #69, adx   
10022 [0x2726]:         rmov adx, ebx   
10023 [0x2727]:         movi #2, ebx   
10025 [0x2729]:         movsl #0   
10026 [0x272a]:         movi #70, adx   
10028 [0x272c]:         rmov adx, ebx   
10029 [0x272d]:         movi #0, ebx   
10031 [0x272f]:         movsl #0   
10032 [0x2730]:         movi #71, adx   
10034 [0x2732]:         rmov adx, ebx   
10035 [0x2733]:         movi #0, ebx   
10037 [0x2735]:         movsl #0   
10038 [0x2736]:         movi #72, adx   
10040 [0x2738]:         rmov adx, ebx   
10041 [0x2739]:         movi #2, ebx   
10043 [0x273b]:         movsl #0   
10044 [0x273c]:         movi #73, adx   
10046 [0x273e]:         rmov adx, ebx   
10047 [0x273f]:         movi #0, ebx   
10049 [0x2741]:         movsl #0   
10050 [0x2742]:         movi #74, adx   
10052 [0x2744]:         rmov adx, ebx   
10053 [0x2745]:         movi #2, ebx   
10055 [0x2747]:         movsl #0   
10056 [0x2748]:         movi #75, adx   
10058 [0x274a]:         rmov adx, ebx   
10059 [0x274b]:         movi #0, ebx   
10061 [0x274d]:         movsl #0   
10062 [0x274e]:         movi #76, adx   
10064 [0x2750]:         rmov adx, ebx   
10065 [0x2751]:         movi #0, ebx   
10067 [0x2753]:         movsl #0   
10068 [0x2754]:         movi #77, adx   
10070 [0x2756]:         rmov adx, ebx   
10071 [0x2757]:         movi #2, ebx   
10073 [0x2759]:         movsl #0   
10074 [0x275a]:         movi #78, adx   
10076 [0x275c]:         rmov adx, ebx   
10077 [0x275d]:         movi #0, ebx   
10079 [0x275f]:         movsl #0   
10080 [0x2760]:         movi #79, adx   
10082 [0x2762]:         rmov adx, ebx   
10083 [0x2763]:         movi #0, ebx   
10085 [0x2765]:         movsl #0   
10086 [0x2766]:         movi #80, adx   
10088 [0x2768]:         rmov adx, ebx   
10089 [0x2769]:         movi #0, ebx   
10091 [0x276b]:         movsl #0   
10092 [0x276c]:         movi #81, adx   
10094 [0x276e]:         rmov adx, ebx   
10095 [0x276f]:         movi #0, ebx   
10097 [0x2771]:         movsl #0   
10098 [0x2772]:         movi #82, adx   
10100 [0x2774]:         rmov adx, ebx   
10101 [0x2775]:         movi #2, ebx   
10103 [0x2777]:         movsl #0   
10104 [0x2778]:         movi #83, adx   
10106 [0x277a]:         rmov adx, ebx   
10107 [0x277b]:         movi #0, ebx   
10109 [0x277d]:         movsl #0   
10110 [0x277e]:         movi #84, adx   
10112 [0x2780]:         rmov adx, ebx   
10113 [0x2781]:         movi #0, ebx   
10115 [0x2783]:         movsl #0   
10116 [0x2784]:         movi #85, adx   
10118 [0x2786]:         rmov adx, ebx   
10119 [0x2787]:         movi #2, ebx   
10121 [0x2789]:         movsl #0   
10122 [0x278a]:         movi #86, adx   
10124 [0x278c]:         rmov adx, ebx   
10125 [0x278d]:         movi #0, ebx   
10127 [0x278f]:         movsl #0   
10128 [0x2790]:         movi #87, adx   
10130 [0x2792]:         rmov adx, ebx   
10131 [0x2793]:         movi #2, ebx   
10133 [0x2795]:         movsl #0   
10134 [0x2796]:         movi #88, adx   
10136 [0x2798]:         rmov adx, ebx   
10137 [0x2799]:         movi #2, ebx   
10139 [0x279b]:         movsl #0   
10140 [0x279c]:         movi #89, adx   
10142 [0x279e]:         rmov adx, ebx   
10143 [0x279f]:         movi #0, ebx   
10145 [0x27a1]:         movsl #0   
10146 [0x27a2]:         movi #90, adx   
10148 [0x27a4]:         rmov adx, ebx   
10149 [0x27a5]:         movi #2, ebx   
10151 [0x27a7]:         movsl #0   
10152 [0x27a8]:         movi #91, adx   
10154 [0x27aa]:         rmov adx, ebx   
10155 [0x27ab]:         movi #2, ebx   
10157 [0x27ad]:         movsl #0   
10158 [0x27ae]:         movi #92, adx   
10160 [0x27b0]:         rmov adx, ebx   
10161 [0x27b1]:         movi #0, ebx   
10163 [0x27b3]:         movsl #0   
10164 [0x27b4]:         movi #93, adx   
10166 [0x27b6]:         rmov adx, ebx   
10167 [0x27b7]:         movi #2, ebx   
10169 [0x27b9]:         movsl #0   
10170 [0x27ba]:         movi #94, adx   
10172 [0x27bc]:         rmov adx, ebx   
10173 [0x27bd]:         movi #0, ebx   
10175 [0x27bf]:         movsl #0   
10176 [0x27c0]:         movi #95, adx   
10178 [0x27c2]:         rmov adx, ebx   
10179 [0x27c3]:         movi #0, ebx   
10181 [0x27c5]:         movsl #0   
10182 [0x27c6]:         movi #96, adx   
10184 [0x27c8]:         rmov adx, ebx   
10185 [0x27c9]:         movi #2, ebx   
10187 [0x27cb]:         movsl #0   
10188 [0x27cc]:         movi #97, adx   
10190 [0x27ce]:         rmov adx, ebx   
10191 [0x27cf]:         movi #0, ebx   
10193 [0x27d1]:         movsl #0   
10194 [0x27d2]:         movi #98, adx   
10196 [0x27d4]:         rmov adx, ebx   
10197 [0x27d5]:         movi #0, ebx   
10199 [0x27d7]:         movsl #0   
10200 [0x27d8]:         movi #99, adx   
10202 [0x27da]:         rmov adx, ebx   
10203 [0x27db]:         movi #0, ebx   
10205 [0x27dd]:         movsl #0   
10206 [0x27de]:         movi #100, adx   
10208 [0x27e0]:         rmov adx, ebx   
10209 [0x27e1]:         movi #0, ebx   
10211 [0x27e3]:         movsl #0   
10212 [0x27e4]:         movi #101, adx   
10214 [0x27e6]:         rmov adx, ebx   
10215 [0x27e7]:         movi #0, ebx   
10217 [0x27e9]:         movsl #0   
10218 [0x27ea]:         movi #102, adx   
10220 [0x27ec]:         rmov adx, ebx   
10221 [0x27ed]:         movi #0, ebx   
10223 [0x27ef]:         movsl #0   
10224 [0x27f0]:         movi #103, adx   
10226 [0x27f2]:         rmov adx, ebx   
10227 [0x27f3]:         movi #2, ebx   
10229 [0x27f5]:         movsl #0   
10230 [0x27f6]:         movi #104, adx   
10232 [0x27f8]:         rmov adx, ebx   
10233 [0x27f9]:         movi #0, ebx   
10235 [0x27fb]:         movsl #0   
10236 [0x27fc]:         movi #105, adx   
10238 [0x27fe]:         rmov adx, ebx   
10239 [0x27ff]:         movi #0, ebx   
10241 [0x2801]:         movsl #0   
10242 [0x2802]:         movi #106, adx   
10244 [0x2804]:         rmov adx, ebx   
10245 [0x2805]:         movi #2, ebx   
10247 [0x2807]:         movsl #0   
10248 [0x2808]:         movi #107, adx   
10250 [0x280a]:         rmov adx, ebx   
10251 [0x280b]:         movi #0, ebx   
10253 [0x280d]:         movsl #0   
10254 [0x280e]:         movi #108, adx   
10256 [0x2810]:         rmov adx, ebx   
10257 [0x2811]:         movi #2, ebx   
10259 [0x2813]:         movsl #0   
10260 [0x2814]:         movi #109, adx   
10262 [0x2816]:         rmov adx, ebx   
10263 [0x2817]:         movi #0, ebx   
10265 [0x2819]:         movsl #0   
10266 [0x281a]:         movi #110, adx   
10268 [0x281c]:         rmov adx, ebx   
10269 [0x281d]:         movi #2, ebx   
10271 [0x281f]:         movsl #0   
10272 [0x2820]:         movi #111, adx   
10274 [0x2822]:         rmov adx, ebx   
10275 [0x2823]:         movi #0, ebx   
10277 [0x2825]:         movsl #0   
10278 [0x2826]:         movi #112, adx   
10280 [0x2828]:         rmov adx, ebx   
10281 [0x2829]:         movi #2, ebx   
10283 [0x282b]:         movsl #0   
10284 [0x282c]:         movi #113, adx   
10286 [0x282e]:         rmov adx, ebx   
10287 [0x282f]:         movi #0, ebx   
10289 [0x2831]:         movsl #0   
10290 [0x2832]:         movi #114, adx   
10292 [0x2834]:         rmov adx, ebx   
10293 [0x2835]:         movi #0, ebx   
10295 [0x2837]:         movsl #0   
10296 [0x2838]:         movi #115, adx   
10298 [0x283a]:         rmov adx, ebx   
10299 [0x283b]:         movi #2, ebx   
10301 [0x283d]:         movsl #0   
10302 [0x283e]:         movi #116, adx   
10304 [0x2840]:         rmov adx, ebx   
10305 [0x2841]:         movi #0, ebx   
10307 [0x2843]:         movsl #0   
10308 [0x2844]:         movi #117, adx   
10310 [0x2846]:         rmov adx, ebx   
10311 [0x2847]:         movi #0, ebx   
10313 [0x2849]:         movsl #0   
10314 [0x284a]:         movi #118, adx   
10316 [0x284c]:         rmov adx, ebx   
10317 [0x284d]:         movi #0, ebx   
10319 [0x284f]:         movsl #0   
10320 [0x2850]:         movi #119, adx   
10322 [0x2852]:         rmov adx, ebx   
10323 [0x2853]:         movi #0, ebx   
10325 [0x2855]:         movsl #0   
10326 [0x2856]:         movi #120, adx   
10328 [0x2858]:         rmov adx, ebx   
10329 [0x2859]:         movi #0, ebx   
10331 [0x285b]:         movsl #0   
10332 [0x285c]:         movi #121, adx   
10334 [0x285e]:         rmov adx, ebx   
10335 [0x285f]:         movi #0, ebx   
10337 [0x2861]:         movsl #0   
10338 [0x2862]:         movi #122, adx   
10340 [0x2864]:         rmov adx, ebx   
10341 [0x2865]:         movi #0, ebx   
10343 [0x2867]:         movsl #0   
10344 [0x2868]:         movi #123, adx   
10346 [0x286a]:         rmov adx, ebx   
10347 [0x286b]:         movi #2, ebx   
10349 [0x286d]:         movsl #0   
10350 [0x286e]:         movi #124, adx   
10352 [0x2870]:         rmov adx, ebx   
10353 [0x2871]:         movi #0, ebx   
10355 [0x2873]:         movsl #0   
10356 [0x2874]:         movi #125, adx   
10358 [0x2876]:         rmov adx, ebx   
10359 [0x2877]:         movi #0, ebx   
10361 [0x2879]:         movsl #0   
10362 [0x287a]:         movi #126, adx   
10364 [0x287c]:         rmov adx, ebx   
10365 [0x287d]:         movi #0, ebx   
10367 [0x287f]:         movsl #0   
10368 [0x2880]:         movi #127, adx   
10370 [0x2882]:         rmov adx, ebx   
10371 [0x2883]:         movi #2, ebx   
10373 [0x2885]:         movsl #0   
10374 [0x2886]:         movi #128, adx   
10376 [0x2888]:         rmov adx, ebx   
10377 [0x2889]:         movi #2, ebx   
10379 [0x288b]:         movsl #0   
10380 [0x288c]:         movi #129, adx   
10382 [0x288e]:         rmov adx, ebx   
10383 [0x288f]:         movi #2, ebx   
10385 [0x2891]:         movsl #0   
10386 [0x2892]:         movi #130, adx   
10388 [0x2894]:         rmov adx, ebx   
10389 [0x2895]:         movi #2, ebx   
10391 [0x2897]:         movsl #0   
10392 [0x2898]:         movi #131, adx   
10394 [0x289a]:         rmov adx, ebx   
10395 [0x289b]:         movi #2, ebx   
10397 [0x289d]:         movsl #0   
10398 [0x289e]:         movi #132, adx   
10400 [0x28a0]:         rmov adx, ebx   
10401 [0x28a1]:         movi #0, ebx   
10403 [0x28a3]:         movsl #0   
10404 [0x28a4]:         movi #133, adx   
10406 [0x28a6]:         rmov adx, ebx   
10407 [0x28a7]:         movi #0, ebx   
10409 [0x28a9]:         movsl #0   
10410 [0x28aa]:         movi #134, adx   
10412 [0x28ac]:         rmov adx, ebx   
10413 [0x28ad]:         movi #0, ebx   
10415 [0x28af]:         movsl #0   
10416 [0x28b0]:         movi #135, adx   
10418 [0x28b2]:         rmov adx, ebx   
10419 [0x28b3]:         movi #2, ebx   
10421 [0x28b5]:         movsl #0   
10422 [0x28b6]:         movi #136, adx   
10424 [0x28b8]:         rmov adx, ebx   
10425 [0x28b9]:         movi #0, ebx   
10427 [0x28bb]:         movsl #0   
10428 [0x28bc]:         movi #137, adx   
10430 [0x28be]:         rmov adx, ebx   
10431 [0x28bf]:         movi #0, ebx   
10433 [0x28c1]:         movsl #0   
10434 [0x28c2]:         movi #138, adx   
10436 [0x28c4]:         rmov adx, ebx   
10437 [0x28c5]:         movi #0, ebx   
10439 [0x28c7]:         movsl #0   
10440 [0x28c8]:         movi #139, adx   
10442 [0x28ca]:         rmov adx, ebx   
10443 [0x28cb]:         movi #0, ebx   
10445 [0x28cd]:         movsl #0   
10446 [0x28ce]:         movi #140, adx   
10448 [0x28d0]:         rmov adx, ebx   
10449 [0x28d1]:         movi #0, ebx   
10451 [0x28d3]:         movsl #0   
10452 [0x28d4]:         movi #141, adx   
10454 [0x28d6]:         rmov adx, ebx   
10455 [0x28d7]:         movi #0, ebx   
10457 [0x28d9]:         movsl #0   
10458 [0x28da]:         movi #142, adx   
10460 [0x28dc]:         rmov adx, ebx   
10461 [0x28dd]:         movi #0, ebx   
10463 [0x28df]:         movsl #0   
10464 [0x28e0]:         movi #143, adx   
10466 [0x28e2]:         rmov adx, ebx   
10467 [0x28e3]:         movi #2, ebx   
10469 [0x28e5]:         movsl #0   
10470 [0x28e6]:         movi #144, adx   
10472 [0x28e8]:         rmov adx, ebx   
10473 [0x28e9]:         movi #2, ebx   
10475 [0x28eb]:         movsl #0   
10476 [0x28ec]:         movi #145, adx   
10478 [0x28ee]:         rmov adx, ebx   
10479 [0x28ef]:         movi #0, ebx   
10481 [0x28f1]:         movsl #0   
10482 [0x28f2]:         movi #146, adx   
10484 [0x28f4]:         rmov adx, ebx   
10485 [0x28f5]:         movi #0, ebx   
10487 [0x28f7]:         movsl #0   
10488 [0x28f8]:         movi #147, adx   
10490 [0x28fa]:         rmov adx, ebx   
10491 [0x28fb]:         movi #0, ebx   
10493 [0x28fd]:         movsl #0   
10494 [0x28fe]:         movi #148, adx   
10496 [0x2900]:         rmov adx, ebx   
10497 [0x2901]:         movi #2, ebx   
10499 [0x2903]:         movsl #0   
10500 [0x2904]:         movi #149, adx   
10502 [0x2906]:         rmov adx, ebx   
10503 [0x2907]:         movi #2, ebx   
10505 [0x2909]:         movsl #0   
10506 [0x290a]:         movi #150, adx   
10508 [0x290c]:         rmov adx, ebx   
10509 [0x290d]:         movi #2, ebx   
10511 [0x290f]:         movsl #0   
10512 [0x2910]:         movi #151, adx   
10514 [0x2912]:         rmov adx, ebx   
10515 [0x2913]:         movi #0, ebx   
10517 [0x2915]:         movsl #0   
10518 [0x2916]:         movi #152, adx   
10520 [0x2918]:         rmov adx, ebx   
10521 [0x2919]:         movi #0, ebx   
10523 [0x291b]:         movsl #0   
10524 [0x291c]:         movi #153, adx   
10526 [0x291e]:         rmov adx, ebx   
10527 [0x291f]:         movi #0, ebx   
10529 [0x2921]:         movsl #0   
10530 [0x2922]:         movi #154, adx   
10532 [0x2924]:         rmov adx, ebx   
10533 [0x2925]:         movi #2, ebx   
10535 [0x2927]:         movsl #0   
10536 [0x2928]:         movi #155, adx   
10538 [0x292a]:         rmov adx, ebx   
10539 [0x292b]:         movi #2, ebx   
10541 [0x292d]:         movsl #0   
10542 [0x292e]:         movi #156, adx   
10544 [0x2930]:         rmov adx, ebx   
10545 [0x2931]:         movi #0, ebx   
10547 [0x2933]:         movsl #0   
10548 [0x2934]:         movi #157, adx   
10550 [0x2936]:         rmov adx, ebx   
10551 [0x2937]:         movi #0, ebx   
10553 [0x2939]:         movsl #0   
10554 [0x293a]:         movi #158, adx   
10556 [0x293c]:         rmov adx, ebx   
10557 [0x293d]:         movi #0, ebx   
10559 [0x293f]:         movsl #0   
10560 [0x2940]:         movi #159, adx   
10562 [0x2942]:         rmov adx, ebx   
10563 [0x2943]:         movi #0, ebx   
10565 [0x2945]:         movsl #0   
10566 [0x2946]:         movi #160, adx   
10568 [0x2948]:         rmov adx, ebx   
10569 [0x2949]:         movi #0, ebx   
10571 [0x294b]:         movsl #0   
10572 [0x294c]:         movi #161, adx   
10574 [0x294e]:         rmov adx, ebx   
10575 [0x294f]:         movi #0, ebx   
10577 [0x2951]:         movsl #0   
10578 [0x2952]:         movi #162, adx   
10580 [0x2954]:         rmov adx, ebx   
10581 [0x2955]:         movi #0, ebx   
10583 [0x2957]:         movsl #0   
10584 [0x2958]:         movi #163, adx   
10586 [0x295a]:         rmov adx, ebx   
10587 [0x295b]:         movi #0, ebx   
10589 [0x295d]:         movsl #0   
10590 [0x295e]:         movi #164, adx   
10592 [0x2960]:         rmov adx, ebx   
10593 [0x2961]:         movi #2, ebx   
10595 [0x2963]:         movsl #0   
10596 [0x2964]:         movi #165, adx   
10598 [0x2966]:         rmov adx, ebx   
10599 [0x2967]:         movi #2, ebx   
10601 [0x2969]:         movsl #0   
10602 [0x296a]:         movi #166, adx   
10604 [0x296c]:         rmov adx, ebx   
10605 [0x296d]:         movi #0, ebx   
10607 [0x296f]:         movsl #0   
10608 [0x2970]:         movi #167, adx   
10610 [0x2972]:         rmov adx, ebx   
10611 [0x2973]:         movi #0, ebx   
10613 [0x2975]:         movsl #0   
10614 [0x2976]:         movi #168, adx   
10616 [0x2978]:         rmov adx, ebx   
10617 [0x2979]:         movi #2, ebx   
10619 [0x297b]:         movsl #0   
10620 [0x297c]:         movi #169, adx   
10622 [0x297e]:         rmov adx, ebx   
10623 [0x297f]:         movi #2, ebx   
10625 [0x2981]:         movsl #0   
10626 [0x2982]:         movi #170, adx   
10628 [0x2984]:         rmov adx, ebx   
10629 [0x2985]:         movi #2, ebx   
10631 [0x2987]:         movsl #0   
10632 [0x2988]:         movi #171, adx   
10634 [0x298a]:         rmov adx, ebx   
10635 [0x298b]:         movi #0, ebx   
10637 [0x298d]:         movsl #0   
10638 [0x298e]:         movi #172, adx   
10640 [0x2990]:         rmov adx, ebx   
10641 [0x2991]:         movi #0, ebx   
10643 [0x2993]:         movsl #0   
10644 [0x2994]:         movi #173, adx   
10646 [0x2996]:         rmov adx, ebx   
10647 [0x2997]:         movi #2, ebx   
10649 [0x2999]:         movsl #0   
10650 [0x299a]:         movi #174, adx   
10652 [0x299c]:         rmov adx, ebx   
10653 [0x299d]:         movi #2, ebx   
10655 [0x299f]:         movsl #0   
10656 [0x29a0]:         movi #175, adx   
10658 [0x29a2]:         rmov adx, ebx   
10659 [0x29a3]:         movi #0, ebx   
10661 [0x29a5]:         movsl #0   
10662 [0x29a6]:         movi #176, adx   
10664 [0x29a8]:         rmov adx, ebx   
10665 [0x29a9]:         movi #0, ebx   
10667 [0x29ab]:         movsl #0   
10668 [0x29ac]:         movi #177, adx   
10670 [0x29ae]:         rmov adx, ebx   
10671 [0x29af]:         movi #0, ebx   
10673 [0x29b1]:         movsl #0   
10674 [0x29b2]:         movi #178, adx   
10676 [0x29b4]:         rmov adx, ebx   
10677 [0x29b5]:         movi #0, ebx   
10679 [0x29b7]:         movsl #0   
10680 [0x29b8]:         movi #179, adx   
10682 [0x29ba]:         rmov adx, ebx   
10683 [0x29bb]:         movi #0, ebx   
10685 [0x29bd]:         movsl #0   
10686 [0x29be]:         movi #180, adx   
10688 [0x29c0]:         rmov adx, ebx   
10689 [0x29c1]:         movi #0, ebx   
10691 [0x29c3]:         movsl #0   
10692 [0x29c4]:         movi #181, adx   
10694 [0x29c6]:         rmov adx, ebx   
10695 [0x29c7]:         movi #0, ebx   
10697 [0x29c9]:         movsl #0   
10698 [0x29ca]:         movi #182, adx   
10700 [0x29cc]:         rmov adx, ebx   
10701 [0x29cd]:         movi #0, ebx   
10703 [0x29cf]:         movsl #0   
10704 [0x29d0]:         movi #183, adx   
10706 [0x29d2]:         rmov adx, ebx   
10707 [0x29d3]:         movi #0, ebx   
10709 [0x29d5]:         movsl #0   
10710 [0x29d6]:         movi #184, adx   
10712 [0x29d8]:         rmov adx, ebx   
10713 [0x29d9]:         movi #0, ebx   
10715 [0x29db]:         movsl #0   
10716 [0x29dc]:         movi #185, adx   
10718 [0x29de]:         rmov adx, ebx   
10719 [0x29df]:         movi #2, ebx   
10721 [0x29e1]:         movsl #0   
10722 [0x29e2]:         movi #186, adx   
10724 [0x29e4]:         rmov adx, ebx   
10725 [0x29e5]:         movi #2, ebx   
10727 [0x29e7]:         movsl #0   
10728 [0x29e8]:         movi #187, adx   
10730 [0x29ea]:         rmov adx, ebx   
10731 [0x29eb]:         movi #0, ebx   
10733 [0x29ed]:         movsl #0   
10734 [0x29ee]:         movi #188, adx   
10736 [0x29f0]:         rmov adx, ebx   
10737 [0x29f1]:         movi #2, ebx   
10739 [0x29f3]:         movsl #0   
10740 [0x29f4]:         movi #189, adx   
10742 [0x29f6]:         rmov adx, ebx   
10743 [0x29f7]:         movi #2, ebx   
10745 [0x29f9]:         movsl #0   
10746 [0x29fa]:         movi #190, adx   
10748 [0x29fc]:         rmov adx, ebx   
10749 [0x29fd]:         movi #2, ebx   
10751 [0x29ff]:         movsl #0   
10752 [0x2a00]:         movi #191, adx   
10754 [0x2a02]:         rmov adx, ebx   
10755 [0x2a03]:         movi #0, ebx   
10757 [0x2a05]:         movsl #0   
10758 [0x2a06]:         movi #192, adx   
10760 [0x2a08]:         rmov adx, ebx   
10761 [0x2a09]:         movi #2, ebx   
10763 [0x2a0b]:         movsl #0   
10764 [0x2a0c]:         movi #193, adx   
10766 [0x2a0e]:         rmov adx, ebx   
10767 [0x2a0f]:         movi #2, ebx   
10769 [0x2a11]:         movsl #0   
10770 [0x2a12]:         movi #194, adx   
10772 [0x2a14]:         rmov adx, ebx   
10773 [0x2a15]:         movi #0, ebx   
10775 [0x2a17]:         movsl #0   
10776 [0x2a18]:         movi #195, adx   
10778 [0x2a1a]:         rmov adx, ebx   
10779 [0x2a1b]:         movi #0, ebx   
10781 [0x2a1d]:         movsl #0   
10782 [0x2a1e]:         movi #196, adx   
10784 [0x2a20]:         rmov adx, ebx   
10785 [0x2a21]:         movi #0, ebx   
10787 [0x2a23]:         movsl #0   
10788 [0x2a24]:         movi #197, adx   
10790 [0x2a26]:         rmov adx, ebx   
10791 [0x2a27]:         movi #0, ebx   
10793 [0x2a29]:         movsl #0   
10794 [0x2a2a]:         movi #198, adx   
10796 [0x2a2c]:         rmov adx, ebx   
10797 [0x2a2d]:         movi #0, ebx   
10799 [0x2a2f]:         movsl #0   
10800 [0x2a30]:         movi #199, adx   
10802 [0x2a32]:         rmov adx, ebx   
10803 [0x2a33]:         movi #0, ebx   
10805 [0x2a35]:         movsl #0   
10806 [0x2a36]:         movi #200, adx   
10808 [0x2a38]:         rmov adx, ebx   
10809 [0x2a39]:         movi #0, ebx   
10811 [0x2a3b]:         movsl #0   
10812 [0x2a3c]:         movi #201, adx   
10814 [0x2a3e]:         rmov adx, ebx   
10815 [0x2a3f]:         movi #0, ebx   
10817 [0x2a41]:         movsl #0   
10818 [0x2a42]:         movi #202, adx   
10820 [0x2a44]:         rmov adx, ebx   
10821 [0x2a45]:         movi #0, ebx   
10823 [0x2a47]:         movsl #0   
10824 [0x2a48]:         movi #203, adx   
10826 [0x2a4a]:         rmov adx, ebx   
10827 [0x2a4b]:         movi #0, ebx   
10829 [0x2a4d]:         movsl #0   
10830 [0x2a4e]:         movi #204, adx   
10832 [0x2a50]:         rmov adx, ebx   
10833 [0x2a51]:         movi #0, ebx   
10835 [0x2a53]:         movsl #0   
10836 [0x2a54]:         movi #205, adx   
10838 [0x2a56]:         rmov adx, ebx   
10839 [0x2a57]:         movi #0, ebx   
10841 [0x2a59]:         movsl #0   
10842 [0x2a5a]:         movi #206, adx   
10844 [0x2a5c]:         rmov adx, ebx   
10845 [0x2a5d]:         movi #0, ebx   
10847 [0x2a5f]:         movsl #0   
10848 [0x2a60]:         movi #207, adx   
10850 [0x2a62]:         rmov adx, ebx   
10851 [0x2a63]:         movi #2, ebx   
10853 [0x2a65]:         movsl #0   
10854 [0x2a66]:         movi #208, adx   
10856 [0x2a68]:         rmov adx, ebx   
10857 [0x2a69]:         movi #2, ebx   
10859 [0x2a6b]:         movsl #0   
10860 [0x2a6c]:         movi #209, adx   
10862 [0x2a6e]:         rmov adx, ebx   
10863 [0x2a6f]:         movi #2, ebx   
10865 [0x2a71]:         movsl #0   
10866 [0x2a72]:         movi #210, adx   
10868 [0x2a74]:         rmov adx, ebx   
10869 [0x2a75]:         movi #2, ebx   
10871 [0x2a77]:         movsl #0   
10872 [0x2a78]:         movi #211, adx   
10874 [0x2a7a]:         rmov adx, ebx   
10875 [0x2a7b]:         movi #2, ebx   
10877 [0x2a7d]:         movsl #0   
10878 [0x2a7e]:         movi #212, adx   
10880 [0x2a80]:         rmov adx, ebx   
10881 [0x2a81]:         movi #0, ebx   
10883 [0x2a83]:         movsl #0   
10884 [0x2a84]:         movi #213, adx   
10886 [0x2a86]:         rmov adx, ebx   
10887 [0x2a87]:         movi #0, ebx   
10889 [0x2a89]:         movsl #0   
10890 [0x2a8a]:         movi #214, adx   
10892 [0x2a8c]:         rmov adx, ebx   
10893 [0x2a8d]:         movi #0, ebx   
10895 [0x2a8f]:         movsl #0   
10896 [0x2a90]:         movi #215, adx   
10898 [0x2a92]:         rmov adx, ebx   
10899 [0x2a93]:         movi #0, ebx   
10901 [0x2a95]:         movsl #0   
10902 [0x2a96]:         movi #216, adx   
10904 [0x2a98]:         rmov adx, ebx   
10905 [0x2a99]:         movi #0, ebx   
10907 [0x2a9b]:         movsl #0   
10908 [0x2a9c]:         movi #217, adx   
10910 [0x2a9e]:         rmov adx, ebx   
10911 [0x2a9f]:         movi #0, ebx   
10913 [0x2aa1]:         movsl #0   
10914 [0x2aa2]:         movi #218, adx   
10916 [0x2aa4]:         rmov adx, ebx   
10917 [0x2aa5]:         movi #0, ebx   
10919 [0x2aa7]:         movsl #0   
10920 [0x2aa8]:         movi #219, adx   
10922 [0x2aaa]:         rmov adx, ebx   
10923 [0x2aab]:         movi #0, ebx   
10925 [0x2aad]:         movsl #0   
10926 [0x2aae]:         movi #220, adx   
10928 [0x2ab0]:         rmov adx, ebx   
10929 [0x2ab1]:         movi #0, ebx   
10931 [0x2ab3]:         movsl #0   
10932 [0x2ab4]:         movi #221, adx   
10934 [0x2ab6]:         rmov adx, ebx   
10935 [0x2ab7]:         movi #0, ebx   
10937 [0x2ab9]:         movsl #0   
10938 [0x2aba]:         movi #222, adx   
10940 [0x2abc]:         rmov adx, ebx   
10941 [0x2abd]:         movi #0, ebx   
10943 [0x2abf]:         movsl #0   
10944 [0x2ac0]:         movi #223, adx   
10946 [0x2ac2]:         rmov adx, ebx   
10947 [0x2ac3]:         movi #0, ebx   
10949 [0x2ac5]:         movsl #0   
10950 [0x2ac6]:         movi #224, adx   
10952 [0x2ac8]:         rmov adx, ebx   
10953 [0x2ac9]:         movi #0, ebx   
10955 [0x2acb]:         movsl #0   
10956 [0x2acc]:         movi #225, adx   
10958 [0x2ace]:         rmov adx, ebx   
10959 [0x2acf]:         movi #0, ebx   
10961 [0x2ad1]:         movsl #0   
10962 [0x2ad2]:         movi #226, adx   
10964 [0x2ad4]:         rmov adx, ebx   
10965 [0x2ad5]:         movi #0, ebx   
10967 [0x2ad7]:         movsl #0   
10968 [0x2ad8]:         movi #227, adx   
10970 [0x2ada]:         rmov adx, ebx   
10971 [0x2adb]:         movi #0, ebx   
10973 [0x2add]:         movsl #0   
10974 [0x2ade]:         movi #228, adx   
10976 [0x2ae0]:         rmov adx, ebx   
10977 [0x2ae1]:         movi #2, ebx   
10979 [0x2ae3]:         movsl #0   
10980 [0x2ae4]:         movi #229, adx   
10982 [0x2ae6]:         rmov adx, ebx   
10983 [0x2ae7]:         movi #2, ebx   
10985 [0x2ae9]:         movsl #0   
10986 [0x2aea]:         movi #230, adx   
10988 [0x2aec]:         rmov adx, ebx   
10989 [0x2aed]:         movi #2, ebx   
10991 [0x2aef]:         movsl #0   
10992 [0x2af0]:         movi #231, adx   
10994 [0x2af2]:         rmov adx, ebx   
10995 [0x2af3]:         movi #0, ebx   
10997 [0x2af5]:         movsl #0   
10998 [0x2af6]:         movi #232, adx   
11000 [0x2af8]:         rmov adx, ebx   
11001 [0x2af9]:         movi #0, ebx   
11003 [0x2afb]:         movsl #0   
11004 [0x2afc]:         movi #233, adx   
11006 [0x2afe]:         rmov adx, ebx   
11007 [0x2aff]:         movi #0, ebx   
11009 [0x2b01]:         movsl #0   
11010 [0x2b02]:         movi #234, adx   
11012 [0x2b04]:         rmov adx, ebx   
11013 [0x2b05]:         movi #0, ebx   
11015 [0x2b07]:         movsl #0   
11016 [0x2b08]:         movi #235, adx   
11018 [0x2b0a]:         rmov adx, ebx   
11019 [0x2b0b]:         movi #0, ebx   
11021 [0x2b0d]:         movsl #0   
11022 [0x2b0e]:         movi #236, adx   
11024 [0x2b10]:         rmov adx, ebx   
11025 [0x2b11]:         movi #0, ebx   
11027 [0x2b13]:         movsl #0   
11028 [0x2b14]:         movi #237, adx   
11030 [0x2b16]:         rmov adx, ebx   
11031 [0x2b17]:         movi #0, ebx   
11033 [0x2b19]:         movsl #0   
11034 [0x2b1a]:         movi #238, adx   
11036 [0x2b1c]:         rmov adx, ebx   
11037 [0x2b1d]:         movi #0, ebx   
11039 [0x2b1f]:         movsl #0   
11040 [0x2b20]:         movi #239, adx   
11042 [0x2b22]:         rmov adx, ebx   
11043 [0x2b23]:         movi #0, ebx   
11045 [0x2b25]:         movsl #0   
11046 [0x2b26]:         movi #240, adx   
11048 [0x2b28]:         rmov adx, ebx   
11049 [0x2b29]:         movi #0, ebx   
11051 [0x2b2b]:         movsl #0   
11052 [0x2b2c]:         movi #241, adx   
11054 [0x2b2e]:         rmov adx, ebx   
11055 [0x2b2f]:         movi #0, ebx   
11057 [0x2b31]:         movsl #0   
11058 [0x2b32]:         movi #242, adx   
11060 [0x2b34]:         rmov adx, ebx   
11061 [0x2b35]:         movi #0, ebx   
11063 [0x2b37]:         movsl #0   
11064 [0x2b38]:         movi #243, adx   
11066 [0x2b3a]:         rmov adx, ebx   
11067 [0x2b3b]:         movi #0, ebx   
11069 [0x2b3d]:         movsl #0   
11070 [0x2b3e]:         movi #244, adx   
11072 [0x2b40]:         rmov adx, ebx   
11073 [0x2b41]:         movi #0, ebx   
11075 [0x2b43]:         movsl #0   
11076 [0x2b44]:         movi #245, adx   
11078 [0x2b46]:         rmov adx, ebx   
11079 [0x2b47]:         movi #0, ebx   
11081 [0x2b49]:         movsl #0   
11082 [0x2b4a]:         movi #246, adx   
11084 [0x2b4c]:         rmov adx, ebx   
11085 [0x2b4d]:         movi #0, ebx   
11087 [0x2b4f]:         movsl #0   
11088 [0x2b50]:         movi #247, adx   
11090 [0x2b52]:         rmov adx, ebx   
11091 [0x2b53]:         movi #2, ebx   
11093 [0x2b55]:         movsl #0   
11094 [0x2b56]:         movi #248, adx   
11096 [0x2b58]:         rmov adx, ebx   
11097 [0x2b59]:         movi #2, ebx   
11099 [0x2b5b]:         movsl #0   
11100 [0x2b5c]:         movi #249, adx   
11102 [0x2b5e]:         rmov adx, ebx   
11103 [0x2b5f]:         movi #2, ebx   
11105 [0x2b61]:         movsl #0   
11106 [0x2b62]:         movi #250, adx   
11108 [0x2b64]:         rmov adx, ebx   
11109 [0x2b65]:         movi #2, ebx   
11111 [0x2b67]:         movsl #0   
11112 [0x2b68]:         movi #251, adx   
11114 [0x2b6a]:         rmov adx, ebx   
11115 [0x2b6b]:         movi #2, ebx   
11117 [0x2b6d]:         movsl #0   
11118 [0x2b6e]:         movi #252, adx   
11120 [0x2b70]:         rmov adx, ebx   
11121 [0x2b71]:         movi #0, ebx   
11123 [0x2b73]:         movsl #0   
11124 [0x2b74]:         movi #253, adx   
11126 [0x2b76]:         rmov adx, ebx   
11127 [0x2b77]:         movi #0, ebx   
11129 [0x2b79]:         movsl #0   
11130 [0x2b7a]:         movi #254, adx   
11132 [0x2b7c]:         rmov adx, ebx   
11133 [0x2b7d]:         movi #0, ebx   
11135 [0x2b7f]:         movsl #0   
11136 [0x2b80]:         movi #255, adx   
11138 [0x2b82]:         rmov adx, ebx   
11139 [0x2b83]:         movi #0, ebx   
11141 [0x2b85]:         movsl #0   
11142 [0x2b86]:         movi #256, adx   
11144 [0x2b88]:         rmov adx, ebx   
11145 [0x2b89]:         movi #0, ebx   
11147 [0x2b8b]:         movsl #0   
11148 [0x2b8c]:         movi #257, adx   
11150 [0x2b8e]:         rmov adx, ebx   
11151 [0x2b8f]:         movi #0, ebx   
11153 [0x2b91]:         movsl #0   
11154 [0x2b92]:         movi #258, adx   
11156 [0x2b94]:         rmov adx, ebx   
11157 [0x2b95]:         movi #0, ebx   
11159 [0x2b97]:         movsl #0   
11160 [0x2b98]:         movi #259, adx   
11162 [0x2b9a]:         rmov adx, ebx   
11163 [0x2b9b]:         movi #0, ebx   
11165 [0x2b9d]:         movsl #0   
11166 [0x2b9e]:         movi #260, adx   
11168 [0x2ba0]:         rmov adx, ebx   
11169 [0x2ba1]:         movi #0, ebx   
11171 [0x2ba3]:         movsl #0   
11172 [0x2ba4]:         movi #261, adx   
11174 [0x2ba6]:         rmov adx, ebx   
11175 [0x2ba7]:         movi #0, ebx   
11177 [0x2ba9]:         movsl #0   
11178 [0x2baa]:         movi #262, adx   
11180 [0x2bac]:         rmov adx, ebx   
11181 [0x2bad]:         movi #0, ebx   
11183 [0x2baf]:         movsl #0   
11184 [0x2bb0]:         movi #263, adx   
11186 [0x2bb2]:         rmov adx, ebx   
11187 [0x2bb3]:         movi #0, ebx   
11189 [0x2bb5]:         movsl #0   
11190 [0x2bb6]:         movi #264, adx   
11192 [0x2bb8]:         rmov adx, ebx   
11193 [0x2bb9]:         movi #0, ebx   
11195 [0x2bbb]:         movsl #0   
11196 [0x2bbc]:         movi #265, adx   
11198 [0x2bbe]:         rmov adx, ebx   
11199 [0x2bbf]:         movi #0, ebx   
11201 [0x2bc1]:         movsl #0   
11202 [0x2bc2]:         movi #266, adx   
11204 [0x2bc4]:         rmov adx, ebx   
11205 [0x2bc5]:         movi #2, ebx   
11207 [0x2bc7]:         movsl #0   
11208 [0x2bc8]:         movi #267, adx   
11210 [0x2bca]:         rmov adx, ebx   
11211 [0x2bcb]:         movi #0, ebx   
11213 [0x2bcd]:         movsl #0   
11214 [0x2bce]:         movi #268, adx   
11216 [0x2bd0]:         rmov adx, ebx   
11217 [0x2bd1]:         movi #2, ebx   
11219 [0x2bd3]:         movsl #0   
11220 [0x2bd4]:         movi #269, adx   
11222 [0x2bd6]:         rmov adx, ebx   
11223 [0x2bd7]:         movi #2, ebx   
11225 [0x2bd9]:         movsl #0   
11226 [0x2bda]:         movi #270, adx   
11228 [0x2bdc]:         rmov adx, ebx   
11229 [0x2bdd]:         movi #2, ebx   
11231 [0x2bdf]:         movsl #0   
11232 [0x2be0]:         movi #271, adx   
11234 [0x2be2]:         rmov adx, ebx   
11235 [0x2be3]:         movi #0, ebx   
11237 [0x2be5]:         movsl #0   
11238 [0x2be6]:         movi #272, adx   
11240 [0x2be8]:         rmov adx, ebx   
11241 [0x2be9]:         movi #2, ebx   
11243 [0x2beb]:         movsl #0   
11244 [0x2bec]:         movi #273, adx   
11246 [0x2bee]:         rmov adx, ebx   
11247 [0x2bef]:         movi #0, ebx   
11249 [0x2bf1]:         movsl #0   
11250 [0x2bf2]:         movi #274, adx   
11252 [0x2bf4]:         rmov adx, ebx   
11253 [0x2bf5]:         movi #0, ebx   
11255 [0x2bf7]:         movsl #0   
11256 [0x2bf8]:         movi #275, adx   
11258 [0x2bfa]:         rmov adx, ebx   
11259 [0x2bfb]:         movi #0, ebx   
11261 [0x2bfd]:         movsl #0   
11262 [0x2bfe]:         movi #276, adx   
11264 [0x2c00]:         rmov adx, ebx   
11265 [0x2c01]:         movi #0, ebx   
11267 [0x2c03]:         movsl #0   
11268 [0x2c04]:         movi #277, adx   
11270 [0x2c06]:         rmov adx, ebx   
11271 [0x2c07]:         movi #0, ebx   
11273 [0x2c09]:         movsl #0   
11274 [0x2c0a]:         movi #278, adx   
11276 [0x2c0c]:         rmov adx, ebx   
11277 [0x2c0d]:         movi #0, ebx   
11279 [0x2c0f]:         movsl #0   
11280 [0x2c10]:         movi #279, adx   
11282 [0x2c12]:         rmov adx, ebx   
11283 [0x2c13]:         movi #0, ebx   
11285 [0x2c15]:         movsl #0   
11286 [0x2c16]:         movi #280, adx   
11288 [0x2c18]:         rmov adx, ebx   
11289 [0x2c19]:         movi #0, ebx   
11291 [0x2c1b]:         movsl #0   
11292 [0x2c1c]:         movi #281, adx   
11294 [0x2c1e]:         rmov adx, ebx   
11295 [0x2c1f]:         movi #0, ebx   
11297 [0x2c21]:         movsl #0   
11298 [0x2c22]:         movi #282, adx   
11300 [0x2c24]:         rmov adx, ebx   
11301 [0x2c25]:         movi #0, ebx   
11303 [0x2c27]:         movsl #0   
11304 [0x2c28]:         movi #283, adx   
11306 [0x2c2a]:         rmov adx, ebx   
11307 [0x2c2b]:         movi #0, ebx   
11309 [0x2c2d]:         movsl #0   
11310 [0x2c2e]:         movi #284, adx   
11312 [0x2c30]:         rmov adx, ebx   
11313 [0x2c31]:         movi #0, ebx   
11315 [0x2c33]:         movsl #0   
11316 [0x2c34]:         movi #285, adx   
11318 [0x2c36]:         rmov adx, ebx   
11319 [0x2c37]:         movi #2, ebx   
11321 [0x2c39]:         movsl #0   
11322 [0x2c3a]:         movi #286, adx   
11324 [0x2c3c]:         rmov adx, ebx   
11325 [0x2c3d]:         movi #0, ebx   
11327 [0x2c3f]:         movsl #0   
11328 [0x2c40]:         movi #287, adx   
11330 [0x2c42]:         rmov adx, ebx   
11331 [0x2c43]:         movi #0, ebx   
11333 [0x2c45]:         movsl #0   
11334 [0x2c46]:         movi #288, adx   
11336 [0x2c48]:         rmov adx, ebx   
11337 [0x2c49]:         movi #2, ebx   
11339 [0x2c4b]:         movsl #0   
11340 [0x2c4c]:         movi #289, adx   
11342 [0x2c4e]:         rmov adx, ebx   
11343 [0x2c4f]:         movi #2, ebx   
11345 [0x2c51]:         movsl #0   
11346 [0x2c52]:         movi #290, adx   
11348 [0x2c54]:         rmov adx, ebx   
11349 [0x2c55]:         movi #2, ebx   
11351 [0x2c57]:         movsl #0   
11352 [0x2c58]:         movi #291, adx   
11354 [0x2c5a]:         rmov adx, ebx   
11355 [0x2c5b]:         movi #0, ebx   
11357 [0x2c5d]:         movsl #0   
11358 [0x2c5e]:         movi #292, adx   
11360 [0x2c60]:         rmov adx, ebx   
11361 [0x2c61]:         movi #0, ebx   
11363 [0x2c63]:         movsl #0   
11364 [0x2c64]:         movi #293, adx   
11366 [0x2c66]:         rmov adx, ebx   
11367 [0x2c67]:         movi #2, ebx   
11369 [0x2c69]:         movsl #0   
11370 [0x2c6a]:         movi #294, adx   
11372 [0x2c6c]:         rmov adx, ebx   
11373 [0x2c6d]:         movi #0, ebx   
11375 [0x2c6f]:         movsl #0   
11376 [0x2c70]:         movi #295, adx   
11378 [0x2c72]:         rmov adx, ebx   
11379 [0x2c73]:         movi #0, ebx   
11381 [0x2c75]:         movsl #0   
11382 [0x2c76]:         movi #296, adx   
11384 [0x2c78]:         rmov adx, ebx   
11385 [0x2c79]:         movi #0, ebx   
11387 [0x2c7b]:         movsl #0   
11388 [0x2c7c]:         movi #297, adx   
11390 [0x2c7e]:         rmov adx, ebx   
11391 [0x2c7f]:         movi #0, ebx   
11393 [0x2c81]:         movsl #0   
11394 [0x2c82]:         movi #298, adx   
11396 [0x2c84]:         rmov adx, ebx   
11397 [0x2c85]:         movi #0, ebx   
11399 [0x2c87]:         movsl #0   
11400 [0x2c88]:         movi #299, adx   
11402 [0x2c8a]:         rmov adx, ebx   
11403 [0x2c8b]:         movi #0, ebx   
11405 [0x2c8d]:         movsl #0   
11406 [0x2c8e]:         movi #300, adx   
11408 [0x2c90]:         rmov adx, ebx   
11409 [0x2c91]:         movi #0, ebx   
11411 [0x2c93]:         movsl #0   
11412 [0x2c94]:         movi #301, adx   
11414 [0x2c96]:         rmov adx, ebx   
11415 [0x2c97]:         movi #0, ebx   
11417 [0x2c99]:         movsl #0   
11418 [0x2c9a]:         movi #302, adx   
11420 [0x2c9c]:         rmov adx, ebx   
11421 [0x2c9d]:         movi #0, ebx   
11423 [0x2c9f]:         movsl #0   
11424 [0x2ca0]:         movi #303, adx   
11426 [0x2ca2]:         rmov adx, ebx   
11427 [0x2ca3]:         movi #0, ebx   
11429 [0x2ca5]:         movsl #0   
11430 [0x2ca6]:         movi #304, adx   
11432 [0x2ca8]:         rmov adx, ebx   
11433 [0x2ca9]:         movi #2, ebx   
11435 [0x2cab]:         movsl #0   
11436 [0x2cac]:         movi #305, adx   
11438 [0x2cae]:         rmov adx, ebx   
11439 [0x2caf]:         movi #0, ebx   
11441 [0x2cb1]:         movsl #0   
11442 [0x2cb2]:         movi #306, adx   
11444 [0x2cb4]:         rmov adx, ebx   
11445 [0x2cb5]:         movi #0, ebx   
11447 [0x2cb7]:         movsl #0   
11448 [0x2cb8]:         movi #307, adx   
11450 [0x2cba]:         rmov adx, ebx   
11451 [0x2cbb]:         movi #0, ebx   
11453 [0x2cbd]:         movsl #0   
11454 [0x2cbe]:         movi #308, adx   
11456 [0x2cc0]:         rmov adx, ebx   
11457 [0x2cc1]:         movi #2, ebx   
11459 [0x2cc3]:         movsl #0   
11460 [0x2cc4]:         movi #309, adx   
11462 [0x2cc6]:         rmov adx, ebx   
11463 [0x2cc7]:         movi #2, ebx   
11465 [0x2cc9]:         movsl #0   
11466 [0x2cca]:         movi #310, adx   
11468 [0x2ccc]:         rmov adx, ebx   
11469 [0x2ccd]:         movi #2, ebx   
11471 [0x2ccf]:         movsl #0   
11472 [0x2cd0]:         movi #311, adx   
11474 [0x2cd2]:         rmov adx, ebx   
11475 [0x2cd3]:         movi #0, ebx   
11477 [0x2cd5]:         movsl #0   
11478 [0x2cd6]:         movi #312, adx   
11480 [0x2cd8]:         rmov adx, ebx   
11481 [0x2cd9]:         movi #0, ebx   
11483 [0x2cdb]:         movsl #0   
11484 [0x2cdc]:         movi #313, adx   
11486 [0x2cde]:         rmov adx, ebx   
11487 [0x2cdf]:         movi #0, ebx   
11489 [0x2ce1]:         movsl #0   
11490 [0x2ce2]:         movi #314, adx   
11492 [0x2ce4]:         rmov adx, ebx   
11493 [0x2ce5]:         movi #2, ebx   
11495 [0x2ce7]:         movsl #0   
11496 [0x2ce8]:         movi #315, adx   
11498 [0x2cea]:         rmov adx, ebx   
11499 [0x2ceb]:         movi #0, ebx   
11501 [0x2ced]:         movsl #0   
11502 [0x2cee]:         movi #316, adx   
11504 [0x2cf0]:         rmov adx, ebx   
11505 [0x2cf1]:         movi #0, ebx   
11507 [0x2cf3]:         movsl #0   
11508 [0x2cf4]:         movi #317, adx   
11510 [0x2cf6]:         rmov adx, ebx   
11511 [0x2cf7]:         movi #0, ebx   
11513 [0x2cf9]:         movsl #0   
11514 [0x2cfa]:         movi #318, adx   
11516 [0x2cfc]:         rmov adx, ebx   
11517 [0x2cfd]:         movi #0, ebx   
11519 [0x2cff]:         movsl #0   
11520 [0x2d00]:         movi #319, adx   
11522 [0x2d02]:         rmov adx, ebx   
11523 [0x2d03]:         movi #0, ebx   
11525 [0x2d05]:         movsl #0   
11526 [0x2d06]:         movi #320, adx   
11528 [0x2d08]:         rmov adx, ebx   
11529 [0x2d09]:         movi #0, ebx   
11531 [0x2d0b]:         movsl #0   
11532 [0x2d0c]:         movi #321, adx   
11534 [0x2d0e]:         rmov adx, ebx   
11535 [0x2d0f]:         movi #0, ebx   
11537 [0x2d11]:         movsl #0   
11538 [0x2d12]:         movi #322, adx   
11540 [0x2d14]:         rmov adx, ebx   
11541 [0x2d15]:         movi #0, ebx   
11543 [0x2d17]:         movsl #0   
11544 [0x2d18]:         movi #323, adx   
11546 [0x2d1a]:         rmov adx, ebx   
11547 [0x2d1b]:         movi #2, ebx   
11549 [0x2d1d]:         movsl #0   
11550 [0x2d1e]:         movi #324, adx   
11552 [0x2d20]:         rmov adx, ebx   
11553 [0x2d21]:         movi #0, ebx   
11555 [0x2d23]:         movsl #0   
11556 [0x2d24]:         movi #325, adx   
11558 [0x2d26]:         rmov adx, ebx   
11559 [0x2d27]:         movi #0, ebx   
11561 [0x2d29]:         movsl #0   
11562 [0x2d2a]:         movi #326, adx   
11564 [0x2d2c]:         rmov adx, ebx   
11565 [0x2d2d]:         movi #0, ebx   
11567 [0x2d2f]:         movsl #0   
11568 [0x2d30]:         movi #327, adx   
11570 [0x2d32]:         rmov adx, ebx   
11571 [0x2d33]:         movi #2, ebx   
11573 [0x2d35]:         movsl #0   
11574 [0x2d36]:         movi #328, adx   
11576 [0x2d38]:         rmov adx, ebx   
11577 [0x2d39]:         movi #2, ebx   
11579 [0x2d3b]:         movsl #0   
11580 [0x2d3c]:         movi #329, adx   
11582 [0x2d3e]:         rmov adx, ebx   
11583 [0x2d3f]:         movi #2, ebx   
11585 [0x2d41]:         movsl #0   
11586 [0x2d42]:         movi #330, adx   
11588 [0x2d44]:         rmov adx, ebx   
11589 [0x2d45]:         movi #2, ebx   
11591 [0x2d47]:         movsl #0   
11592 [0x2d48]:         movi #331, adx   
11594 [0x2d4a]:         rmov adx, ebx   
11595 [0x2d4b]:         movi #2, ebx   
11597 [0x2d4d]:         movsl #0   
11598 [0x2d4e]:         movi #332, adx   
11600 [0x2d50]:         rmov adx, ebx   
11601 [0x2d51]:         movi #0, ebx   
11603 [0x2d53]:         movsl #0   
11604 [0x2d54]:         movi #333, adx   
11606 [0x2d56]:         rmov adx, ebx   
11607 [0x2d57]:         movi #0, ebx   
11609 [0x2d59]:         movsl #0   
11610 [0x2d5a]:         movi #334, adx   
11612 [0x2d5c]:         rmov adx, ebx   
11613 [0x2d5d]:         movi #0, ebx   
11615 [0x2d5f]:         movsl #0   
11616 [0x2d60]:         movi #335, adx   
11618 [0x2d62]:         rmov adx, ebx   
11619 [0x2d63]:         movi #2, ebx   
11621 [0x2d65]:         movsl #0   
11622 [0x2d66]:         movi #336, adx   
11624 [0x2d68]:         rmov adx, ebx   
11625 [0x2d69]:         movi #0, ebx   
11627 [0x2d6b]:         movsl #0   
11628 [0x2d6c]:         movi #337, adx   
11630 [0x2d6e]:         rmov adx, ebx   
11631 [0x2d6f]:         movi #0, ebx   
11633 [0x2d71]:         movsl #0   
11634 [0x2d72]:         movi #338, adx   
11636 [0x2d74]:         rmov adx, ebx   
11637 [0x2d75]:         movi #0, ebx   
11639 [0x2d77]:         movsl #0   
11640 [0x2d78]:         movi #339, adx   
11642 [0x2d7a]:         rmov adx, ebx   
11643 [0x2d7b]:         movi #0, ebx   
11645 [0x2d7d]:         movsl #0   
11646 [0x2d7e]:         movi #340, adx   
11648 [0x2d80]:         rmov adx, ebx   
11649 [0x2d81]:         movi #0, ebx   
11651 [0x2d83]:         movsl #0   
11652 [0x2d84]:         movi #341, adx   
11654 [0x2d86]:         rmov adx, ebx   
11655 [0x2d87]:         movi #0, ebx   
11657 [0x2d89]:         movsl #0   
11658 [0x2d8a]:         movi #342, adx   
11660 [0x2d8c]:         rmov adx, ebx   
11661 [0x2d8d]:         movi #0, ebx   
11663 [0x2d8f]:         movsl #0   
11664 [0x2d90]:         movi #343, adx   
11666 [0x2d92]:         rmov adx, ebx   
11667 [0x2d93]:         movi #2, ebx   
11669 [0x2d95]:         movsl #0   
11670 [0x2d96]:         movi #344, adx   
11672 [0x2d98]:         rmov adx, ebx   
11673 [0x2d99]:         movi #0, ebx   
11675 [0x2d9b]:         movsl #0   
11676 [0x2d9c]:         movi #345, adx   
11678 [0x2d9e]:         rmov adx, ebx   
11679 [0x2d9f]:         movi #0, ebx   
11681 [0x2da1]:         movsl #0   
11682 [0x2da2]:         movi #346, adx   
11684 [0x2da4]:         rmov adx, ebx   
11685 [0x2da5]:         movi #2, ebx   
11687 [0x2da7]:         movsl #0   
11688 [0x2da8]:         movi #347, adx   
11690 [0x2daa]:         rmov adx, ebx   
11691 [0x2dab]:         movi #0, ebx   
11693 [0x2dad]:         movsl #0   
11694 [0x2dae]:         movi #348, adx   
11696 [0x2db0]:         rmov adx, ebx   
11697 [0x2db1]:         movi #2, ebx   
11699 [0x2db3]:         movsl #0   
11700 [0x2db4]:         movi #349, adx   
11702 [0x2db6]:         rmov adx, ebx   
11703 [0x2db7]:         movi #2, ebx   
11705 [0x2db9]:         movsl #0   
11706 [0x2dba]:         movi #350, adx   
11708 [0x2dbc]:         rmov adx, ebx   
11709 [0x2dbd]:         movi #2, ebx   
11711 [0x2dbf]:         movsl #0   
11712 [0x2dc0]:         movi #351, adx   
11714 [0x2dc2]:         rmov adx, ebx   
11715 [0x2dc3]:         movi #0, ebx   
11717 [0x2dc5]:         movsl #0   
11718 [0x2dc6]:         movi #352, adx   
11720 [0x2dc8]:         rmov adx, ebx   
11721 [0x2dc9]:         movi #2, ebx   
11723 [0x2dcb]:         movsl #0   
11724 [0x2dcc]:         movi #353, adx   
11726 [0x2dce]:         rmov adx, ebx   
11727 [0x2dcf]:         movi #0, ebx   
11729 [0x2dd1]:         movsl #0   
11730 [0x2dd2]:         movi #354, adx   
11732 [0x2dd4]:         rmov adx, ebx   
11733 [0x2dd5]:         movi #0, ebx   
11735 [0x2dd7]:         movsl #0   
11736 [0x2dd8]:         movi #355, adx   
11738 [0x2dda]:         rmov adx, ebx   
11739 [0x2ddb]:         movi #2, ebx   
11741 [0x2ddd]:         movsl #0   
11742 [0x2dde]:         movi #356, adx   
11744 [0x2de0]:         rmov adx, ebx   
11745 [0x2de1]:         movi #0, ebx   
11747 [0x2de3]:         movsl #0   
11748 [0x2de4]:         movi #357, adx   
11750 [0x2de6]:         rmov adx, ebx   
11751 [0x2de7]:         movi #0, ebx   
11753 [0x2de9]:         movsl #0   
11754 [0x2dea]:         movi #358, adx   
11756 [0x2dec]:         rmov adx, ebx   
11757 [0x2ded]:         movi #0, ebx   
11759 [0x2def]:         movsl #0   
11760 [0x2df0]:         movi #359, adx   
11762 [0x2df2]:         rmov adx, ebx   
11763 [0x2df3]:         movi #0, ebx   
11765 [0x2df5]:         movsl #0   
11766 [0x2df6]:         movi #360, adx   
11768 [0x2df8]:         rmov adx, ebx   
11769 [0x2df9]:         movi #0, ebx   
11771 [0x2dfb]:         movsl #0   
11772 [0x2dfc]:         movi #361, adx   
11774 [0x2dfe]:         rmov adx, ebx   
11775 [0x2dff]:         movi #0, ebx   
11777 [0x2e01]:         movsl #0   
11778 [0x2e02]:         movi #362, adx   
11780 [0x2e04]:         rmov adx, ebx   
11781 [0x2e05]:         movi #2, ebx   
11783 [0x2e07]:         movsl #0   
11784 [0x2e08]:         movi #363, adx   
11786 [0x2e0a]:         rmov adx, ebx   
11787 [0x2e0b]:         movi #0, ebx   
11789 [0x2e0d]:         movsl #0   
11790 [0x2e0e]:         movi #364, adx   
11792 [0x2e10]:         rmov adx, ebx   
11793 [0x2e11]:         movi #0, ebx   
11795 [0x2e13]:         movsl #0   
11796 [0x2e14]:         movi #365, adx   
11798 [0x2e16]:         rmov adx, ebx   
11799 [0x2e17]:         movi #2, ebx   
11801 [0x2e19]:         movsl #0   
11802 [0x2e1a]:         movi #366, adx   
11804 [0x2e1c]:         rmov adx, ebx   
11805 [0x2e1d]:         movi #0, ebx   
11807 [0x2e1f]:         movsl #0   
11808 [0x2e20]:         movi #367, adx   
11810 [0x2e22]:         rmov adx, ebx   
11811 [0x2e23]:         movi #0, ebx   
11813 [0x2e25]:         movsl #0   
11814 [0x2e26]:         movi #368, adx   
11816 [0x2e28]:         rmov adx, ebx   
11817 [0x2e29]:         movi #2, ebx   
11819 [0x2e2b]:         movsl #0   
11820 [0x2e2c]:         movi #369, adx   
11822 [0x2e2e]:         rmov adx, ebx   
11823 [0x2e2f]:         movi #2, ebx   
11825 [0x2e31]:         movsl #0   
11826 [0x2e32]:         movi #370, adx   
11828 [0x2e34]:         rmov adx, ebx   
11829 [0x2e35]:         movi #2, ebx   
11831 [0x2e37]:         movsl #0   
11832 [0x2e38]:         movi #371, adx   
11834 [0x2e3a]:         rmov adx, ebx   
11835 [0x2e3b]:         movi #0, ebx   
11837 [0x2e3d]:         movsl #0   
11838 [0x2e3e]:         movi #372, adx   
11840 [0x2e40]:         rmov adx, ebx   
11841 [0x2e41]:         movi #0, ebx   
11843 [0x2e43]:         movsl #0   
11844 [0x2e44]:         movi #373, adx   
11846 [0x2e46]:         rmov adx, ebx   
11847 [0x2e47]:         movi #2, ebx   
11849 [0x2e49]:         movsl #0   
11850 [0x2e4a]:         movi #374, adx   
11852 [0x2e4c]:         rmov adx, ebx   
11853 [0x2e4d]:         movi #0, ebx   
11855 [0x2e4f]:         movsl #0   
11856 [0x2e50]:         movi #375, adx   
11858 [0x2e52]:         rmov adx, ebx   
11859 [0x2e53]:         movi #0, ebx   
11861 [0x2e55]:         movsl #0   
11862 [0x2e56]:         movi #376, adx   
11864 [0x2e58]:         rmov adx, ebx   
11865 [0x2e59]:         movi #2, ebx   
11867 [0x2e5b]:         movsl #0   
11868 [0x2e5c]:         movi #377, adx   
11870 [0x2e5e]:         rmov adx, ebx   
11871 [0x2e5f]:         movi #0, ebx   
11873 [0x2e61]:         movsl #0   
11874 [0x2e62]:         movi #378, adx   
11876 [0x2e64]:         rmov adx, ebx   
11877 [0x2e65]:         movi #0, ebx   
11879 [0x2e67]:         movsl #0   
11880 [0x2e68]:         movi #379, adx   
11882 [0x2e6a]:         rmov adx, ebx   
11883 [0x2e6b]:         movi #0, ebx   
11885 [0x2e6d]:         movsl #0   
11886 [0x2e6e]:         movi #380, adx   
11888 [0x2e70]:         rmov adx, ebx   
11889 [0x2e71]:         movi #0, ebx   
11891 [0x2e73]:         movsl #0   
11892 [0x2e74]:         movi #381, adx   
11894 [0x2e76]:         rmov adx, ebx   
11895 [0x2e77]:         movi #2, ebx   
11897 [0x2e79]:         movsl #0   
11898 [0x2e7a]:         movi #382, adx   
11900 [0x2e7c]:         rmov adx, ebx   
11901 [0x2e7d]:         movi #0, ebx   
11903 [0x2e7f]:         movsl #0   
11904 [0x2e80]:         movi #383, adx   
11906 [0x2e82]:         rmov adx, ebx   
11907 [0x2e83]:         movi #0, ebx   
11909 [0x2e85]:         movsl #0   
11910 [0x2e86]:         movi #384, adx   
11912 [0x2e88]:         rmov adx, ebx   
11913 [0x2e89]:         movi #2, ebx   
11915 [0x2e8b]:         movsl #0   
11916 [0x2e8c]:         movi #385, adx   
11918 [0x2e8e]:         rmov adx, ebx   
11919 [0x2e8f]:         movi #0, ebx   
11921 [0x2e91]:         movsl #0   
11922 [0x2e92]:         movi #386, adx   
11924 [0x2e94]:         rmov adx, ebx   
11925 [0x2e95]:         movi #0, ebx   
11927 [0x2e97]:         movsl #0   
11928 [0x2e98]:         movi #387, adx   
11930 [0x2e9a]:         rmov adx, ebx   
11931 [0x2e9b]:         movi #0, ebx   
11933 [0x2e9d]:         movsl #0   
11934 [0x2e9e]:         movi #388, adx   
11936 [0x2ea0]:         rmov adx, ebx   
11937 [0x2ea1]:         movi #2, ebx   
11939 [0x2ea3]:         movsl #0   
11940 [0x2ea4]:         movi #389, adx   
11942 [0x2ea6]:         rmov adx, ebx   
11943 [0x2ea7]:         movi #2, ebx   
11945 [0x2ea9]:         movsl #0   
11946 [0x2eaa]:         movi #390, adx   
11948 [0x2eac]:         rmov adx, ebx   
11949 [0x2ead]:         movi #2, ebx   
11951 [0x2eaf]:         movsl #0   
11952 [0x2eb0]:         movi #391, adx   
11954 [0x2eb2]:         rmov adx, ebx   
11955 [0x2eb3]:         movi #0, ebx   
11957 [0x2eb5]:         movsl #0   
11958 [0x2eb6]:         movi #392, adx   
11960 [0x2eb8]:         rmov adx, ebx   
11961 [0x2eb9]:         movi #0, ebx   
11963 [0x2ebb]:         movsl #0   
11964 [0x2ebc]:         movi #393, adx   
11966 [0x2ebe]:         rmov adx, ebx   
11967 [0x2ebf]:         movi #0, ebx   
11969 [0x2ec1]:         movsl #0   
11970 [0x2ec2]:         movi #394, adx   
11972 [0x2ec4]:         rmov adx, ebx   
11973 [0x2ec5]:         movi #2, ebx   
11975 [0x2ec7]:         movsl #0   
11976 [0x2ec8]:         movi #395, adx   
11978 [0x2eca]:         rmov adx, ebx   
11979 [0x2ecb]:         movi #0, ebx   
11981 [0x2ecd]:         movsl #0   
11982 [0x2ece]:         movi #396, adx   
11984 [0x2ed0]:         rmov adx, ebx   
11985 [0x2ed1]:         movi #0, ebx   
11987 [0x2ed3]:         movsl #0   
11988 [0x2ed4]:         movi #397, adx   
11990 [0x2ed6]:         rmov adx, ebx   
11991 [0x2ed7]:         movi #2, ebx   
11993 [0x2ed9]:         movsl #0   
11994 [0x2eda]:         movi #398, adx   
11996 [0x2edc]:         rmov adx, ebx   
11997 [0x2edd]:         movi #0, ebx   
11999 [0x2edf]:         movsl #0   
12000 [0x2ee0]:         movi #399, adx   
12002 [0x2ee2]:         rmov adx, ebx   
12003 [0x2ee3]:         movi #0, ebx   
12005 [0x2ee5]:         movsl #0   
12006 [0x2ee6]:         movi #400, adx   
12008 [0x2ee8]:         rmov adx, ebx   
12009 [0x2ee9]:         movi #0, ebx   
12011 [0x2eeb]:         movsl #0   
12012 [0x2eec]:         movi #401, adx   
12014 [0x2eee]:         rmov adx, ebx   
12015 [0x2eef]:         movi #2, ebx   
12017 [0x2ef1]:         movsl #0   
12018 [0x2ef2]:         movi #402, adx   
12020 [0x2ef4]:         rmov adx, ebx   
12021 [0x2ef5]:         movi #2, ebx   
12023 [0x2ef7]:         movsl #0   
12024 [0x2ef8]:         movi #403, adx   
12026 [0x2efa]:         rmov adx, ebx   
12027 [0x2efb]:         movi #2, ebx   
12029 [0x2efd]:         movsl #0   
12030 [0x2efe]:         movi #404, adx   
12032 [0x2f00]:         rmov adx, ebx   
12033 [0x2f01]:         movi #0, ebx   
12035 [0x2f03]:         movsl #0   
12036 [0x2f04]:         movi #405, adx   
12038 [0x2f06]:         rmov adx, ebx   
12039 [0x2f07]:         movi #0, ebx   
12041 [0x2f09]:         movsl #0   
12042 [0x2f0a]:         movi #406, adx   
12044 [0x2f0c]:         rmov adx, ebx   
12045 [0x2f0d]:         movi #0, ebx   
12047 [0x2f0f]:         movsl #0   
12048 [0x2f10]:         movi #407, adx   
12050 [0x2f12]:         rmov adx, ebx   
12051 [0x2f13]:         movi #0, ebx   
12053 [0x2f15]:         movsl #0   
12054 [0x2f16]:         movi #408, adx   
12056 [0x2f18]:         rmov adx, ebx   
12057 [0x2f19]:         movi #2, ebx   
12059 [0x2f1b]:         movsl #0   
12060 [0x2f1c]:         movi #409, adx   
12062 [0x2f1e]:         rmov adx, ebx   
12063 [0x2f1f]:         movi #2, ebx   
12065 [0x2f21]:         movsl #0   
12066 [0x2f22]:         movi #410, adx   
12068 [0x2f24]:         rmov adx, ebx   
12069 [0x2f25]:         movi #2, ebx   
12071 [0x2f27]:         movsl #0   
12072 [0x2f28]:         movi #411, adx   
12074 [0x2f2a]:         rmov adx, ebx   
12075 [0x2f2b]:         movi #0, ebx   
12077 [0x2f2d]:         movsl #0   
12078 [0x2f2e]:         movi #412, adx   
12080 [0x2f30]:         rmov adx, ebx   
12081 [0x2f31]:         movi #0, ebx   
12083 [0x2f33]:         movsl #0   
12084 [0x2f34]:         movi #413, adx   
12086 [0x2f36]:         rmov adx, ebx   
12087 [0x2f37]:         movi #0, ebx   
12089 [0x2f39]:         movsl #0   
12090 [0x2f3a]:         movi #414, adx   
12092 [0x2f3c]:         rmov adx, ebx   
12093 [0x2f3d]:         movi #0, ebx   
12095 [0x2f3f]:         movsl #0   
12096 [0x2f40]:         movi #415, adx   
12098 [0x2f42]:         rmov adx, ebx   
12099 [0x2f43]:         movi #2, ebx   
12101 [0x2f45]:         movsl #0   
12102 [0x2f46]:         movi #416, adx   
12104 [0x2f48]:         rmov adx, ebx   
12105 [0x2f49]:         movi #0, ebx   
12107 [0x2f4b]:         movsl #0   
12108 [0x2f4c]:         movi #417, adx   
12110 [0x2f4e]:         rmov adx, ebx   
12111 [0x2f4f]:         movi #0, ebx   
12113 [0x2f51]:         movsl #0   
12114 [0x2f52]:         movi #418, adx   
12116 [0x2f54]:         rmov adx, ebx   
12117 [0x2f55]:         movi #2, ebx   
12119 [0x2f57]:         movsl #0   
12120 [0x2f58]:         movi #419, adx   
12122 [0x2f5a]:         rmov adx, ebx   
12123 [0x2f5b]:         movi #0, ebx   
12125 [0x2f5d]:         movsl #0   
12126 [0x2f5e]:         movi #420, adx   
12128 [0x2f60]:         rmov adx, ebx   
12129 [0x2f61]:         movi #0, ebx   
12131 [0x2f63]:         movsl #0   
12132 [0x2f64]:         movi #421, adx   
12134 [0x2f66]:         rmov adx, ebx   
12135 [0x2f67]:         movi #0, ebx   
12137 [0x2f69]:         movsl #0   
12138 [0x2f6a]:         movi #422, adx   
12140 [0x2f6c]:         rmov adx, ebx   
12141 [0x2f6d]:         movi #0, ebx   
12143 [0x2f6f]:         movsl #0   
12144 [0x2f70]:         movi #423, adx   
12146 [0x2f72]:         rmov adx, ebx   
12147 [0x2f73]:         movi #0, ebx   
12149 [0x2f75]:         movsl #0   
12150 [0x2f76]:         movi #424, adx   
12152 [0x2f78]:         rmov adx, ebx   
12153 [0x2f79]:         movi #0, ebx   
12155 [0x2f7b]:         movsl #0   
12156 [0x2f7c]:         movi #425, adx   
12158 [0x2f7e]:         rmov adx, ebx   
12159 [0x2f7f]:         movi #0, ebx   
12161 [0x2f81]:         movsl #0   
12162 [0x2f82]:         movi #426, adx   
12164 [0x2f84]:         rmov adx, ebx   
12165 [0x2f85]:         movi #0, ebx   
12167 [0x2f87]:         movsl #0   
12168 [0x2f88]:         movi #427, adx   
12170 [0x2f8a]:         rmov adx, ebx   
12171 [0x2f8b]:         movi #0, ebx   
12173 [0x2f8d]:         movsl #0   
12174 [0x2f8e]:         movi #428, adx   
12176 [0x2f90]:         rmov adx, ebx   
12177 [0x2f91]:         movi #2, ebx   
12179 [0x2f93]:         movsl #0   
12180 [0x2f94]:         movi #429, adx   
12182 [0x2f96]:         rmov adx, ebx   
12183 [0x2f97]:         movi #2, ebx   
12185 [0x2f99]:         movsl #0   
12186 [0x2f9a]:         movi #430, adx   
12188 [0x2f9c]:         rmov adx, ebx   
12189 [0x2f9d]:         movi #2, ebx   
12191 [0x2f9f]:         movsl #0   
12192 [0x2fa0]:         movi #431, adx   
12194 [0x2fa2]:         rmov adx, ebx   
12195 [0x2fa3]:         movi #0, ebx   
12197 [0x2fa5]:         movsl #0   
12198 [0x2fa6]:         movi #432, adx   
12200 [0x2fa8]:         rmov adx, ebx   
12201 [0x2fa9]:         movi #0, ebx   
12203 [0x2fab]:         movsl #0   
12204 [0x2fac]:         movi #433, adx   
12206 [0x2fae]:         rmov adx, ebx   
12207 [0x2faf]:         movi #0, ebx   
12209 [0x2fb1]:         movsl #0   
12210 [0x2fb2]:         movi #434, adx   
12212 [0x2fb4]:         rmov adx, ebx   
12213 [0x2fb5]:         movi #0, ebx   
12215 [0x2fb7]:         movsl #0   
12216 [0x2fb8]:         movi #435, adx   
12218 [0x2fba]:         rmov adx, ebx   
12219 [0x2fbb]:         movi #0, ebx   
12221 [0x2fbd]:         movsl #0   
12222 [0x2fbe]:         movi #436, adx   
12224 [0x2fc0]:         rmov adx, ebx   
12225 [0x2fc1]:         movi #2, ebx   
12227 [0x2fc3]:         movsl #0   
12228 [0x2fc4]:         movi #437, adx   
12230 [0x2fc6]:         rmov adx, ebx   
12231 [0x2fc7]:         movi #2, ebx   
12233 [0x2fc9]:         movsl #0   
12234 [0x2fca]:         movi #438, adx   
12236 [0x2fcc]:         rmov adx, ebx   
12237 [0x2fcd]:         movi #2, ebx   
12239 [0x2fcf]:         movsl #0   
12240 [0x2fd0]:         movi #439, adx   
12242 [0x2fd2]:         rmov adx, ebx   
12243 [0x2fd3]:         movi #0, ebx   
12245 [0x2fd5]:         movsl #0   
12246 [0x2fd6]:         movi #440, adx   
12248 [0x2fd8]:         rmov adx, ebx   
12249 [0x2fd9]:         movi #0, ebx   
12251 [0x2fdb]:         movsl #0   
12252 [0x2fdc]:         movi #441, adx   
12254 [0x2fde]:         rmov adx, ebx   
12255 [0x2fdf]:         movi #0, ebx   
12257 [0x2fe1]:         movsl #0   
12258 [0x2fe2]:         movi #442, adx   
12260 [0x2fe4]:         rmov adx, ebx   
12261 [0x2fe5]:         movi #0, ebx   
12263 [0x2fe7]:         movsl #0   
12264 [0x2fe8]:         movi #443, adx   
12266 [0x2fea]:         rmov adx, ebx   
12267 [0x2feb]:         movi #0, ebx   
12269 [0x2fed]:         movsl #0   
12270 [0x2fee]:         movi #444, adx   
12272 [0x2ff0]:         rmov adx, ebx   
12273 [0x2ff1]:         movi #0, ebx   
12275 [0x2ff3]:         movsl #0   
12276 [0x2ff4]:         movi #445, adx   
12278 [0x2ff6]:         rmov adx, ebx   
12279 [0x2ff7]:         movi #0, ebx   
12281 [0x2ff9]:         movsl #0   
12282 [0x2ffa]:         movi #446, adx   
12284 [0x2ffc]:         rmov adx, ebx   
12285 [0x2ffd]:         movi #0, ebx   
12287 [0x2fff]:         movsl #0   
12288 [0x3000]:         movi #447, adx   
12290 [0x3002]:         rmov adx, ebx   
12291 [0x3003]:         movi #0, ebx   
12293 [0x3005]:         movsl #0   
12294 [0x3006]:         movi #448, adx   
12296 [0x3008]:         rmov adx, ebx   
12297 [0x3009]:         movi #2, ebx   
12299 [0x300b]:         movsl #0   
12300 [0x300c]:         movi #449, adx   
12302 [0x300e]:         rmov adx, ebx   
12303 [0x300f]:         movi #2, ebx   
12305 [0x3011]:         movsl #0   
12306 [0x3012]:         movi #450, adx   
12308 [0x3014]:         rmov adx, ebx   
12309 [0x3015]:         movi #2, ebx   
12311 [0x3017]:         movsl #0   
12312 [0x3018]:         movi #451, adx   
12314 [0x301a]:         rmov adx, ebx   
12315 [0x301b]:         movi #0, ebx   
12317 [0x301d]:         movsl #0   
12318 [0x301e]:         movi #452, adx   
12320 [0x3020]:         rmov adx, ebx   
12321 [0x3021]:         movi #0, ebx   
12323 [0x3023]:         movsl #0   
12324 [0x3024]:         movi #453, adx   
12326 [0x3026]:         rmov adx, ebx   
12327 [0x3027]:         movi #0, ebx   
12329 [0x3029]:         movsl #0   
12330 [0x302a]:         movi #454, adx   
12332 [0x302c]:         rmov adx, ebx   
12333 [0x302d]:         movi #0, ebx   
12335 [0x302f]:         movsl #0   
12336 [0x3030]:         movi #455, adx   
12338 [0x3032]:         rmov adx, ebx   
12339 [0x3033]:         movi #0, ebx   
12341 [0x3035]:         movsl #0   
12342 [0x3036]:         movi #456, adx   
12344 [0x3038]:         rmov adx, ebx   
12345 [0x3039]:         movi #0, ebx   
12347 [0x303b]:         movsl #0   
12348 [0x303c]:         movi #457, adx   
12350 [0x303e]:         rmov adx, ebx   
12351 [0x303f]:         movi #0, ebx   
12353 [0x3041]:         movsl #0   
12354 [0x3042]:         movi #458, adx   
12356 [0x3044]:         rmov adx, ebx   
12357 [0x3045]:         movi #0, ebx   
12359 [0x3047]:         movsl #0   
12360 [0x3048]:         movi #459, adx   
12362 [0x304a]:         rmov adx, ebx   
12363 [0x304b]:         movi #0, ebx   
12365 [0x304d]:         movsl #0   
12366 [0x304e]:         movi #460, adx   
12368 [0x3050]:         rmov adx, ebx   
12369 [0x3051]:         movi #0, ebx   
12371 [0x3053]:         movsl #0   
12372 [0x3054]:         movi #461, adx   
12374 [0x3056]:         rmov adx, ebx   
12375 [0x3057]:         movi #0, ebx   
12377 [0x3059]:         movsl #0   
12378 [0x305a]:         movi #462, adx   
12380 [0x305c]:         rmov adx, ebx   
12381 [0x305d]:         movi #0, ebx   
12383 [0x305f]:         movsl #0   
12384 [0x3060]:         movi #463, adx   
12386 [0x3062]:         rmov adx, ebx   
12387 [0x3063]:         movi #0, ebx   
12389 [0x3065]:         movsl #0   
12390 [0x3066]:         movi #464, adx   
12392 [0x3068]:         rmov adx, ebx   
12393 [0x3069]:         movi #0, ebx   
12395 [0x306b]:         movsl #0   
12396 [0x306c]:         movi #465, adx   
12398 [0x306e]:         rmov adx, ebx   
12399 [0x306f]:         movi #0, ebx   
12401 [0x3071]:         movsl #0   
12402 [0x3072]:         movi #466, adx   
12404 [0x3074]:         rmov adx, ebx   
12405 [0x3075]:         movi #0, ebx   
12407 [0x3077]:         movsl #0   
12408 [0x3078]:         movi #467, adx   
12410 [0x307a]:         rmov adx, ebx   
12411 [0x307b]:         movi #0, ebx   
12413 [0x307d]:         movsl #0   
12414 [0x307e]:         movi #468, adx   
12416 [0x3080]:         rmov adx, ebx   
12417 [0x3081]:         movi #2, ebx   
12419 [0x3083]:         movsl #0   
12420 [0x3084]:         movi #469, adx   
12422 [0x3086]:         rmov adx, ebx   
12423 [0x3087]:         movi #2, ebx   
12425 [0x3089]:         movsl #0   
12426 [0x308a]:         movi #470, adx   
12428 [0x308c]:         rmov adx, ebx   
12429 [0x308d]:         movi #2, ebx   
12431 [0x308f]:         movsl #0   
12432 [0x3090]:         movi #471, adx   
12434 [0x3092]:         rmov adx, ebx   
12435 [0x3093]:         movi #0, ebx   
12437 [0x3095]:         movsl #0   
12438 [0x3096]:         movi #472, adx   
12440 [0x3098]:         rmov adx, ebx   
12441 [0x3099]:         movi #0, ebx   
12443 [0x309b]:         movsl #0   
12444 [0x309c]:         movi #473, adx   
12446 [0x309e]:         rmov adx, ebx   
12447 [0x309f]:         movi #0, ebx   
12449 [0x30a1]:         movsl #0   
12450 [0x30a2]:         movi #474, adx   
12452 [0x30a4]:         rmov adx, ebx   
12453 [0x30a5]:         movi #0, ebx   
12455 [0x30a7]:         movsl #0   
12456 [0x30a8]:         movi #475, adx   
12458 [0x30aa]:         rmov adx, ebx   
12459 [0x30ab]:         movi #0, ebx   
12461 [0x30ad]:         movsl #0   
12462 [0x30ae]:         movi #476, adx   
12464 [0x30b0]:         rmov adx, ebx   
12465 [0x30b1]:         movi #0, ebx   
12467 [0x30b3]:         movsl #0   
12468 [0x30b4]:         movi #477, adx   
12470 [0x30b6]:         rmov adx, ebx   
12471 [0x30b7]:         movi #0, ebx   
12473 [0x30b9]:         movsl #0   
12474 [0x30ba]:         movi #478, adx   
12476 [0x30bc]:         rmov adx, ebx   
12477 [0x30bd]:         movi #0, ebx   
12479 [0x30bf]:         movsl #0   
12480 [0x30c0]:         movi #479, adx   
12482 [0x30c2]:         rmov adx, ebx   
12483 [0x30c3]:         movi #0, ebx   
12485 [0x30c5]:         movsl #0   
12486 [0x30c6]:         movi #480, adx   
12488 [0x30c8]:         rmov adx, ebx   
12489 [0x30c9]:         movi #0, ebx   
12491 [0x30cb]:         movsl #0   
12492 [0x30cc]:         movi #481, adx   
12494 [0x30ce]:         rmov adx, ebx   
12495 [0x30cf]:         movi #0, ebx   
12497 [0x30d1]:         movsl #0   
12498 [0x30d2]:         movi #482, adx   
12500 [0x30d4]:         rmov adx, ebx   
12501 [0x30d5]:         movi #0, ebx   
12503 [0x30d7]:         movsl #0   
12504 [0x30d8]:         movi #483, adx   
12506 [0x30da]:         rmov adx, ebx   
12507 [0x30db]:         movi #0, ebx   
12509 [0x30dd]:         movsl #0   
12510 [0x30de]:         movi #484, adx   
12512 [0x30e0]:         rmov adx, ebx   
12513 [0x30e1]:         movi #0, ebx   
12515 [0x30e3]:         movsl #0   
12516 [0x30e4]:         movi #485, adx   
12518 [0x30e6]:         rmov adx, ebx   
12519 [0x30e7]:         movi #0, ebx   
12521 [0x30e9]:         movsl #0   
12522 [0x30ea]:         movi #486, adx   
12524 [0x30ec]:         rmov adx, ebx   
12525 [0x30ed]:         movi #0, ebx   
12527 [0x30ef]:         movsl #0   
12528 [0x30f0]:         movi #487, adx   
12530 [0x30f2]:         rmov adx, ebx   
12531 [0x30f3]:         movi #0, ebx   
12533 [0x30f5]:         movsl #0   
12534 [0x30f6]:         movi #488, adx   
12536 [0x30f8]:         rmov adx, ebx   
12537 [0x30f9]:         movi #2, ebx   
12539 [0x30fb]:         movsl #0   
12540 [0x30fc]:         movi #489, adx   
12542 [0x30fe]:         rmov adx, ebx   
12543 [0x30ff]:         movi #2, ebx   
12545 [0x3101]:         movsl #0   
12546 [0x3102]:         movi #490, adx   
12548 [0x3104]:         rmov adx, ebx   
12549 [0x3105]:         movi #2, ebx   
12551 [0x3107]:         movsl #0   
12552 [0x3108]:         movi #491, adx   
12554 [0x310a]:         rmov adx, ebx   
12555 [0x310b]:         movi #0, ebx   
12557 [0x310d]:         movsl #0   
12558 [0x310e]:         movi #492, adx   
12560 [0x3110]:         rmov adx, ebx   
12561 [0x3111]:         movi #0, ebx   
12563 [0x3113]:         movsl #0   
12564 [0x3114]:         movi #493, adx   
12566 [0x3116]:         rmov adx, ebx   
12567 [0x3117]:         movi #0, ebx   
12569 [0x3119]:         movsl #0   
12570 [0x311a]:         movi #494, adx   
12572 [0x311c]:         rmov adx, ebx   
12573 [0x311d]:         movi #0, ebx   
12575 [0x311f]:         movsl #0   
12576 [0x3120]:         movi #495, adx   
12578 [0x3122]:         rmov adx, ebx   
12579 [0x3123]:         movi #0, ebx   
12581 [0x3125]:         movsl #0   
12582 [0x3126]:         movi #496, adx   
12584 [0x3128]:         rmov adx, ebx   
12585 [0x3129]:         movi #0, ebx   
12587 [0x312b]:         movsl #0   
12588 [0x312c]:         movi #497, adx   
12590 [0x312e]:         rmov adx, ebx   
12591 [0x312f]:         movi #0, ebx   
12593 [0x3131]:         movsl #0   
12594 [0x3132]:         movi #498, adx   
12596 [0x3134]:         rmov adx, ebx   
12597 [0x3135]:         movi #0, ebx   
12599 [0x3137]:         movsl #0   
12600 [0x3138]:         movi #499, adx   
12602 [0x313a]:         rmov adx, ebx   
12603 [0x313b]:         movi #0, ebx   
12605 [0x313d]:         movsl #0   
12606 [0x313e]:         movi #500, adx   
12608 [0x3140]:         rmov adx, ebx   
12609 [0x3141]:         movi #0, ebx   
12611 [0x3143]:         movsl #0   
12612 [0x3144]:         movi #501, adx   
12614 [0x3146]:         rmov adx, ebx   
12615 [0x3147]:         movi #0, ebx   
12617 [0x3149]:         movsl #0   
12618 [0x314a]:         movi #502, adx   
12620 [0x314c]:         rmov adx, ebx   
12621 [0x314d]:         movi #0, ebx   
12623 [0x314f]:         movsl #0   
12624 [0x3150]:         movi #503, adx   
12626 [0x3152]:         rmov adx, ebx   
12627 [0x3153]:         movi #0, ebx   
12629 [0x3155]:         movsl #0   
12630 [0x3156]:         movi #504, adx   
12632 [0x3158]:         rmov adx, ebx   
12633 [0x3159]:         movi #0, ebx   
12635 [0x315b]:         movsl #0   
12636 [0x315c]:         movi #505, adx   
12638 [0x315e]:         rmov adx, ebx   
12639 [0x315f]:         movi #0, ebx   
12641 [0x3161]:         movsl #0   
12642 [0x3162]:         movi #506, adx   
12644 [0x3164]:         rmov adx, ebx   
12645 [0x3165]:         movi #0, ebx   
12647 [0x3167]:         movsl #0   
12648 [0x3168]:         movi #507, adx   
12650 [0x316a]:         rmov adx, ebx   
12651 [0x316b]:         movi #0, ebx   
12653 [0x316d]:         movsl #0   
12654 [0x316e]:         movi #508, adx   
12656 [0x3170]:         rmov adx, ebx   
12657 [0x3171]:         movi #0, ebx   
12659 [0x3173]:         movsl #0   
12660 [0x3174]:         movi #509, adx   
12662 [0x3176]:         rmov adx, ebx   
12663 [0x3177]:         movi #2, ebx   
12665 [0x3179]:         movsl #0   
12666 [0x317a]:         movi #510, adx   
12668 [0x317c]:         rmov adx, ebx   
12669 [0x317d]:         movi #0, ebx   
12671 [0x317f]:         movsl #0   
12672 [0x3180]:         movi #511, adx   
12674 [0x3182]:         rmov adx, ebx   
12675 [0x3183]:         movi #0, ebx   
12677 [0x3185]:         movsl #0   
12678 [0x3186]:         movi #512, adx   
12680 [0x3188]:         rmov adx, ebx   
12681 [0x3189]:         movi #0, ebx   
12683 [0x318b]:         movsl #0   
12684 [0x318c]:         movi #513, adx   
12686 [0x318e]:         rmov adx, ebx   
12687 [0x318f]:         movi #0, ebx   
12689 [0x3191]:         movsl #0   
12690 [0x3192]:         movi #514, adx   
12692 [0x3194]:         rmov adx, ebx   
12693 [0x3195]:         movi #0, ebx   
12695 [0x3197]:         movsl #0   
12696 [0x3198]:         movi #515, adx   
12698 [0x319a]:         rmov adx, ebx   
12699 [0x319b]:         movi #0, ebx   
12701 [0x319d]:         movsl #0   
12702 [0x319e]:         movi #516, adx   
12704 [0x31a0]:         rmov adx, ebx   
12705 [0x31a1]:         movi #0, ebx   
12707 [0x31a3]:         movsl #0   
12708 [0x31a4]:         movi #517, adx   
12710 [0x31a6]:         rmov adx, ebx   
12711 [0x31a7]:         movi #0, ebx   
12713 [0x31a9]:         movsl #0   
12714 [0x31aa]:         movi #518, adx   
12716 [0x31ac]:         rmov adx, ebx   
12717 [0x31ad]:         movi #0, ebx   
12719 [0x31af]:         movsl #0   
12720 [0x31b0]:         movi #519, adx   
12722 [0x31b2]:         rmov adx, ebx   
12723 [0x31b3]:         movi #0, ebx   
12725 [0x31b5]:         movsl #0   
12726 [0x31b6]:         movi #520, adx   
12728 [0x31b8]:         rmov adx, ebx   
12729 [0x31b9]:         movi #0, ebx   
12731 [0x31bb]:         movsl #0   
12732 [0x31bc]:         movi #521, adx   
12734 [0x31be]:         rmov adx, ebx   
12735 [0x31bf]:         movi #0, ebx   
12737 [0x31c1]:         movsl #0   
12738 [0x31c2]:         movi #522, adx   
12740 [0x31c4]:         rmov adx, ebx   
12741 [0x31c5]:         movi #0, ebx   
12743 [0x31c7]:         movsl #0   
12744 [0x31c8]:         movi #523, adx   
12746 [0x31ca]:         rmov adx, ebx   
12747 [0x31cb]:         movi #0, ebx   
12749 [0x31cd]:         movsl #0   
12750 [0x31ce]:         movi #524, adx   
12752 [0x31d0]:         rmov adx, ebx   
12753 [0x31d1]:         movi #0, ebx   
12755 [0x31d3]:         movsl #0   
12756 [0x31d4]:         movi #525, adx   
12758 [0x31d6]:         rmov adx, ebx   
12759 [0x31d7]:         movi #0, ebx   
12761 [0x31d9]:         movsl #0   
12762 [0x31da]:         movi #526, adx   
12764 [0x31dc]:         rmov adx, ebx   
12765 [0x31dd]:         movi #0, ebx   
12767 [0x31df]:         movsl #0   
12768 [0x31e0]:         movi #527, adx   
12770 [0x31e2]:         rmov adx, ebx   
12771 [0x31e3]:         movi #0, ebx   
12773 [0x31e5]:         movsl #0   
12774 [0x31e6]:         movi #528, adx   
12776 [0x31e8]:         rmov adx, ebx   
12777 [0x31e9]:         movi #0, ebx   
12779 [0x31eb]:         movsl #0   
12780 [0x31ec]:         movi #529, adx   
12782 [0x31ee]:         rmov adx, ebx   
12783 [0x31ef]:         movi #2, ebx   
12785 [0x31f1]:         movsl #0   
12786 [0x31f2]:         movi #530, adx   
12788 [0x31f4]:         rmov adx, ebx   
12789 [0x31f5]:         movi #0, ebx   
12791 [0x31f7]:         movsl #0   
12792 [0x31f8]:         movi #531, adx   
12794 [0x31fa]:         rmov adx, ebx   
12795 [0x31fb]:         movi #0, ebx   
12797 [0x31fd]:         movsl #0   
12798 [0x31fe]:         movi #532, adx   
12800 [0x3200]:         rmov adx, ebx   
12801 [0x3201]:         movi #0, ebx   
12803 [0x3203]:         movsl #0   
12804 [0x3204]:         movi #533, adx   
12806 [0x3206]:         rmov adx, ebx   
12807 [0x3207]:         movi #0, ebx   
12809 [0x3209]:         movsl #0   
12810 [0x320a]:         movi #534, adx   
12812 [0x320c]:         rmov adx, ebx   
12813 [0x320d]:         movi #0, ebx   
12815 [0x320f]:         movsl #0   
12816 [0x3210]:         movi #535, adx   
12818 [0x3212]:         rmov adx, ebx   
12819 [0x3213]:         movi #0, ebx   
12821 [0x3215]:         movsl #0   
12822 [0x3216]:         movi #536, adx   
12824 [0x3218]:         rmov adx, ebx   
12825 [0x3219]:         movi #0, ebx   
12827 [0x321b]:         movsl #0   
12828 [0x321c]:         movi #537, adx   
12830 [0x321e]:         rmov adx, ebx   
12831 [0x321f]:         movi #0, ebx   
12833 [0x3221]:         movsl #0   
12834 [0x3222]:         movi #538, adx   
12836 [0x3224]:         rmov adx, ebx   
12837 [0x3225]:         movi #0, ebx   
12839 [0x3227]:         movsl #0   
12840 [0x3228]:         movi #539, adx   
12842 [0x322a]:         rmov adx, ebx   
12843 [0x322b]:         movi #0, ebx   
12845 [0x322d]:         movsl #0   
12846 [0x322e]:         movi #540, adx   
12848 [0x3230]:         rmov adx, ebx   
12849 [0x3231]:         movi #0, ebx   
12851 [0x3233]:         movsl #0   
12852 [0x3234]:         movi #541, adx   
12854 [0x3236]:         rmov adx, ebx   
12855 [0x3237]:         movi #0, ebx   
12857 [0x3239]:         movsl #0   
12858 [0x323a]:         movi #542, adx   
12860 [0x323c]:         rmov adx, ebx   
12861 [0x323d]:         movi #0, ebx   
12863 [0x323f]:         movsl #0   
12864 [0x3240]:         movi #543, adx   
12866 [0x3242]:         rmov adx, ebx   
12867 [0x3243]:         movi #0, ebx   
12869 [0x3245]:         movsl #0   
12870 [0x3246]:         movi #544, adx   
12872 [0x3248]:         rmov adx, ebx   
12873 [0x3249]:         movi #0, ebx   
12875 [0x324b]:         movsl #0   
12876 [0x324c]:         movi #545, adx   
12878 [0x324e]:         rmov adx, ebx   
12879 [0x324f]:         movi #0, ebx   
12881 [0x3251]:         movsl #0   
12882 [0x3252]:         movi #546, adx   
12884 [0x3254]:         rmov adx, ebx   
12885 [0x3255]:         movi #0, ebx   
12887 [0x3257]:         movsl #0   
12888 [0x3258]:         movi #547, adx   
12890 [0x325a]:         rmov adx, ebx   
12891 [0x325b]:         movi #0, ebx   
12893 [0x325d]:         movsl #0   
12894 [0x325e]:         movi #548, adx   
12896 [0x3260]:         rmov adx, ebx   
12897 [0x3261]:         movi #2, ebx   
12899 [0x3263]:         movsl #0   
12900 [0x3264]:         movi #549, adx   
12902 [0x3266]:         rmov adx, ebx   
12903 [0x3267]:         movi #2, ebx   
12905 [0x3269]:         movsl #0   
12906 [0x326a]:         movi #550, adx   
12908 [0x326c]:         rmov adx, ebx   
12909 [0x326d]:         movi #2, ebx   
12911 [0x326f]:         movsl #0   
12912 [0x3270]:         movi #551, adx   
12914 [0x3272]:         rmov adx, ebx   
12915 [0x3273]:         movi #0, ebx   
12917 [0x3275]:         movsl #0   
12918 [0x3276]:         movi #552, adx   
12920 [0x3278]:         rmov adx, ebx   
12921 [0x3279]:         movi #0, ebx   
12923 [0x327b]:         movsl #0   
12924 [0x327c]:         movi #553, adx   
12926 [0x327e]:         rmov adx, ebx   
12927 [0x327f]:         movi #0, ebx   
12929 [0x3281]:         movsl #0   
12930 [0x3282]:         movi #554, adx   
12932 [0x3284]:         rmov adx, ebx   
12933 [0x3285]:         movi #0, ebx   
12935 [0x3287]:         movsl #0   
12936 [0x3288]:         movi #555, adx   
12938 [0x328a]:         rmov adx, ebx   
12939 [0x328b]:         movi #0, ebx   
12941 [0x328d]:         movsl #0   
12942 [0x328e]:         movi #556, adx   
12944 [0x3290]:         rmov adx, ebx   
12945 [0x3291]:         movi #0, ebx   
12947 [0x3293]:         movsl #0   
12948 [0x3294]:         movi #557, adx   
12950 [0x3296]:         rmov adx, ebx   
12951 [0x3297]:         movi #0, ebx   
12953 [0x3299]:         movsl #0   
12954 [0x329a]:         movi #558, adx   
12956 [0x329c]:         rmov adx, ebx   
12957 [0x329d]:         movi #0, ebx   
12959 [0x329f]:         movsl #0   
12960 [0x32a0]:         movi #559, adx   
12962 [0x32a2]:         rmov adx, ebx   
12963 [0x32a3]:         movi #0, ebx   
12965 [0x32a5]:         movsl #0   
12966 [0x32a6]:         movi #560, adx   
12968 [0x32a8]:         rmov adx, ebx   
12969 [0x32a9]:         movi #0, ebx   
12971 [0x32ab]:         movsl #0   
12972 [0x32ac]:         movi #561, adx   
12974 [0x32ae]:         rmov adx, ebx   
12975 [0x32af]:         movi #0, ebx   
12977 [0x32b1]:         movsl #0   
12978 [0x32b2]:         movi #562, adx   
12980 [0x32b4]:         rmov adx, ebx   
12981 [0x32b5]:         movi #0, ebx   
12983 [0x32b7]:         movsl #0   
12984 [0x32b8]:         movi #563, adx   
12986 [0x32ba]:         rmov adx, ebx   
12987 [0x32bb]:         movi #0, ebx   
12989 [0x32bd]:         movsl #0   
12990 [0x32be]:         movi #564, adx   
12992 [0x32c0]:         rmov adx, ebx   
12993 [0x32c1]:         movi #0, ebx   
12995 [0x32c3]:         movsl #0   
12996 [0x32c4]:         movi #565, adx   
12998 [0x32c6]:         rmov adx, ebx   
12999 [0x32c7]:         movi #0, ebx   
13001 [0x32c9]:         movsl #0   
13002 [0x32ca]:         movi #566, adx   
13004 [0x32cc]:         rmov adx, ebx   
13005 [0x32cd]:         movi #0, ebx   
13007 [0x32cf]:         movsl #0   
13008 [0x32d0]:         movi #567, adx   
13010 [0x32d2]:         rmov adx, ebx   
13011 [0x32d3]:         movi #2, ebx   
13013 [0x32d5]:         movsl #0   
13014 [0x32d6]:         movi #568, adx   
13016 [0x32d8]:         rmov adx, ebx   
13017 [0x32d9]:         movi #2, ebx   
13019 [0x32db]:         movsl #0   
13020 [0x32dc]:         movi #569, adx   
13022 [0x32de]:         rmov adx, ebx   
13023 [0x32df]:         movi #2, ebx   
13025 [0x32e1]:         movsl #0   
13026 [0x32e2]:         movi #570, adx   
13028 [0x32e4]:         rmov adx, ebx   
13029 [0x32e5]:         movi #2, ebx   
13031 [0x32e7]:         movsl #0   
13032 [0x32e8]:         movi #571, adx   
13034 [0x32ea]:         rmov adx, ebx   
13035 [0x32eb]:         movi #2, ebx   
13037 [0x32ed]:         movsl #0   
13038 [0x32ee]:         movi #572, adx   
13040 [0x32f0]:         rmov adx, ebx   
13041 [0x32f1]:         movi #0, ebx   
13043 [0x32f3]:         movsl #0   
13044 [0x32f4]:         movi #573, adx   
13046 [0x32f6]:         rmov adx, ebx   
13047 [0x32f7]:         movi #0, ebx   
13049 [0x32f9]:         movsl #0   
13050 [0x32fa]:         movi #574, adx   
13052 [0x32fc]:         rmov adx, ebx   
13053 [0x32fd]:         movi #0, ebx   
13055 [0x32ff]:         movsl #0   
13056 [0x3300]:         movi #575, adx   
13058 [0x3302]:         rmov adx, ebx   
13059 [0x3303]:         movi #0, ebx   
13061 [0x3305]:         movsl #0   
13062 [0x3306]:         movi #576, adx   
13064 [0x3308]:         rmov adx, ebx   
13065 [0x3309]:         movi #0, ebx   
13067 [0x330b]:         movsl #0   
13068 [0x330c]:         movi #577, adx   
13070 [0x330e]:         rmov adx, ebx   
13071 [0x330f]:         movi #0, ebx   
13073 [0x3311]:         movsl #0   
13074 [0x3312]:         movi #578, adx   
13076 [0x3314]:         rmov adx, ebx   
13077 [0x3315]:         movi #0, ebx   
13079 [0x3317]:         movsl #0   
13080 [0x3318]:         movi #579, adx   
13082 [0x331a]:         rmov adx, ebx   
13083 [0x331b]:         movi #0, ebx   
13085 [0x331d]:         movsl #0   
13086 [0x331e]:         movi #580, adx   
13088 [0x3320]:         rmov adx, ebx   
13089 [0x3321]:         movi #0, ebx   
13091 [0x3323]:         movsl #0   
13092 [0x3324]:         movi #581, adx   
13094 [0x3326]:         rmov adx, ebx   
13095 [0x3327]:         movi #0, ebx   
13097 [0x3329]:         movsl #0   
13098 [0x332a]:         movi #582, adx   
13100 [0x332c]:         rmov adx, ebx   
13101 [0x332d]:         movi #0, ebx   
13103 [0x332f]:         movsl #0   
13104 [0x3330]:         movi #583, adx   
13106 [0x3332]:         rmov adx, ebx   
13107 [0x3333]:         movi #0, ebx   
13109 [0x3335]:         movsl #0   
13110 [0x3336]:         movi #584, adx   
13112 [0x3338]:         rmov adx, ebx   
13113 [0x3339]:         movi #0, ebx   
13115 [0x333b]:         movsl #0   
13116 [0x333c]:         movi #585, adx   
13118 [0x333e]:         rmov adx, ebx   
13119 [0x333f]:         movi #0, ebx   
13121 [0x3341]:         movsl #0   
13122 [0x3342]:         movi #586, adx   
13124 [0x3344]:         rmov adx, ebx   
13125 [0x3345]:         movi #0, ebx   
13127 [0x3347]:         movsl #0   
13128 [0x3348]:         movi #587, adx   
13130 [0x334a]:         rmov adx, ebx   
13131 [0x334b]:         movi #0, ebx   
13133 [0x334d]:         movsl #0   
13134 [0x334e]:         movi #588, adx   
13136 [0x3350]:         rmov adx, ebx   
13137 [0x3351]:         movi #2, ebx   
13139 [0x3353]:         movsl #0   
13140 [0x3354]:         movi #589, adx   
13142 [0x3356]:         rmov adx, ebx   
13143 [0x3357]:         movi #0, ebx   
13145 [0x3359]:         movsl #0   
13146 [0x335a]:         movi #590, adx   
13148 [0x335c]:         rmov adx, ebx   
13149 [0x335d]:         movi #2, ebx   
13151 [0x335f]:         movsl #0   
13152 [0x3360]:         movi #591, adx   
13154 [0x3362]:         rmov adx, ebx   
13155 [0x3363]:         movi #0, ebx   
13157 [0x3365]:         movsl #0   
13158 [0x3366]:         movi #592, adx   
13160 [0x3368]:         rmov adx, ebx   
13161 [0x3369]:         movi #0, ebx   
13163 [0x336b]:         movsl #0   
13164 [0x336c]:         movi #593, adx   
13166 [0x336e]:         rmov adx, ebx   
13167 [0x336f]:         movi #0, ebx   
13169 [0x3371]:         movsl #0   
13170 [0x3372]:         movi #594, adx   
13172 [0x3374]:         rmov adx, ebx   
13173 [0x3375]:         movi #0, ebx   
13175 [0x3377]:         movsl #0   
13176 [0x3378]:         movi #595, adx   
13178 [0x337a]:         rmov adx, ebx   
13179 [0x337b]:         movi #0, ebx   
13181 [0x337d]:         movsl #0   
13182 [0x337e]:         movi #596, adx   
13184 [0x3380]:         rmov adx, ebx   
13185 [0x3381]:         movi #0, ebx   
13187 [0x3383]:         movsl #0   
13188 [0x3384]:         movi #597, adx   
13190 [0x3386]:         rmov adx, ebx   
13191 [0x3387]:         movi #0, ebx   
13193 [0x3389]:         movsl #0   
13194 [0x338a]:         movi #598, adx   
13196 [0x338c]:         rmov adx, ebx   
13197 [0x338d]:         movi #0, ebx   
13199 [0x338f]:         movsl #0   
13200 [0x3390]:         movi #599, adx   
13202 [0x3392]:         rmov adx, ebx   
13203 [0x3393]:         movi #0, ebx   
13205 [0x3395]:         movsl #0   
13206 [0x3396]:         movi #600, adx   
13208 [0x3398]:         rmov adx, ebx   
13209 [0x3399]:         movi #0, ebx   
13211 [0x339b]:         movsl #0   
13212 [0x339c]:         movi #601, adx   
13214 [0x339e]:         rmov adx, ebx   
13215 [0x339f]:         movi #0, ebx   
13217 [0x33a1]:         movsl #0   
13218 [0x33a2]:         movi #602, adx   
13220 [0x33a4]:         rmov adx, ebx   
13221 [0x33a5]:         movi #0, ebx   
13223 [0x33a7]:         movsl #0   
13224 [0x33a8]:         movi #603, adx   
13226 [0x33aa]:         rmov adx, ebx   
13227 [0x33ab]:         movi #0, ebx   
13229 [0x33ad]:         movsl #0   
13230 [0x33ae]:         movi #604, adx   
13232 [0x33b0]:         rmov adx, ebx   
13233 [0x33b1]:         movi #0, ebx   
13235 [0x33b3]:         movsl #0   
13236 [0x33b4]:         movi #605, adx   
13238 [0x33b6]:         rmov adx, ebx   
13239 [0x33b7]:         movi #0, ebx   
13241 [0x33b9]:         movsl #0   
13242 [0x33ba]:         movi #606, adx   
13244 [0x33bc]:         rmov adx, ebx   
13245 [0x33bd]:         movi #0, ebx   
13247 [0x33bf]:         movsl #0   
13248 [0x33c0]:         movi #607, adx   
13250 [0x33c2]:         rmov adx, ebx   
13251 [0x33c3]:         movi #0, ebx   
13253 [0x33c5]:         movsl #0   
13254 [0x33c6]:         movi #608, adx   
13256 [0x33c8]:         rmov adx, ebx   
13257 [0x33c9]:         movi #0, ebx   
13259 [0x33cb]:         movsl #0   
13260 [0x33cc]:         movi #609, adx   
13262 [0x33ce]:         rmov adx, ebx   
13263 [0x33cf]:         movi #0, ebx   
13265 [0x33d1]:         movsl #0   
13266 [0x33d2]:         movi #610, adx   
13268 [0x33d4]:         rmov adx, ebx   
13269 [0x33d5]:         movi #0, ebx   
13271 [0x33d7]:         movsl #0   
13272 [0x33d8]:         movi #611, adx   
13274 [0x33da]:         rmov adx, ebx   
13275 [0x33db]:         movi #0, ebx   
13277 [0x33dd]:         movsl #0   
13278 [0x33de]:         movi #612, adx   
13280 [0x33e0]:         rmov adx, ebx   
13281 [0x33e1]:         movi #0, ebx   
13283 [0x33e3]:         movsl #0   
13284 [0x33e4]:         movi #613, adx   
13286 [0x33e6]:         rmov adx, ebx   
13287 [0x33e7]:         movi #0, ebx   
13289 [0x33e9]:         movsl #0   
13290 [0x33ea]:         movi #614, adx   
13292 [0x33ec]:         rmov adx, ebx   
13293 [0x33ed]:         movi #0, ebx   
13295 [0x33ef]:         movsl #0   
13296 [0x33f0]:         movi #615, adx   
13298 [0x33f2]:         rmov adx, ebx   
13299 [0x33f3]:         movi #0, ebx   
13301 [0x33f5]:         movsl #0   
13302 [0x33f6]:         movi #616, adx   
13304 [0x33f8]:         rmov adx, ebx   
13305 [0x33f9]:         movi #0, ebx   
13307 [0x33fb]:         movsl #0   
13308 [0x33fc]:         movi #617, adx   
13310 [0x33fe]:         rmov adx, ebx   
13311 [0x33ff]:         movi #0, ebx   
13313 [0x3401]:         movsl #0   
13314 [0x3402]:         movi #618, adx   
13316 [0x3404]:         rmov adx, ebx   
13317 [0x3405]:         movi #0, ebx   
13319 [0x3407]:         movsl #0   
13320 [0x3408]:         movi #619, adx   
13322 [0x340a]:         rmov adx, ebx   
13323 [0x340b]:         movi #0, ebx   
13325 [0x340d]:         movsl #0   
13326 [0x340e]:         movi #620, adx   
13328 [0x3410]:         rmov adx, ebx   
13329 [0x3411]:         movi #0, ebx   
13331 [0x3413]:         movsl #0   
13332 [0x3414]:         movi #621, adx   
13334 [0x3416]:         rmov adx, ebx   
13335 [0x3417]:         movi #0, ebx   
13337 [0x3419]:         movsl #0   
13338 [0x341a]:         movi #622, adx   
13340 [0x341c]:         rmov adx, ebx   
13341 [0x341d]:         movi #0, ebx   
13343 [0x341f]:         movsl #0   
13344 [0x3420]:         movi #623, adx   
13346 [0x3422]:         rmov adx, ebx   
13347 [0x3423]:         movi #0, ebx   
13349 [0x3425]:         movsl #0   
13350 [0x3426]:         movi #624, adx   
13352 [0x3428]:         rmov adx, ebx   
13353 [0x3429]:         movi #0, ebx   
13355 [0x342b]:         movsl #0   
13356 [0x342c]:         movi #625, adx   
13358 [0x342e]:         rmov adx, ebx   
13359 [0x342f]:         movi #0, ebx   
13361 [0x3431]:         movsl #0   
13362 [0x3432]:         movi #626, adx   
13364 [0x3434]:         rmov adx, ebx   
13365 [0x3435]:         movi #0, ebx   
13367 [0x3437]:         movsl #0   
13368 [0x3438]:         movi #627, adx   
13370 [0x343a]:         rmov adx, ebx   
13371 [0x343b]:         movi #0, ebx   
13373 [0x343d]:         movsl #0   
13374 [0x343e]:         movi #628, adx   
13376 [0x3440]:         rmov adx, ebx   
13377 [0x3441]:         movi #0, ebx   
13379 [0x3443]:         movsl #0   
13380 [0x3444]:         movi #629, adx   
13382 [0x3446]:         rmov adx, ebx   
13383 [0x3447]:         movi #0, ebx   
13385 [0x3449]:         movsl #0   
13386 [0x344a]:         movi #630, adx   
13388 [0x344c]:         rmov adx, ebx   
13389 [0x344d]:         movi #0, ebx   
13391 [0x344f]:         movsl #0   
13392 [0x3450]:         movi #631, adx   
13394 [0x3452]:         rmov adx, ebx   
13395 [0x3453]:         movi #0, ebx   
13397 [0x3455]:         movsl #0   
13398 [0x3456]:         movi #632, adx   
13400 [0x3458]:         rmov adx, ebx   
13401 [0x3459]:         movi #0, ebx   
13403 [0x345b]:         movsl #0   
13404 [0x345c]:         movi #633, adx   
13406 [0x345e]:         rmov adx, ebx   
13407 [0x345f]:         movi #0, ebx   
13409 [0x3461]:         movsl #0   
13410 [0x3462]:         movi #634, adx   
13412 [0x3464]:         rmov adx, ebx   
13413 [0x3465]:         movi #0, ebx   
13415 [0x3467]:         movsl #0   
13416 [0x3468]:         movi #635, adx   
13418 [0x346a]:         rmov adx, ebx   
13419 [0x346b]:         movi #0, ebx   
13421 [0x346d]:         movsl #0   
13422 [0x346e]:         movi #636, adx   
13424 [0x3470]:         rmov adx, ebx   
13425 [0x3471]:         movi #0, ebx   
13427 [0x3473]:         movsl #0   
13428 [0x3474]:         movi #637, adx   
13430 [0x3476]:         rmov adx, ebx   
13431 [0x3477]:         movi #0, ebx   
13433 [0x3479]:         movsl #0   
13434 [0x347a]:         movi #638, adx   
13436 [0x347c]:         rmov adx, ebx   
13437 [0x347d]:         movi #0, ebx   
13439 [0x347f]:         movsl #0   
13440 [0x3480]:         movi #639, adx   
13442 [0x3482]:         rmov adx, ebx   
13443 [0x3483]:         movi #0, ebx   
13445 [0x3485]:         movsl #0   
13446 [0x3486]:         movi #640, adx   
13448 [0x3488]:         rmov adx, ebx   
13449 [0x3489]:         movi #0, ebx   
13451 [0x348b]:         movsl #0   
13452 [0x348c]:         movi #641, adx   
13454 [0x348e]:         rmov adx, ebx   
13455 [0x348f]:         movi #0, ebx   
13457 [0x3491]:         movsl #0   
13458 [0x3492]:         movi #642, adx   
13460 [0x3494]:         rmov adx, ebx   
13461 [0x3495]:         movi #0, ebx   
13463 [0x3497]:         movsl #0   
13464 [0x3498]:         movi #643, adx   
13466 [0x349a]:         rmov adx, ebx   
13467 [0x349b]:         movi #0, ebx   
13469 [0x349d]:         movsl #0   
13470 [0x349e]:         movi #644, adx   
13472 [0x34a0]:         rmov adx, ebx   
13473 [0x34a1]:         movi #0, ebx   
13475 [0x34a3]:         movsl #0   
13476 [0x34a4]:         movi #645, adx   
13478 [0x34a6]:         rmov adx, ebx   
13479 [0x34a7]:         movi #0, ebx   
13481 [0x34a9]:         movsl #0   
13482 [0x34aa]:         movi #646, adx   
13484 [0x34ac]:         rmov adx, ebx   
13485 [0x34ad]:         movi #0, ebx   
13487 [0x34af]:         movsl #0   
13488 [0x34b0]:         movi #647, adx   
13490 [0x34b2]:         rmov adx, ebx   
13491 [0x34b3]:         movi #0, ebx   
13493 [0x34b5]:         movsl #0   
13494 [0x34b6]:         movi #648, adx   
13496 [0x34b8]:         rmov adx, ebx   
13497 [0x34b9]:         movi #0, ebx   
13499 [0x34bb]:         movsl #0   
13500 [0x34bc]:         movi #649, adx   
13502 [0x34be]:         rmov adx, ebx   
13503 [0x34bf]:         movi #0, ebx   
13505 [0x34c1]:         movsl #0   
13506 [0x34c2]:         movi #650, adx   
13508 [0x34c4]:         rmov adx, ebx   
13509 [0x34c5]:         movi #0, ebx   
13511 [0x34c7]:         movsl #0   
13512 [0x34c8]:         movi #651, adx   
13514 [0x34ca]:         rmov adx, ebx   
13515 [0x34cb]:         movi #0, ebx   
13517 [0x34cd]:         movsl #0   
13518 [0x34ce]:         movi #652, adx   
13520 [0x34d0]:         rmov adx, ebx   
13521 [0x34d1]:         movi #0, ebx   
13523 [0x34d3]:         movsl #0   
13524 [0x34d4]:         movi #653, adx   
13526 [0x34d6]:         rmov adx, ebx   
13527 [0x34d7]:         movi #0, ebx   
13529 [0x34d9]:         movsl #0   
13530 [0x34da]:         movi #654, adx   
13532 [0x34dc]:         rmov adx, ebx   
13533 [0x34dd]:         movi #0, ebx   
13535 [0x34df]:         movsl #0   
13536 [0x34e0]:         movi #655, adx   
13538 [0x34e2]:         rmov adx, ebx   
13539 [0x34e3]:         movi #0, ebx   
13541 [0x34e5]:         movsl #0   
13542 [0x34e6]:         movi #656, adx   
13544 [0x34e8]:         rmov adx, ebx   
13545 [0x34e9]:         movi #0, ebx   
13547 [0x34eb]:         movsl #0   
13548 [0x34ec]:         movi #657, adx   
13550 [0x34ee]:         rmov adx, ebx   
13551 [0x34ef]:         movi #0, ebx   
13553 [0x34f1]:         movsl #0   
13554 [0x34f2]:         movi #658, adx   
13556 [0x34f4]:         rmov adx, ebx   
13557 [0x34f5]:         movi #0, ebx   
13559 [0x34f7]:         movsl #0   
13560 [0x34f8]:         movi #659, adx   
13562 [0x34fa]:         rmov adx, ebx   
13563 [0x34fb]:         movg @108 // @ui.res.drawable#__srt_global   
13564 [0x34fc]:         movn #24   
13566 [0x34fe]:         popobj   
13567 [0x34ff]:         new_class @0 // std#__srt_global   
13568 [0x3500]:         swap    
13569 [0x3501]:         dup    
13570 [0x3502]:         istore 25   
13572 [0x3504]:         movg @108 // @ui.res.drawable#__srt_global   
13573 [0x3505]:         movn #24   
13575 [0x3507]:         pushobj   
13576 [0x3508]:         istore 20   
13578 [0x350a]:         movi #33, ebx   
13580 [0x350c]:         rstore ebx   
13581 [0x350d]:         call @3711 // <ui.support#drawable.drawable>   
13582 [0x350e]:         movg @108 // @ui.res.drawable#__srt_global   
13583 [0x350f]:         movn #25   
13585 [0x3511]:         popobj   
13586 [0x3512]:         ret   


function: ui.layout#__srt_global.$03internal_static_init[4094] params(0) in file: controller//ui//layout//home_screen.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         istore 0   
2 [0x2]:         movg @132 // @ui.layout#__srt_global   
3 [0x3]:         movn #0   
5 [0x5]:         loadval ebx   
6 [0x6]:         movi #0, adx   
8 [0x8]:         rmov adx, ebx   
9 [0x9]:         ret   


function: ui.layout#home_screen.$03internal_static_init[4095] params(0) in file: controller//ui//layout//home_screen.sharp:12:6: note:  
		class home_screen base fragment {
		     ^

0 [0x0]:         new_class @0 // std#__srt_global   
1 [0x1]:         ret   
2 [0x2]:         dup    
3 [0x3]:         newstr @21 // signal-updater   
4 [0x4]:         call @1959 // <std#string.string>   
5 [0x5]:         movg @135 // @ui.layout#home_screen   
6 [0x6]:         movn #0   
8 [0x8]:         popobj   
9 [0x9]:         new_class @0 // std#__srt_global   
10 [0xa]:         ret   
11 [0xb]:         dup    
12 [0xc]:         newstr @22 // clock-updater   
13 [0xd]:         call @1959 // <std#string.string>   
14 [0xe]:         movg @135 // @ui.layout#home_screen   
15 [0xf]:         movn #1   
17 [0x11]:         popobj   
18 [0x12]:         new_class @0 // std#__srt_global   
19 [0x13]:         ret   
20 [0x14]:         dup    
21 [0x15]:         newstr @23 // flight-data-updater   
22 [0x16]:         call @1959 // <std#string.string>   
23 [0x17]:         movg @135 // @ui.layout#home_screen   
24 [0x18]:         movn #2   
26 [0x1a]:         popobj   
27 [0x1b]:         ret   
28 [0x1c]:         ret   


function: main#__srt_global.$03internal_static_init[4096] params(0) in file: controller//connection_tracker.sharp:0:0: note:  
		End of File
		^

0 [0x0]:         new_class @0 // std#__srt_global   
1 [0x1]:         int 0x0   
2 [0x2]:         dup    
3 [0x3]:         movg @107 // @main#__srt_global   
4 [0x4]:         movn #0   
6 [0x6]:         popobj   
7 [0x7]:         ldc ebx // 0   
8 [0x8]:         rstore ebx   
9 [0x9]:         movg @107 // @main#__srt_global   
10 [0xa]:         movn #1   
12 [0xc]:         loadval ebx   
13 [0xd]:         movi #0, adx   
15 [0xf]:         rmov adx, ebx   
16 [0x10]:         istore 1   
18 [0x12]:         movg @107 // @main#__srt_global   
19 [0x13]:         movn #2   
21 [0x15]:         loadval ebx   
22 [0x16]:         movi #0, adx   
24 [0x18]:         rmov adx, ebx   
25 [0x19]:         istore 0   
27 [0x1b]:         movg @107 // @main#__srt_global   
28 [0x1c]:         movn #3   
30 [0x1e]:         loadval ebx   
31 [0x1f]:         movi #0, adx   
33 [0x21]:         rmov adx, ebx   
34 [0x22]:         ret   


function: std.io#thread_result.$03internal_static_init[4097] params(0) in file: /usr/include/sharp//io//thread_kernel.sharp:3:5: note:  
		import platform.kernel;
		    ^

0 [0x0]: line: 43 istorel 0, fp+0   
2 [0x2]: line: 44 movi #17, ebx   
4 [0x4]:          new_classarray ebx  // std.io#thread_result[]   
6 [0x6]:          movg @17 // @std.io#thread_result   
7 [0x7]:          movn #17   
9 [0x9]:          popobj   
10 [0xa]: line: 45 movg @17 // @std.io#thread_result   
11 [0xb]:          movn #0   
13 [0xd]:          pushobj   
14 [0xe]:          movg @17 // @std.io#thread_result   
15 [0xf]:          movn #17   
17 [0x11]:          pushobj   
18 [0x12]:          loadl ebx, fp+0   
19 [0x13]:          movr egx, ebx   
20 [0x14]:          inc ebx   
21 [0x15]:          smovr_2 ebx, fp+0   
22 [0x16]:          movr ebx, egx   
23 [0x17]:          popobj2    
24 [0x18]:          movr adx, ebx   
25 [0x19]:          chklen adx   
26 [0x1a]:          movnd adx   
27 [0x1b]:          popobj   
28 [0x1c]: line: 46 movg @17 // @std.io#thread_result   
29 [0x1d]:          movn #1   
31 [0x1f]:          pushobj   
32 [0x20]:          movg @17 // @std.io#thread_result   
33 [0x21]:          movn #17   
35 [0x23]:          pushobj   
36 [0x24]:          loadl ebx, fp+0   
37 [0x25]:          movr egx, ebx   
38 [0x26]:          inc ebx   
39 [0x27]:          smovr_2 ebx, fp+0   
40 [0x28]:          movr ebx, egx   
41 [0x29]:          popobj2    
42 [0x2a]:          movr adx, ebx   
43 [0x2b]:          chklen adx   
44 [0x2c]:          movnd adx   
45 [0x2d]:          popobj   
46 [0x2e]: line: 47 movg @17 // @std.io#thread_result   
47 [0x2f]:          movn #2   
49 [0x31]:          pushobj   
50 [0x32]:          movg @17 // @std.io#thread_result   
51 [0x33]:          movn #17   
53 [0x35]:          pushobj   
54 [0x36]:          loadl ebx, fp+0   
55 [0x37]:          movr egx, ebx   
56 [0x38]:          inc ebx   
57 [0x39]:          smovr_2 ebx, fp+0   
58 [0x3a]:          movr ebx, egx   
59 [0x3b]:          popobj2    
60 [0x3c]:          movr adx, ebx   
61 [0x3d]:          chklen adx   
62 [0x3e]:          movnd adx   
63 [0x3f]:          popobj   
64 [0x40]: line: 48 movg @17 // @std.io#thread_result   
65 [0x41]:          movn #3   
67 [0x43]:          pushobj   
68 [0x44]:          movg @17 // @std.io#thread_result   
69 [0x45]:          movn #17   
71 [0x47]:          pushobj   
72 [0x48]:          loadl ebx, fp+0   
73 [0x49]:          movr egx, ebx   
74 [0x4a]:          inc ebx   
75 [0x4b]:          smovr_2 ebx, fp+0   
76 [0x4c]:          movr ebx, egx   
77 [0x4d]:          popobj2    
78 [0x4e]:          movr adx, ebx   
79 [0x4f]:          chklen adx   
80 [0x50]:          movnd adx   
81 [0x51]:          popobj   
82 [0x52]: line: 49 movg @17 // @std.io#thread_result   
83 [0x53]:          movn #4   
85 [0x55]:          pushobj   
86 [0x56]:          movg @17 // @std.io#thread_result   
87 [0x57]:          movn #17   
89 [0x59]:          pushobj   
90 [0x5a]:          loadl ebx, fp+0   
91 [0x5b]:          movr egx, ebx   
92 [0x5c]:          inc ebx   
93 [0x5d]:          smovr_2 ebx, fp+0   
94 [0x5e]:          movr ebx, egx   
95 [0x5f]:          popobj2    
96 [0x60]:          movr adx, ebx   
97 [0x61]:          chklen adx   
98 [0x62]:          movnd adx   
99 [0x63]:          popobj   
100 [0x64]: line: 50 movg @17 // @std.io#thread_result   
101 [0x65]:          movn #5   
103 [0x67]:          pushobj   
104 [0x68]:          movg @17 // @std.io#thread_result   
105 [0x69]:          movn #17   
107 [0x6b]:          pushobj   
108 [0x6c]:          loadl ebx, fp+0   
109 [0x6d]:          movr egx, ebx   
110 [0x6e]:          inc ebx   
111 [0x6f]:          smovr_2 ebx, fp+0   
112 [0x70]:          movr ebx, egx   
113 [0x71]:          popobj2    
114 [0x72]:          movr adx, ebx   
115 [0x73]:          chklen adx   
116 [0x74]:          movnd adx   
117 [0x75]:          popobj   
118 [0x76]: line: 51 movg @17 // @std.io#thread_result   
119 [0x77]:          movn #6   
121 [0x79]:          pushobj   
122 [0x7a]:          movg @17 // @std.io#thread_result   
123 [0x7b]:          movn #17   
125 [0x7d]:          pushobj   
126 [0x7e]:          loadl ebx, fp+0   
127 [0x7f]:          movr egx, ebx   
128 [0x80]:          inc ebx   
129 [0x81]:          smovr_2 ebx, fp+0   
130 [0x82]:          movr ebx, egx   
131 [0x83]:          popobj2    
132 [0x84]:          movr adx, ebx   
133 [0x85]:          chklen adx   
134 [0x86]:          movnd adx   
135 [0x87]:          popobj   
136 [0x88]: line: 52 movg @17 // @std.io#thread_result   
137 [0x89]:          movn #7   
139 [0x8b]:          pushobj   
140 [0x8c]:          movg @17 // @std.io#thread_result   
141 [0x8d]:          movn #17   
143 [0x8f]:          pushobj   
144 [0x90]:          loadl ebx, fp+0   
145 [0x91]:          movr egx, ebx   
146 [0x92]:          inc ebx   
147 [0x93]:          smovr_2 ebx, fp+0   
148 [0x94]:          movr ebx, egx   
149 [0x95]:          popobj2    
150 [0x96]:          movr adx, ebx   
151 [0x97]:          chklen adx   
152 [0x98]:          movnd adx   
153 [0x99]:          popobj   
154 [0x9a]: line: 53 movg @17 // @std.io#thread_result   
155 [0x9b]:          movn #8   
157 [0x9d]:          pushobj   
158 [0x9e]:          movg @17 // @std.io#thread_result   
159 [0x9f]:          movn #17   
161 [0xa1]:          pushobj   
162 [0xa2]:          loadl ebx, fp+0   
163 [0xa3]:          movr egx, ebx   
164 [0xa4]:          inc ebx   
165 [0xa5]:          smovr_2 ebx, fp+0   
166 [0xa6]:          movr ebx, egx   
167 [0xa7]:          popobj2    
168 [0xa8]:          movr adx, ebx   
169 [0xa9]:          chklen adx   
170 [0xaa]:          movnd adx   
171 [0xab]:          popobj   
172 [0xac]: line: 54 movg @17 // @std.io#thread_result   
173 [0xad]:          movn #9   
175 [0xaf]:          pushobj   
176 [0xb0]:          movg @17 // @std.io#thread_result   
177 [0xb1]:          movn #17   
179 [0xb3]:          pushobj   
180 [0xb4]:          loadl ebx, fp+0   
181 [0xb5]:          movr egx, ebx   
182 [0xb6]:          inc ebx   
183 [0xb7]:          smovr_2 ebx, fp+0   
184 [0xb8]:          movr ebx, egx   
185 [0xb9]:          popobj2    
186 [0xba]:          movr adx, ebx   
187 [0xbb]:          chklen adx   
188 [0xbc]:          movnd adx   
189 [0xbd]:          popobj   
190 [0xbe]: line: 55 movg @17 // @std.io#thread_result   
191 [0xbf]:          movn #10   
193 [0xc1]:          pushobj   
194 [0xc2]:          movg @17 // @std.io#thread_result   
195 [0xc3]:          movn #17   
197 [0xc5]:          pushobj   
198 [0xc6]:          loadl ebx, fp+0   
199 [0xc7]:          movr egx, ebx   
200 [0xc8]:          inc ebx   
201 [0xc9]:          smovr_2 ebx, fp+0   
202 [0xca]:          movr ebx, egx   
203 [0xcb]:          popobj2    
204 [0xcc]:          movr adx, ebx   
205 [0xcd]:          chklen adx   
206 [0xce]:          movnd adx   
207 [0xcf]:          popobj   
208 [0xd0]: line: 56 movg @17 // @std.io#thread_result   
209 [0xd1]:          movn #11   
211 [0xd3]:          pushobj   
212 [0xd4]:          movg @17 // @std.io#thread_result   
213 [0xd5]:          movn #17   
215 [0xd7]:          pushobj   
216 [0xd8]:          loadl ebx, fp+0   
217 [0xd9]:          movr egx, ebx   
218 [0xda]:          inc ebx   
219 [0xdb]:          smovr_2 ebx, fp+0   
220 [0xdc]:          movr ebx, egx   
221 [0xdd]:          popobj2    
222 [0xde]:          movr adx, ebx   
223 [0xdf]:          chklen adx   
224 [0xe0]:          movnd adx   
225 [0xe1]:          popobj   
226 [0xe2]: line: 57 movg @17 // @std.io#thread_result   
227 [0xe3]:          movn #12   
229 [0xe5]:          pushobj   
230 [0xe6]:          movg @17 // @std.io#thread_result   
231 [0xe7]:          movn #17   
233 [0xe9]:          pushobj   
234 [0xea]:          loadl ebx, fp+0   
235 [0xeb]:          movr egx, ebx   
236 [0xec]:          inc ebx   
237 [0xed]:          smovr_2 ebx, fp+0   
238 [0xee]:          movr ebx, egx   
239 [0xef]:          popobj2    
240 [0xf0]:          movr adx, ebx   
241 [0xf1]:          chklen adx   
242 [0xf2]:          movnd adx   
243 [0xf3]:          popobj   
244 [0xf4]: line: 58 movg @17 // @std.io#thread_result   
245 [0xf5]:          movn #13   
247 [0xf7]:          pushobj   
248 [0xf8]:          movg @17 // @std.io#thread_result   
249 [0xf9]:          movn #17   
251 [0xfb]:          pushobj   
252 [0xfc]:          loadl ebx, fp+0   
253 [0xfd]:          movr egx, ebx   
254 [0xfe]:          inc ebx   
255 [0xff]:          smovr_2 ebx, fp+0   
256 [0x100]:          movr ebx, egx   
257 [0x101]:          popobj2    
258 [0x102]:          movr adx, ebx   
259 [0x103]:          chklen adx   
260 [0x104]:          movnd adx   
261 [0x105]:          popobj   
262 [0x106]: line: 59 movg @17 // @std.io#thread_result   
263 [0x107]:          movn #14   
265 [0x109]:          pushobj   
266 [0x10a]:          movg @17 // @std.io#thread_result   
267 [0x10b]:          movn #17   
269 [0x10d]:          pushobj   
270 [0x10e]:          loadl ebx, fp+0   
271 [0x10f]:          movr egx, ebx   
272 [0x110]:          inc ebx   
273 [0x111]:          smovr_2 ebx, fp+0   
274 [0x112]:          movr ebx, egx   
275 [0x113]:          popobj2    
276 [0x114]:          movr adx, ebx   
277 [0x115]:          chklen adx   
278 [0x116]:          movnd adx   
279 [0x117]:          popobj   
280 [0x118]: line: 60 movg @17 // @std.io#thread_result   
281 [0x119]:          movn #15   
283 [0x11b]:          pushobj   
284 [0x11c]:          movg @17 // @std.io#thread_result   
285 [0x11d]:          movn #17   
287 [0x11f]:          pushobj   
288 [0x120]:          loadl ebx, fp+0   
289 [0x121]:          movr egx, ebx   
290 [0x122]:          inc ebx   
291 [0x123]:          smovr_2 ebx, fp+0   
292 [0x124]:          movr ebx, egx   
293 [0x125]:          popobj2    
294 [0x126]:          movr adx, ebx   
295 [0x127]:          chklen adx   
296 [0x128]:          movnd adx   
297 [0x129]:          popobj   
298 [0x12a]: line: 61 movg @17 // @std.io#thread_result   
299 [0x12b]:          movn #16   
301 [0x12d]:          pushobj   
302 [0x12e]:          movg @17 // @std.io#thread_result   
303 [0x12f]:          movn #17   
305 [0x131]:          pushobj   
306 [0x132]:          loadl ebx, fp+0   
307 [0x133]:          movr egx, ebx   
308 [0x134]:          inc ebx   
309 [0x135]:          smovr_2 ebx, fp+0   
310 [0x136]:          movr ebx, egx   
311 [0x137]:          popobj2    
312 [0x138]:          movr adx, ebx   
313 [0x139]:          chklen adx   
314 [0x13a]:          movnd adx   
315 [0x13b]:          popobj   
316 [0x13c]:          ret   
317 [0x13d]:          ret   


function: std#tmp.$03internal_static_init[4098] params(0) in file: /usr/include/sharp//random.sharp:32:5: note:  
		class tmp {
		    ^

0 [0x0]: line: 34 call @2278 // <std#__srt_global.utc_mills_time>   
1 [0x1]:          loadval ebx   
2 [0x2]:          rstore ebx   
3 [0x3]:          movi #4, ebx   
5 [0x5]:          loadval ecx   
6 [0x6]:          shr ecx, ebx -> ebx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movg @0 // @std#__srt_global   
9 [0x9]:          movn #1   
11 [0xb]:          loadval ebx   
12 [0xc]:          movi #0, adx   
14 [0xe]:          rmov adx, ebx   
15 [0xf]: line: 35 movg @0 // @std#__srt_global   
16 [0x10]:          movn #1   
18 [0x12]:          movi #0, adx   
20 [0x14]:          iaload ebx, adx   
21 [0x15]:          rstore ebx   
22 [0x16]:          call @3485 // <platform.kernel#vm.random_seed>   
23 [0x17]:          ret   
24 [0x18]:          ret   


lambda: std.io.task#__srt_global.anon_func$4099[4099] params(2) in file: /usr/include/sharp//io//task//job_master.sharp:71:35: note:  
				job_queue.remove(scheduled_job, { it, it2 -> return it.id == it2.id; });
		                                  ^

0 [0x0]: line: 71 movl 0   
1 [0x1]:          movn #15   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #15   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


lambda: std.io.task#__srt_global.anon_func$4100[4100] params(2) in file: /usr/include/sharp//io//task//job_scheduler.sharp:89:52: note:  
		                        jobs.remove(scheduled_job, { it, it2 -> return it.id == it2.id; });
		                                                   ^

0 [0x0]: line: 89 movl 0   
1 [0x1]:          movn #15   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          rstore ebx   
7 [0x7]:          movl 1   
8 [0x8]:          movn #15   
10 [0xa]:          movi #0, adx   
12 [0xc]:          iaload ebx, adx   
13 [0xd]:          loadval ecx   
14 [0xe]:          test ecx, ebx   
15 [0xf]:          return_val cmt   
16 [0x10]:          ret   


lambda: std.io.task#__srt_global.anon_func$4101[4101] params(2) in file: /usr/include/sharp//io//task//job_scheduler.sharp:104:48: note:  
		                    jobs.remove(scheduled_job, { it, it2 -> return it.id == it2.id; });
		                                               ^

0 [0x0]: line: 104 movl 0   
1 [0x1]:           movn #15   
3 [0x3]:           movi #0, adx   
5 [0x5]:           iaload ebx, adx   
6 [0x6]:           rstore ebx   
7 [0x7]:           movl 1   
8 [0x8]:           movn #15   
10 [0xa]:           movi #0, adx   
12 [0xc]:           iaload ebx, adx   
13 [0xd]:           loadval ecx   
14 [0xe]:           test ecx, ebx   
15 [0xf]:           return_val cmt   
16 [0x10]:           ret   


lambda: std.io.task#__srt_global.anon_func$4102[4102] params(1) in file: /usr/include/sharp//io//task//job_scheduler.sharp:128:19: note:  
		        pool.find({ t ->
		                  ^

0 [0x0]: line: 129 pushl 0   
1 [0x1]:           movg @4 // @std.io.task#__srt_global   
2 [0x2]:           movn #4   
4 [0x4]:           pushobj   
5 [0x5]:           call @2202 // <std.io#thread.operator==>   
6 [0x6]:           loadval ebx   
7 [0x7]:           movr cmt, ebx   
8 [0x8]:           jne 12   
9 [0x9]:           istorel 0, fp+0   
11 [0xb]:           ret   
12 [0xc]:           nop   
13 [0xd]: line: 131 movg @4 // @std.io.task#__srt_global   
14 [0xe]:           movn #0   
16 [0x10]:           pushobj   
17 [0x11]:           pushl 0   
18 [0x12]:           call @2037 // <std.io.task#job_master.get_host_controller>   
19 [0x13]:           popobj2    
20 [0x14]:           movn #0   
22 [0x16]:           pushobj   
23 [0x17]:           pushnull    
24 [0x18]:           itest ebx   
25 [0x19]:           return_val ebx   
26 [0x1a]:           ret   


lambda: std.io.task#__srt_global.anon_func$4103[4103] params(1) in file: /usr/include/sharp//io//task//job_scheduler.sharp:162:19: note:  
		        pool.find({ t ->
		                  ^

0 [0x0]: line: 163 pushl 0   
1 [0x1]:           movg @4 // @std.io.task#__srt_global   
2 [0x2]:           movn #4   
4 [0x4]:           pushobj   
5 [0x5]:           call @2202 // <std.io#thread.operator==>   
6 [0x6]:           loadval ebx   
7 [0x7]:           movr cmt, ebx   
8 [0x8]:           jne 12   
9 [0x9]:           istorel 0, fp+0   
11 [0xb]:           ret   
12 [0xc]:           nop   
13 [0xd]: line: 164 movg @4 // @std.io.task#__srt_global   
14 [0xe]:           movn #0   
16 [0x10]:           pushobj   
17 [0x11]:           pushl 0   
18 [0x12]:           call @2037 // <std.io.task#job_master.get_host_controller>   
19 [0x13]:           popobj2    
20 [0x14]:           smovr_3 fp+1   
21 [0x15]: line: 166 movl 1   
22 [0x16]:           movn #0   
24 [0x18]:           pushobj   
25 [0x19]:           pushnull    
26 [0x1a]:           itest ebx   
27 [0x1b]:           skne ebx // pc = 61   
28 [0x1c]:           movl 1   
29 [0x1d]:           movn #1   
31 [0x1f]:           movi #0, adx   
33 [0x21]:           iaload ebx, adx   
34 [0x22]:           rstore ebx   
35 [0x23]:           movi #0, ebx   
37 [0x25]:           loadval ecx   
38 [0x26]:           gt ecx, ebx   
39 [0x27]:           movr ebx, cmt   
40 [0x28]:           skne ebx // pc = 61   
41 [0x29]:           movg @4 // @std.io.task#__srt_global   
42 [0x2a]:           movn #5   
44 [0x2c]:           movi #0, adx   
46 [0x2e]:           iaload ebx, adx   
47 [0x2f]:           rstore ebx   
48 [0x30]:           movl 1   
49 [0x31]:           movn #1   
51 [0x33]:           movi #0, adx   
53 [0x35]:           iaload ebx, adx   
54 [0x36]:           loadval ecx   
55 [0x37]:           sub ecx, ebx -> ebx   
56 [0x38]:           rstore ebx   
57 [0x39]:           movi #180000, ebx   
59 [0x3b]:           loadval ecx   
60 [0x3c]:           gt ecx, ebx   
61 [0x3d]:           return_val cmt   
62 [0x3e]:           ret   


lambda: std.io.task#__srt_global.anon_func$4104[4104] params(1) in file: /usr/include/sharp//io//task//job_scheduler.sharp:177:19: note:  
		        pool.find({ t ->
		                  ^

0 [0x0]: line: 178 movg @4 // @std.io.task#__srt_global   
1 [0x1]:           movn #0   
3 [0x3]:           pushobj   
4 [0x4]:           pushl 0   
5 [0x5]:           call @2037 // <std.io.task#job_master.get_host_controller>   
6 [0x6]:           popobj2    
7 [0x7]:           smovr_3 fp+1   
8 [0x8]: line: 179 movl 1   
9 [0x9]:           movn #0   
11 [0xb]:           pushobj   
12 [0xc]:           pushnull    
13 [0xd]:           itest ebx   
14 [0xe]:           skne ebx // pc = 48   
15 [0xf]:           movl 1   
16 [0x10]:           movn #1   
18 [0x12]:           movi #0, adx   
20 [0x14]:           iaload ebx, adx   
21 [0x15]:           rstore ebx   
22 [0x16]:           movi #0, ebx   
24 [0x18]:           loadval ecx   
25 [0x19]:           gt ecx, ebx   
26 [0x1a]:           movr ebx, cmt   
27 [0x1b]:           skne ebx // pc = 48   
28 [0x1c]:           movg @4 // @std.io.task#__srt_global   
29 [0x1d]:           movn #5   
31 [0x1f]:           movi #0, adx   
33 [0x21]:           iaload ebx, adx   
34 [0x22]:           rstore ebx   
35 [0x23]:           movl 1   
36 [0x24]:           movn #1   
38 [0x26]:           movi #0, adx   
40 [0x28]:           iaload ebx, adx   
41 [0x29]:           loadval ecx   
42 [0x2a]:           sub ecx, ebx -> ebx   
43 [0x2b]:           rstore ebx   
44 [0x2c]:           movi #180000, ebx   
46 [0x2e]:           loadval ecx   
47 [0x2f]:           gt ecx, ebx   
48 [0x30]:           return_val cmt   
49 [0x31]:           ret   


lambda: main#__srt_global.anon_func$4105[4105] params(0) in file: controller//main.sharp:23:11: note:  
		        = { ->
		          ^

0 [0x0]: line: 24 call @3664 // <common.network#network.handshake>   
1 [0x1]: line: 25 newstr @161 // handshaked!   
2 [0x2]:          call @2258 // <std#__srt_global.println>   
3 [0x3]: line: 26 istore 1   
5 [0x5]: line: 27 call @3668 // <common.network#network.request_jam>   
6 [0x6]:          loadval ebx   
7 [0x7]:          rstore ebx   
8 [0x8]:          movi #0, ebx   
10 [0xa]:          loadval ecx   
11 [0xb]:          test ecx, ebx   
12 [0xc]:          jne 14   
13 [0xd]: line: 28 jmp @16   
14 [0xe]:          nop   
15 [0xf]:          jmp @3   
16 [0x10]: line: 30 istore 100000   
18 [0x12]:          call @2182 // <std.io#thread.sleep>   
19 [0x13]: line: 31 istore 0   
21 [0x15]:          movg @107 // @main#__srt_global   
22 [0x16]:          movn #2   
24 [0x18]:          loadval ebx   
25 [0x19]:          movi #0, adx   
27 [0x1b]:          rmov adx, ebx   
28 [0x1c]:          ret   


lambda: main#__srt_global.anon_func$4106[4106] params(0) in file: controller//main.sharp:37:9: note:  
		      = { ->
		        ^

0 [0x0]: line: 38 movg @107 // @main#__srt_global   
1 [0x1]:          movn #2   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          not ebx, ebx   
7 [0x7]:          movr cmt, ebx   
8 [0x8]:          jne 19   
9 [0x9]: line: 39 new_class @0 // std#__srt_global   
10 [0xa]:          ret   
11 [0xb]:          dup    
12 [0xc]:          movg @106 // @common#constants.strings   
13 [0xd]:          movn #8   
15 [0xf]:          pushobj   
16 [0x10]:          call @1959 // <std#string.string>   
17 [0x11]:          call @3666 // <common.network#network.change_mode>   
18 [0x12]:          pop   
19 [0x13]:          nop   
20 [0x14]:          ret   


lambda: ui.layout#__srt_global.anon_func$4107[4107] params(1) in file: controller//ui//layout//splash_screen.sharp:58:15: note:  
		            = { args: object[]  ->
		              ^

0 [0x0]: line: 59 pushl 0   
1 [0x1]:          movi #1, ebx   
3 [0x3]:          popobj2    
4 [0x4]:          movr adx, ebx   
5 [0x5]:          chklen adx   
6 [0x6]:          movnd adx   
7 [0x7]:          movi #116, cmt   
9 [0x9]:          cast cmt   
10 [0xa]:          smovr_3 fp+1   
11 [0xb]: line: 60 pushl 1   
12 [0xc]:          ldc ebx // 0   
13 [0xd]:          rstore ebx   
14 [0xe]:          istore 1   
16 [0x10]:          call @3729 // <ui.support#fragment.navigate>   
17 [0x11]:          ret   


lambda: ui.layout#__srt_global.anon_func$4108[4108] params(1) in file: controller//ui//layout//home_screen.sharp:108:15: note:  
		            = { args: object[]  ->
		              ^

0 [0x0]: line: 109 pushl 0   
1 [0x1]:           movi #1, ebx   
3 [0x3]:           popobj2    
4 [0x4]:           movr adx, ebx   
5 [0x5]:           chklen adx   
6 [0x6]:           movnd adx   
7 [0x7]:           movi #112, cmt   
9 [0x9]:           cast cmt   
10 [0xa]:           smovr_3 fp+1   
11 [0xb]: line: 110 pushl 0   
12 [0xc]:           movi #2, ebx   
14 [0xe]:           popobj2    
15 [0xf]:           movr adx, ebx   
16 [0x10]:           chklen adx   
17 [0x11]:           movnd adx   
18 [0x12]:           movi #112, cmt   
20 [0x14]:           cast cmt   
21 [0x15]:           smovr_3 fp+2   
22 [0x16]: line: 111 pushl 0   
23 [0x17]:           movi #3, ebx   
25 [0x19]:           popobj2    
26 [0x1a]:           movr adx, ebx   
27 [0x1b]:           chklen adx   
28 [0x1c]:           movnd adx   
29 [0x1d]:           movi #118, cmt   
31 [0x1f]:           cast cmt   
32 [0x20]:           smovr_3 fp+3   
33 [0x21]: line: 113 movg @107 // @main#__srt_global   
34 [0x22]:           movn #2   
36 [0x24]:           movi #0, adx   
38 [0x26]:           iaload ebx, adx   
39 [0x27]:           not ebx, ebx   
40 [0x28]:           movr cmt, ebx   
41 [0x29]:           jne 179   
42 [0x2a]: line: 114 call @3671 // <common.network#network.get_flight_data>   
43 [0x2b]:           popobj2    
44 [0x2c]:           smovr_3 fp+4   
45 [0x2d]: line: 116 movl 4   
46 [0x2e]:           checknull   
47 [0x2f]:           not ebx, ebx   
48 [0x30]:           movr cmt, ebx   
49 [0x31]:           jne 178   
50 [0x32]: line: 117 pushl 1   
51 [0x33]:           new_class @0 // std#__srt_global   
52 [0x34]:           ret   
53 [0x35]:           dup    
54 [0x36]:           newstr @24 //    
55 [0x37]:           call @1959 // <std#string.string>   
56 [0x38]:           movl 4   
57 [0x39]:           movn #2   
59 [0x3b]:           movi #0, adx   
61 [0x3d]:           iaload ebx, adx   
62 [0x3e]:           rstore ebx   
63 [0x3f]:           call @1991 // <std#string.operator+>   
64 [0x40]:           call @4009 // <ui.support#text_view.set_text>   
65 [0x41]: line: 118 pushl 2   
66 [0x42]:           new_class @0 // std#__srt_global   
67 [0x43]:           ret   
68 [0x44]:           dup    
69 [0x45]:           newstr @24 //    
70 [0x46]:           call @1959 // <std#string.string>   
71 [0x47]:           movl 4   
72 [0x48]:           movn #1   
74 [0x4a]:           movi #0, adx   
76 [0x4c]:           iaload ebx, adx   
77 [0x4d]:           rstore ebx   
78 [0x4e]:           call @1991 // <std#string.operator+>   
79 [0x4f]:           newstr @162 // M   
80 [0x50]:           call @1971 // <std#string.operator+>   
81 [0x51]:           call @4009 // <ui.support#text_view.set_text>   
82 [0x52]: line: 120 movl 4   
83 [0x53]:           movn #0   
85 [0x55]:           movi #0, adx   
87 [0x57]:           iaload ebx, adx   
88 [0x58]:           rstore ebx   
89 [0x59]:           movi #0, ebx   
91 [0x5b]:           loadval ecx   
92 [0x5c]:           test ecx, ebx   
93 [0x5d]:           jne 100   
94 [0x5e]: line: 122 pushl 3   
95 [0x5f]:           istore 13   
97 [0x61]:           call @3739 // <ui.support#image_view.set_drawable>   
98 [0x62]:           pop   
99 [0x63]:           jmp @177   
100 [0x64]:           movl 4   
101 [0x65]:           movn #0   
103 [0x67]:           movi #0, adx   
105 [0x69]:           iaload ebx, adx   
106 [0x6a]:           rstore ebx   
107 [0x6b]:           movi #1, ebx   
109 [0x6d]:           loadval ecx   
110 [0x6e]:           test ecx, ebx   
111 [0x6f]:           jne 118   
112 [0x70]: line: 125 pushl 3   
113 [0x71]:           istore 14   
115 [0x73]:           call @3739 // <ui.support#image_view.set_drawable>   
116 [0x74]:           pop   
117 [0x75]:           jmp @177   
118 [0x76]:           movl 4   
119 [0x77]:           movn #0   
121 [0x79]:           movi #0, adx   
123 [0x7b]:           iaload ebx, adx   
124 [0x7c]:           rstore ebx   
125 [0x7d]:           movi #2, ebx   
127 [0x7f]:           loadval ecx   
128 [0x80]:           test ecx, ebx   
129 [0x81]:           jne 136   
130 [0x82]: line: 128 pushl 3   
131 [0x83]:           istore 15   
133 [0x85]:           call @3739 // <ui.support#image_view.set_drawable>   
134 [0x86]:           pop   
135 [0x87]:           jmp @177   
136 [0x88]:           movl 4   
137 [0x89]:           movn #0   
139 [0x8b]:           movi #0, adx   
141 [0x8d]:           iaload ebx, adx   
142 [0x8e]:           rstore ebx   
143 [0x8f]:           movi #3, ebx   
145 [0x91]:           loadval ecx   
146 [0x92]:           test ecx, ebx   
147 [0x93]:           jne 154   
148 [0x94]: line: 131 pushl 3   
149 [0x95]:           istore 16   
151 [0x97]:           call @3739 // <ui.support#image_view.set_drawable>   
152 [0x98]:           pop   
153 [0x99]:           jmp @177   
154 [0x9a]:           movl 4   
155 [0x9b]:           movn #0   
157 [0x9d]:           movi #0, adx   
159 [0x9f]:           iaload ebx, adx   
160 [0xa0]:           rstore ebx   
161 [0xa1]:           movi #4, ebx   
163 [0xa3]:           loadval ecx   
164 [0xa4]:           test ecx, ebx   
165 [0xa5]:           jne 172   
166 [0xa6]: line: 134 pushl 3   
167 [0xa7]:           istore 17   
169 [0xa9]:           call @3739 // <ui.support#image_view.set_drawable>   
170 [0xaa]:           pop   
171 [0xab]:           jmp @177   
172 [0xac]: line: 137 pushl 3   
173 [0xad]:           istore 13   
175 [0xaf]:           call @3739 // <ui.support#image_view.set_drawable>   
176 [0xb0]:           pop   
177 [0xb1]:           nop   
178 [0xb2]:           nop   
179 [0xb3]:           nop   
180 [0xb4]:           ret   


lambda: ui.layout#__srt_global.anon_func$4109[4109] params(1) in file: controller//ui//layout//home_screen.sharp:148:15: note:  
		            = { args : object[] ->
		              ^

0 [0x0]: line: 149 pushl 0   
1 [0x1]:           movi #1, ebx   
3 [0x3]:           popobj2    
4 [0x4]:           movr adx, ebx   
5 [0x5]:           chklen adx   
6 [0x6]:           movnd adx   
7 [0x7]:           movi #118, cmt   
9 [0x9]:           cast cmt   
10 [0xa]:           smovr_3 fp+1   
11 [0xb]: line: 150 movg @107 // @main#__srt_global   
12 [0xc]:           movn #1   
14 [0xe]:           movi #0, adx   
16 [0x10]:           iaload ebx, adx   
17 [0x11]:           rstore ebx   
18 [0x12]:           movi #0, ebx   
20 [0x14]:           loadval ecx   
21 [0x15]:           test ecx, ebx   
22 [0x16]:           jne 29   
23 [0x17]: line: 152 pushl 1   
24 [0x18]:           istore 5   
26 [0x1a]:           call @3739 // <ui.support#image_view.set_drawable>   
27 [0x1b]:           pop   
28 [0x1c]:           jmp @106   
29 [0x1d]:           movg @107 // @main#__srt_global   
30 [0x1e]:           movn #1   
32 [0x20]:           movi #0, adx   
34 [0x22]:           iaload ebx, adx   
35 [0x23]:           rstore ebx   
36 [0x24]:           movi #1, ebx   
38 [0x26]:           loadval ecx   
39 [0x27]:           test ecx, ebx   
40 [0x28]:           jne 47   
41 [0x29]: line: 155 pushl 1   
42 [0x2a]:           istore 6   
44 [0x2c]:           call @3739 // <ui.support#image_view.set_drawable>   
45 [0x2d]:           pop   
46 [0x2e]:           jmp @106   
47 [0x2f]:           movg @107 // @main#__srt_global   
48 [0x30]:           movn #1   
50 [0x32]:           movi #0, adx   
52 [0x34]:           iaload ebx, adx   
53 [0x35]:           rstore ebx   
54 [0x36]:           movi #2, ebx   
56 [0x38]:           loadval ecx   
57 [0x39]:           test ecx, ebx   
58 [0x3a]:           jne 65   
59 [0x3b]: line: 158 pushl 1   
60 [0x3c]:           istore 7   
62 [0x3e]:           call @3739 // <ui.support#image_view.set_drawable>   
63 [0x3f]:           pop   
64 [0x40]:           jmp @106   
65 [0x41]:           movg @107 // @main#__srt_global   
66 [0x42]:           movn #1   
68 [0x44]:           movi #0, adx   
70 [0x46]:           iaload ebx, adx   
71 [0x47]:           rstore ebx   
72 [0x48]:           movi #3, ebx   
74 [0x4a]:           loadval ecx   
75 [0x4b]:           test ecx, ebx   
76 [0x4c]:           jne 83   
77 [0x4d]: line: 161 pushl 1   
78 [0x4e]:           istore 8   
80 [0x50]:           call @3739 // <ui.support#image_view.set_drawable>   
81 [0x51]:           pop   
82 [0x52]:           jmp @106   
83 [0x53]:           movg @107 // @main#__srt_global   
84 [0x54]:           movn #1   
86 [0x56]:           movi #0, adx   
88 [0x58]:           iaload ebx, adx   
89 [0x59]:           rstore ebx   
90 [0x5a]:           movi #4, ebx   
92 [0x5c]:           loadval ecx   
93 [0x5d]:           test ecx, ebx   
94 [0x5e]:           jne 101   
95 [0x5f]: line: 164 pushl 1   
96 [0x60]:           istore 9   
98 [0x62]:           call @3739 // <ui.support#image_view.set_drawable>   
99 [0x63]:           pop   
100 [0x64]:           jmp @106   
101 [0x65]: line: 167 pushl 1   
102 [0x66]:           istore 9   
104 [0x68]:           call @3739 // <ui.support#image_view.set_drawable>   
105 [0x69]:           pop   
106 [0x6a]:           nop   
107 [0x6b]:           ret   


lambda: ui.layout#__srt_global.anon_func$4110[4110] params(1) in file: controller//ui//layout//home_screen.sharp:177:15: note:  
		            = { args : object[] ->
		              ^

0 [0x0]: line: 178 pushl 0   
1 [0x1]:           movi #1, ebx   
3 [0x3]:           popobj2    
4 [0x4]:           movr adx, ebx   
5 [0x5]:           chklen adx   
6 [0x6]:           movnd adx   
7 [0x7]:           movi #112, cmt   
9 [0x9]:           cast cmt   
10 [0xa]:           smovr_3 fp+1   
11 [0xb]: line: 179 movg @54 // @std#time_request   
12 [0xc]:           movn #2   
14 [0xe]:           pushobj   
15 [0xf]:           call @3526 // <std#time.get_os_time>   
16 [0x10]:           ipopl 2   
17 [0x11]: line: 180 movg @54 // @std#time_request   
18 [0x12]:           movn #1   
20 [0x14]:           pushobj   
21 [0x15]:           call @3526 // <std#time.get_os_time>   
22 [0x16]:           ipopl 3   
23 [0x17]: line: 182 newstr @163 // am   
24 [0x18]:           popobj2    
25 [0x19]:           smovr_3 fp+4   
26 [0x1a]: line: 192 new_class @0 // std#__srt_global   
27 [0x1b]:           ret   
28 [0x1c]:           dup    
29 [0x1d]:           newstr @24 //    
30 [0x1e]:           call @1959 // <std#string.string>   
31 [0x1f]:           ipushl #2   
32 [0x20]:           call @1991 // <std#string.operator+>   
33 [0x21]:           newstr @164 // :   
34 [0x22]:           call @1971 // <std#string.operator+>   
35 [0x23]:           popobj2    
36 [0x24]:           smovr_3 fp+5   
37 [0x25]: line: 194 loadl ecx, fp+3   
38 [0x26]:           movi #10, ebx   
40 [0x28]:           lt ecx, ebx   
41 [0x29]:           movr ebx, cmt   
42 [0x2a]:           movr cmt, ebx   
43 [0x2b]:           jne 48   
44 [0x2c]: line: 195 pushl 5   
45 [0x2d]:           newstr @13 // 0   
46 [0x2e]:           call @2013 // <std#string.operator+=>   
47 [0x2f]:           pop   
48 [0x30]:           nop   
49 [0x31]: line: 196 pushl 5   
50 [0x32]:           ipushl #3   
51 [0x33]:           call @2002 // <std#string.operator+=>   
52 [0x34]:           pop   
53 [0x35]: line: 197 pushl 5   
54 [0x36]:           pushl 4   
55 [0x37]:           call @2013 // <std#string.operator+=>   
56 [0x38]:           pop   
57 [0x39]: line: 198 pushl 1   
58 [0x3a]:           pushl 5   
59 [0x3b]:           call @4009 // <ui.support#text_view.set_text>   
60 [0x3c]:           ret   


lambda: main#__srt_global.anon_func$4111[4111] params(0) in file: controller//connection_tracker.sharp:20:10: note:  
		       = { ->
		         ^

0 [0x0]: line: 21 istore 26   
2 [0x2]:          ldc ebx // 1   
3 [0x3]:          rstore ebx   
4 [0x4]:          invoke_delegate 3600 { static=1, args=2 }   
6 [0x6]: line: 23 movg @107 // @main#__srt_global   
7 [0x7]:          movn #2   
9 [0x9]:          movi #0, adx   
11 [0xb]:          iaload ebx, adx   
12 [0xc]:          movr cmt, ebx   
13 [0xd]:          jne 23   
14 [0xe]: line: 24 istore 200   
16 [0x10]:          call @2182 // <std.io#thread.sleep>   
17 [0x11]: line: 25 istore 26   
19 [0x13]:          ldc ebx // 0   
20 [0x14]:          rstore ebx   
21 [0x15]:          invoke_delegate 3600 { static=1, args=2 }   
23 [0x17]:          nop   
24 [0x18]:          ret   


lambda: main#__srt_global.anon_func$4112[4112] params(0) in file: controller//connection_tracker.sharp:34:10: note:  
		       = { ->
		         ^

0 [0x0]: line: 35 movg @107 // @main#__srt_global   
1 [0x1]:          movn #2   
3 [0x3]:          movi #0, adx   
5 [0x5]:          iaload ebx, adx   
6 [0x6]:          movr cmt, ebx   
7 [0x7]:          jne 9   
8 [0x8]:          ret   
9 [0x9]:          nop   
10 [0xa]: line: 36 call @3669 // <common.network#network.get_signal_strength>   
11 [0xb]:          movg @107 // @main#__srt_global   
12 [0xc]:          movn #1   
14 [0xe]:          loadval ebx   
15 [0xf]:          movi #0, adx   
17 [0x11]:          rmov adx, ebx   
18 [0x12]: line: 38 movg @107 // @main#__srt_global   
19 [0x13]:          movn #1   
21 [0x15]:          movi #0, adx   
23 [0x17]:          iaload ebx, adx   
24 [0x18]:          rstore ebx   
25 [0x19]:          ldc ebx // 0   
26 [0x1a]:          loadval ecx   
27 [0x1b]:          test ecx, ebx   
28 [0x1c]:          jne 85   
29 [0x1d]: line: 39 movg @107 // @main#__srt_global   
30 [0x1e]:          movn #3   
32 [0x20]:          movi #0, adx   
34 [0x22]:          iaload ebx, adx   
35 [0x23]:          rstore ebx   
36 [0x24]:          movi #0, ebx   
38 [0x26]:          loadval ecx   
39 [0x27]:          gt ecx, ebx   
40 [0x28]:          movr ebx, cmt   
41 [0x29]:          movr cmt, ebx   
42 [0x2a]:          jne 55   
43 [0x2b]: line: 40 movg @107 // @main#__srt_global   
44 [0x2c]:          movn #3   
46 [0x2e]:          movi #0, adx   
48 [0x30]:          iaload ebx, adx   
49 [0x31]:          movr egx, ebx   
50 [0x32]:          dec ebx   
51 [0x33]:          movi #0, adx   
53 [0x35]:          rmov adx, ebx   
54 [0x36]:          jmp @83   
55 [0x37]: line: 42 istore 1   
57 [0x39]:          movg @107 // @main#__srt_global   
58 [0x3a]:          movn #2   
60 [0x3c]:          loadval ebx   
61 [0x3d]:          movi #0, adx   
63 [0x3f]:          rmov adx, ebx   
64 [0x40]: line: 43 call @3664 // <common.network#network.handshake>   
65 [0x41]: line: 44 istore 0   
67 [0x43]:          movg @107 // @main#__srt_global   
68 [0x44]:          movn #2   
70 [0x46]:          loadval ebx   
71 [0x47]:          movi #0, adx   
73 [0x49]:          rmov adx, ebx   
74 [0x4a]: line: 45 istore 4   
76 [0x4c]:          movg @107 // @main#__srt_global   
77 [0x4d]:          movn #3   
79 [0x4f]:          loadval ebx   
80 [0x50]:          movi #0, adx   
82 [0x52]:          rmov adx, ebx   
83 [0x53]:          nop   
84 [0x54]:          jmp @94   
85 [0x55]: line: 48 istore 0   
87 [0x57]:          movg @107 // @main#__srt_global   
88 [0x58]:          movn #3   
90 [0x5a]:          loadval ebx   
91 [0x5b]:          movi #0, adx   
93 [0x5d]:          rmov adx, ebx   
94 [0x5e]:          nop   
95 [0x5f]:          ret   


